(function(){
                        
                        var $app_define_wrap$ = $app_define_wrap$ || function() {}
                        var createAppHandler = function() {
                            return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@topon/quick-app-sdk-hw/app.js":
/*!*****************************************************!*\
  !*** ./node_modules/@topon/quick-app-sdk-hw/app.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

Object.defineProperty(exports, "__esModule", ({value:!0})),exports["default"]=void 0;var e=v(__webpack_require__(/*! union-quick-app-ad/app.js */ "./node_modules/union-quick-app-ad/app.js")),t=v($app_require$("@app-module/system.device")),n=v($app_require$("@app-module/system.package")),o=v($app_require$("@app-module/system.network")),r=v($app_require$("@app-module/system.app")),l=v($app_require$("@app-module/system.storage")),i=v($app_require$("@app-module/service.ad")),u=v($app_require$("@app-module/system.fetch")),a=v($app_require$("@app-module/system.file")),c=v($app_require$("@app-module/system.router")),s=v($app_require$("@app-module/system.prompt")),d=v(__webpack_require__(/*! js-md5 */ "./node_modules/js-md5/src/md5.js")),f=v(__webpack_require__(/*! js-base64 */ "./node_modules/js-base64/base64.js")),p=v(__webpack_require__(/*! ./bundle */ "./node_modules/@topon/quick-app-sdk-hw/bundle/index.js"));function v(e){return e&&e.__esModule?e:{default:e}}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function b(e,t,n){return(t=k(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,k(o.key),o)}}function k(e){var t=function(e,t){if("object"!=y(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t||"default");if("object"!=y(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==y(t)?t:t+""}var $=Object.getPrototypeOf(global)||global,O="internal://files/toponad/".concat("".concat("4.2.11"),"/core-render.js"),x="local",j="http://192.168.86.113:7001";function w(e){try{new Function(e)()}catch(e){console.error("load sdk error",e)}}function P(){return new Promise((function(e,t){u.default.fetch({url:"".concat(j,"/core/render/core-render.js"),responseType:"text",method:"GET",success:function(t){a.default.writeText({uri:O,text:t.data,success:function(){},fail:function(e,t){}}),e(t.data)},fail:function(e,n){t()}})}))}function _(a){try{var p;$.$topon_sdk&&($.$topon_sdk.api={device:t.default,pkg:n.default,network:o.default,app:r.default,storage:l.default,ad:i.default,$fetch:u.default,router:c.default,prompt:s.default,md5:d.default,jsBase64:f.default}),new $.$topon_sdk(this,a),new e.default(this);var v=(null==a||null===(p=a.config)||void 0===p?void 0:p.ylhAppId)||"";if(v)try{new(0,(__webpack_require__(/*! ylh-quick-app-ad-sdk */ "./node_modules/ylh-quick-app-ad-sdk/index.js")["default"]))(this,{appId:v})}catch(e){}}catch(e){console.error("init sdk error",e)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=t.app,o=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t);this.$ctx=n,delete o.app,$&&$.$topon_sdk?_.call(n,o):"local"===x?(w.call(n,p.default,!1),_.call(n,o)):a.default.readText({uri:O,success:function(e){w.call(n,e.text),_.call(n,o)},fail:function(e,t){P.call(n).then((function(e){w.call(n,e,!1),_.call(n,o)}))}})}var t,n,o;return t=e,(n=[{key:"setChannel",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setChannel.call(this.$ctx,e)}},{key:"setSubChannel",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setSubChannel.call(this.$ctx,e)}},{key:"setCustomParam",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setCustomParam.call(this.$ctx,e)}},{key:"setPlacementCustomParam",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setPlacementCustomParam.call(this.$ctx,e)}},{key:"onShow",value:function(){var e,t;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.publish("app-on-show"),null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.onShow.call(this.$ctx)}},{key:"onHide",value:function(){var e,t;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.publish("app-on-hide"),null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.onHide.call(this.$ctx)}},{key:"onDestroy",value:function(){var e;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e?void 0:e.onDestroy.call(this.$ctx)}}])&&m(t.prototype,n),o&&m(t,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();exports["default"]=g;

/***/ }),

/***/ "./node_modules/@topon/quick-app-sdk-hw/bundle/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@topon/quick-app-sdk-hw/bundle/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = "!function(){function t(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function e(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?t(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(){i=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(t,e,i){t[e]=i.value},o=\"function\"==typeof Symbol?Symbol:{},d=o.iterator||\"@@iterator\",s=o.asyncIterator||\"@@asyncIterator\",l=o.toStringTag||\"@@toStringTag\";function c(t,e,i){return Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},\"\")}catch(t){c=function(t,e,i){return t[e]=i}}function u(t,e,i,n){var r=e&&e.prototype instanceof _?e:_,o=Object.create(r.prototype),d=new D(n||[]);return a(o,\"_invoke\",{value:T(t,i,d)}),o}function h(t,e,i){try{return{type:\"normal\",arg:t.call(e,i)}}catch(t){return{type:\"throw\",arg:t}}}e.wrap=u;var p=\"suspendedStart\",f=\"executing\",v=\"completed\",m={};function _(){}function g(){}function y(){}var I={};c(I,d,(function(){return this}));var b=Object.getPrototypeOf,k=b&&b(b(L([])));k&&k!==n&&r.call(k,d)&&(I=k);var w=y.prototype=_.prototype=Object.create(I);function x(t){[\"next\",\"throw\",\"return\"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function S(t,e){function i(n,a,o,d){var s=h(t[n],t,a);if(\"throw\"!==s.type){var l=s.arg,c=l.value;return c&&\"object\"==typeof c&&r.call(c,\"__await\")?e.resolve(c.__await).then((function(t){i(\"next\",t,o,d)}),(function(t){i(\"throw\",t,o,d)})):e.resolve(c).then((function(t){l.value=t,o(l)}),(function(t){return i(\"throw\",t,o,d)}))}d(s.arg)}var n;a(this,\"_invoke\",{value:function(t,r){function a(){return new e((function(e,n){i(t,r,e,n)}))}return n=n?n.then(a,a):a()}})}function T(e,i,n){var r=p;return function(a,o){if(r===f)throw Error(\"Generator is already running\");if(r===v){if(\"throw\"===a)throw o;return{value:t,done:!0}}for(n.method=a,n.arg=o;;){var d=n.delegate;if(d){var s=A(d,n);if(s){if(s===m)continue;return s}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(r===p)throw r=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);r=f;var l=h(e,i,n);if(\"normal\"===l.type){if(r=n.done?v:\"suspendedYield\",l.arg===m)continue;return{value:l.arg,done:n.done}}\"throw\"===l.type&&(r=v,n.method=\"throw\",n.arg=l.arg)}}}function A(e,i){var n=i.method,r=e.iterator[n];if(r===t)return i.delegate=null,\"throw\"===n&&e.iterator.return&&(i.method=\"return\",i.arg=t,A(e,i),\"throw\"===i.method)||\"return\"!==n&&(i.method=\"throw\",i.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var a=h(r,e.iterator,i.arg);if(\"throw\"===a.type)return i.method=\"throw\",i.arg=a.arg,i.delegate=null,m;var o=a.arg;return o?o.done?(i[e.resultName]=o.value,i.next=e.nextLoc,\"return\"!==i.method&&(i.method=\"next\",i.arg=t),i.delegate=null,m):o:(i.method=\"throw\",i.arg=new TypeError(\"iterator result is not an object\"),i.delegate=null,m)}function E(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function C(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e}function D(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(E,this),this.reset(!0)}function L(e){if(e||\"\"===e){var i=e[d];if(i)return i.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function i(){for(;++n<e.length;)if(r.call(e,n))return i.value=e[n],i.done=!1,i;return i.value=t,i.done=!0,i};return a.next=a}}throw new TypeError(typeof e+\" is not iterable\")}return g.prototype=y,a(w,\"constructor\",{value:y,configurable:!0}),a(y,\"constructor\",{value:g,configurable:!0}),g.displayName=c(y,l,\"GeneratorFunction\"),e.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===g||\"GeneratorFunction\"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,l,\"GeneratorFunction\")),t.prototype=Object.create(w),t},e.awrap=function(t){return{__await:t}},x(S.prototype),c(S.prototype,s,(function(){return this})),e.AsyncIterator=S,e.async=function(t,i,n,r,a){void 0===a&&(a=Promise);var o=new S(u(t,i,n,r),a);return e.isGeneratorFunction(i)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},x(w),c(w,l,\"Generator\"),c(w,d,(function(){return this})),c(w,\"toString\",(function(){return\"[object Generator]\"})),e.keys=function(t){var e=Object(t),i=[];for(var n in e)i.push(n);return i.reverse(),function t(){for(;i.length;){var n=i.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=L,D.prototype={constructor:D,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(C),!e)for(var i in this)\"t\"===i.charAt(0)&&r.call(this,i)&&!isNaN(+i.slice(1))&&(this[i]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var i=this;function n(n,r){return d.type=\"throw\",d.arg=e,i.next=n,r&&(i.method=\"next\",i.arg=t),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],d=o.completion;if(\"root\"===o.tryLoc)return n(\"end\");if(o.tryLoc<=this.prev){var s=r.call(o,\"catchLoc\"),l=r.call(o,\"finallyLoc\");if(s&&l){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!l)throw Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var n=this.tryEntries[i];if(n.tryLoc<=this.prev&&r.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var a=n;break}}a&&(\"break\"===t||\"continue\"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method=\"next\",this.next=a.finallyLoc,m):this.complete(o)},complete:function(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.finallyLoc===t)return this.complete(i.completion,i.afterLoc),C(i),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc===t){var n=i.completion;if(\"throw\"===n.type){var r=n.arg;C(i)}return r}}throw Error(\"illegal catch attempt\")},delegateYield:function(e,i,n){return this.delegate={iterator:L(e),resultName:i,nextLoc:n},\"next\"===this.method&&(this.arg=t),m}},e}function n(t){var e=function(t,e){if(\"object\"!=typeof t||!t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,e||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"==typeof e?e:e+\"\"}function r(t){return r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},r(t)}function a(t,e,i,n,r,a,o){try{var d=t[a](o),s=d.value}catch(t){return void i(t)}d.done?e(s):Promise.resolve(s).then(n,r)}function o(t){return function(){var e=this,i=arguments;return new Promise((function(n,r){var o=t.apply(e,i);function d(t){a(o,n,r,d,s,\"next\",t)}function s(t){a(o,n,r,d,s,\"throw\",t)}d(void 0)}))}}function d(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function s(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,n(r.key),r)}}function l(t,e,i){return e&&s(t.prototype,e),i&&s(t,i),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function c(t,e,i){return(e=n(e))in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function u(t,e){return function(t){return Object.prototype.toString.call(t).slice(8,-1)}(t)===e}function h(t){return u(t,\"String\")}function p(t){return u(t,\"Number\")}function f(t){return u(t,\"Object\")}function v(t){for(var e in t)if({}.hasOwnProperty.call(t,e))return!1;return!0}function m(t,e){var i=Object.getOwnPropertyNames(t),n=Object.getOwnPropertyNames(e);if(i.length!==n.length)return!1;for(var r=0;r<i.length;r+=1){var a=i[r];if(t[a]!==e[a])return!1}return!0}function _(t){if(\"string\"==typeof t)try{var e=JSON.parse(t);return!(\"object\"!==r(e)||!e)}catch(t){return!1}}var g={VIVO:54,OPPO:55,BAIDU:56,HUAWEI:60,XIAOMI:61,HUAWEI_AGD_PRO:62,HONOR:63,YLH:64,ADX:66},y={VIVO:54,OPPO:55,YLH:64};function I(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.separator||\"-\",n=e.split||/(?=[A-Z])/;return t.split(n).join(i).toLowerCase()}function b(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",e=\"hb\"===t?y:g,i=Object.values(e)||[];return i}var k=[\"containerStyle\",\"imgStyle\",\"titleStyle\",\"buttonStyle\",\"descStyle\"],w={g:function(){if(\"object\"==(\"undefined\"==typeof globalThis?\"undefined\":r(globalThis)))return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==(\"undefined\"==typeof window?\"undefined\":r(window)))return window}}()},x=Object.getPrototypeOf(w.g)||w.g;function S(){return x&&x.$topon_sdk?x.$topon_sdk.api:null}function T(t,e){var i=[];for(var n in e)i.push(n+\"=\"+e[n]);var r=i.join(\"&\");return r?\"\".concat(t,\"?\").concat(r):t}function A(t,e){return Math.floor(Math.random()*(e-t))+t}function E(t,e){for(var i=e.length,n=[],r=0;r<i;r++){var a=e[r].key,o=e[r].value,d=\"\".concat(a,\"=\").concat(o);n.push(d)}return L(t+n.join(\"&\"))}function C(t){return S().jsBase64.Base64.encode(t)}function D(t){return JSON.stringify(t).replace(/\\//g,\"\\\\/\")}function L(t){return(0,S().md5)(t).toString()}function O(t,i){var n=e({},t);return Object.keys(i).forEach((function(e){t[e]&&t[e]===i[e]||(n[e]=i[e])})),n}function R(){var t,e=(null===(t=global)||void 0===t?void 0:t.navigator)||{},i=e.userAgent||\"\",n=e.vendor||\"\";return\"\".concat(i,\" \").concat(n).toLowerCase()}function P(t,e,i){var n=t.nwFirmIds||[];return(t.unitIds||[]).includes(1*i)?9006:n.includes(1*e)?9007:0}function U(t,e){e||(e=this.$app&&this.$app.$def.manifest.config&&this.$app.$def.manifest.config.designWidth);var i=p(e)?e/750:1,n={};for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&f(t[r]))n[r]=U.call(this,t[r]);else if(h(t[r])&&t[r].endsWith(\"px\")){var a=parseInt(t[r].split(\"px\")[0],10);p(a)&&(n[r]=a*i+\"px\")}else n[r]=t[r];return n}function $(t,e){var i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=JSON.parse(JSON.stringify(t)),r=JSON.parse(JSON.stringify(e));if(i)for(var a in r)k.includes(a)||delete r[a];function o(t,e){for(var i in e)if(e.hasOwnProperty(i)){var n=e[i];if(f(n))for(var r in n)n.hasOwnProperty(r)&&(f(n[r])?o(t[i][r],n[r]):!t[i]||t[i][r]&&t[i][r]===n[r]||(t[i][r]=n[r]));else t[i]&&t[i]===n||(t[i]=n)}}return o(n,r),null!=n&&n.imgPropertiesStyle&&null!=n&&n.imgStyle&&(n.imgPropertiesStyle=Object.assign({},n.imgPropertiesStyle,n.imgStyle),delete n.imgPropertiesStyle.position),n}function N(t,e,i){var n,r,a,o=null!==(n=null!==(r=null===(a=this.$app)||void 0===a?void 0:a.$def)&&void 0!==r?r:this.$def)&&void 0!==n?n:null;o&&null!=o&&o.topon_sdk&&(o.topon_sdk.cache[t]||(o.topon_sdk.cache[t]=Object.create(null)),o.topon_sdk.cache[t][e]=i)}function j(t,e){var i,n,r,a,o,d=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def)&&void 0!==i?i:null;return d&&null!=d&&d.topon_sdk&&null!==(a=null===(o=d.topon_sdk)||void 0===o||null===(o=o.cache[t])||void 0===o?void 0:o[e])&&void 0!==a?a:null}function F(t,e){var i,n,r,a,o,d=null!==(i=null==t?void 0:t.width)&&void 0!==i?i:0,s=null!==(n=null==t?void 0:t.height)&&void 0!==n?n:0,l=null!==(r=null==e?void 0:e.screenWidth)&&void 0!==r?r:750,c=null!==(a=null==e?void 0:e.screenHeight)&&void 0!==a?a:1415,u=(null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.manifest)||void 0===o||null===(o=o.config)||void 0===o?void 0:o.designWidth)||750;return d*s/(u*(u*(c/l)))}function B(t){var e=this;null!=this&&this.$nextTick?this.$nextTick((function(){return t.call(e)})):void 0!==(\"undefined\"==typeof Promise?\"undefined\":r(Promise))?Promise.resolve().then(t):setTimeout(t,0)}var W=\"TOPON_AD_CACHE\",q=function(){function t(){d(this,t),this._storage={}}var e,n,r,a;return l(t,[{key:\"_getKey\",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!e)return t;var i=I(t,{separator:\"_\"});return i=\"\".concat(W,\"_\").concat(i.toUpperCase())}},{key:\"batch\",value:(a=o(i().mark((function t(e){var n,r,a=this,o=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=!(o.length>1&&void 0!==o[1])||o[1],r=[],Object.keys(e).forEach((function(t){r.push(a.setItem(t,e[t],n))})),t.abrupt(\"return\",Promise.all(r));case 4:case\"end\":return t.stop()}}),t)}))),function(t){return a.apply(this,arguments)})},{key:\"setItem\",value:(r=o(i().mark((function t(e,n){var r,a,o,d,s=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=!(s.length>2&&void 0!==s[2])||s[2],a=this._getKey(e,r),o=S(),d=o.storage,t.abrupt(\"return\",d.set({key:a,value:n}));case 4:case\"end\":return t.stop()}}),t,this)}))),function(t,e){return r.apply(this,arguments)})},{key:\"getItem\",value:(n=o(i().mark((function t(e){var n,r,a,o,d,s,l,c=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=!(c.length>1&&void 0!==c[1])||c[1],a=this._getKey(e,r),o=S(),d=o.storage,t.next=5,d.get({key:a});case 5:return s=t.sent,l=null!==(n=null==s?void 0:s.data)&&void 0!==n?n:\"\",t.abrupt(\"return\",_(l)?JSON.parse(l):l);case 8:case\"end\":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})},{key:\"delete\",value:(e=o(i().mark((function t(e){var n,r,a=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=!(a.length>1&&void 0!==a[1])||a[1],r=this._getKey(e,n),S().storage.delete({key:r});case 4:case\"end\":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:\"clear\",value:function(){S().storage.clear()}}]),t}(),M=new q,V=function(){function t(){d(this,t),this._device={}}var e,n,r,a,s;return l(t,[{key:\"getInfo\",value:(s=o(i().mark((function t(){var e,n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,n=S(),r=n.device,t.next=4,r.getInfo();case 4:return a=t.sent,o=null!==(e=null==a?void 0:a.data)&&void 0!==e?e:{},t.abrupt(\"return\",o);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",{});case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return s.apply(this,arguments)})},{key:\"getAdvertisingId\",value:(a=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getAdvertisingId();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.advertisingId)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return a.apply(this,arguments)})},{key:\"getOaId\",value:(r=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getOAID();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.oaid)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return r.apply(this,arguments)})},{key:\"getUserId\",value:(n=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getUserId();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.userId)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return n.apply(this,arguments)})},{key:\"getDeviceIds\",value:(e=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=\"\",n=\"\",r=\"\",a=\"\",o=S(),d=o.device,t.prev=2,t.next=5,M.getItem(\"needDevice\");case 5:if(\"1\"!=t.sent){t.next=17;break}return t.next=9,d.getId({type:[\"device\",\"mac\",\"user\"]});case 9:p=t.sent,f=null!==(s=null==p?void 0:p.data)&&void 0!==s?s:{},e=null!==(l=null==f?void 0:f.advertising)&&void 0!==l?l:\"\",n=null!==(c=null==f?void 0:f.user)&&void 0!==c?c:\"\",r=null!==(u=null==f?void 0:f.device)&&void 0!==u?u:\"\",a=null!==(h=null==f?void 0:f.mac)&&void 0!==h?h:\"\",t.next=30;break;case 17:return t.next=19,d.getUserId();case 19:return _=t.sent,n=null!==(v=null==_||null===(m=_.data)||void 0===m?void 0:m.userId)&&void 0!==v?v:\"\",t.prev=21,t.next=24,d.getAdvertisingId();case 24:I=t.sent,e=null!==(g=null==I||null===(y=I.data)||void 0===y?void 0:y.advertisingId)&&void 0!==g?g:\"\",t.next=30;break;case 28:t.prev=28,t.t0=t.catch(21);case 30:t.next=39;break;case 32:return t.prev=32,t.t1=t.catch(2),201===t.t1.code&&M.setItem(\"needDevice\",\"0\"),t.next=37,d.getUserId();case 37:w=t.sent,n=null!==(b=null==w||null===(k=w.data)||void 0===k?void 0:k.userId)&&void 0!==b?b:\"\";case 39:return t.abrupt(\"return\",{device:r,mac:a,user:n,advertising:e});case 40:case\"end\":return t.stop()}}),t,null,[[2,32],[21,28]])}))),function(){return e.apply(this,arguments)})}]),t}(),H=new V;function G(){return Y.apply(this,arguments)}function Y(){return(Y=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=\"upId\",a=\"\",t.next=4,M.getItem(r);case 4:if(o=t.sent,[\"d41d8cd98f00b204e9800998ecf8427e\",\"9f89c84a559f573636a47ff8daed0d33\"].includes(a=o)&&(a=\"\",M.delete(r)),!a){t.next=9;break}return t.abrupt(\"return\",a);case 9:return t.next=11,H.getDeviceIds();case 11:return d=t.sent,t.next=14,H.getOaId();case 14:if(t.t0=t.sent,t.t0){t.next=17;break}t.t0=\"\";case 17:if(s=t.t0,l=null!==(e=null==d?void 0:d.advertising)&&void 0!==e?e:\"\",c=null!==(n=null==d?void 0:d.user)&&void 0!==n?n:\"\",!l){t.next=24;break}a=L(l),t.next=36;break;case 24:if(!s||\"00000000-0000-0000-0000-000000000000\"===s){t.next=28;break}a=L(s),t.next=36;break;case 28:if(!c){t.next=32;break}a=L(c),t.next=36;break;case 32:return t.next=34,M.getItem(\"appId\");case 34:u=t.sent,a=L(u+Date.now()+A(0,1e8));case 36:return t.next=38,M.setItem(r,a);case 38:return t.abrupt(\"return\",a);case 39:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function K(){return z.apply(this,arguments)}function z(){return(z=o(i().mark((function t(){var e,n,r,a;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,G();case 2:return e=t.sent,t.next=5,M.getItem(\"appId\");case 5:return n=t.sent,t.next=8,M.getItem(\"currentInitTime\");case 8:return r=t.sent,a=L(e+n+r),t.abrupt(\"return\",a);case 11:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function X(t){return Q.apply(this,arguments)}function Q(){return(Q=o(i().mark((function t(e){var n,r,a;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,G();case 2:return n=t.sent,r=Date.now(),a=L(n+e+r),t.abrupt(\"return\",a);case 6:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function J(){return Z.apply(this,arguments)}function Z(){return(Z=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=(new Date).getTime(),t.next=3,H.getDeviceIds();case 3:return a=t.sent,t.next=6,G();case 6:for(o=t.sent,d=null!==(e=null==a?void 0:a.user)&&void 0!==e?e:\"\",s=null!==(n=null==a?void 0:a.advertising)&&void 0!==n?n:\"\",l=[d,s,o,r],c=A(0,1e4),u=l.length,h=[],p=0;p<u;p++)h.push(l[p]);return h.push(c),f=h.join(\"&\"),v=L(f),t.abrupt(\"return\",v);case 18:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}var tt=e({},g),et=e({},y),it={54:\"unit_id\",55:\"unit_id\",56:\"placement_id\",60:\"ad_id\",61:\"unit_id\",62:\"ad_id\",63:\"unit_id\",64:\"unit_id\"},nt={\"2g\":\"1\",\"3g\":\"3\",\"4g\":\"13\",\"5g\":\"15\",wifi:\"-2\",none:\"-1\"},rt=new(function(){function t(){d(this,t),this.code={54:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,2e3,9e3,9001,9006,9007],loading:[1105],show:[1101,1106]},55:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},56:{load:[\"error\",\"adError\",9e3,9001,9006,9007],loading:[],show:[\"error\",1101]},60:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},61:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},62:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},63:{load:[1e3,1001,1002,1003,1004],loading:[],show:[]},64:{load:[1001,1004,1100],loading:[],show:[]},66:{load:[9006,9007,9008],loading:[],show:[1101]}}}return l(t,[{key:\"codeToEvent\",value:function(t,e){var i,n,r,a=isNaN(e)?e:1*e;return null!==(i=this.code[t])&&void 0!==i&&null!==(i=i.load)&&void 0!==i&&i.includes(a)?\"load\":null!==(n=this.code[t])&&void 0!==n&&null!==(n=n.loading)&&void 0!==n&&n.includes(a)?\"loading\":null!==(r=this.code[t])&&void 0!==r&&null!==(r=r.show)&&void 0!==r&&r.includes(a)?\"show\":\"unknown\"}}]),t}()),at={100133:1001,136001:1001,136002:1001,136004:1001,102006:1004,109502:1100},ot=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};var dt=function(){this.__data__=[],this.size=0};var st=function(t,e){return t===e||t!=t&&e!=e},lt=st;var ct=function(t,e){for(var i=t.length;i--;)if(lt(t[i][0],e))return i;return-1},ut=ct,ht=Array.prototype.splice;var pt=ct;var ft=ct;var vt=ct;var mt=dt,_t=function(t){var e=this.__data__,i=ut(e,t);return!(i<0)&&(i==e.length-1?e.pop():ht.call(e,i,1),--this.size,!0)},gt=function(t){var e=this.__data__,i=pt(e,t);return i<0?void 0:e[i][1]},yt=function(t){return ft(this.__data__,t)>-1},It=function(t,e){var i=this.__data__,n=vt(i,t);return n<0?(++this.size,i.push([t,e])):i[n][1]=e,this};function bt(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}bt.prototype.clear=mt,bt.prototype.delete=_t,bt.prototype.get=gt,bt.prototype.has=yt,bt.prototype.set=It;var kt=bt,wt=kt;var xt=function(){this.__data__=new wt,this.size=0};var St=function(t){var e=this.__data__,i=e.delete(t);return this.size=e.size,i};var Tt=function(t){return this.__data__.get(t)};var At=function(t){return this.__data__.has(t)},Et=\"object\"==typeof ot&&ot&&ot.Object===Object&&ot,Ct=Et,Dt=\"object\"==typeof self&&self&&self.Object===Object&&self,Lt=Ct||Dt||Function(\"return this\")(),Ot=Lt.Symbol,Rt=Ot,Pt=Object.prototype,Ut=Pt.hasOwnProperty,$t=Pt.toString,Nt=Rt?Rt.toStringTag:void 0;var jt=function(t){var e=Ut.call(t,Nt),i=t[Nt];try{t[Nt]=void 0;var n=!0}catch(t){}var r=$t.call(t);return n&&(e?t[Nt]=i:delete t[Nt]),r},Ft=Object.prototype.toString;var Bt=jt,Wt=function(t){return Ft.call(t)},qt=Ot?Ot.toStringTag:void 0;var Mt=function(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":qt&&qt in Object(t)?Bt(t):Wt(t)};var Vt=function(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)},Ht=Mt,Gt=Vt;var Yt,Kt=function(t){if(!Gt(t))return!1;var e=Ht(t);return\"[object Function]\"==e||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e},zt=Lt[\"__core-js_shared__\"],Xt=(Yt=/[^.]+$/.exec(zt&&zt.keys&&zt.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+Yt:\"\";var Qt=function(t){return!!Xt&&Xt in t},Jt=Function.prototype.toString;var Zt=function(t){if(null!=t){try{return Jt.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"},te=Kt,ee=Qt,ie=Vt,ne=Zt,re=/^\\[object .+?Constructor\\]$/,ae=Function.prototype,oe=Object.prototype,de=ae.toString,se=oe.hasOwnProperty,le=RegExp(\"^\"+de.call(se).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");var ce=function(t){return!(!ie(t)||ee(t))&&(te(t)?le:re).test(ne(t))},ue=function(t,e){return null==t?void 0:t[e]};var he=function(t,e){var i=ue(t,e);return ce(i)?i:void 0},pe=he(Lt,\"Map\"),fe=he(Object,\"create\"),ve=fe;var me=function(){this.__data__=ve?ve(null):{},this.size=0};var _e=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},ge=fe,ye=Object.prototype.hasOwnProperty;var Ie=function(t){var e=this.__data__;if(ge){var i=e[t];return\"__lodash_hash_undefined__\"===i?void 0:i}return ye.call(e,t)?e[t]:void 0},be=fe,ke=Object.prototype.hasOwnProperty;var we=fe;var xe=me,Se=_e,Te=Ie,Ae=function(t){var e=this.__data__;return be?void 0!==e[t]:ke.call(e,t)},Ee=function(t,e){var i=this.__data__;return this.size+=this.has(t)?0:1,i[t]=we&&void 0===e?\"__lodash_hash_undefined__\":e,this};function Ce(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}Ce.prototype.clear=xe,Ce.prototype.delete=Se,Ce.prototype.get=Te,Ce.prototype.has=Ae,Ce.prototype.set=Ee;var De=Ce,Le=kt,Oe=pe;var Re=function(t){var e=typeof t;return\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t};var Pe=function(t,e){var i=t.__data__;return Re(e)?i[\"string\"==typeof e?\"string\":\"hash\"]:i.map},Ue=Pe;var $e=Pe;var Ne=Pe;var je=Pe;var Fe=function(){this.size=0,this.__data__={hash:new De,map:new(Oe||Le),string:new De}},Be=function(t){var e=Ue(this,t).delete(t);return this.size-=e?1:0,e},We=function(t){return $e(this,t).get(t)},qe=function(t){return Ne(this,t).has(t)},Me=function(t,e){var i=je(this,t),n=i.size;return i.set(t,e),this.size+=i.size==n?0:1,this};function Ve(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}Ve.prototype.clear=Fe,Ve.prototype.delete=Be,Ve.prototype.get=We,Ve.prototype.has=qe,Ve.prototype.set=Me;var He=kt,Ge=pe,Ye=Ve;var Ke=kt,ze=xt,Xe=St,Qe=Tt,Je=At,Ze=function(t,e){var i=this.__data__;if(i instanceof He){var n=i.__data__;if(!Ge||n.length<199)return n.push([t,e]),this.size=++i.size,this;i=this.__data__=new Ye(n)}return i.set(t,e),this.size=i.size,this};function ti(t){var e=this.__data__=new Ke(t);this.size=e.size}ti.prototype.clear=ze,ti.prototype.delete=Xe,ti.prototype.get=Qe,ti.prototype.has=Je,ti.prototype.set=Ze;var ei=ti;var ii=function(t,e){for(var i=-1,n=null==t?0:t.length;++i<n&&!1!==e(t[i],i,t););return t},ni=he,ri=function(){try{var t=ni(Object,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}();var ai=function(t,e,i){\"__proto__\"==e&&ri?ri(t,e,{configurable:!0,enumerable:!0,value:i,writable:!0}):t[e]=i},oi=ai,di=st,si=Object.prototype.hasOwnProperty;var li=function(t,e,i){var n=t[e];si.call(t,e)&&di(n,i)&&(void 0!==i||e in t)||oi(t,e,i)},ci=li,ui=ai;var hi=function(t,e,i,n){var r=!i;i||(i={});for(var a=-1,o=e.length;++a<o;){var d=e[a],s=n?n(i[d],t[d],d,i,t):void 0;void 0===s&&(s=t[d]),r?ui(i,d,s):ci(i,d,s)}return i};var pi=function(t,e){for(var i=-1,n=Array(t);++i<t;)n[i]=e(i);return n};var fi=function(t){return null!=t&&\"object\"==typeof t},vi=Mt,mi=fi;var _i=function(t){return mi(t)&&\"[object Arguments]\"==vi(t)},gi=fi,yi=Object.prototype,Ii=yi.hasOwnProperty,bi=yi.propertyIsEnumerable,ki=_i(function(){return arguments}())?_i:function(t){return gi(t)&&Ii.call(t,\"callee\")&&!bi.call(t,\"callee\")},wi=ki,xi=Array.isArray,Si={};var Ti=function(){return!1};!function(t,e){var i=Lt,n=Ti,r=e&&!e.nodeType&&e,a=r&&t&&!t.nodeType&&t,o=a&&a.exports===r?i.Buffer:void 0,d=(o?o.isBuffer:void 0)||n;t.exports=d}({get exports(){return Si},set exports(t){Si=t}},Si);var Ai=/^(?:0|[1-9]\\d*)$/;var Ei=function(t,e){var i=typeof t;return!!(e=null==e?9007199254740991:e)&&(\"number\"==i||\"symbol\"!=i&&Ai.test(t))&&t>-1&&t%1==0&&t<e};var Ci=function(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991},Di=Mt,Li=Ci,Oi=fi,Ri={};Ri[\"[object Float32Array]\"]=Ri[\"[object Float64Array]\"]=Ri[\"[object Int8Array]\"]=Ri[\"[object Int16Array]\"]=Ri[\"[object Int32Array]\"]=Ri[\"[object Uint8Array]\"]=Ri[\"[object Uint8ClampedArray]\"]=Ri[\"[object Uint16Array]\"]=Ri[\"[object Uint32Array]\"]=!0,Ri[\"[object Arguments]\"]=Ri[\"[object Array]\"]=Ri[\"[object ArrayBuffer]\"]=Ri[\"[object Boolean]\"]=Ri[\"[object DataView]\"]=Ri[\"[object Date]\"]=Ri[\"[object Error]\"]=Ri[\"[object Function]\"]=Ri[\"[object Map]\"]=Ri[\"[object Number]\"]=Ri[\"[object Object]\"]=Ri[\"[object RegExp]\"]=Ri[\"[object Set]\"]=Ri[\"[object String]\"]=Ri[\"[object WeakMap]\"]=!1;var Pi=function(t){return Oi(t)&&Li(t.length)&&!!Ri[Di(t)]};var Ui=function(t){return function(e){return t(e)}},$i={};!function(t,e){var i=Et,n=e&&!e.nodeType&&e,r=n&&t&&!t.nodeType&&t,a=r&&r.exports===n&&i.process,o=function(){try{var t=r&&r.require&&r.require(\"util\").types;return t||a&&a.binding&&a.binding(\"util\")}catch(t){}}();t.exports=o}({get exports(){return $i},set exports(t){$i=t}},$i);var Ni=Pi,ji=Ui,Fi=$i&&$i.isTypedArray,Bi=Fi?ji(Fi):Ni,Wi=pi,qi=wi,Mi=xi,Vi=Si,Hi=Ei,Gi=Bi,Yi=Object.prototype.hasOwnProperty;var Ki=function(t,e){var i=Mi(t),n=!i&&qi(t),r=!i&&!n&&Vi(t),a=!i&&!n&&!r&&Gi(t),o=i||n||r||a,d=o?Wi(t.length,String):[],s=d.length;for(var l in t)!e&&!Yi.call(t,l)||o&&(\"length\"==l||r&&(\"offset\"==l||\"parent\"==l)||a&&(\"buffer\"==l||\"byteLength\"==l||\"byteOffset\"==l)||Hi(l,s))||d.push(l);return d},zi=Object.prototype;var Xi=function(t){var e=t&&t.constructor;return t===(\"function\"==typeof e&&e.prototype||zi)};var Qi=function(t,e){return function(i){return t(e(i))}},Ji=Qi(Object.keys,Object),Zi=Xi,tn=Ji,en=Object.prototype.hasOwnProperty;var nn=Kt,rn=Ci;var an=function(t){return null!=t&&rn(t.length)&&!nn(t)},on=Ki,dn=function(t){if(!Zi(t))return tn(t);var e=[];for(var i in Object(t))en.call(t,i)&&\"constructor\"!=i&&e.push(i);return e},sn=an;var ln=function(t){return sn(t)?on(t):dn(t)},cn=hi,un=ln;var hn=function(t,e){return t&&cn(e,un(e),t)};var pn=Vt,fn=Xi,vn=function(t){var e=[];if(null!=t)for(var i in Object(t))e.push(i);return e},mn=Object.prototype.hasOwnProperty;var _n=Ki,gn=function(t){if(!pn(t))return vn(t);var e=fn(t),i=[];for(var n in t)(\"constructor\"!=n||!e&&mn.call(t,n))&&i.push(n);return i},yn=an;var In=function(t){return yn(t)?_n(t,!0):gn(t)},bn=hi,kn=In;var wn=function(t,e){return t&&bn(e,kn(e),t)},xn={};!function(t,e){var i=Lt,n=e&&!e.nodeType&&e,r=n&&t&&!t.nodeType&&t,a=r&&r.exports===n?i.Buffer:void 0,o=a?a.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var i=t.length,n=o?o(i):new t.constructor(i);return t.copy(n),n}}({get exports(){return xn},set exports(t){xn=t}},xn);var Sn=function(t,e){var i=-1,n=t.length;for(e||(e=Array(n));++i<n;)e[i]=t[i];return e};var Tn=function(){return[]},An=function(t,e){for(var i=-1,n=null==t?0:t.length,r=0,a=[];++i<n;){var o=t[i];e(o,i,t)&&(a[r++]=o)}return a},En=Tn,Cn=Object.prototype.propertyIsEnumerable,Dn=Object.getOwnPropertySymbols,Ln=Dn?function(t){return null==t?[]:(t=Object(t),An(Dn(t),(function(e){return Cn.call(t,e)})))}:En,On=hi,Rn=Ln;var Pn=function(t,e){return On(t,Rn(t),e)};var Un=function(t,e){for(var i=-1,n=e.length,r=t.length;++i<n;)t[r+i]=e[i];return t},$n=Qi(Object.getPrototypeOf,Object),Nn=Un,jn=$n,Fn=Ln,Bn=Tn,Wn=Object.getOwnPropertySymbols?function(t){for(var e=[];t;)Nn(e,Fn(t)),t=jn(t);return e}:Bn,qn=hi,Mn=Wn;var Vn=function(t,e){return qn(t,Mn(t),e)},Hn=Un,Gn=xi;var Yn=function(t,e,i){var n=e(t);return Gn(t)?n:Hn(n,i(t))},Kn=Yn,zn=Ln,Xn=ln;var Qn=function(t){return Kn(t,Xn,zn)},Jn=Yn,Zn=Wn,tr=In;var er=function(t){return Jn(t,tr,Zn)},ir=he(Lt,\"DataView\"),nr=pe,rr=he(Lt,\"Promise\"),ar=he(Lt,\"Set\"),or=he(Lt,\"WeakMap\"),dr=Mt,sr=Zt,lr=\"[object Map]\",cr=\"[object Promise]\",ur=\"[object Set]\",hr=\"[object WeakMap]\",pr=\"[object DataView]\",fr=sr(ir),vr=sr(nr),mr=sr(rr),_r=sr(ar),gr=sr(or),yr=dr;(ir&&yr(new ir(new ArrayBuffer(1)))!=pr||nr&&yr(new nr)!=lr||rr&&yr(rr.resolve())!=cr||ar&&yr(new ar)!=ur||or&&yr(new or)!=hr)&&(yr=function(t){var e=dr(t),i=\"[object Object]\"==e?t.constructor:void 0,n=i?sr(i):\"\";if(n)switch(n){case fr:return pr;case vr:return lr;case mr:return cr;case _r:return ur;case gr:return hr}return e});var Ir=yr,br=Object.prototype.hasOwnProperty;var kr=function(t){var e=t.length,i=new t.constructor(e);return e&&\"string\"==typeof t[0]&&br.call(t,\"index\")&&(i.index=t.index,i.input=t.input),i},wr=Lt.Uint8Array;var xr=function(t){var e=new t.constructor(t.byteLength);return new wr(e).set(new wr(t)),e},Sr=xr;var Tr=function(t,e){var i=e?Sr(t.buffer):t.buffer;return new t.constructor(i,t.byteOffset,t.byteLength)},Ar=/\\w*$/;var Er=function(t){var e=new t.constructor(t.source,Ar.exec(t));return e.lastIndex=t.lastIndex,e},Cr=Ot?Ot.prototype:void 0,Dr=Cr?Cr.valueOf:void 0;var Lr=xr;var Or=xr,Rr=Tr,Pr=Er,Ur=function(t){return Dr?Object(Dr.call(t)):{}},$r=function(t,e){var i=e?Lr(t.buffer):t.buffer;return new t.constructor(i,t.byteOffset,t.length)};var Nr=function(t,e,i){var n=t.constructor;switch(e){case\"[object ArrayBuffer]\":return Or(t);case\"[object Boolean]\":case\"[object Date]\":return new n(+t);case\"[object DataView]\":return Rr(t,i);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":case\"[object Uint16Array]\":case\"[object Uint32Array]\":return $r(t,i);case\"[object Map]\":case\"[object Set]\":return new n;case\"[object Number]\":case\"[object String]\":return new n(t);case\"[object RegExp]\":return Pr(t);case\"[object Symbol]\":return Ur(t)}},jr=Vt,Fr=Object.create,Br=function(){function t(){}return function(e){if(!jr(e))return{};if(Fr)return Fr(e);t.prototype=e;var i=new t;return t.prototype=void 0,i}}(),Wr=$n,qr=Xi;var Mr=function(t){return\"function\"!=typeof t.constructor||qr(t)?{}:Br(Wr(t))},Vr=Ir,Hr=fi;var Gr=function(t){return Hr(t)&&\"[object Map]\"==Vr(t)},Yr=Ui,Kr=$i&&$i.isMap,zr=Kr?Yr(Kr):Gr,Xr=Ir,Qr=fi;var Jr=function(t){return Qr(t)&&\"[object Set]\"==Xr(t)},Zr=Ui,ta=$i&&$i.isSet,ea=ta?Zr(ta):Jr,ia=ei,na=ii,ra=li,aa=hn,oa=wn,da=xn,sa=Sn,la=Pn,ca=Vn,ua=Qn,ha=er,pa=Ir,fa=kr,va=Nr,ma=Mr,_a=xi,ga=Si,ya=zr,Ia=Vt,ba=ea,ka=ln,wa=In,xa=\"[object Arguments]\",Sa=\"[object Function]\",Ta=\"[object Object]\",Aa={};Aa[xa]=Aa[\"[object Array]\"]=Aa[\"[object ArrayBuffer]\"]=Aa[\"[object DataView]\"]=Aa[\"[object Boolean]\"]=Aa[\"[object Date]\"]=Aa[\"[object Float32Array]\"]=Aa[\"[object Float64Array]\"]=Aa[\"[object Int8Array]\"]=Aa[\"[object Int16Array]\"]=Aa[\"[object Int32Array]\"]=Aa[\"[object Map]\"]=Aa[\"[object Number]\"]=Aa[Ta]=Aa[\"[object RegExp]\"]=Aa[\"[object Set]\"]=Aa[\"[object String]\"]=Aa[\"[object Symbol]\"]=Aa[\"[object Uint8Array]\"]=Aa[\"[object Uint8ClampedArray]\"]=Aa[\"[object Uint16Array]\"]=Aa[\"[object Uint32Array]\"]=!0,Aa[\"[object Error]\"]=Aa[Sa]=Aa[\"[object WeakMap]\"]=!1;var Ea=function t(e,i,n,r,a,o){var d,s=1&i,l=2&i,c=4&i;if(n&&(d=a?n(e,r,a,o):n(e)),void 0!==d)return d;if(!Ia(e))return e;var u=_a(e);if(u){if(d=fa(e),!s)return sa(e,d)}else{var h=pa(e),p=h==Sa||\"[object GeneratorFunction]\"==h;if(ga(e))return da(e,s);if(h==Ta||h==xa||p&&!a){if(d=l||p?{}:ma(e),!s)return l?ca(e,oa(d,e)):la(e,aa(d,e))}else{if(!Aa[h])return a?e:{};d=va(e,h,s)}}o||(o=new ia);var f=o.get(e);if(f)return f;o.set(e,d),ba(e)?e.forEach((function(r){d.add(t(r,i,n,r,e,o))})):ya(e)&&e.forEach((function(r,a){d.set(a,t(r,i,n,a,e,o))}));var v=u?void 0:(c?l?ha:ua:l?wa:ka)(e);return na(v||e,(function(r,a){v&&(r=e[a=r]),ra(d,a,t(r,i,n,a,e,o))})),d},Ca=Ea;var Da=function(t){return Ca(t,5)},La=function(){function t(){d(this,t),this.reqUgNum=1,this.progress=0,this.isFirst=!0,this.statusList=[],this.STATUS_WAITING=\"waiting\",this.STATUS_LOADING=\"loading\",this.STATUS_CACHING=\"caching\",this.STATUS_TIMEOUT=\"timeout\",this.STATUS_EXPIRED=\"expired\",this.STATUS_FAILED=\"failed\",this.STATUS_SHOWED=\"showed\"}return l(t,[{key:\"load\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.progress=0;var n=[];e.forEach((function(e,i){var r=e.unit_id,a={index:i,itemId:r,unitId:r,nwFirmId:e.nw_firm_id,ecpm:e.ecpm,ecpmSort:e.s_pty,rank:e.sp_ps,rankSort:0,status:t.STATUS_WAITING,expirationTime:0,context:{},type:0,unit:Da(e)};n.push(a)})),(null==n?void 0:n.length)>1&&Oa(n),n.sort((function(t,e){var i=e.ecpmSort-t.ecpmSort,n=e.rankSort-t.rankSort;return 0===i?n:i})),n.forEach((function(t,e){t.index=e}));var r=i.reqUgNum,a=void 0===r?1:r;this.reqUgNum=a,this.progress=a-1,this.isFirst=!0,this.initStatusList(n)}},{key:\"merge\",value:function(t){var e,i=this;if(!(t.length<=0)){var n=[];t.forEach((function(t){var e=t.unit_id,r=t.nw_firm_id,a=t.ecpm,o=t.s_pty,d=t.nw_cache_time,s={index:0,itemId:e,unitId:e,nwFirmId:r,ecpm:a,ecpmSort:o,rank:t.sp_ps,rankSort:0,status:i.STATUS_WAITING,expirationTime:Date.now()+d,context:{},type:66==r?2:1,unit:Da(t)};n.push(s)})),(e=this.statusList).push.apply(e,n),this.statusList.sort((function(t,e){var i=e.ecpmSort-t.ecpmSort,n=e.type-t.type;return 0===i?n:i})),this.statusList.forEach((function(t,e){t.index=e,[1,2].includes(t.type)&&t.index<=i.progress&&(t.status=i.STATUS_LOADING),t.unit.bidTk&&(t.unit.bidTk.sortPriority=e+1)}))}}},{key:\"scheduler\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=[this.STATUS_WAITING],n=[this.STATUS_CACHING,this.STATUS_SHOWED],r=[this.STATUS_LOADING,this.STATUS_CACHING],a=[this.STATUS_LOADING,this.STATUS_CACHING,this.STATUS_TIMEOUT,this.STATUS_SHOWED],o=[],d=[],s=[],l=[];if(this.statusList.forEach((function(e,c){a.includes(e.status)&&o.push(e.itemId),r.includes(e.status)&&c<=t.progress&&d.push(e.itemId),i.includes(e.status)&&s.push(e.itemId),n.includes(e.status)&&l.push(e.itemId)})),e)return o;if((d.length<this.reqUgNum||this.isFirst)&&l.length<1){var c=this.reqUgNum-d.length,u=s.slice(0,c);this.statusList.forEach((function(e,i){u.includes(e.itemId)&&(e.status=t.STATUS_LOADING,t.progress=i)})),o=o.concat(u),this.isFirst=!1}return o}},{key:\"selecter\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"STATUS_CACHING\",i=Date.now(),n={};return this.statusList.forEach((function(r,a){[t[e]].includes(r.status)&&(0===r.expirationTime||r.expirationTime>i)&&v(n)&&(n=r)})),n}},{key:\"itemIdSeleter\",value:function(){var t=this.selecter();return t&&t.itemId?t.itemId:null}},{key:\"indexSeleter\",value:function(){var t=this.selecter();return t&&t.index?t.index:null}},{key:\"setLoading\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_LOADING,e)}},{key:\"setCaching\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.setStatus(t,this.STATUS_CACHING,e,i)}},{key:\"setTimeout\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_TIMEOUT,e)}},{key:\"setFailed\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_FAILED,e)}},{key:\"setShowed\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_SHOWED,e)}},{key:\"getIndex\",value:function(t){var e=0;return this.statusList.forEach((function(i){i.itemId===t&&(e=i.index)})),e}},{key:\"getStatusList\",value:function(){return this.statusList}},{key:\"initStatusList\",value:function(t){var e=this,i=[],n=Date.now();t.forEach((function(t){e.statusList.forEach((function(i){i.itemId===t.itemId&&[e.STATUS_CACHING].includes(i.status)&&(0===i.expirationTime||i.expirationTime>n)&&(t.status=e.STATUS_CACHING,t.context=i.context,t.expirationTime=i.expirationTime)})),i.push(t)})),this.statusList=i}},{key:\"setStatus\",value:function(t,e){var i=this,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=r.expirationTime,o=void 0===a?0:a;this.statusList.forEach((function(r){r.itemId===t&&(r.status=e,e===i.STATUS_CACHING&&(r.expirationTime=o,r.context=n))}))}},{key:\"isExpired\",value:function(){var t=this,e=0,i=Date.now(),n=this.statusList.filter((function(e){return[t.STATUS_LOADING,t.STATUS_TIMEOUT,t.STATUS_CACHING,t.STATUS_SHOWED].includes(e.status)}));return!(n.length<=0)&&(n.forEach((function(n,r){[t.STATUS_LOADING,t.STATUS_TIMEOUT,t.STATUS_SHOWED].includes(n.status)?t.setStatus(n.itemId,t.STATUS_EXPIRED):0===n.expirationTime||n.expirationTime>i?e++:t.setStatus(n.itemId,t.STATUS_EXPIRED)})),e<=0)}},{key:\"isFailed\",value:function(){var t=this;return this.statusList.filter((function(e){return e.status===t.STATUS_FAILED})).length>=this.statusList.length}},{key:\"isExist\",value:function(t){var e=!1;return this.statusList.forEach((function(i){i.itemId===t&&(e=!0)})),e}},{key:\"isLoaded\",value:function(){var t=this,e=this.statusList.filter((function(e){return e.status===t.STATUS_CACHING}));return(null==e?void 0:e.length)>0}}]),t}();function Oa(t){var e,i=(e=\"ecpmSort\",t.reduce((function(t,i){return t[i[e]]=t[i[e]]||[],t[i[e]].push(i),t}),{}));Object.keys(i).forEach((function(e){var n=Da(i[e]);if(!(n.length<=1||Ra(n,\"rank\"))){var r=function(t){var e=[];function i(t){if(t.length)if(1!==t.length)for(var n=t.length,r=function(){var r=A(1,Pa(t,\"rank\")),a=function(t,e){for(var i=[[1,t[0][e]]],n=t.length,r=1;r<n;r++){var a=i[i.length-1][1]+1,o=a+t[r][e]-1;i.push([a,o])}return i}(Da(t),\"rank\"),o=a.findIndex((function(t){return t[0]<=r&&r<=t[1]})),d={index:t.splice(o,1)[0].index,rankSort:n};e.push(d),i(t)},a=0;a<t.length;a++)r();else{var o={index:t[0].index,rankSort:1};e.push(o)}}return i(t),e}(n);r.forEach((function(e){t[e.index].rankSort=e.rankSort}))}}))}var Ra=function(t,e){return t.every((function(i){return i[e]===t[0][e]}))},Pa=function(t,e){return t.reduce((function(t,i){return t+i[e]}),0)};function Ua(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.rawResponse,n=void 0!==i&&i;return new Promise((function(e,i){S().$fetch.fetch({url:t.url,method:t.method,header:{\"Content-Type\":\"application/json;charset=utf-8\"},data:t.data}).then((function(t){if(n)e(t.data);else{var i=t.data,r=_(null==i?void 0:i.data)?JSON.parse(null==i?void 0:i.data):i.data;e(r)}})).catch((function(t){i(t)})).finally((function(){e()}))}))}function $a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.timeout,n=void 0===i?2e4:i;try{return Promise.race([Ua(t,e),new Promise((function(t,e){setTimeout((function(){e(new Error(\"网络状况不太好，再刷新一次？\"))}),n)}))])}catch(t){}}Promise.prototype.finally=function(t){var e=this.constructor;return this.then((function(i){return e.resolve(t()).then((function(){return i}))}),(function(i){return e.resolve(t()).then((function(){throw i}))}))};var Na=function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $a({method:\"post\",url:t,data:e},i)},ja=function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $a({method:\"get\",url:T(t,e)},i)},Fa=\"http://da.anythinktech.com\",Ba=\"4.2.11\",Wa={API_ERROR:\"1004616\",STRATEGY_REQUEST_TIME:\"1004635\",LOAD_FAILED:\"1004630\",REQUEST_FAILED:\"1004631\",IS_READY:\"1004632\",SHOW_FAILED:\"1004633\",CAN_NOT_GET_DEVICE_INFO:\"1004681\",HOT_START_INTERVAL_TIME:\"1004682\",STAY_TIME:\"1004644\",CALLBACK_ERROR:\"1004683\",CLICK_URL_FAIL:\"1004648\",DEEPLINK_RESULT:\"1004650\",BID_LOSS:\"1004659\",BID_WIN:\"1004667\",BID_MERGE_TO_WF:\"1004668\",ADX_WEBVIEW_ACTION:\"1004675\",ADX_IMP_INVALID:\"1100004\",GET_AD:\"1100001\",VIVO_AD_PRICE:\"1100002\",AD_FEEDBACK:\"1004652\",BANNER_HIDE:\"1100003\"};function qa(t){return Ma.apply(this,arguments)}function Ma(){return(Ma=o(i().mark((function t(n){var r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,O,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(L=null!==(r=null===(a=this.$app)||void 0===a?void 0:a.$def)&&void 0!==r?r:this.$def,O=(null==L?void 0:L.topon_sdk)||{},P=O.appKey,U=O.appId,$=O.store,N=O.channelId,j=void 0===N?\"\":N,F=O.subChannelId,B=void 0===F?\"\":F,W=R(),q=S(),V=q.app,Y=q.network,v(null==$||null===(o=$.device)||void 0===o?void 0:o.info)){t.next=8;break}t.t0=null==$||null===(d=$.device)||void 0===d?void 0:d.info,t.next=14;break;case 8:return t.next=10,H.getInfo();case 10:if(t.t1=t.sent,t.t1){t.next=13;break}t.t1={};case 13:t.t0=t.t1;case 14:return z=t.t0,Q=V.getInfo()||{},t.next=18,Y.getType();case 18:if(t.t2=t.sent,t.t2){t.next=21;break}t.t2={};case 21:if(J=t.t2,t.t4=null==$||null===(s=$.device)||void 0===s?void 0:s.ids,t.t4){t.next=27;break}return t.next=26,H.getDeviceIds();case 26:t.t4=t.sent;case 27:if(t.t3=t.t4,t.t3){t.next=30;break}t.t3={};case 30:if(Z=t.t3,t.t6=null==$||null===(l=$.device)||void 0===l?void 0:l.oaid,t.t6){t.next=36;break}return t.next=35,H.getOaId();case 35:t.t6=t.sent;case 36:if(t.t5=t.t6,t.t5){t.next=39;break}t.t5=\"\";case 39:if(tt=t.t5,et=Wa[n.key],it=\"1.0\",t.t7=null==$?void 0:$.upid,t.t7){t.next=47;break}return t.next=46,G();case 46:t.t7=t.sent;case 47:return rt=t.t7,t.next=50,K();case 50:return at=t.sent,ot=null!==(c=null==Q?void 0:Q.packageName)&&void 0!==c?c:\"\",dt=null!==(u=\"\"+(null==Q?void 0:Q.versionCode))&&void 0!==u?u:\"\",st=null!==(h=\"\"+(null==Q?void 0:Q.versionName))&&void 0!==h?h:\"\",lt=\"\".concat(null==z?void 0:z.screenWidth,\"*\").concat(null==z?void 0:z.screenHeight),ct=nt[null==J||null===(p=J.data)||void 0===p?void 0:p.type]||\"-1\",t.next=58,M.getItem(\"firstInitTime\");case 58:if(t.t8=t.sent,t.t8){t.next=61;break}t.t8=0;case 61:return ut=t.t8,t.next=64,M.getItem(\"currentInitTime\");case 64:if(t.t9=t.sent,t.t9){t.next=67;break}t.t9=0;case 67:return ht=t.t9,pt=Math.ceil((ht-ut+1)/864e5),ft=\"TOPON_AD_CACHE_APP_\"+U,t.next=72,M.getItem(ft,!1);case 72:if(t.t10=t.sent,t.t10){t.next=75;break}t.t10={};case 75:if(vt=t.t10,mt=e(e({},n),{},{key:et,psid:at,timestamp:String(Date.now())}),_t=\"\",!n.unitid){t.next=83;break}return t.next=81,X(n.unitid);case 81:_t=t.sent,mt.sessionid=_t;case 83:return gt=[mt],yt={app_id:U,system:1,platform:1,os_vn:null!==(f=\"\"+(null==z?void 0:z.osVersionName))&&void 0!==f?f:\"\",os_vc:null!==(m=\"\"+(null==z?void 0:z.osVersionCode))&&void 0!==m?m:\"\",package_name:ot,app_vn:st,app_vc:dt,brand:null!==(_=null==z?void 0:z.brand)&&void 0!==_?_:\"\",model:null!==(g=null==z?void 0:z.model)&&void 0!==g?g:\"\",pf_vn:null!==(y=null==z?void 0:z.platformVersionName)&&void 0!==y?y:\"\",pf_vc:null!==(I=\"\"+(null==z?void 0:z.platformVersionCode))&&void 0!==I?I:\"\",screen:lt,network_type:ct,mcc:\"1\",mnc:\"1\",language:null!==(b=null==z?void 0:z.language)&&void 0!==b?b:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(Ba),nw_ver:\"\",gp_ver:\"\",ua:W||\"\",upid:rt,channel:j||\"\",sub_channel:B||\"\",orient:1,os_fw:8,data:gt,first_init_time:1*ut,days_from_first_init:1*pt,abtest_id:null!==(k=null==vt||null===(w=vt.data)||void 0===w?void 0:w.abtest_id)&&void 0!==k?k:\"\"},It={android_id:null!==(x=null==Z?void 0:Z.user)&&void 0!==x?x:\"\",mac:null!==(T=null==Z?void 0:Z.mac)&&void 0!==T?T:\"\",imei:\"\",oaid:tt,gaid:null!==(A=null==Z?void 0:Z.advertising)&&void 0!==A?A:\"\",is_cn_sdk:\"1\"},bt=C(D(yt)),kt=C(D(It)),wt=E(P,[{key:\"api_ver\",value:it},{key:\"p\",value:bt},{key:\"p2\",value:kt}]),t.abrupt(\"return\",{p:bt,p2:kt,api_ver:it,sign:wt});case 91:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Va(t){return Ha.apply(this,arguments)}function Ha(){return(Ha=o(i().mark((function t(e){var n;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,qa.call(this,e);case 3:return n=t.sent,t.abrupt(\"return\",Na(\"\".concat(Fa,\"/v2/da\"),n));case 7:t.prev=7,t.t0=t.catch(0);case 9:case\"end\":return t.stop()}}),t,this,[[0,7]])})))).apply(this,arguments)}function Ga(t){return Ya.apply(this,arguments)}function Ya(){return(Ya=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,E,C,D,L,O,P,U,$,N,j,F,B,W,q,M,V,Y,z,X,Q,J,Z,tt,et,it,rt,at,ot,dt,st;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(x=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,T=(null==x?void 0:x.topon_sdk)||{},A=T.appId,E=T.store,C=T.channelId,D=void 0===C?\"\":C,L=T.subChannelId,O=void 0===L?\"\":L,P=e.key,U=e.msg,$=e.msg1,N=e.msg2,j=e.msg3,F=R(),B=S(),W=B.app,q=B.network,v(null==E||null===(a=E.device)||void 0===a?void 0:a.info)){t.next=9;break}t.t0=null==E||null===(o=E.device)||void 0===o?void 0:o.info,t.next=15;break;case 9:return t.next=11,H.getInfo();case 11:if(t.t1=t.sent,t.t1){t.next=14;break}t.t1={};case 14:t.t0=t.t1;case 15:return M=t.t0,V=W.getInfo()||{},t.next=19,q.getType();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:if(Y=t.t2,t.t4=null==E||null===(d=E.device)||void 0===d?void 0:d.ids,t.t4){t.next=28;break}return t.next=27,H.getDeviceIds();case 27:t.t4=t.sent;case 28:if(t.t3=t.t4,t.t3){t.next=31;break}t.t3={};case 31:if(z=t.t3,t.t6=null==E||null===(s=E.device)||void 0===s?void 0:s.oaid,t.t6){t.next=37;break}return t.next=36,H.getOaId();case 36:t.t6=t.sent;case 37:if(t.t5=t.t6,t.t5){t.next=40;break}t.t5=\"\";case 40:if(X=t.t5,Q=Wa[P],t.t7=null==E?void 0:E.upid,t.t7){t.next=47;break}return t.next=46,G();case 46:t.t7=t.sent;case 47:return J=t.t7,t.next=50,K();case 50:return Z=t.sent,tt=null!==(l=null==V?void 0:V.packageName)&&void 0!==l?l:\"\",et=null!==(c=\"\"+(null==V?void 0:V.versionCode))&&void 0!==c?c:\"\",it=null!==(u=\"\"+(null==V?void 0:V.versionName))&&void 0!==u?u:\"\",rt=\"\".concat(null==M?void 0:M.screenWidth,\"*\").concat(null==M?void 0:M.screenHeight),at=nt[null==Y||null===(h=Y.data)||void 0===h?void 0:h.type]||\"-1\",ot={key:Q,psid:Z,timestamp:String(Date.now()),upid:J,sdk_time:Date.now(),msg:U,msg1:$,msg2:N,msg3:j},dt={app_id:A,system:1,platform:1,os_vn:null!==(p=\"\"+(null==M?void 0:M.osVersionName))&&void 0!==p?p:\"\",os_vc:null!==(f=\"\"+(null==M?void 0:M.osVersionCode))&&void 0!==f?f:\"\",package_name:tt,app_vn:it,app_vc:et,brand:null!==(m=null==M?void 0:M.brand)&&void 0!==m?m:\"\",model:null!==(_=null==M?void 0:M.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==M?void 0:M.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==M?void 0:M.platformVersionCode))&&void 0!==y?y:\"\",screen:rt,network_type:at,mcc:\"1\",mnc:\"1\",language:null!==(I=null==M?void 0:M.language)&&void 0!==I?I:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(Ba),nw_ver:\"\",gp_ver:\"\",ua:F||\"\",upid:J,channel:D||\"\",sub_channel:O||\"\",orient:1,os_fw:8},st={android_id:null!==(b=null==z?void 0:z.user)&&void 0!==b?b:\"\",mac:null!==(k=null==z?void 0:z.mac)&&void 0!==k?k:\"\",imei:\"\",oaid:X,gaid:null!==(w=null==z?void 0:z.advertising)&&void 0!==w?w:\"\",is_cn_sdk:\"1\"},t.abrupt(\"return\",{pParams:dt,p2Params:st,data:ot});case 60:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Ka(t,e){var i,n,r=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:this.$def,a=((null==r?void 0:r.topon_sdk)||{}).appKey,o=C(D(t)),d=C(D(e));return{p:o,p2:d,api_ver:\"1.0\",sign:E(a,[{key:\"api_ver\",value:\"1.0\"},{key:\"p\",value:o},{key:\"p2\",value:d}])}}function za(t){try{var i,n=(null==this||null===(i=this.$def)||void 0===i||null===(i=i.topon_sdk)||void 0===i?void 0:i.destroyParams)||{},r=n.pParams,a=n.p2Params,o=function(t,i){var n=Wa[i.key];return e(e(e({},t),i),{},{key:n,timestamp:String(Date.now())})}(n.data,t),d=e(e({},r),{},{data:[o]}),s=Ka.call(this,d,a);return Na(\"\".concat(Fa,\"/v2/da\"),s)}catch(t){}}var Xa=\"4.2.11\",Qa=\"http://api.anythinktech.com\";function Ja(t){return Za.apply(this,arguments)}function Za(){return(Za=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt,xt,St,Tt,At;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(U=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,$=(null==U?void 0:U.topon_sdk)||{},N=$.appKey,j=$.appId,F=$.channelId,B=void 0===F?\"\":F,W=$.subChannelId,q=void 0===W?\"\":W,V=$.customParam,Y=void 0===V?{}:V,z=$.placementCustomParam,Q=void 0===z?{}:z,J=$.store,Z=e.placementId,tt=O(Y,Q),et=R(),it=S(),rt=it.app,at=it.network,ot=it.device,v(null==J||null===(a=J.device)||void 0===a?void 0:a.info)){t.next=10;break}t.t0=null==J||null===(o=J.device)||void 0===o?void 0:o.info,t.next=16;break;case 10:return t.next=12,H.getInfo();case 12:if(t.t1=t.sent,t.t1){t.next=15;break}t.t1={};case 15:t.t0=t.t1;case 16:return dt=t.t0,st=rt.getInfo()||{},t.next=20,at.getType();case 20:if(t.t2=t.sent,t.t2){t.next=23;break}t.t2={};case 23:if(lt=t.t2,t.t4=null==J||null===(d=J.device)||void 0===d?void 0:d.ids,t.t4){t.next=29;break}return t.next=28,H.getDeviceIds();case 28:t.t4=t.sent;case 29:if(t.t3=t.t4,t.t3){t.next=32;break}t.t3={};case 32:if(ct=t.t3,t.t6=null==J||null===(s=J.device)||void 0===s?void 0:s.oaid,t.t6){t.next=38;break}return t.next=37,H.getOaId();case 37:t.t6=t.sent;case 38:if(t.t5=t.t6,t.t5){t.next=41;break}t.t5=\"\";case 41:if(ut=t.t5,ht=\"\".concat(null==dt?void 0:dt.screenWidth,\"*\").concat(null==dt?void 0:dt.screenHeight),pt=nt[null==lt||null===(l=lt.data)||void 0===l?void 0:l.type]||\"-1\",ft=\"1.0\",t.t7=null==J?void 0:J.upid,t.t7){t.next=50;break}return t.next=49,G();case 49:t.t7=t.sent;case 50:return vt=t.t7,t.next=53,K();case 53:return mt=t.sent,t.next=56,X(Z);case 56:return _t=t.sent,t.next=59,M.getItem(\"firstInitTime\");case 59:if(t.t8=t.sent,t.t8){t.next=62;break}t.t8=0;case 62:return gt=t.t8,t.next=65,M.getItem(\"currentInitTime\");case 65:if(t.t9=t.sent,t.t9){t.next=68;break}t.t9=0;case 68:return yt=t.t9,It=Math.ceil((yt-gt+1)/864e5),bt=\"TOPON_AD_CACHE_APP_\"+j,t.next=73,M.getItem(bt,!1);case 73:if(t.t10=t.sent,t.t10){t.next=76;break}t.t10={};case 76:return kt=t.t10,wt={system:1,os_fw:8,mcc:\"1\",mnc:\"1\",timezone:\"\",nw_ver:\"\",orient:1,ua:et||\"\",os_vn:null!==(c=null==dt?void 0:dt.osVersionName)&&void 0!==c?c:\"\",os_vc:null!==(u=\"\"+(null==dt?void 0:dt.osVersionCode))&&void 0!==u?u:\"\",package_name:null!==(h=null==st?void 0:st.packageName)&&void 0!==h?h:\"\",app_vn:null!==(p=null==st?void 0:st.versionName)&&void 0!==p?p:\"\",app_vc:null!==(f=\"\"+(null==st?void 0:st.versionCode))&&void 0!==f?f:\"\",brand:null!==(m=null==dt?void 0:dt.brand)&&void 0!==m?m:\"\",model:null!==(_=null==dt?void 0:dt.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==dt?void 0:dt.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==dt?void 0:dt.platformVersionCode))&&void 0!==y?y:\"\",network_type:pt,screen:ht,upid:vt,app_id:j,sdk_ver:\"UA_\".concat(Xa),platform:1,pl_id:Z,channel:B||\"\",sub_channel:q||\"\",custom:tt,ps_id:mt,session_id:_t,first_init_time:1*gt,days_from_first_init:It,deny:String(dt.screenDensity),api_ver:\"1.0\",host_vn:null!==(I=null==ot||null===(b=ot.host)||void 0===b?void 0:b.versionName)&&void 0!==I?I:\"\",host_vc:null!==(k=\"\"+(null==ot||null===(w=ot.host)||void 0===w?void 0:w.versionCode))&&void 0!==k?k:\"\",abtest_id:null!==(x=null==kt||null===(T=kt.data)||void 0===T?void 0:T.abtest_id)&&void 0!==x?x:\"\"},xt={android_id:null!==(A=null==ct?void 0:ct.user)&&void 0!==A?A:\"\",mac:null!==(L=null==ct?void 0:ct.mac)&&void 0!==L?L:\"\",imei:\"\",oaid:ut,gaid:null!==(P=null==ct?void 0:ct.advertising)&&void 0!==P?P:\"\",is_cn_sdk:\"1\"},St=C(D(wt)),Tt=C(D(xt)),At=E(N,[{key:\"api_ver\",value:ft},{key:\"p\",value:St},{key:\"p2\",value:Tt}]),t.abrupt(\"return\",{p:St,p2:Tt,api_ver:ft,sign:At});case 84:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function to(t){return eo.apply(this,arguments)}function eo(){return eo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=p.length>1&&void 0!==p[1]?p[1]:{},r=e.placementId,t.prev=2,a=Date.now(),t.next=6,Ja.call(this,e);case 6:return o=t.sent,t.next=9,Na(\"\".concat(Qa,\"/v2/open/placement\"),o,{rawResponse:!0});case 9:return d=t.sent,s=_(null==d?void 0:d.data)?JSON.parse(null==d?void 0:d.data):(null==d?void 0:d.data)||{},l=Date.now(),c={key:\"STRATEGY_REQUEST_TIME\",msg:\"placement\",unitid:r,msg1:String(a),msg2:String(l),msg3:String(l-a),msg4:null!=n&&n.isPreload?\"1\":\"\"},Va.call(this,c),s.code>0&&(u={key:\"API_ERROR\",msg:\"placement\",unitid:r,msg1:String(s.code),msg2:s.msg,msg3:Qa.replace(/^https?:\\/\\//,\"\")},Va.call(this,u)),t.abrupt(\"return\",d);case 18:return t.prev=18,t.t0=t.catch(2),h={key:\"API_ERROR\",msg:\"placement\",msg1:\"unknow\",msg2:\"request error\",unitid:r,msg3:Qa.replace(/^https?:\\/\\//,\"\")},Va.call(this,h),t.abrupt(\"return\",{});case 23:case\"end\":return t.stop()}}),t,this,[[2,18]])}))),eo.apply(this,arguments)}var io=\"http://tk.anythinktech.com\",no=\"4.2.11\",ro={AD_LOAD:10,AD_LOAD_FILLED:12,AD_REQUEST:1,AD_REQUEST_FILLED:2,AD_BIDDING:11,AD_SHOW:13,AD_CLICK:6,AD_IMPRESSION:4,APP_STARTUP:21};function ao(t){return oo.apply(this,arguments)}function oo(){return(oo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt,xt,St,Tt,At,Et,Ct,Dt,Lt,Ot,Rt,Pt,Ut,$t,Nt,jt,Ft,Bt,Wt,qt,Mt,Vt,Ht,Gt,Yt,Kt,zt,Xt,Qt,Jt,Zt,te,ee,ie,ne,re,ae,oe,de,se,le,ce;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if($=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,N=(null==$?void 0:$.topon_sdk)||{},j=N.appKey,F=N.appId,B=N.channelId,W=void 0===B?\"\":B,q=N.subChannelId,V=void 0===q?\"\":q,Y=N.customParam,z=void 0===Y?{}:Y,Q=N.placementCustomParam,J=void 0===Q?{}:Q,Z=N.store,tt=e.placementId,et=e.requestId,it=e.logType,rt=e.trafficGroupId,at=e.segmentId,ot=e.adSourceId,dt=e.nwFirmId,st=e.asId,lt=e.format,ct=e.ecpm,ut=e.sPty,ht=e.placementLoadTime,pt=e.unitFilledTime,ft=e.reqUgNum,vt=e.pC,mt=e.bidTk,_t=void 0===mt?{}:mt,gt=e.wfType,yt=e.psIdVirtual,It=void 0===yt?\"\":yt,bt=O(z,J),kt=S(),wt=kt.app,xt=kt.network,St=kt.device,Tt=R(),v(null==Z||null===(a=Z.device)||void 0===a?void 0:a.info)){t.next=10;break}t.t0=null==Z||null===(o=Z.device)||void 0===o?void 0:o.info,t.next=16;break;case 10:return t.next=12,H.getInfo();case 12:if(t.t1=t.sent,t.t1){t.next=15;break}t.t1={};case 15:t.t0=t.t1;case 16:return At=t.t0,Et=wt.getInfo()||{},t.next=20,xt.getType();case 20:if(t.t2=t.sent,t.t2){t.next=23;break}t.t2={};case 23:if(Ct=t.t2,t.t4=null==Z||null===(d=Z.device)||void 0===d?void 0:d.ids,t.t4){t.next=29;break}return t.next=28,H.getDeviceIds();case 28:t.t4=t.sent;case 29:if(t.t3=t.t4,t.t3){t.next=32;break}t.t3={};case 32:if(Dt=t.t3,t.t6=null==Z||null===(s=Z.device)||void 0===s?void 0:s.oaid,t.t6){t.next=38;break}return t.next=37,H.getOaId();case 37:t.t6=t.sent;case 38:if(t.t5=t.t6,t.t5){t.next=41;break}t.t5=\"\";case 41:if(Lt=t.t5,Ot=\"1.0\",t.t7=null==Z?void 0:Z.upid,t.t7){t.next=48;break}return t.next=47,G();case 47:t.t7=t.sent;case 48:return Rt=t.t7,t.next=51,K();case 51:return Pt=t.sent,It&&(Pt=Pt+\"/\"+It),t.next=55,X(tt);case 55:return Ut=t.sent,t.next=58,M.getItem(\"firstInitTime\");case 58:if(t.t8=t.sent,t.t8){t.next=61;break}t.t8=0;case 61:return $t=t.t8,t.next=64,M.getItem(\"currentInitTime\");case 64:if(t.t9=t.sent,t.t9){t.next=67;break}t.t9=0;case 67:return Nt=t.t9,jt=Math.ceil((Nt-$t+1)/864e5),Ft=\"\".concat(null==At?void 0:At.screenWidth,\"*\").concat(null==At?void 0:At.screenHeight),Bt=nt[null==Ct||null===(l=Ct.data)||void 0===l?void 0:l.type]||\"-1\",Wt=\"TOPON_AD_CACHE_APP_\"+F,t.next=74,M.getItem(Wt,!1);case 74:if(t.t10=t.sent,t.t10){t.next=77;break}t.t10={};case 77:return qt=t.t10,Mt={app_id:F,system:1,platform:1,os_vn:null!==(c=null==At?void 0:At.osVersionName)&&void 0!==c?c:\"\",os_vc:null!==(u=\"\"+(null==At?void 0:At.osVersionCode))&&void 0!==u?u:\"\",package_name:null!==(h=null==Et?void 0:Et.packageName)&&void 0!==h?h:\"\",app_vn:null!==(p=null==Et?void 0:Et.versionName)&&void 0!==p?p:\"\",app_vc:null!==(f=\"\"+(null==Et?void 0:Et.versionCode))&&void 0!==f?f:\"\",brand:null!==(m=null==At?void 0:At.brand)&&void 0!==m?m:\"\",model:null!==(_=null==At?void 0:At.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==At?void 0:At.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==At?void 0:At.platformVersionCode))&&void 0!==y?y:\"\",screen:Ft,network_type:Bt,mcc:\"1\",mnc:\"1\",language:null!==(I=null==At?void 0:At.language)&&void 0!==I?I:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(no),gp_ver:\"\",ua:Tt||\"\",orient:1,upid:Rt,channel:W,sub_channel:V,android_id:null!==(b=null==Dt?void 0:Dt.user)&&void 0!==b?b:\"\",oaid:Lt,mac:null!==(k=null==Dt?void 0:Dt.mac)&&void 0!==k?k:\"\",imei:\"\",is_cn_sdk:\"1\",gaid:null!==(w=null==Dt?void 0:Dt.advertising)&&void 0!==w?w:\"\",idfa:\"\",idfv:\"\",custom:bt,os_fw:8,first_init_time:1*$t,days_from_first_init:jt,host_vn:null!==(x=null==St||null===(T=St.host)||void 0===T?void 0:T.versionName)&&void 0!==x?x:\"\",host_vc:null!==(A=\"\"+(null==St||null===(L=St.host)||void 0===L?void 0:L.versionCode))&&void 0!==A?A:\"\",abtest_id:null!==(P=null==qt||null===(U=qt.data)||void 0===U?void 0:U.abtest_id)&&void 0!==P?P:\"\"},Vt=(new Date).getTime(),1===(Ht={traffic_group_id:rt,sdk_time:Vt,req_id:et,req_par:1,req_par_num:ft,pl_id:tt,type:ro[it],unit_id:ot,nw_firm_id:dt,gro_id:at,format:lt,ps_id:Pt,sessionid:Ut,asid:st,bidtype:[\"1\",\"2\"].includes(gt)?1:0,bidprice:ct,s_pty:ut,p_c:vt,cl_imp:0,isload:\"\"}).bidtype&&(Gt=_t.bidId,Yt=void 0===Gt?\"\":Gt,Kt=_t.tpBidId,zt=void 0===Kt?\"\":Kt,Xt=_t.bidRequestTime,Qt=_t.bidResponseTime,Jt=_t.bidFilledTime,Zt=_t.bidResult,te=_t.errorMsg,ee=void 0===te?\"\":te,ie=_t.rlBidStatus,ne=_t.sortType,re=_t.sortPriority,ae={bid_id:Yt,tp_bid_id:zt},oe={},\"AD_BIDDING\"===it&&(oe={bidrequesttime:Xt,bidresponsetime:Qt,bid_filledtime:Jt,bidresponselist:[{sortpriority:re,sorttype:ne,unit_id:ot,bidresult:Zt,bidprice:ct,errormsg:ee,tp_bid_id:zt,nw_firm_id:dt,rl_bid_status:ie,s_pty:ut}]}),Ht=Object.assign({},Ht,ae,oe)),\"AD_LOAD_FILLED\"===it&&(Ht.loadtime=ht),\"AD_REQUEST_FILLED\"===it&&(Ht.filledtime=pt),de=[Ht],se=C(D(Mt)),le=C(D(de)),ce=E(j,[{key:\"api_ver\",value:Ot},{key:\"common\",value:se},{key:\"data\",value:le}]),t.abrupt(\"return\",{common:se,data:le,api_ver:Ot,sign:ce});case 90:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function so(t){return lo.apply(this,arguments)}function lo(){return(lo=o(i().mark((function t(n){var r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,ao.call(this,n);case 3:return r=t.sent,t.next=6,Na(\"\".concat(io,\"/v2/tk\"),r);case 6:(a=t.sent).code>0&&(o=e(e({},n),{},{key:\"API_ERROR\",msg:\"tk_2\",msg1:String(a.code),msg2:a.msg,msg3:io.replace(/^https?:\\/\\//,\"\")}),Va.call(this,o)),t.next=14;break;case 10:t.prev=10,t.t0=t.catch(0),d=e(e({},n),{},{key:\"API_ERROR\",msg:\"tk_2\",msg1:\"unknow\",msg2:\"request error\",msg3:io.replace(/^https?:\\/\\//,\"\")}),Va.call(this,d);case 14:case\"end\":return t.stop()}}),t,this,[[0,10]])})))).apply(this,arguments)}var co=\"4.2.11\",uo=\"http://adx-cn.anythinktech.com\",ho={BROWSER:2,WEBVIEW:3},po=[\"{__VIDEO_TIME__}\",\"{__BEGIN_TIME__}\",\"{__END_TIME__}\",\"{__PLAY_FIRST_FRAME__}\",\"{__PLAY_LAST_FRAME__}\",\"{__SCENE__}\",\"{__TYPE__}\",\"{__BEHAVIOR__}\",\"{__STATUS__}\",\"{__REQ_WIDTH__}\",\"{__REQ_HEIGHT__}\",\"{__WIDTH__}\",\"{__HEIGHT__}\",\"{__DOWN_X__}\",\"{__DOWN_Y__}\",\"{__UP_X__}\",\"{__UP_Y__}\",\"{__CLICK_ID__}\",\"{__RE_DOWN_X__}\",\"{__RE_DOWN_Y__}\",\"{__RE_UP_X__}\",\"{__RE_UP_Y__}\",\"{__TS__}\",\"{__TS_MSEC__}\",\"{__END_TS__}\",\"{__END_TS_MSEC__}\",\"{__PLAY_SEC__}\",\"{__PLAY_SEC__}\",\"{__PLAY_MSEC__}\",\"{__DPLINK_TYPE__}\",\"{ABSOLUTE_COORD}\",\"{RELATIVE_COORD}\"];function fo(t){return vo.apply(this,arguments)}function vo(){return(vo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,E,L,O,P,U,$,N,j,F,B,W,q,M,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(x=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,T=(null==x?void 0:x.topon_sdk)||{},A=T.appId,E=T.channelId,L=void 0===E?\"\":E,O=T.subChannelId,P=void 0===O?\"\":O,U=T.store,$=T.isTest,N=void 0!==$&&$,j=e.placementId,F=e.unitId,B=e.requestId,W=e.adxExt,q=void 0===W?\"\":W,M=e.adWidth,V=void 0===M?0:M,Y=e.adHeight,z=void 0===Y?0:Y,Q=e.format,J=void 0===Q?\"0\":Q,Z=R(),tt=S(),et=tt.app,it=tt.network,v(null==U||null===(a=U.device)||void 0===a?void 0:a.info)){t.next=9;break}t.t0=null==U||null===(o=U.device)||void 0===o?void 0:o.info,t.next=15;break;case 9:return t.next=11,H.getInfo();case 11:if(t.t1=t.sent,t.t1){t.next=14;break}t.t1={};case 14:t.t0=t.t1;case 15:return rt=t.t0,at=et.getInfo()||{},t.next=19,it.getType();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:if(ot=t.t2,t.t4=null==U||null===(d=U.device)||void 0===d?void 0:d.ids,t.t4){t.next=28;break}return t.next=27,H.getDeviceIds();case 27:t.t4=t.sent;case 28:if(t.t3=t.t4,t.t3){t.next=31;break}t.t3={};case 31:if(dt=t.t3,t.t6=null==U||null===(s=U.device)||void 0===s?void 0:s.oaid,t.t6){t.next=37;break}return t.next=36,H.getOaId();case 36:t.t6=t.sent;case 37:if(t.t5=t.t6,t.t5){t.next=40;break}t.t5=\"\";case 40:if(st=t.t5,lt=\"\".concat(null==rt?void 0:rt.screenWidth,\"*\").concat(null==rt?void 0:rt.screenHeight),ct=nt[null==ot||null===(l=ot.data)||void 0===l?void 0:l.type]||\"-1\",t.t7=null==U?void 0:U.upid,t.t7){t.next=48;break}return t.next=47,G();case 47:t.t7=t.sent;case 48:return ut=t.t7,t.next=51,K();case 51:return ht=t.sent,t.next=54,X(j);case 54:return pt=t.sent,ft={system:1,platform:1,brand:null!==(c=null==rt?void 0:rt.brand)&&void 0!==c?c:\"\",model:null!==(u=null==rt?void 0:rt.model)&&void 0!==u?u:\"\",os_vn:null!==(h=null==rt?void 0:rt.osVersionName)&&void 0!==h?h:\"\",os_vc:null!==(p=\"\"+(null==rt?void 0:rt.osVersionCode))&&void 0!==p?p:\"\",os_fw:8,pf_vn:null!==(f=null==rt?void 0:rt.platformVersionName)&&void 0!==f?f:\"\",pf_vc:null!==(m=\"\"+(null==rt?void 0:rt.platformVersionCode))&&void 0!==m?m:\"\",sdk_ver:\"UA_\".concat(co),app_id:A,app_vn:null!==(_=null==at?void 0:at.versionName)&&void 0!==_?_:\"\",app_vc:null!==(g=\"\"+(null==at?void 0:at.versionCode))&&void 0!==g?g:\"\",package_name:null!==(y=null==at?void 0:at.packageName)&&void 0!==y?y:\"\",pl_id:j,mcc:\"1\",mnc:\"1\",language:null!==(I=null==rt?void 0:rt.language)&&void 0!==I?I:\"\",timezone:\"\",nw_ver:\"\",orient:1,ua:Z||\"\",network_type:ct,screen:lt,upid:ut,channel:L||\"\",sub_channel:P||\"\",ps_id:ht,session_id:pt,deny:String(rt.screenDensity)},vt={android_id:null!==(b=null==dt?void 0:dt.user)&&void 0!==b?b:\"\",mac:null!==(k=null==dt?void 0:dt.mac)&&void 0!==k?k:\"\",imei:\"\",oaid:st,gaid:null!==(w=null==dt?void 0:dt.advertising)&&void 0!==w?w:\"\",is_cn_sdk:\"1\"},mt=[{ad_width:V,ad_height:z,nw_firm_id:66,unit_id:String(F),ad_source_id:String(F),get_offer:2,ad_format:J}],N&&(mt[0].test=1),_t=C(D(ft)),gt=C(D(vt)),yt=C(D(mt)),t.abrupt(\"return\",{p:_t,p2:gt,request_id:B,adx_ext:q,hb_list:yt});case 63:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function mo(t,e){return _o.apply(this,arguments)}function _o(){return(_o=o(i().mark((function t(e,n){var r;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fo.call(this,e);case 3:return r=t.sent,t.abrupt(\"return\",Na(\"\".concat(uo,\"/bid\"),r,{timeout:n}));case 7:t.prev=7,t.t0=t.catch(0);case 9:return t.abrupt(\"return\",{code:1,msg:\"请求API异常\"});case 10:case\"end\":return t.stop()}}),t,this,[[0,7]])})))).apply(this,arguments)}function go(t,e,i,n){return yo.apply(this,arguments)}function yo(){return(yo=o(i().mark((function t(n,r,a,o){var d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D,L,O,R,P,U,$,N,j,F,B,W,q,M,V;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.placementId,u=n.exchR,h=a.hbBidTimeout,p=a.requestId,f=a.segmentId,m=a.trafficGroupId,_=a.asId,g=Date.now(),t.next=5,mo.call(this,n,h);case 5:if(y=t.sent,I=Date.now(),b=null!==(d=null==y?void 0:y.data)&&void 0!==d?d:[],k=b[0]||{},w=this.placementLoadStart,x=this.placementLoadEnd,S=this.format,T=this.reqUgNum,A=this.apiData,E=A.t_g_id,C=A.gro_id,D=A.asid,L=A.p_c,O=void 0===L?{}:L,R=x-w,P=o.getStatusList(),U=P.length,1,$=P.findIndex((function(t){return t.ecpmSort<k.s_pty})),N={bidRequestTime:g,bidResponseTime:I,bidFilledTime:I-g,bidResult:0,rlBidStatus:0,sortType:-1,sortPriority:$>-1?$+1:U+1},j={placementId:c,requestId:p,logType:\"AD_BIDDING\",trafficGroupId:E,segmentId:C,asId:D,adSourceId:r.unit_id||0,nwFirmId:r.nw_firm_id||0,ecpm:k.price,sPty:k.s_pty||0,format:S,placementLoadTime:R,unitFilledTime:I-g,reqUgNum:T,pC:O,wfType:\"1\"},F=e(e({},j),{},{bidTk:N}),r.bidTk={bidFilledTime:I-g},!(y.code>0||(null==y||null===(s=y.data)||void 0===s?void 0:s.length)<=0)){t.next=25;break}return F.bidTk.errorMsg=\"bid error, code = \".concat(y.code,\", msg = \").concat(y.msg),so.call(this,F),t.abrupt(\"return\",r);case 25:if(!(1!==k.is_success||k.err_code>0)){t.next=29;break}return F.bidTk.errorMsg=\"bid error, code = \".concat(k.err_code,\", msg = \").concat(k.err_msg),so.call(this,F),t.abrupt(\"return\",r);case 29:if(!(v(k)||v(k.offer_data)||k.offer_data.seatbid&&k.offer_data.seatbid.length<=0)){t.next=32;break}return so.call(this,F),t.abrupt(\"return\",r);case 32:if(B=k.offer_data.seatbid[0],r.bidTk.bidId=k.bid_id,r.bidTk.tpBidId=k.tp_bid_id,F.bidTk.bidId=k.bid_id,F.bidTk.tpBidId=k.tp_bid_id,B.tk.lurl||(B.tk.lurl=[]),B.tk.nurl||(B.tk.nurl=[]),B.tk.burl||(B.tk.burl=[]),k.lurl&&B.tk.lurl.push(k.lurl),k.nurl&&B.tk.nurl.push(k.nurl),k.burl&&B.tk.burl.push(k.burl),Object.values(ho).includes((null==B?void 0:B.link_type)||0)){t.next=46;break}return so.call(this,F),t.abrupt(\"return\",r);case 46:if(F.bidTk.bidResult=1,F.bidTk.rlBidStatus=2,W=Io.call(this,c),q=null!==(l=null==W?void 0:W._expirationTime)&&void 0!==l?l:0,!v(W)&&W.price>k.price&&q>Date.now()&&(F.bidTk.bidResult=0,F.bidTk.rlBidStatus=1,ko.call(this,B.tk.lurl),M={key:\"BID_LOSS\",unitid:c,requestid:p,groupid:f,traffic_group_id:m,asid:_,msg:\"66\",msg1:\"\"+k.unit_id,msg2:\"\"+k.price,msg3:\"\"},k=W,Va.call(this,M)),F.bidTk.bidResult&&(F.bidTk.sortType=0),so.call(this,F),!(o.selecter().ecpm>k.price)){t.next=59;break}return ko.call(this,B.tk.lurl),V={key:\"BID_LOSS\",unitid:c,requestid:p,groupid:f,traffic_group_id:m,asid:_,msg:\"66\",msg1:\"\"+k.unit_id,msg2:\"\"+k.price,msg3:\"\"},Va.call(this,V),t.abrupt(\"return\",Promise.reject(\"ADX BID_LOSS\"));case 59:return r.ecpm=k.price,r.cy_ecpm=k.price*u,r.s_pty=k.s_pty,r.nw_cache_time=k.expire,k.bidTk=r.bidTk,k._expirationTime=Date.now()+k.expire,bo.call(this,c,k),t.abrupt(\"return\",r);case 67:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Io(t){var e,i,n,r,a,o=null!==(e=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:null==this?void 0:this.$def)&&void 0!==e?e:null;return o&&null!=o&&o.topon_sdk&&null!==(r=null===(a=o.topon_sdk)||void 0===a||null===(a=a.cache)||void 0===a||null===(a=a.adxOffer)||void 0===a?void 0:a[t])&&void 0!==r?r:{}}function bo(t,e){var i,n,r,a=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:null==this?void 0:this.$def)&&void 0!==i?i:null;a&&null!=a&&a.topon_sdk&&(a.topon_sdk.cache.adxOffer||(a.topon_sdk.cache.adxOffer=Object.create(null)),a.topon_sdk.cache.adxOffer[t]=e)}function ko(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=new RegExp(po.join(\"|\"),\"gi\"),n=[];return t.forEach((function(t){var r=t.replace(i,(function(t){return e[t]}));n.push(ja(\"\".concat(r),{}))})),Promise.all(n)}function wo(t,e){var i=e.getStatusList()||[],n=i.length,r=i.findIndex((function(e){return e.ecpmSort<t.s_pty}));return r>-1?r+1:n+1}function xo(t,i,n,r,a,o){var d=o.placementId,s=o.format,l=this.placementLoadStart,c=this.placementLoadEnd,u=this.reqUgNum,h=this.apiData,p=h.t_g_id,f=h.gro_id,v=h.asid,m=h.p_c,_=void 0===m?{}:m,g=c-l,y={bidRequestTime:n,bidResponseTime:i,bidFilledTime:i-n,bidResult:0,rlBidStatus:0,sortType:-1,sortPriority:r};return e(e({},{placementId:d,requestId:a.requestId,logType:\"AD_BIDDING\",trafficGroupId:p,segmentId:f,asId:v,adSourceId:t.unit_id||0,nwFirmId:t.nw_firm_id||0,ecpm:t.price,sPty:t.s_pty||0,format:s,placementLoadTime:g,unitFilledTime:i-n,reqUgNum:u,pC:_,wfType:\"2\"}),{},{bidTk:y})}function So(t,e,i,n,r){var a,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,d=n.placementId,s=n.exchRateC2u,l=n.accountCurrency,c=e.unit_id,u=d+\"/\"+c,h=j.call(this,\"unit\",u),p=null!==(a=null==h?void 0:h._expirationTime)&&void 0!==a?a:0;if(!v(h)&&h.offer.ecpm>t.ecpm&&p>Date.now()){var f;i.bidTk.bidResult=0,i.bidTk.rlBidStatus=1,o=null!==(f=null==h?void 0:h.ad)&&void 0!==f?f:null;var m=t.adId?{adid:t.adId}:{};Ao.call(this,{condition:n,strategy:r,unit:e,notifyOptions:m,notifyInstance:o});var _=(t=h.offer).ecpm/100;e.ecpm=_*s,e.price=_*s,e.cy_ecpm=\"USD\"===l?_*s:_,e.s_pty=_*s}return{offer:t,adInstance:o}}function To(t,e,i,n,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=r.selecter();if(o&&o.ecpm>e.ecpm){var d=t.adId?{adid:t.adId}:{};return Ao.call(this,{condition:i,strategy:n,unit:e,notifyOptions:d,notifyInstance:a}),o.unit}return null}function Ao(t){var i=t.condition,n=t.strategy,r=t.unit,a=t.daOptions,o=void 0===a?{}:a,d=t.notifyOptions,s=void 0===d?{}:d,l=t.notifyInstance,c=void 0===l?null:l,u=i.placementId,h=n.requestId,p=n.segmentId,f=n.trafficGroupId,v=n.asId;55===r.nw_firm_id&&Eo.call(this,s,c);var m=e({key:\"BID_LOSS\",unitid:u,requestid:h,groupid:p,traffic_group_id:f,asid:v,msg:r.nw_firm_id,msg1:\"\"+r.unit_id,msg2:\"\"+r.ecpm,msg3:\"\"},o);Va.call(this,m)}function Eo(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=S(),r=n.ad,a=i||r,o=e({winPrice:0,code:1,channel:\"mob\"},t);a.notifyRankLoss(o)}function Co(t){var i=S().ad;return new Promise((function(n,r){i.preloadAd(e(e({},t),{},{success:function(t){n(t)},fail:function(t,e){n(t)}}))}))}function Do(t){var e=S().ad,i=null;try{i=e.createRewardedVideoAd(t)}catch(t){}return i}function Lo(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if((null==t?void 0:t.length)<=1)return t;var e=JSON.parse(JSON.stringify(t));return e.sort((function(t,e){return e.price-t.price})),e}function Oo(t,e,i,n){return Ro.apply(this,arguments)}function Ro(){return(Ro=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=e.unit_id,u=e.content,h=JSON.parse(u),p=h.unit_id,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+c,g={},y={adUnitId:p,ecpm:!0,type:\"native\",adCount:1},I=Date.now(),t.next=10,Co.call(this,y);case 10:if(b=t.sent,k=Date.now(),g=null!==(o=null==b||null===(d=b.adList)||void 0===d?void 0:d[0])&&void 0!==o?o:{},w=null!==(s=null===(l=g)||void 0===l?void 0:l.ecpm)&&void 0!==s?s:0,x=w/100,e.ecpm=x*v,e.price=x*v,e.cy_ecpm=\"USD\"===m?x*v:x,e.s_pty=x*v,e.bidTk={bidFilledTime:k-I},S=wo.call(this,e,a),(T=xo.call(this,e,k,I,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,g,e,T,n,r),E=A.offer,g=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),g.ecpm||(T.bidTk.sortType=-12,T.bidTk.errorMsg=\"0 bid price\"),so.call(this,T),g.ecpm){t.next=34;break}return C={msg2:\"0\"},D={adid:g.adId},Ao.call(this,{condition:n,strategy:r,unit:e,notifyOptions:D,daOptions:C}),t.abrupt(\"return\",Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\")));case 34:if(!To.call(this,g,e,n,r,a)){t.next=37;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 37:return N.call(this,\"unit\",_,{ad:null,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 39:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Po(t,e,i,n){var r=this,a=t.unit_id,o=t.content,d=JSON.parse(o).unit_id,s=e.placementId,l=e.exchRateC2u,c=e.accountCurrency,u=s+\"/\"+a,h={ecpm:0},p={adUnitId:d},f=Date.now(),v=Do.call(this,p);return v?(v.load(),new Promise((function(a,o){v.onLoad((function(){var d,s;h=v.getECPM();var p=Date.now(),m=(null!==(d=null===(s=h)||void 0===s?void 0:s.ecpm)&&void 0!==d?d:0)/100;t.ecpm=m*l,t.price=m*l,t.cy_ecpm=\"USD\"===c?m*l:m,t.s_pty=m*l,t.bidTk={bidFilledTime:p-f};var _=wo.call(r,t,n),g=xo.call(r,t,p,f,_,i,e);g.bidTk.bidResult=1,g.bidTk.rlBidStatus=2;var y=So.call(r,h,t,g,e,i,v),I=y.offer,b=y.adInstance;if(h=I,v=b,g.bidTk.bidResult&&(g.bidTk.sortType=0),h.ecpm||(g.bidTk.sortType=-12,g.bidTk.errorMsg=\"0 bid price\"),so.call(r,g),!h.ecpm){return Ao.call(r,{condition:e,strategy:i,unit:t,daOptions:{msg2:\"0\"},notifyInstance:v}),Promise.reject(\"offer.ecpm: \".concat(h.ecpm,\"不符合bid场景，reject掉\"))}var k=To.call(r,h,t,e,i,n,v);k&&o(k),N.call(r,\"unit\",u,{ad:v,offer:h,_expirationTime:Date.now()+t.nw_cache_time}),a(t)})),v.onError((function(n){var a=Date.now(),d=xo.call(r,t,a,f,-1,i,e);d.bidTk.bidResult=0,d.bidTk.rlBidStatus=0,d.bidTk.sortType=-12,d.bidTk.errorMsg=\"\".concat(JSON.stringify(n)),so.call(r,d),o({msg:\"激励视频 c2s 失败: \".concat(JSON.stringify(n))})}))}))):t}function Uo(t,e,i,n){return $o.apply(this,arguments)}function $o(){return($o=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return l=null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.topon_sdk)||void 0===o?void 0:o.channelId,c=e.unit_id,u=e.content,h=e.nw_req_num,p=JSON.parse(u),f=p.unit_id,v=n.placementId,m=n.exchRateC2u,_=n.accountCurrency,g=v+\"/\"+c,y={},I={adUnitId:f,type:\"native\",adCount:h&&h<=3?h:1},l&&(I.channel=l),b=Date.now(),t.next=12,Co.call(this,I);case 12:if(k=t.sent,w=Date.now(),x=k.adList||[],S=Lo(x),(y=S[0]||{}).ecpm=null!==(d=null===(s=y)||void 0===s?void 0:s.price)&&void 0!==d?d:0,T=y.ecpm/100,e.ecpm=T*m,e.price=T*m,e.cy_ecpm=\"USD\"===_?T*m:T,e.s_pty=T*m,e.bidTk={bidFilledTime:w-b},A=wo.call(this,e,a),(E=xo.call(this,e,w,b,A,r,n)).bidTk.bidResult=1,E.bidTk.rlBidStatus=2,C=So.call(this,y,e,E,n,r),D=C.offer,y=D,E.bidTk.bidResult&&(E.bidTk.sortType=0),so.call(this,E),!To.call(this,y,e,n,r,a)){t.next=35;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 35:return N.call(this,\"unit\",g,{ad:null,offer:y,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 37:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function No(t,e,i,n){return jo.apply(this,arguments)}function jo(){return(jo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return d=null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.topon_sdk)||void 0===o?void 0:o.channelId,s=e.unit_id,l=e.content,c=e.nw_req_num,u=JSON.parse(l),h=u.unit_id,p=n.placementId,f=n.exchRateC2u,v=n.accountCurrency,m=p+\"/\"+s,_={},g={adUnitId:h,type:\"rewardedVideoAd\",adCount:c&&c<=3?c:1},d&&(g.channel=d),y=Date.now(),t.next=12,Co.call(this,g);case 12:if(I=t.sent,b=Date.now(),!I.adList){t.next=20;break}k=I.adList||[],w=Lo(k),_=w[0]||{},t.next=25;break;case 20:if(!I.adid){t.next=24;break}_=I,t.next=25;break;case 24:return t.abrupt(\"return\",Promise.reject(\"bid无结果\"));case 25:if(_.ecpm=_.price||0,x=_.ecpm/100,e.ecpm=x*f,e.price=x*f,e.cy_ecpm=\"USD\"===v?x*f:x,e.s_pty=x*f,e.bidTk={bidFilledTime:b-y},S=wo.call(this,e,a),(T=xo.call(this,e,b,y,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,_,e,T,n,r),E=A.offer,_=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),so.call(this,T),!To.call(this,_,e,n,r,a)){t.next=43;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 43:if(C=Do.call(this,{multiton:!0})){t.next=46;break}return t.abrupt(\"return\",e);case 46:return N.call(this,\"unit\",m,{ad:C,offer:_,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 48:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Fo(t){var i,n,r=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:this.$def,a=(null==r?void 0:r.ylh_sdk)||{};return new Promise((function(i,n){v(a)&&i({code:2e3,msg:\"找不到优量汇SDK\"}),a.onYlhReady((function(){var n=e({},t);a.loadFeedAd(n).then((function(t){var e={adList:t||[]};t.code&&t.code>0&&(e.code=at[t.code]||2e3,e.msg=\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\"),e.adList=[]),i(e)})).catch((function(t){i({code:2e3,msg:\"\".concat(null==t?void 0:t.message)})}))}))}))}function Bo(t,e,i,n){return Wo.apply(this,arguments)}function Wo(){return(Wo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=u.allow_recommend,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+l,g={},y={count:1,placementId:h,recommendation:\"1\"===p?2:1},I=Date.now(),t.next=10,Fo.call(this,y);case 10:if(b=t.sent,k=Date.now(),g=null!==(o=null==b||null===(d=b.adList)||void 0===d?void 0:d[0])&&void 0!==o?o:{},w=(null===(s=g)||void 0===s?void 0:s.getECPM())>0?g.getECPM():0,g.ecpm=w,x=w/100,e.ecpm=x*v,e.price=x*v,e.cy_ecpm=\"USD\"===m?x*v:x,e.s_pty=x*v,e.bidTk={bidFilledTime:k-I},S=wo.call(this,e,a),(T=xo.call(this,e,k,I,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,g,e,T,n,r),E=A.offer,g=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),g.ecpm||(T.bidTk.sortType=-12,T.bidTk.errorMsg=\"0 bid price\"),so.call(this,T),g.ecpm){t.next=32;break}return t.abrupt(\"return\",Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\")));case 32:if(!To.call(this,g,e,n,r,a)){t.next=35;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 35:return N.call(this,\"unit\",_,{ad:null,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 37:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function qo(t,e,i,n){return Mo.apply(this,arguments)}function Mo(){return(Mo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=null!==(o=null===(d=this.$app)||void 0===d?void 0:d.$def)&&void 0!==o?o:this.$def,l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=u.video_muted,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+l,g={ecpm:0},y={placementId:h,muted:\"1\"===p},I=Date.now(),t.abrupt(\"return\",new Promise((function(t,i){try{var o=s.ylh_sdk.createRewardVideoAd(y);o.onLoad((function(){var i,d;g.ecpm=o.getECPM();var s=Date.now(),l=(null!==(i=null===(d=g)||void 0===d?void 0:d.ecpm)&&void 0!==i?i:0)/100;e.ecpm=l*v,e.price=l*v,e.cy_ecpm=\"USD\"===m?l*v:l,e.s_pty=l*v,e.bidTk={bidFilledTime:s-I};var c=wo.call(b,e,a),u=xo.call(b,e,s,I,c,r,n);u.bidTk.bidResult=1,u.bidTk.rlBidStatus=2;var h=So.call(b,g,e,u,n,r).offer;return g=h,u.bidTk.bidResult&&(u.bidTk.sortType=0),g.ecpm||(u.bidTk.sortType=-12,u.bidTk.errorMsg=\"0 bid price\"),so.call(b,u),g.ecpm?To.call(b,g,e,n,r,a)?Promise.reject(\"HB BID_LOSS\"):(N.call(b,\"unit\",_,{ad:o,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),void t(e)):Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\"))})),o.onError((function(t){if(t.errorCode){var a=Date.now(),o=xo.call(b,e,a,I,-1,r,n),d=at[t.errorCode]||2e3,s=\"\".concat(null==t?void 0:t.errorMsg,\" real code [\").concat(t.errorCode,\"]\");o.bidTk.bidResult=0,o.bidTk.rlBidStatus=0,o.bidTk.sortType=-12,o.bidTk.errorMsg=s,so.call(b,o),i({code:d,msg:s})}})),o.load()}catch(t){i({code:2e3,msg:\"激励视频 c2s 失败: \".concat(JSON.stringify(t))})}})));case 10:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Vo(t,e,i,n){return Ho.apply(this,arguments)}function Ho(){return(Ho=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=null!==(o=null===(d=this.$app)||void 0===d?void 0:d.$def)&&void 0!==o?o:this.$def,l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=n.placementId,f=n.exchRateC2u,v=n.accountCurrency,m=n.placementConfig,_=(void 0===m?{}:m).entry,g=p+\"/\"+l,y={ecpm:0},I={placementId:h,entry:void 0===_?\"\":_},b=Date.now(),t.abrupt(\"return\",new Promise((function(t,i){try{s.ylh_sdk.onYlhReady((function(){var o=s.ylh_sdk.createSplashAd(I);o.onLoad((function(){var i,d;y.ecpm=o.getECPM();var s=Date.now(),l=(null!==(i=null===(d=y)||void 0===d?void 0:d.ecpm)&&void 0!==i?i:0)/100;e.ecpm=l*f,e.price=l*f,e.cy_ecpm=\"USD\"===v?l*f:l,e.s_pty=l*f,e.bidTk={bidFilledTime:s-b};var c=wo.call(k,e,a),u=xo.call(k,e,s,b,c,r,n);u.bidTk.bidResult=1,u.bidTk.rlBidStatus=2;var h=So.call(k,y,e,u,n,r).offer;return y=h,u.bidTk.bidResult&&(u.bidTk.sortType=0),y.ecpm||(u.bidTk.sortType=-12,u.bidTk.errorMsg=\"0 bid price\"),so.call(k,u),y.ecpm?To.call(k,y,e,n,r,a)?Promise.reject(\"HB BID_LOSS\"):(N.call(k,\"unit\",g,{ad:o,offer:y,_expirationTime:Date.now()+e.nw_cache_time}),void t(e)):Promise.reject(\"offer.ecpm: \".concat(y.ecpm,\"不符合bid场景，reject掉\"))})),o.onError((function(t){if(t.errorCode){var a=Date.now(),o=xo.call(k,e,a,b,-1,r,n),d=at[t.errorCode]||2e3,s=\"\".concat(null==t?void 0:t.errorMsg,\" real code [\").concat(t.errorCode,\"]\");o.bidTk.bidResult=0,o.bidTk.rlBidStatus=0,o.bidTk.sortType=-12,o.bidTk.errorMsg=s,so.call(k,o),i({code:d,msg:s})}})),o.load()}))}catch(t){i({code:2e3,msg:\"开屏广告 c2s 失败: \".concat(JSON.stringify(t))})}})));case 11:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}var Go=c(c(c({},tt.OPPO,{bid:function(t,e,i,n){var r=e.format,a={0:Oo,1:Po};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"oppo\"}),tt.VIVO,{bid:function(t,e,i,n){var r=e.format,a={0:Uo,1:No};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"vivo\"}),tt.YLH,{bid:function(t,e,i,n){var r=e.format,a={0:Bo,1:qo,4:Vo};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"ylh\"});function Yo(t,e){var i=S().ad.getProvider().toLowerCase();return!!Go[t]&&(\"ylh\"===Go[t].brand?!((null==e?void 0:e.platformVersionCode)<1100):Go[t].brand===i&&!(\"oppo\"===i&&(null==e?void 0:e.platformVersionCode)<1119))}function Ko(t){return zo.apply(this,arguments)}function zo(){return(zo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(d=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(a=l.device)||void 0===a?void 0:a.info)){t.next=6;break}t.t0=null==l||null===(o=l.device)||void 0===o?void 0:o.info,t.next=12;break;case 6:return t.next=8,H.getInfo();case 8:if(t.t1=t.sent,t.t1){t.next=11;break}t.t1={};case 11:t.t0=t.t1;case 12:if(c=t.t0,u=e.hbUnit,h=e.condition,p=e.strategy,f=e.scheduler,m=[],_=u,Yo.call(this,_.nw_firm_id,c)){t.next=18;break}return t.abrupt(\"return\");case 18:if(Go[_.nw_firm_id]&&m.push(Go[_.nw_firm_id].bid.call(this,_,h,p,f)),m.length){t.next=21;break}return t.abrupt(\"return\",[]);case 21:return t.abrupt(\"return\",Promise.allSettled(m));case 22:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}var Xo,Qo,Jo,Zo,td={adProxyEvent:{onInit:function(){var t;if(!this.placementId)throw new Error(\"请传入广告位ID\");var e=\"\".concat(this.$page.name,\"/\").concat(this.placementId,\"/\").concat(null==this||null===(t=this._page)||void 0===t?void 0:t.id);if(j.call(this,\"global\",e)){var i=\"当前页面: \".concat(this.$page.name,\" 已存在广告位: \").concat(this.placementId,\"，同一页面中请勿使用相同广告位ID\");throw new Error(i)}N.call(this,\"global\",e,this.placementId),this.$watch(\"wfUnitIdsNeedRender\",\"checkWfCache\"),this.$on(\"proxyTkReport\",this.tkReportWatcher),this.$on(\"proxyAdLoad\",this.adLoadWatcher),this.$on(\"proxyAdShow\",this.adShowWatcher),this.$on(\"proxyAdClick\",this.adClickWatcher),this.$on(\"proxyAdClose\",this.adCloseWatcher),this.$on(\"proxyAdReward\",this.adRewardWatcher),this.$on(\"proxyAdError\",this.adErrorWatcher),this.handleAdInit()},onDestroy:function(){var t,e,i=\"\".concat(null===(t=this.$page)||void 0===t?void 0:t.name,\"/\").concat(this.placementId,\"/\").concat(null==this||null===(e=this._page)||void 0===e?void 0:e.id);N.call(this,\"global\",i,null);try{this.$off(\"proxyTkReport\",this.tkReportWatcher),this.$off(\"proxyAdLoad\",this.adLoadWatcher),this.$off(\"proxyAdShow\",this.adShowWatcher),this.$off(\"proxyAdClick\",this.adClickWatcher),this.$off(\"proxyAdClose\",this.adCloseWatcher),this.$off(\"proxyAdReward\",this.adRewardWatcher),this.$off(\"proxyAdError\",this.adErrorWatcher)}catch(t){}}},handleAdInit:(Jo=o(i().mark((function t(){var e;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=\"lockLoad\",this.lock.load!==e){t.next=3;break}return t.abrupt(\"return\");case 3:return this.lock.load=e,this.wfAdapter=null,this.adxBidding=!1,this.hitUnitId=null,this.wfScheduler||(this.wfScheduler=new La),t.next=10,this.beforeLoad();case 10:return t.next=12,this.handleCreateAd();case 12:this.reportTkData(\"AD_LOAD\"),this.wfScheduler.load(this.unitList,{reqUgNum:this.reqUgNum}),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),[0,1].includes(this.format)&&this.initAdx(),[0,1,4].includes(this.format)&&this.initHb();case 17:case\"end\":return t.stop()}}),t,this)}))),function(){return Jo.apply(this,arguments)}),initAdx:function(){var t,e,i=this;if(null!==(t=this.adxList)&&void 0!==t&&t.length){var n=this.adxList[0],r={placementId:this.placementId,requestId:this.requestId,adxExt:this.apiData.adx_ext,exchR:(null===(e=this.apiData)||void 0===e||null===(e=e.callback)||void 0===e?void 0:e.exch_r)||1,unitId:n.unit_id,format:\"\"+this.format},a=this.apiData||{},o=a.t_g_id,d=a.gro_id,s=a.asid,l=a.hb_bid_timeout,c=void 0===l?6e4:l,u={hbBidTimeout:c,requestId:this.requestId,segmentId:d,trafficGroupId:o,asId:s};this.adxBidding=!0;var h=P(this.mergeConfig.filter,tt.ADX,n.unit_id);if(h){this.adxBidding=!1;var p=\"0\";9006===h?p=\"5\":9007===h&&(p=\"9\");var f={key:\"REQUEST_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:d,traffic_group_id:o,asid:s,msg:String(tt.ADX),msg1:String(n.unit_id),msg2:\"\",msg3:p,msg4:p,msg5:\"ADX广告源被过滤\",msg8:\"0\"};Va.call(this,f)}else this.adxBiddingTimeId=setTimeout((function(){i.adxBidding=!1}),c),this.emitWfUnitEvent(\"adUnitBiddingAttempt\",{unit:n}),go.call(this,r,n,u,this.wfScheduler).then((function(t){if(t.ecpm<=0)return i.emitWfUnitEvent(\"adUnitBiddingFail\",{unit:t,error:{code:22e3,msg:\"\"}}),!i.hbBidding&&i.wfScheduler.isFailed()&&i.adErrorWfEmpty(\"ADX无填充\"),i.adxBidding=!1,void(i.adxBiddingTimeId&&clearTimeout(i.adxBiddingTimeId));i.wfScheduler.merge([t]),i.wfUnitIdsNeedRender=i.wfScheduler.scheduler(),i.adxBidding=!1,i.adxBiddingTimeId&&clearTimeout(i.adxBiddingTimeId);var e={key:\"BID_MERGE_TO_WF\",unitid:i.placementId,requestid:i.requestId,groupid:d,traffic_group_id:o,asid:s,msg:\"66\",msg1:\"\"+t.unit_id,msg2:\"\"+t.ecpm,msg3:i.wfScheduler.isFailed()?\"3\":i.wfScheduler.isLoaded()?\"2\":\"1\",msg4:\"2\"};Va.call(i,e),i.emitWfUnitEvent(\"adUnitBiddingFilled\",{unit:t,unitIndex:i.wfScheduler.getIndex(t.unit_id)})}))}},initHb:function(){var t,e,i,n,r=this;if(null!==(t=this.hbList)&&void 0!==t&&t.length){this.hbBidding=!0;var a=this.apiData||{},o=a.t_g_id,d=a.gro_id,s=a.asid,l=a.hb_bid_timeout,c=void 0===l?6e4:l,u={hbBidTimeout:c,requestId:this.requestId,segmentId:d,trafficGroupId:o,asId:s},p={condition:{placementId:this.placementId,requestId:this.requestId,format:\"\"+this.format,exchRateC2u:(null===(e=this.apiData)||void 0===e?void 0:e.exch_rate_c2u)||1,accountCurrency:null!==(i=null===(n=this.apiData)||void 0===n||null===(n=n.callback)||void 0===n?void 0:n.acct_cy)&&void 0!==i?i:\"\",placementConfig:this.mergeConfig},strategy:u,scheduler:this.wfScheduler};this.hbBiddingTimeId=setTimeout((function(){r.hbBidding=!1}),c),this.hbList.forEach((function(t){p.hbUnit=t,r.emitWfUnitEvent(\"adUnitBiddingAttempt\",{unit:t});var e={};Ko.call(r,p).then((function(i){var n=[];if(i.map((function(t){\"fulfilled\"===t.status?n.push(t.value):t.reason&&(e={code:22e3,msg:h(t.reason)?t.reason:JSON.stringify(t.reason)})})),n.length<=0)return r.emitWfUnitEvent(\"adUnitBiddingFail\",{unit:t,error:e}),!r.adxBidding&&r.wfScheduler.isFailed()&&r.adErrorWfEmpty(\"HB无填充\"),r.hbBidding=!1,void(r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId));r.wfScheduler.merge(n),r.wfUnitIdsNeedRender=r.wfScheduler.scheduler(),r.hbBidding=!1,r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId),n.forEach((function(t){var e={key:\"BID_MERGE_TO_WF\",unitid:r.placementId,requestid:r.requestId,groupid:d,traffic_group_id:o,asid:s,msg:\"\"+t.nw_firm_id,msg1:\"\"+t.unit_id,msg2:\"\"+t.ecpm,msg3:r.wfScheduler.isFailed()?\"3\":r.wfScheduler.isLoaded()?\"2\":\"1\",msg4:\"2\"};Va.call(r,e),r.emitWfUnitEvent(\"adUnitBiddingFilled\",{unit:t,unitIndex:r.wfScheduler.getIndex(t.unit_id)})}))})).catch((function(){!r.adxBidding&&r.wfScheduler.isFailed()&&r.adErrorWfEmpty(\"HB无填充\"),r.hbBidding=!1,r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId)}))}))}},beforeLoad:(Qo=o(i().mark((function t(){var e,n,r=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,e=Date.now(),this.unitLoadStart=e,this.placementLoadStart=e,t.t0=String,t.next=7,J();case 7:t.t1=t.sent,this.requestId=(0,t.t0)(t.t1),this.requestIdCount++,n=4===this.format?5e3:3e5,this.timerId&&clearTimeout(this.timerId),this.timerId=setTimeout((function(){r.checkTimeout()}),this.mergeConfig.timeout>0?this.mergeConfig.timeout:n),t.next=17;break;case 15:t.prev=15,t.t2=t.catch(0);case 17:case\"end\":return t.stop()}}),t,this,[[0,15]])}))),function(){return Qo.apply(this,arguments)}),checkTimeout:function(){var t=this;if(this.wfScheduler){var e=this.wfScheduler.getStatusList(),i=[];e.forEach((function(t){[\"loading\",\"timeout\"].includes(t.status)&&i.push(t)}));var n=this.apiData||{},r=n.t_g_id,a=n.gro_id,o=n.asid;i.forEach((function(e){var i={key:\"REQUEST_FAILED\",unitid:t.placementId,requestid:t.requestId,groupid:a,traffic_group_id:r,asid:o,msg:String(e.nwFirmId),msg1:String(e.unitId),msg2:String(e.index),msg3:\"1\",msg4:\"19002\",msg5:\"\",msg8:\"\"};Va.call(t,i)}));this.adError({},{detail:{code:9002,msg:\"Load Timeout\"}})}},handleCreateAd:(Xo=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,_,g,y,I,b,k,w,x=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.isApiSuccess=!1,o=\"TOPON_AD_CACHE_PLACEMENT_\"+this.placementId,t.next=4,M.getItem(o,!1);case 4:if(t.t0=t.sent,t.t0){t.next=7;break}t.t0={};case 7:if(!v(d=t.t0)){t.next=10;break}return t.abrupt(\"return\",this.handleApiRequest());case 10:if(s=null!==(e=null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n?void 0:n.topon_sdk)&&void 0!==e?e:{},l=s.channelId,c=void 0===l?\"\":l,u=s.subChannelId,h=void 0===u?\"\":u,p=s.customParam,f=void 0===p?{}:p,_=s.placementCustomParam,g=c+\"/\"+h,y=O(f,void 0===_?{}:_),I=(new Date).getTime(),b=(null==d||null===(r=d.data)||void 0===r?void 0:r.ps_ct_max)||6048e5,k=(null==d||null===(a=d.data)||void 0===a?void 0:a.ps_ct_out)||0,(w=(null==d?void 0:d._request_timestamp)||0)<=0&&(w=d._ps_ct_timestamp-d.data.ps_ct),!(d._ps_ct_timestamp>I&&d._channel===g&&m(d._custom_param,y))){t.next=22;break}this.handleApiResponse(d),t.next=28;break;case 22:if(!(w+b<I)){t.next=26;break}return t.abrupt(\"return\",this.handleApiRequest());case 26:return setTimeout((function(){x.handleApiResponse(d)}),k),t.abrupt(\"return\",this.handleApiRequest());case 28:case\"end\":return t.stop()}}),t,this)}))),function(){return Xo.apply(this,arguments)}),handleApiRequest:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,m,g,y,I,b,k;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,a=null!==(e=null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n?void 0:n.topon_sdk)&&void 0!==e?e:{},o=a.channelId,d=void 0===o?\"\":o,s=a.subChannelId,l=void 0===s?\"\":s,c=a.customParam,u=void 0===c?{}:c,h=a.placementCustomParam,p=O(u,void 0===h?{}:h),f={placementId:this.placementId},t.next=6,to.call(this,f);case 6:if(m=t.sent,g=_(null==m?void 0:m.data)?JSON.parse(null==m?void 0:m.data):(null==m?void 0:m.data)||{},699===m.code&&(g={code:0,data:{ad_delivery_sw:0,ps_ct:864e5,ps_ct_out:0}}),!((null===(r=g)||void 0===r?void 0:r.code)>0||v(g))&&g){t.next=15;break}if(!this.isApiSuccess){t.next=12;break}return t.abrupt(\"return\");case 12:return y={detail:{code:9004,msg:\"接口服务错误\"}},this.adError({},y),t.abrupt(\"return\");case 15:I=(new Date).getTime(),b=d+\"/\"+l,g._ps_ct_timestamp=I+g.data.ps_ct,g._channel=b,g._custom_param=p,g._request_timestamp=I,this.handleApiResponse(g),k=\"TOPON_AD_CACHE_PLACEMENT_\"+this.placementId,M.setItem(k,g,!1),t.next=28;break;case 26:t.prev=26,t.t0=t.catch(0);case 28:case\"end\":return t.stop()}}),t,this,[[0,26]])})));return function(){return t.apply(this,arguments)}}(),handleApiResponse:function(t){var e;if(!this.isApiSuccess){this.isApiSuccess=!0,this.apiData=t.data;var i=function(t){if(!t)return[];var e=t.data,i=e.adx_list,n=void 0===i?[]:i,r=e.hb_list,a=void 0===r?[]:r,o=e.ug_list,d=void 0===o?[]:o,s=b(),l=b(\"hb\"),c=d.filter((function(t){return s.includes(t.nw_firm_id)}))||[];return{adxList:n,hbList:a.filter((function(t){return l.includes(t.nw_firm_id)}))||[],ugList:c}}(t);if(1!==(null===(e=this.apiData)||void 0===e?void 0:e.ad_delivery_sw)&&(i={}),this.adxList=i.adxList||[],this.hbList=i.hbList||[],this.unitList=i.ugList||[],this.adxList.length||this.unitList.length||this.hbList.length)return i;this.adErrorWfEmpty()}},checkWfCache:function(){if(this.wfScheduler){var t=this.wfScheduler.selecter();if(!v(t)){var e=t.unit,i=this.requestId;if(this.lock.adLoad!==i){this.lock.adLoad=i,this.timerId&&clearTimeout(this.timerId);try{this.$emit(\"adLoad\",{})}catch(t){console.error(\"error\",t.message);var n={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:e.unit_id,msg1:\"1\",msg2:\"adLoad回调错误\",msg3:this.handleGetErrMsg(t.message)};Va.call(this,n)}this.reportTkData(\"AD_LOAD_FILLED\",e)}}}},load:function(){this.wfScheduler.isExpired()&&(this.lock.load=\"\"),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(!0),this.adErrorList=[],this.handleAdInit()},isReady:function(){var t=this.apiData||{},e=t.t_g_id,i=t.gro_id,n=t.asid,r={key:\"IS_READY\",unitid:this.placementId,requestid:this.requestId,groupid:i,traffic_group_id:e,asid:n},a=this.wfScheduler.selecter();return v(a)?(console.error(\"wfAdapterInstance not exist\"),r.msg=\"0\",r.msg1=\"1\",r.msg2=\"\",r.msg3=\"\",r.msg4=\"\",r.msg5=\"\",Va.call(this,r),!1):(r.msg=\"1\",r.msg1=\"\",r.msg2=String(a.index),r.msg3=String(a.unitId),r.msg4=String(a.nwFirmId),r.msg5=\"\",Va.call(this,r),!0)},getAd:function(){var t;if(!this.isReady())return this.wfAdapter=null,null;if(!this.wfScheduler)return null;this.wfAdapter=this.wfScheduler.selecter();var i=this.wfAdapter,n=this.getWfAdapterInstance(i.itemId);if(v(n))return console.error(\"wfAdapterInstance not exist\"),{};this.wfScheduler.setShowed(i.unitId),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.lock.load=\"\",this.hitUnitId=i.unitId;var r={},a=null;n.getAd&&(r=n.getAd()||{}),n.getInstance&&(a=n.getInstance());var o=e(e({},i.context.emit),{},{ad:r,instance:a});if(null!==(t=this.$app)&&void 0!==t&&null!==(t=t.$def)&&void 0!==t&&null!==(t=t.topon_sdk)&&void 0!==t&&t.enhancedLoggingMode){var d=this.apiData||{},s=d.t_g_id,l=d.gro_id,c=d.asid,u={key:\"GET_AD\",unitid:this.placementId,requestid:this.requestId,groupid:l,traffic_group_id:s,asid:c,msg:String((null==o?void 0:o.nwFirmId)||0),msg1:String((null==o?void 0:o.unitId)||0),msg2:String((null==o?void 0:o.ecpm)||0)};Va.call(this,u)}return o},show:function(){try{var t=this.apiData||{},e=t.t_g_id,i=t.gro_id,n=t.asid,r={key:\"SHOW_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:i,traffic_group_id:e,asid:n,msg:\"1\"};if(v(this.wfAdapter))return console.error(\"wfAdapterInstance not exist\"),void Va.call(this,r);var a=this.wfAdapter,o=this.getWfAdapterInstance(a.itemId);if(v(o)){return this.adError({},{detail:{code:9005,msg:\"广告缓存已过期\"}}),void Va.call(this,r)}var d={unit_id:a.unitId,nw_firm_id:a.nwFirmId,ecpm:a.ecpm,bidTk:a.unit.bidTk};this.reportTkData(\"AD_SHOW\",d),null==o||o.show()}catch(t){console.error(\"call show error\",t)}},adLoad:function(t,i){var n,r,a,o=t.nw_cache_time,d=t.wfAdOption,s=void 0===d?{}:d,l=Date.now();this.placementLoadEnd=l;var c=this.getWfAdEmit(t);null!=i&&null!==(n=i.detail)&&void 0!==n&&n.nwUnitVersion&&(c.nwUnitVersion=i.detail.nwUnitVersion);var u=0;[\"1\",\"2\"].includes(null==s?void 0:s._type)&&(u=1),c.isHeaderBidding=u;var h={adapter:i,emit:e({isSelfRendering:null!==(r=null===(a=i.detail)||void 0===a?void 0:a.isSelfRendering)&&void 0!==r&&r},c)},p=l+o;this.wfScheduler.setCaching(t.unit_id,h,{expirationTime:p}),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.emitWfUnitEvent(\"adUnitLoadFilled\",{unit:t})},adShow:function(t,e){this.wfScheduler.setShowed(t.unit_id),this.hitUnitId=t.unit_id,this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.lock.load=\"\";try{this.$emit(\"adShow\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"2\",msg2:\"adShow回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adClick:function(t,e){try{this.$emit(\"adClick\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"4\",msg2:\"adClick回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adClose:function(t,e){try{this.$emit(\"adClose\",e),this.hitUnitId=null}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"3\",msg2:\"adClose回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adReward:function(t,e){try{this.$emit(\"adReward\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"5\",msg2:\"adReward回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adError:function(t,e){var i,n,r,a,o=t.nw_firm_id,d=void 0===o?\"\":o,s=t.unit_id,l=t.wfIndex,c=null!==(i=null===(n=e.detail)||void 0===n?void 0:n.code)&&void 0!==i?i:void 0,u=rt.codeToEvent(d,c)||\"unknown\";9001===c?d===tt.BAIDU&&[1,3,4].includes(this.format)||d===tt.OPPO&&2===this.format?this.wfScheduler.setFailed(t.unit_id):this.wfScheduler.setTimeout(t.unit_id):\"loading\"!==u&&this.wfScheduler.setFailed(t.unit_id);var h=22e3,p=1*c;if(h=1e3<=p&&p<9e3?p+2e4:9e3<=p&&p<9999?p+1e4:22e3,\"loading\"!==u&&![9e3,9001,9003].includes(c)){var f,v,m=this.apiData||{},_=m.t_g_id,g=m.gro_id,y=m.asid,I=\"0\";9006===c?I=\"5\":9007===c?I=\"9\":9008===c&&(I=\"11\");var b={key:\"REQUEST_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:g,traffic_group_id:_,asid:y,msg:String(d),msg1:String(s),msg2:String(l),msg3:I,msg4:String(h),msg5:String(null!==(f=null==e||null===(v=e.detail)||void 0===v?void 0:v.msg)&&void 0!==f?f:e.msg),msg8:String(Date.now()-this.unitLoadStart)};Va.call(this,b)}if(this.isNeedEmitError(u)||this.isBusinessErrorCode(c)){var k,w,x=e.type?e:{};if(e.type){var S,T;x.detail=null!==(S=null==e?void 0:e.detail)&&void 0!==S?S:{},x.detail.code=h;var A={code:h,msg:null==e||null===(T=e.detail)||void 0===T?void 0:T.msg,unitId:s,nwFirmId:d};this.adErrorList.push(A),x.detail.errors=this.adErrorList}else{var E,C,D,L;x.msg=null!==(E=null==e||null===(C=e.detail)||void 0===C?void 0:C.msg)&&void 0!==E?E:e.msg,x.code=h;var O={code:h,msg:null!==(D=null==e||null===(L=e.detail)||void 0===L?void 0:L.msg)&&void 0!==D?D:e.msg,unitId:s,nwFirmId:d};this.adErrorList.push(O),x.errors=this.adErrorList}var R=this.requestId;if(this.lock.adError===R)return;this.lock.adError=R;try{this.$emit(\"adError\",x)}catch(t){console.error(\"error\",t.message);var P={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:s,msg1:\"6\",msg2:\"adError回调错误\",msg3:this.handleGetErrMsg(t.message)};Va.call(this,P)}this.lock.load=\"\",this.timerId&&clearTimeout(this.timerId);var U=this.apiData||{},$=U.t_g_id,N=U.gro_id,j=U.asid,F={key:\"LOAD_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:N,traffic_group_id:$,asid:j,msg:String(null!==(k=null==e||null===(w=e.detail)||void 0===w?void 0:w.msg)&&void 0!==k?k:e.msg),msg1:String(h)};Va.call(this,F)}else if(\"loading\"!==u){this.wfUnitIdsNeedRender=this.wfScheduler.scheduler();var B=(null==e?void 0:e.detail)||{};B.code=h,B.unitId=s,B.nwFirmId=d,this.adErrorList.push(B)}var W={code:h,msg:null!==(r=null==e||null===(a=e.detail)||void 0===a?void 0:a.msg)&&void 0!==r?r:e.msg};this.emitWfUnitEvent(\"adUnitLoadFail\",{unit:t,error:W})},adErrorWfEmpty:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"无广告源数据/广告位已关闭\",e={detail:{code:9003,msg:t}};this.adError({},e)},isNeedEmitError:function(t){return\"loading\"!==t&&(!this.adxBidding&&!this.hbBidding&&(\"show\"===t||this.wfScheduler.isFailed()))},isBusinessErrorCode:function(t){return[9002,19002,9003,19003,9004,19004,9005,19005].includes(t)},emitWfUnitEvent:function(t,e){var i=this||{},n=i.format,r=i.requestId,a=e.unit,o=void 0===a?{}:a,d=e.unitIndex,s=void 0===d?-1:d,l=e.isHeaderBidding,c=void 0===l?0:l,u=e.error,h=void 0===u?{}:u,p=o.wfAdOption,f=void 0===p?{}:p,v=this.getWfAdEmit(o)||{},m=v.ecpm,_=v.cyEcpm,g=v.unitId,y=v.unitLevel,I=v.nwFirmId,b=v.nwUnitId,k={format:n,requestId:r,abTestId:v.abTestId,segmentId:v.segmentId,unitId:g,nwFirmId:I,nwUnitId:b,ecpm:m,cyEcpm:_,isHeaderBidding:c,unitLevel:y,unitIndex:s,error:h};[19e3,19006,19007].includes(null==h?void 0:h.code)||this.isBusinessErrorCode(null==h?void 0:h.code)||([\"adUnitBiddingAttempt\",\"adUnitBiddingFail\"].includes(t)&&(k.ecpm=0,k.cyEcpm=0),([\"adUnitBiddingAttempt\",\"adUnitBiddingFilled\",\"adUnitBiddingFail\"].includes(t)||[\"1\",\"2\"].includes(null==f?void 0:f._type))&&(k.isHeaderBidding=1),this.$emit(t,k))},reportShow:function(){if(v(this.wfAdapter))console.error(\"wfAdapterInstance not exist\");else{var t=this.getWfAdapterInstance(this.wfAdapter.itemId);v(t)?console.error(\"wfAdapterInstance not exist\"):void 0!==t.reportShow&&t.reportShow()}},reportClick:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{reportToProvider:!0};if(v(this.wfAdapter))console.error(\"wfAdapterInstance not exist\");else{var e=this.getWfAdapterInstance(this.wfAdapter.itemId);v(e)?console.error(\"wfAdapterInstance not exist\"):void 0!==e.reportClick&&e.reportClick(t)}},getWfAdapterInstance:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return t<=0&&(t=this.wfScheduler.itemIdSeleter()),this.$child(this.placementId+\"/\"+t)},getWfAdOption:function(t){var e,i={};return null!=t&&t.content&&(i=JSON.parse(t.content)),i._unit_id=null==t?void 0:t.unit_id,i._nw_req_num=null==t?void 0:t.nw_req_num,i._nw_timeout=null!==(e=null==t?void 0:t.nw_timeout)&&void 0!==e?e:5e4,i._request_id=this.requestId,i},getWfAdExtra:function(t){var e,i,n,r,a;return{unit:{unit_id:t.unit_id,nw_firm_id:t.nw_firm_id,ecpm:t.ecpm,nw_cache_time:t.nw_cache_time,cy_ecpm:t.cy_ecpm,content:t.content,bidTk:t.bidTk||{}},trafficGroupId:null===(e=this.apiData)||void 0===e?void 0:e.t_g_id,segmentId:null===(i=this.apiData)||void 0===i?void 0:i.gro_id,format:null===(n=this.apiData)||void 0===n?void 0:n.format,asId:null===(r=this.apiData)||void 0===r?void 0:r.asid,adSourceId:t.unit_id,nwFirmId:t.nw_firm_id,ecpm:t.ecpm,channelId:null===(a=this.$app)||void 0===a||null===(a=a.$def)||void 0===a||null===(a=a.topon_sdk)||void 0===a?void 0:a.channelId,placementId:this.placementId,bidTk:t.bidTk||{}}},getWfAdEmit:function(t){var e=t.ecpm,i=t.cy_ecpm,n=t.ecpm_level,r=t.unit_id,a=t.nw_firm_id,o=t.content,d=void 0===o?\"{}\":o,s=this.apiData||{},l=s.t_g_id,c=s.gro_id,u=r,h=a,p=JSON.parse(d),f=this.format;return{ecpm:e,cyEcpm:i,unitId:u,unitLevel:n,nwFirmId:h,nwUnitId:p[it[h]]||\"\",customExt:p.custom_ext||null,format:f,abTestId:l,segmentId:c}},handleReportTk:function(t,e){var i,n,r=e.detail.type,a=null!==(i=null===(n=e.detail)||void 0===n?void 0:n.ad)&&void 0!==i?i:null;\"AD_REQUEST\"===r&&(this.emitWfUnitEvent(\"adUnitLoadAttempt\",{unit:t}),this.unitLoadStart=Date.now()),\"AD_REQUEST_FILLED\"===r&&(this.unitLoadEnd=Date.now()),this.reportTkData(r,t,a)},reportTkData:function(t){var e,i,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=this||{},d=o.placementLoadStart,s=o.placementLoadEnd,l=o.unitLoadStart,c=o.unitLoadEnd,u=o.placementId,h=o.requestId,p=o.format,f=o.reqUgNum,v=o.apiData,m=void 0===v?{}:v,_=m.t_g_id,g=m.gro_id,y=m.asid,I=m.p_c,b=void 0===I?{}:I,k=s-d,w=c-l,x={placementId:u,requestId:h,logType:t,trafficGroupId:_,segmentId:g,asId:y,adSourceId:r.unit_id||0,nwFirmId:r.nw_firm_id||0,ecpm:r.ecpm||0,sPty:r.s_pty||0,format:p,placementLoadTime:k,unitFilledTime:w,adId:null!==(e=null==a?void 0:a.adId)&&void 0!==e?e:\"\",reqUgNum:f,pC:b,bidTk:r.bidTk||{},wfType:null==r||null===(i=r.wfAdOption)||void 0===i?void 0:i._type},S=Object.values(et);[].concat(S,[tt.ADX]).includes(r.nw_firm_id)&&null!==(n=r.bidTk)&&void 0!==n&&n.bidFilledTime&&(x.unitFilledTime=r.bidTk.bidFilledTime),so.call(this,x)},handleGetErrMsg:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;return\"unlimited\"===e||isNaN(e)?t:t.slice(0,e)},hide:function(){var t=this.wfScheduler.selecter(\"STATUS_SHOWED\");if(t){var e=this.getWfAdapterInstance(t.itemId);null!=e&&e.hide&&(e.hide(),this.hitUnitId=null)}else console.error(\"hide error, wfAdapterInstance not exist\")},tkReportWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.handleReportTk(i,n)},adLoadWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adLoad(i,n)},adShowWatcher:function(t){var e=t.detail.unit;this.adShow(e,{})},adClickWatcher:function(t){var e=t.detail.unit;this.adClick(e,{})},adCloseWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adClose(i,n)},adRewardWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adReward(i,n)},adErrorWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adError(i,n)},getDownloadStatus:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(v(e))console.error(\"wfAdapterInstance not exist\");else if(e.getDownloadStatus)return e.getDownloadStatus()}},getDownloadProgress:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(v(i))console.error(\"wfAdapterInstance not exist\");else if(i.getDownloadProgress)return i.getDownloadProgress()}},subscribeDownloadStatus:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(!v(i)&&i.subscribeDownloadStatus)return i.subscribeDownloadStatus(t)}},unsubscribeDownloadStatus:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.unsubscribeDownloadStatus)return e.unsubscribeDownloadStatus()}},subscribeDownloadProgress:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(!v(i)&&i.subscribeDownloadProgress)return i.subscribeDownloadProgress(t)}},unsubscribeDownloadProgress:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.unsubscribeDownloadProgress)return e.unsubscribeDownloadProgress()}},showAppDetailPage:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.showAppDetailPage)return e.showAppDetailPage()}}},ed={landingContainer:{marginTop:\"0\",flex:1,flexDirection:\"column\"},landingWeb:{flex:1},loadingContainer:{flex:1,flexDirection:\"column\",alignItems:\"center\"},loadingText:{fontSize:\"30px\",color:\"#787878\",textAlign:\"center\"},landingBar:{width:\"100%\",height:\"100px\",backgroundColor:\"#f7f6f6\",justifyContent:\"center\",alignItems:\"center\"},landingBtn:{height:\"50px\",width:\"50px\",padding:\"5px\",marginLeft:\"20px\",fontSize:\"32px\",fontWeight:\"bolder\"},landingTitle:{textAlign:\"center\",fontSize:\"40px\",fontWeight:\"bolder\",width:\"100%\",color:\"#333\"}},id={adProxyEvent:{onInit:function(){this.adStyle=ed;var t=this.$app.$def.manifest.display.pages;t&&t[\"TopOn/AdLanding\"]&&t[\"TopOn/AdLanding\"].fullScreen&&!t[\"TopOn/AdLanding\"].titleBar&&(this.isFullScreen=!0)},onPageStart:function(t){},onPageFinish:function(t){},onTitleReceive:function(t){var e=this;this.$page.setTitleBar({text:t.title}),this.title=t.title,setTimeout((function(){e.isLoading=!1}),10)},onError:function(t){},onProgress:function(t){},onBack:function(t){S().router.back()}}},nd=[{name:\"onSubmit\",type:\"submit\",label:\"提交\"}],rd=[{label:\"异常广告\",parentId:\"1\",groups:[{id:\"11\",children:[{label:\"广告卡顿\",value:\"1\"},{label:\"黑白屏\",value:\"2\"},{label:\"无法关闭\",value:\"3\"}]}]},{label:\"举报广告\",parentId:\"2\",groups:[{id:\"22\",children:[{label:\"诱导点击\",value:\"4\"},{label:\"违法违规\",value:\"5\"},{label:\"虚假欺诈\",value:\"6\"}]},{id:\"23\",children:[{label:\"内容抄袭\",value:\"7\"},{label:\"内容低俗\",value:\"8\"},{label:\"不感兴趣\",value:\"9\"}]}]}],ad={adProxyEvent:{onInit:function(){var t=this.$app.$def.manifest.display.pages;t&&t[\"TopOn/AdReward\"]&&t[\"TopOn/AdReward\"].fullScreen&&!t[\"TopOn/AdReward\"].titleBar&&(this.isFullScreen=!0),this.setInitialData(),this.getAdDataCache()},onCheck:function(t){var e={msg3:t.detail.data.value,msg4:\"0\"};this.feedbackSubmitError=!1,this.submitFeedback(e),this.hideDialog()},onInput:function(t){this.feedbackInputValue=t.detail.data||\"\",t.detail.data&&(this.feedbackSubmitError=!1)},onSubmit:function(){var t=this.feedbackInputValue;if(t){var e={msg3:\"0\",msg4:t};this.submitFeedback(e),this.hideDialog()}else this.feedbackSubmitError=!0},onShowDialog:function(){this.showDialog()},onHideDialog:function(){this.hideDialog()},onTouchStart:function(t){var i=t.timestamp||Date.now(),n=e(e({},t.detail.detail.touches[0]||{}),{},{timestamp:i});this.dispatchRewardedVideoEvent(\"adTouch\",{type:\"start\",data:n})},onTouchMove:function(t){},onTouchEnd:function(t){var i=t.timestamp||Date.now(),n=e(e({},t.detail.detail.changedTouches[0]||{}),{},{timestamp:i});this.dispatchRewardedVideoEvent(\"adTouch\",{type:\"end\",data:n})},onAdClick:function(t){this.dispatchRewardedVideoEvent(\"adClick\",t)},onAdClose:function(t){if(this.onVideoPause(),this.currentCountdown){var e=S().prompt,i=this;e.showDialog({message:\"观看视频满\".concat(this.countdownInitial,\"秒即可获得激励，确定要离开吗？\"),buttons:[{text:\"继续观看视频\"},{text:\"放弃激励离开\"}],success:function(t){\"1\"==t.index?(i.dispatchRewardedVideoEvent(\"adClose\",{reward:!1}),i.onBack()):i.onVideoContinue()},cancel:function(){i.onVideoContinue()},fail:function(){i.onVideoContinue()}})}else this.dispatchRewardedVideoEvent(\"adClose\",{reward:!0}),this.onBack()},onAdShow:(Zo=o(i().mark((function t(e){var n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=this.option._request_id+\"/\"+this.adUnitId,this.lockAdAppear!==n){t.next=3;break}return t.abrupt(\"return\");case 3:return this.lockAdAppear=n,r=Date.now(),t.next=7,this.getBoundingClientRect();case 7:a=t.sent,o=Date.now(),d=o-r,this.dispatchRewardedVideoEvent(\"adImpression\",{clientRect:a,diff:d});case 11:case\"end\":return t.stop()}}),t,this)}))),function(t){return Zo.apply(this,arguments)}),onPause:function(){this.onVideoPause()},onContinue:function(){this.onVideoContinue()}},submitFeedback:function(t){this.dispatchRewardedVideoEvent(\"adFeedback\",t),this.feedbackSubmited=!0},showDialog:function(){this.feedbackDialogVisible=!0,this.onVideoPause()},hideDialog:function(){this.feedbackDialogVisible=!1,this.onVideoContinue()},setInitialData:function(){this.feedbackDialogButtons=nd,this.feedbackSelectOptions=rd},getAdDataCache:function(){var t,e,i,n=\"\".concat(this.plId,\"/\").concat(this.adUnitId),r=j.call(this,\"adxRewardedVideo\",n);this.adData=null!==(t=null==r?void 0:r.adData)&&void 0!==t?t:{},this.adStyle=null!==(e=null==r?void 0:r.adStyle)&&void 0!==e?e:{},this.option=null!==(i=null==r?void 0:r.option)&&void 0!==i?i:{};var a=Number(this.option._countdown);this.countdownInitial=a,this.currentCountdown=a,this.onCountdown(this.currentCountdown)},onCountdown:function(t){var e=this;if(t){var i=t;this.currentCountdown=i,this.countdownTimerId&&clearInterval(this.countdownTimerId),this.countdownTimerId=setInterval((function(){i--,e.currentCountdown=i,i<1&&e.onVideoFinish()}),1e3)}},onVideoFinish:function(){this.onVideoPause()},onVideoPause:function(){this.countdownTimerId&&clearInterval(this.countdownTimerId)},onVideoContinue:function(){this.onCountdown(this.currentCountdown)},onBack:function(){var t=S().router;this.lockAdAppear=\"\",t.back()},getBoundingClientRect:function(){var t=this.$element(\"top-on-adx-container-\".concat(this.adUnitId));return t?new Promise((function(e){t.getBoundingClientRect({success:function(t){return e(t)},fail:function(){return e({})}})})):{}},dispatchRewardedVideoEvent:function(t){var e,i=\"\".concat(this.plId,\"/\").concat(this.adUnitId);if(null!==(e=this.$app.$def.topon_sdk)&&void 0!==e&&e.rewardedVideo[i]){for(var n,r,a=arguments.length,o=new Array(a>1?a-1:0),d=1;d<a;d++)o[d-1]=arguments[d];null===(n=this.$app.$def.topon_sdk)||void 0===n||(r=n.rewardedVideo[i])[t].apply(r,o)}}},od={containerStyle:{flexDirection:\"column\",width:\"100%\",paddingTop:\"10px\",paddingRight:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\"},contentStyle:{flexDirection:\"column\",width:\"100%\"},mainStyle:{flex:1,flexDirection:\"column\"},headerStyle:{flex:1,flexDirection:\"column\"},footerStyle:{flexDirection:\"row\"},imgStyle:{width:\"100%\",overflow:\"hidden\",borderRadius:\"10px\",justifyContent:\"flex-end\",position:\"relative\"},imgPropertiesStyle:{width:\"100%\",objectFit:\"fill\"},titleStyle:{padding:\"10px\",lineHeight:\"40px\",fontSize:\"36px\",fontWeight:700,color:\"rgb(44, 62, 88)\",textOverflow:\"ellipsis\",lines:\"1\"},descStyle:{marginRight:\"20px\",marginTop:\"12px\",fontSize:\"24px\",color:\"rgb(44, 62, 88)\",textOverflow:\"ellipsis\",lines:\"1\",display:\"none\"},buttonStyle:{width:\"100%\",paddingTop:\"20px\",paddingRight:\"20px\",paddingBottom:\"20px\",paddingLeft:\"20px\",borderRadius:\"20px\",backgroundColor:\"#ff9e2b\",textAlign:\"center\",fontSize:\"24px\",color:\"#FFFFFF\"},closeStyle:{closeContainer:{position:\"absolute\",right:\"15px\",top:\"15px\",zIndex:\"100\",alignItems:\"center\",justifyContent:\"center\",transform:\"translateY(0px)\"},closeClickArea:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"transparent\"},closeBtn:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"rgba(0, 0, 0, .4)\"}},logoStyle:{logoContainer:{height:\"30px\",alignItems:\"center\",alignSelf:\"flex-end\",justifyContent:\"flex-end\",marginBottom:\"4px\",marginRight:\"4px\",backgroundColor:\"rgba(153, 153, 153, 0.8)\"},logoImg:{width:\"70px\",marginRight:\"2px\",display:\"flex\"}}},dd={2:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row-reverse\"},headerStyle:{justifyContent:\"space-between\"},footerStyle:{justifyContent:\"flex-end\",alignItems:\"center\"},imgStyle:{width:\"175px\",height:\"100px\",marginLeft:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\",lineHeight:\"36px\"},descStyle:{width:\"100%\",marginRight:\"0\",marginTop:\"0px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\",backgroundColor:\"transparent\",borderWidth:\"1px\",borderColor:\"rgb(44, 62, 88)\",borderStyle:\"solid\",color:\"rgb(44, 62, 88)\"},closeStyle:{closeBtn:{width:\"32px\",height:\"32px\",color:\"rgb(44, 62, 88)\",borderRadius:\"0\",backgroundColor:\"transparent\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}},3:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row\"},imgStyle:{width:\"175px\",height:\"100px\",marginRight:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\",lineHeight:\"36px\"},descStyle:{marginRight:\"0px\",marginTop:\"12px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\"},mainStyle:{flexDirection:\"row\",justifyContent:\"flex-start\",alignItems:\"center\"},footerStyle:{alignSelf:\"center\",justifyContent:\"flex-end\"},closeStyle:{closeContainer:{top:\"0px\",right:\"0px\"},closeBtn:{width:\"32px\",height:\"32px\",backgroundColor:\"rgba(0, 0, 0, .4)\",borderRadius:\"0\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}},4:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row\"},imgStyle:{width:\"315px\",height:\"180px\",marginRight:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\"},descStyle:{marginRight:\"0px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\"},footerStyle:{justifyContent:\"flex-end\"},closeStyle:{closeContainer:{top:\"0px\",right:\"0px\"},closeBtn:{width:\"32px\",height:\"32px\",backgroundColor:\"rgba(0, 0, 0, .4)\",borderRadius:\"0\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}}};function sd(t){var i,n=t.name,a=t.proxyName,o=void 0===a?null:a,d=t.params,s=void 0===d?{}:d,l=t.proxyParams,c=void 0===l?{}:l;try{if(null==this||!this.$dispatch||null==this||!this.adExtra)return;var u=o||\"proxy\".concat((i=n).charAt(0).toUpperCase()+i.slice(1)),h=JSON.parse(function(t){var e={};for(var i in t)t.hasOwnProperty(i)&&\"object\"!=r(t[i])&&\"function\"!=typeof t[i]&&(e[i]=t[i]);return JSON.stringify(e)}(this.adExtra.unit));this.$dispatch(u,e({unit:h,adapter:{detail:e({},s)}},c))}catch(t){}}function ld(){var t=this;if(null!=this&&this.adOption){var e=this.adOption,i=e._nw_timeout,n=e._unit_id;cd.call(this),this.timerId=setTimeout((function(){t.adError({code:9001,msg:\"unitId: \".concat(n,\" 超时\")})}),i)}}function cd(t){var e=t||(null==this?void 0:this.timerId)||null;e&&clearTimeout(e)}function ud(t,e){if(!t)return e;if(!dd[t])return e;var i=$.call(this,e,dd[t],!1);return\"2\"===t&&delete i.closeStyle.closeContainer,i}var hd,pd,fd,vd={adProxyEvent:{onInit:(fd=o(i().mark((function t(){var e,n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(a=P(this.adConfig.filter,tt.ADX,this.adOption._unit_id))){t.next=4;break}return this.adError({code:a,msg:\"该广告源被过滤\"}),t.abrupt(\"return\");case 4:if(ld.call(this),this.handleAdInit(),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\"),v(null==this||null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.store)||void 0===n||null===(n=n.device)||void 0===n?void 0:n.info)){t.next=11;break}t.t0=null==this||null===(r=this.$app)||void 0===r||null===(r=r.$def)||void 0===r||null===(r=r.topon_sdk)||void 0===r||null===(r=r.store)||void 0===r||null===(r=r.device)||void 0===r?void 0:r.info,t.next=17;break;case 11:return t.next=13,H.getInfo();case 13:if(t.t1=t.sent,t.t1){t.next=16;break}t.t1={};case 16:t.t0=t.t1;case 17:o=t.t0,this.deviceInfoCache=o;case 19:case\"end\":return t.stop()}}),t,this)}))),function(){return fd.apply(this,arguments)}),onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t;this.lockAdAppear=\"\";var e=Io.call(this,this.adExtra.placementId),i=null!==(t=null==e?void 0:e.offer_data)&&void 0!==t?t:{};sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.adLoad(i)},show:function(){if(this.ready){var t=(this.adExtra||{}).placementId,e=void 0===t?\"\":t,i=Io.call(this,e);if(Date.now()>i._expirationTime)return this.adError({code:1101,msg:\"广告已过期，请重新获取广告或刷新广告\"}),void bo.call(this,e,{});this.displayed=!0}},adLoad:function(t){var e,i;if(null!=t&&t.seatbid&&null!=t&&null!==(e=t.seatbid)&&void 0!==e&&e.length){this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(i=null==t?void 0:t.seatbid)&&void 0!==i?i:[],sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this);var n=ud.call(this,this.templateId,od),r=U.call(this,this.adConfig.style),a=U.call(this,n),o=$.call(this,a,r);this.adStyle=o,this.updateCloseStyle()}else{this.adError({code:2e3,msg:\"TopOn Adx广告服务无数据返回\"})}},updateCloseStyle:function(){var t,e,i=null!==(t=null===(e=this.currentAd)||void 0===e||null===(e=e.ctrl)||void 0===e?void 0:e.ft_cl_sz)&&void 0!==t?t:1;if(1!==i){var n={1:1,2:1.5,3:.75,4:.5},r=this.adStyle.closeStyle.closeBtn.width.match(/\\d+/g)[0];if(this.adStyle.closeStyle.closeClickArea.width=r*n[i]+\"px\",this.adStyle.closeStyle.closeClickArea.height=r*n[i]+\"px\",n[i]>1){var a=r*n[i]/2-r/2+\"px\";this.adStyle.closeStyle.closeContainer.transform=\"translateY(-\".concat(a,\")\")}}},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){var e=this;sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}),this.handleNotice(\"click\"),this.noticeSucceed=!1,this.noticeFailed=!1;var i=S(),n=i.router,r=i.pkg,a=this||{},o=a.adExtra,d=void 0===o?{}:o,s=a.currentAd,l=void 0===s?{}:s,c=a.adOption,u=void 0===c?{}:c,h=d.placementId,p=void 0===h?\"\":h,f=l.deeplink,v=void 0===f?\"\":f,m=l.oid,_=l.click_u,g=void 0===_?\"\":_,y=l.link_type,I=l.pkg,b=void 0===I?\"\":I;if(v)return this.handleNotice(\"dp_start\"),void r.hasInstalled({package:b,success:function(t){if(t.result){var i,r,a;e.handleNotice(\"app_install\"),n.push({uri:v}),e.onHideCallback=e.subscribeAppHideCallback.bind(e),e.onShowCallback=e.handleDeepLinkFailed.bind(e);var o={once:!0};null==e||null===(i=e.$app)||void 0===i||null===(i=i.$def)||void 0===i||null===(i=i.topon_sdk)||void 0===i||null===(i=i.event)||void 0===i||null===(i=i.deeplink)||void 0===i||i.subscribe(\"app-on-hide\",e.onHideCallback,o),null==e||null===(r=e.$app)||void 0===r||null===(r=r.$def)||void 0===r||null===(r=r.topon_sdk)||void 0===r||null===(r=r.event)||void 0===r||null===(r=r.deeplink)||void 0===r||r.subscribe(\"app-on-show\",e.onShowCallback,o),\"vivo\"==(null==e||null===(a=e.deviceInfoCache)||void 0===a||null===(a=a.brand)||void 0===a?void 0:a.toLowerCase())&&(e.failTimeId&&clearTimeout(e.failTimeId),e.failTimeId=setTimeout((function(){e.noticeSucceed||e.handleDeepLinkFailed()}),3e3))}else{e.handleNotice(\"app_uninstall\"),e.handleNotice(\"dp_uninst_fail\");var d={key:\"DEEPLINK_RESULT\",unitid:p,requestid:u._request_id,msg:\"\"+m,msg1:\"2\",msg2:\"\"+g,msg3:\"0\",msg4:\"1\",msg7:\"0\"};Va.call(e,d),n.push({uri:\"TopOn/AdLanding\",params:{url:g}})}},fail:function(t,i){e.handleNotice(\"dp_uninst_fail\");var r={key:\"DEEPLINK_RESULT\",unitid:p,requestid:u._request_id,msg:\"\"+m,msg1:\"2\",msg2:\"\"+g,msg3:\"0\",msg4:\"1\",msg7:\"0\"};Va.call(e,r),n.push({uri:\"TopOn/AdLanding\",params:{url:g}})}});2===y&&n.push({uri:g}),3===y&&n.push({uri:\"TopOn/AdLanding\",params:{url:g}})},adClose:function(t){this.displayed=!1,this.adDestroy=!0,sd.call(this,{name:\"adClose\"}),this.validityTimeId&&clearTimeout(this.validityTimeId)},adError:function(t){var i=(this||{}).adOption,n=void 0===i?{}:i,r=n._request_id+\"/\"+n._unit_id;if(this.lockAdError!==r){this.lockAdError=r,this.ready=!1;var a=e(e({},t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code});delete a.errCode,delete a.errMsg,sd.call(this,{name:\"adError\",params:a}),cd.call(this)}},adAppear:(pd=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=(e=this||{}).adOption,r=void 0===n?{}:n,a=e.adExtra,o=void 0===a?{}:a,d=r._request_id+\"/\"+r._unit_id,this.lockAdAppear!==d){t.next=4;break}return t.abrupt(\"return\");case 4:this.lockAdAppear=d,bo.call(this,o.placementId,{}),this.isAdExposureValid(),this.reportBidWinDa();case 8:case\"end\":return t.stop()}}),t,this)}))),function(){return pd.apply(this,arguments)}),reportBidWinDa:function(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=void 0===n?{}:n,a=t.currentAd,o=void 0===a?{}:a,d=r.placementId,s=r.trafficGroupId,l=r.segmentId,c=r.asId,u=r.nwFirmId,h=r.ecpm,p=r.bidTk,f={key:\"BID_WIN\",unitid:d,requestid:i._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(i._unit_id),msg2:\"\",msg3:\"\",msg4:\"\"+o.dsp_id,msg5:\"\"+o.oid,msg6:\"1\",msg7:p.tpBidId,msg8:\"\"+h,msg9:\"\"};Va.call(this,f)},isAdExposureValid:(hd=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=(n=this||{}).adExtra,a=void 0===r?{}:r,o=n.currentAd,d=void 0===o?{}:o,s=Date.now(),t.next=4,this.getBoundingClientRect();case 4:if(l=t.sent,this.clientRect=l,c=[1,3].includes(a.format)?0:100,null!=d&&null!==(e=d.ctrl)&&void 0!==e&&e.shm_t&&(c=d.ctrl.shm_t),u=c,h=F.call(this,l,this.deviceInfoCache),p=Date.now(),c>(f=p-s)&&(u=c-f),c<f&&(u=0),h>.02){t.next=20;break}return console.error(\"ADX广告无效展示\"),_={ratio:h,clientRect:l,deviceInfo:{screenWidth:null===(v=this.deviceInfoCache)||void 0===v?void 0:v.screenWidth,screenHeight:null===(m=this.deviceInfoCache)||void 0===m?void 0:m.screenHeight}},this.reportInvalidImpressionDa(_),t.abrupt(\"return\");case 20:this.validityTimeId&&clearTimeout(this.validityTimeId),this.validityTimeId=setTimeout((function(){g.adDestroy?console.error(\"ADX广告无效展示\"):(g.adShow(),g.handleNotice(\"nurl\"),sd.call(g,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}}),g.handleNotice(\"imp\"),g.handleNotice(\"burl\"))}),u);case 22:case\"end\":return t.stop()}}),t,this)}))),function(){return hd.apply(this,arguments)}),handleNotice:function(t){var e,i=(this.currentAd||{}).tk,n=void 0===i?{}:i;if(n[t]&&null!==(e=n[t])&&void 0!==e&&e.length){var r=this.getMacroData();ko.call(this,n[t],r)}},adTouchStart:function(t){var i=t.timestamp||Date.now(),n=t.detail.touches[0]||{};this.startPoint=e(e({},n),{},{timestamp:i})},adTouchMove:function(t){},adTouchEnd:function(t){var i=t.timestamp||Date.now(),n=t.detail.changedTouches[0]||{};this.endPoint=e(e({},n),{},{timestamp:i})},getBoundingClientRect:function(){var t=this.$element(\"top-on-adx-container-\".concat(this.adOption._unit_id));return t?new Promise((function(e,i){t.getBoundingClientRect({success:function(t){return e(t)},fail:function(){return e({})}})})):{}},getMacroData:function(){var t,e,i,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this.clientRect,y=this.startPoint,I=void 0===y?{}:y,b=this.endPoint,k=void 0===b?{}:b,w=this.currentAd,x=void 0===w?{}:w,S={down_x:null!==(t=null==I?void 0:I.clientX)&&void 0!==t?t:\"-999\",down_y:null!==(e=null==I?void 0:I.clientY)&&void 0!==e?e:\"-999\",up_x:null!==(i=null==k?void 0:k.clientX)&&void 0!==i?i:\"-999\",up_y:null!==(n=null==k?void 0:k.clientY)&&void 0!==n?n:\"-999\"},T={down_x:null!==(r=null==I?void 0:I.offsetX)&&void 0!==r?r:\"-999\",down_y:null!==(a=null==I?void 0:I.offsetY)&&void 0!==a?a:\"-999\",up_x:null!==(o=null==k?void 0:k.offsetX)&&void 0!==o?o:\"-999\",up_y:null!==(d=null==k?void 0:k.offsetY)&&void 0!==d?d:\"-999\"};return{\"{__WIDTH__}\":null!==(s=null==g?void 0:g.width)&&void 0!==s?s:\"\",\"{__HEIGHT__}\":null!==(l=null==g?void 0:g.height)&&void 0!==l?l:\"\",\"{__DOWN_X__}\":null!==(c=null==I?void 0:I.clientX)&&void 0!==c?c:\"\",\"{__DOWN_Y__}\":null!==(u=null==I?void 0:I.clientY)&&void 0!==u?u:\"\",\"{__UP_X__}\":null!==(h=null==k?void 0:k.clientX)&&void 0!==h?h:\"\",\"{__UP_Y__}\":null!==(p=null==k?void 0:k.clientY)&&void 0!==p?p:\"\",\"{__RE_DOWN_X__}\":null!==(f=null==I?void 0:I.offsetX)&&void 0!==f?f:\"-999\",\"{__RE_DOWN_Y__}\":null!==(v=null==I?void 0:I.offsetY)&&void 0!==v?v:\"-999\",\"{__RE_UP_X__}\":null!==(m=null==k?void 0:k.offsetX)&&void 0!==m?m:\"-999\",\"{__RE_UP_Y__}\":null!==(_=null==k?void 0:k.offsetY)&&void 0!==_?_:\"-999\",\"{__TS__}\":I.timestamp/1e3,\"{__TS_MSEC__}\":I.timestamp,\"{__END_TS__}\":k.timestamp/1e3,\"{__END_TS_MSEC__}\":k.timestamp,\"{ABSOLUTE_COORD}\":S,\"{RELATIVE_COORD}\":T,\"{__DPLINK_TYPE__}\":x.deeplink?1:2}},handleDeepLinkSucceed:function(t){var e;this.handleNotice(\"dp_succ\"),this.noticeSucceed=!0,this.failTimeId&&clearTimeout(this.failTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"1\",msg4:\"0\",msg7:\"0\"};Va.call(this,p)},handleDeepLinkFailed:function(t){var e;this.handleNotice(\"dp_inst_fail\"),this.noticeFailed=!0,this.succeedTimeId&&clearTimeout(this.succeedTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-hide\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"0\",msg4:\"0\",msg7:\"0\"};Va.call(this,p)},subscribeAppHideCallback:function(){var t,e=this,i=null==this||null===(t=this.deviceInfoCache)||void 0===t||null===(t=t.brand)||void 0===t?void 0:t.toLowerCase();[\"oppo\",\"xiaomi\",\"redmi\"].includes(i)?(this.succeedTimeId&&clearTimeout(this.succeedTimeId),this.succeedTimeId=setTimeout((function(){e.noticeFailed||e.handleDeepLinkSucceed()}),1e3)):this.handleDeepLinkSucceed()},reportInvalidImpressionDa:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=this||{},n=i.adOption,r=void 0===n?{}:n,a=i.adExtra,o=void 0===a?{}:a,d=i.currentAd,s=void 0===d?{}:d,l=o.placementId,c=o.trafficGroupId,u=o.segmentId,h=o.asId;o.nwFirmId,o.ecpm,o.bidTk;var p={key:\"ADX_IMP_INVALID\",unitid:l,requestid:r._request_id,groupid:u,traffic_group_id:c,asid:h,msg:s.dsp_id,msg1:String(r._unit_id),msg2:\"\"+s.oid,msg3:\"2\",msg4:null!==(t=null==e?void 0:e.msg4)&&void 0!==t?t:\"2\",msg5:JSON.stringify(e)};Va.call(this,p)}},md={containerStyle:{flexDirection:\"column\",width:\"100%\",height:\"100%\"},contentStyle:{flexDirection:\"column\",width:\"100%\",height:\"100%\",position:\"relative\",justifyContent:\"flex-end\"},imgStyle:{justifyContent:\"center\",width:\"100%\",height:\"100%\",alignItems:\"center\"},imgPropertiesStyle:{width:\"100%\",objectFit:\"fill\"},iconStyle:{width:\"80px\",height:\"80px\",marginRight:\"20px\"},iconPropertiesStyle:{width:\"100%\",borderRadius:\"10px\",height:\"100%\"},videoStyle:{justifyContent:\"center\",width:\"100%\",height:\"100%\",alignItems:\"center\"},videoPropertiesStyle:{width:\"100%\",objectFit:\"cover\",height:\"100%\"},downloadStyle:{container:{width:\"100%\"},panel:{width:\"100%\",flexDirection:\"column\",padding:\"20px\",filter:\"blur(180px)\",background:{values:[{type:\"linearGradient\",directions:[\"180deg\"],values:[\"rgba(0,0,0,0)\",\"rgba(0,0,0,0.8)\"]}]}},title:{flexDirection:\"column\"},titleText:{lineHeight:\"38px\",fontSize:\"36px\",fontWeight:700,color:\"rgba(255, 255, 255, 1)\"},desc:{fontSize:\"24px\",lineHeight:\"26px\",marginTop:\"4px\",color:\"rgba(255, 255, 255, 1)\"}},buttonStyle:{width:\"100%\",paddingTop:\"20px\",paddingRight:\"20px\",paddingBottom:\"20px\",paddingLeft:\"20px\",borderRadius:\"24px\",backgroundColor:\"#1D6AFF\",textAlign:\"center\",fontSize:\"28px\",color:\"#FFFFFF\",marginTop:\"30px\"},closeStyle:{closeContainer:{position:\"absolute\",right:\"30px\",top:\"60px\",zIndex:\"100\",alignItems:\"center\",justifyContent:\"center\",transform:\"translateY(0px)\"},closeClickArea:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"transparent\"},closeBtn:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"rgba(0, 0, 0, .4)\"}},logoStyle:{logoContainer:{height:\"30px\",alignItems:\"center\",alignSelf:\"flex-end\",justifyContent:\"flex-end\",marginBottom:\"4px\",backgroundColor:\"rgba(153, 153, 153, 0.8)\"},logoImg:{width:\"70px\",marginRight:\"2px\",display:\"flex\"}},factorStyle:{factorContainer:{justifyContent:\"space-between\",marginTop:\"20px\"},infoText:{fontSize:\"22px\",color:\"#A0A0A0\",marginRight:\"10px\"}},countdownStyle:{position:\"absolute\",left:\"30px\",top:\"60px\",width:\"160px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"24px\",zIndex:\"100\",color:\"#FFFFFF\",backgroundColor:\"rgba(0, 0, 0, .4)\",fontSize:\"20px\"},feedbackStyle:{containerStyle:{position:\"absolute\",right:\"100px\",top:\"60px\",height:\"48px\",paddingLeft:\"16px\",paddingRight:\"16px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"24px\",zIndex:\"100\",color:\"#FFFFFF\",backgroundColor:\"rgba(0, 0, 0, .4)\",fontSize:\"20px\"},iconStyle:{fontSize:\"20px\",color:\"#000000\",width:\"24px\",height:\"24px\",marginRight:\"4px\",borderRadius:\"50%\",alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(255, 255, 255, 1)\"}}},_d={adProxyEvent:{onInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(r=P(this.adConfig.filter,tt.ADX,this.adOption._unit_id))){t.next=4;break}return this.adError({code:r,msg:\"该广告源被过滤\"}),t.abrupt(\"return\");case 4:if(a=U.call(this,this.adConfig.style),o=U.call(this,md),d=$.call(this,o,a),this.adStyle=d,ld.call(this),this.handleAdInit(),v(null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.store)||void 0===e||null===(e=e.device)||void 0===e?void 0:e.info)){t.next=14;break}t.t0=null==this||null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.store)||void 0===n||null===(n=n.device)||void 0===n?void 0:n.info,t.next=20;break;case 14:return t.next=16,H.getInfo();case 16:if(t.t1=t.sent,t.t1){t.next=19;break}t.t1={};case 19:t.t0=t.t1;case 20:s=t.t0,this.deviceInfoCache=s;case 22:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e=Io.call(this,this.adExtra.placementId),i=null!==(t=null==e?void 0:e.offer_data)&&void 0!==t?t:{};sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.adLoad(i)},show:function(){var t;if(this.ready){var e=this||{},i=e.currentAd,n=void 0===i?{}:i,r=e.adStyle,a=void 0===r?{}:r,o=e.adExtra,d=void 0===o?{}:o,s=e.adOption,l=void 0===s?{}:s,c=d.placementId,u=void 0===c?\"\":c,h=S().router,p=Io.call(this,u);if(Date.now()>p._expirationTime)return this.adError({code:1101,msg:\"广告已过期，请重新获取广告或刷新广告\"}),void bo.call(this,u,{});var f=\"\".concat(u,\"/\").concat(l._unit_id),v={adData:n,adStyle:a,option:{_request_id:l._request_id,_countdown:(null==n||null===(t=n.ctrl)||void 0===t?void 0:t.or_img_t)/1e3||0}};N.call(this,\"adxRewardedVideo\",f,v),h.push({uri:\"TopOn/AdReward\",params:{adUnitId:l._unit_id,plId:d.placementId}}),this.adShow()}},adLoad:function(t){var e,i,n;if(null!=t&&t.seatbid&&null!=t&&null!==(e=t.seatbid)&&void 0!==e&&e.length)if(null!=t&&null!==(i=t.seatbid[this.adListIndexInUse])&&void 0!==i&&i.full_u)this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(n=null==t?void 0:t.seatbid)&&void 0!==n?n:[],sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this),this.createRewardedVideo(),this.updateCloseStyle();else{this.adError({code:9008,msg:\"ADX广告无填充[素材缺失]\"})}else{this.adError({code:2e3,msg:\"ADX广告无填充\"})}},updateCloseStyle:function(){var t,e,i=null!==(t=null===(e=this.currentAd)||void 0===e||null===(e=e.ctrl)||void 0===e?void 0:e.ft_cl_sz)&&void 0!==t?t:1;if(1!==i){var n={1:1,2:1.5,3:.75,4:.5},r=this.adStyle.closeStyle.closeBtn.width.match(/\\d+/g)[0];if(this.adStyle.closeStyle.closeClickArea.width=r*n[i]+\"px\",this.adStyle.closeStyle.closeClickArea.height=r*n[i]+\"px\",n[i]>1){var a=r*n[i]/2-r/2+\"px\";this.adStyle.closeStyle.closeContainer.transform=\"translateY(-\".concat(a,\")\")}}},createRewardedVideo:function(){this.$app.$def.topon_sdk.rewardedVideo||(this.$app.$def.topon_sdk.rewardedVideo=Object.create(null));var t=this.adExtra,e=this.adOption,i=\"\".concat(t.placementId,\"/\").concat(e._unit_id);this.$app.$def.topon_sdk.rewardedVideo[i]||(this.$app.$def.topon_sdk.rewardedVideo[i]=Object.create(null));var n=this;this.$app.$def.topon_sdk.rewardedVideo[i].adClick=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adClick).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adClose=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adClose).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adError=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adError).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adImpression=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adImpression).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adTouch=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adTouch).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adFeedback=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adFeedback).call.apply(t,[n].concat(i))}},destroyRewardedVideo:function(){var t;if(this.$app&&null!==(t=this.$app)&&void 0!==t&&t.$def){var e=this||{},i=e.adExtra,n=void 0===i?{}:i,r=e.adOption,a=void 0===r?{}:r,o=\"\".concat(n.placementId,\"/\").concat(a._unit_id);this.$app.$def.topon_sdk.rewardedVideo[o]=null,delete this.$app.$def.topon_sdk.rewardedVideo[o]}},adShow:function(t){var e;sd.call(this,{name:\"adShow\"}),bo.call(this,null===(e=this.adExtra)||void 0===e?void 0:e.placementId,{})},adClick:function(t,e){var i=this;sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}),this.handleNotice(\"click\"),this.noticeSucceed=!1,this.noticeFailed=!1,e&&e();var n=S(),r=n.router,a=n.pkg,o=this||{},d=o.adExtra,s=void 0===d?{}:d,l=o.currentAd,c=void 0===l?{}:l,u=o.adOption,h=void 0===u?{}:u,p=s.placementId,f=void 0===p?\"\":p,v=c.deeplink,m=void 0===v?\"\":v,_=c.oid,g=c.click_u,y=void 0===g?\"\":g,I=c.link_type,b=c.pkg,k=void 0===b?\"\":b;if(m)return this.handleNotice(\"dp_start\"),void a.hasInstalled({package:k,success:function(t){if(t.result){var e,n,a;i.handleNotice(\"app_install\"),r.push({uri:m}),i.onHideCallback=i.subscribeAppHideCallback.bind(i),i.onShowCallback=i.handleDeepLinkFailed.bind(i);var o={once:!0};null==i||null===(e=i.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.subscribe(\"app-on-hide\",i.onHideCallback,o),null==i||null===(n=i.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.event)||void 0===n||null===(n=n.deeplink)||void 0===n||n.subscribe(\"app-on-show\",i.onShowCallback,o),\"vivo\"==(null==i||null===(a=i.deviceInfoCache)||void 0===a||null===(a=a.brand)||void 0===a?void 0:a.toLowerCase())&&(i.failTimeId&&clearTimeout(i.failTimeId),i.failTimeId=setTimeout((function(){i.noticeSucceed||i.handleDeepLinkFailed()}),3e3))}else{i.handleNotice(\"app_uninstall\"),i.handleNotice(\"dp_uninst_fail\");var d={key:\"DEEPLINK_RESULT\",unitid:f,requestid:h._request_id,msg:\"\"+_,msg1:\"2\",msg2:\"\"+y,msg3:\"0\",msg4:\"1\",msg7:\"1\"};Va.call(i,d),r.push({uri:\"TopOn/AdLanding\",params:{url:y}})}},fail:function(t,e){i.handleNotice(\"dp_uninst_fail\");var n={key:\"DEEPLINK_RESULT\",unitid:f,requestid:h._request_id,msg:\"\"+_,msg1:\"2\",msg2:\"\"+y,msg3:\"0\",msg4:\"1\",msg7:\"1\"};Va.call(i,n),r.push({uri:\"TopOn/AdLanding\",params:{url:y}})}});2===I&&r.push({uri:y}),3===I&&r.push({uri:\"TopOn/AdLanding\",params:{url:y}})},adClose:function(t){var e;this.adDestroy=!0;var i=null!==(e=null==t?void 0:t.reward)&&void 0!==e&&e;sd.call(this,{name:\"adClose\",params:{reward:i}}),i&&sd.call(this,{name:\"adReward\",params:{reward:i}}),this.validityTimeId&&clearTimeout(this.validityTimeId),this.destroyRewardedVideo()},adError:function(t){var i=(this||{}).adOption,n=void 0===i?{}:i,r=n._request_id+\"/\"+n._unit_id;if(this.lockAdError!==r){this.lockAdError=r,this.ready=!1;var a=e(e({},t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code});delete a.errCode,delete a.errMsg,sd.call(this,{name:\"adError\",params:a}),cd.call(this)}},adImpression:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.clientRect,i=t.diff,n=void 0===i?0:i;this.clientRect=e,this.isAdExposureValid(e,n),this.reportBidWinDa()},reportBidWinDa:function(){var t=this||{},e=t.adExtra,i=void 0===e?{}:e,n=t.currentAd,r=void 0===n?{}:n,a=t.adOption,o=void 0===a?{}:a,d=i.placementId,s=i.trafficGroupId,l=i.segmentId,c=i.asId,u=i.nwFirmId,h=i.ecpm,p=i.bidTk,f={key:\"BID_WIN\",unitid:d,requestid:o._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(o._unit_id),msg2:\"\",msg3:\"\",msg4:\"\"+r.dsp_id,msg5:\"\"+r.oid,msg6:\"1\",msg7:p.tpBidId,msg8:\"\"+h,msg9:\"\"};Va.call(this,f)},isAdExposureValid:function(t,e){var i,n=this,r=this||{},a=r.adExtra,o=void 0===a?{}:a,d=r.currentAd,s=void 0===d?{}:d,l=Date.now(),c=[1,3].includes(o.format)?0:100;null!=s&&null!==(i=s.ctrl)&&void 0!==i&&i.shm_t&&(c=s.ctrl.shm_t);var u=c,h=F.call(this,t,this.deviceInfoCache),p=Date.now()-l+e;if(c>p&&(u=c-p),c<p&&(u=0),h>.02)this.validityTimeId&&clearTimeout(this.validityTimeId),this.validityTimeId=setTimeout((function(){n.adDestroy?console.error(\"ADX广告无效展示\"):(n.handleNotice(\"nurl\"),sd.call(n,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}}),n.handleNotice(\"imp\"),n.handleNotice(\"burl\"))}),u);else{var f,v;console.error(\"ADX广告无效展示\");var m={ratio:h,clientRect:t,deviceInfo:{screenWidth:null===(f=this.deviceInfoCache)||void 0===f?void 0:f.screenWidth,screenHeight:null===(v=this.deviceInfoCache)||void 0===v?void 0:v.screenHeight}};this.reportInvalidImpressionDa(m)}},handleNotice:function(t){var e,i=(this.currentAd||{}).tk,n=void 0===i?{}:i;if(n[t]&&null!==(e=n[t])&&void 0!==e&&e.length){var r=this.getMacroData();ko.call(this,n[t],r)}},getMacroData:function(){var t,e,i,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this.clientRect,y=this.startPoint,I=void 0===y?{}:y,b=this.endPoint,k=void 0===b?{}:b,w=this.currentAd,x=void 0===w?{}:w,S={down_x:null!==(t=null==I?void 0:I.clientX)&&void 0!==t?t:\"-999\",down_y:null!==(e=null==I?void 0:I.clientY)&&void 0!==e?e:\"-999\",up_x:null!==(i=null==k?void 0:k.clientX)&&void 0!==i?i:\"-999\",up_y:null!==(n=null==k?void 0:k.clientY)&&void 0!==n?n:\"-999\"},T={down_x:null!==(r=null==I?void 0:I.offsetX)&&void 0!==r?r:\"-999\",down_y:null!==(a=null==I?void 0:I.offsetY)&&void 0!==a?a:\"-999\",up_x:null!==(o=null==k?void 0:k.offsetX)&&void 0!==o?o:\"-999\",up_y:null!==(d=null==k?void 0:k.offsetY)&&void 0!==d?d:\"-999\"};return{\"{__WIDTH__}\":null!==(s=null==g?void 0:g.width)&&void 0!==s?s:\"\",\"{__HEIGHT__}\":null!==(l=null==g?void 0:g.height)&&void 0!==l?l:\"\",\"{__DOWN_X__}\":null!==(c=null==I?void 0:I.clientX)&&void 0!==c?c:\"\",\"{__DOWN_Y__}\":null!==(u=null==I?void 0:I.clientY)&&void 0!==u?u:\"\",\"{__UP_X__}\":null!==(h=null==k?void 0:k.clientX)&&void 0!==h?h:\"\",\"{__UP_Y__}\":null!==(p=null==k?void 0:k.clientY)&&void 0!==p?p:\"\",\"{__RE_DOWN_X__}\":null!==(f=null==I?void 0:I.offsetX)&&void 0!==f?f:\"-999\",\"{__RE_DOWN_Y__}\":null!==(v=null==I?void 0:I.offsetY)&&void 0!==v?v:\"-999\",\"{__RE_UP_X__}\":null!==(m=null==k?void 0:k.offsetX)&&void 0!==m?m:\"-999\",\"{__RE_UP_Y__}\":null!==(_=null==k?void 0:k.offsetY)&&void 0!==_?_:\"-999\",\"{__TS__}\":I.timestamp/1e3,\"{__TS_MSEC__}\":I.timestamp,\"{__END_TS__}\":k.timestamp/1e3,\"{__END_TS_MSEC__}\":k.timestamp,\"{ABSOLUTE_COORD}\":S,\"{RELATIVE_COORD}\":T,\"{__DPLINK_TYPE__}\":x.deeplink?1:2}},handleDeepLinkSucceed:function(t){var e;this.handleNotice(\"dp_succ\"),this.noticeSucceed=!0,this.failTimeId&&clearTimeout(this.failTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"1\",msg4:\"0\",msg7:\"1\"};Va.call(this,p)},handleDeepLinkFailed:function(t){var e;this.handleNotice(\"dp_inst_fail\"),this.noticeFailed=!0,this.succeedTimeId&&clearTimeout(this.succeedTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-hide\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"0\",msg4:\"0\",msg7:\"1\"};Va.call(this,p)},adTouch:function(t){var e=t.type,i=t.data;this[\"\".concat(e,\"Point\")]=i},adFeedback:function(t){var i,n,r,a,o,d,s,l,c=this||{},u=c.adExtra,h=void 0===u?{}:u,p=c.adOption,f=void 0===p?{}:p,v=c.currentAd,m=void 0===v?{}:v,_=e(e({key:\"AD_FEEDBACK\",unitid:h.placementId,requestid:f._request_id,msg:\"66\",msg1:\"\"+f._unit_id,msg2:\"2\"},t),{},{msg5:null!==(i=null==m?void 0:m.oid)&&void 0!==i?i:\"\",msg6:null!==(n=null==m?void 0:m.c_id)&&void 0!==n?n:\"\",msg7:null!==(r=null==m?void 0:m.pkg)&&void 0!==r?r:\"\",msg8:null!==(a=null==m?void 0:m.title)&&void 0!==a?a:\"\",msg9:null!==(o=null==m?void 0:m.desc)&&void 0!==o?o:\"\",msg10:null!==(d=null==m?void 0:m.icon_u)&&void 0!==d?d:\"\",msg11:null!==(s=null==m?void 0:m.full_u)&&void 0!==s?s:\"\",msg12:null!==(l=null==m?void 0:m.video_u)&&void 0!==l?l:\"\",msg13:JSON.stringify(null==m?void 0:m.img_list)});Va.call(this,_)},subscribeAppHideCallback:function(){var t,e=this,i=null==this||null===(t=this.deviceInfoCache)||void 0===t||null===(t=t.brand)||void 0===t?void 0:t.toLowerCase();[\"oppo\",\"xiaomi\",\"redmi\"].includes(i)?(this.succeedTimeId&&clearTimeout(this.succeedTimeId),this.succeedTimeId=setTimeout((function(){e.noticeFailed||e.handleDeepLinkSucceed()}),1e3)):this.handleDeepLinkSucceed()},reportInvalidImpressionDa:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=this||{},n=i.adOption,r=void 0===n?{}:n,a=i.adExtra,o=void 0===a?{}:a,d=i.currentAd,s=void 0===d?{}:d,l=o.placementId,c=o.trafficGroupId,u=o.segmentId,h=o.asId;o.nwFirmId,o.ecpm,o.bidTk;var p={key:\"ADX_IMP_INVALID\",unitid:l,requestid:r._request_id,groupid:u,traffic_group_id:c,asid:h,msg:s.dsp_id,msg1:String(r._unit_id),msg2:\"\"+s.oid,msg3:\"2\",msg4:null!==(t=null==e?void 0:e.msg4)&&void 0!==t?t:\"2\",msg5:JSON.stringify(e)};Va.call(this,p)}},gd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.isShow=!0,this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},show:function(){this.ready&&(this.displayed=!0)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){this.lockAdClicked=!0,sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adDownloadClick:function(t){this.lockAdClicked||(sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}))},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},yd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e=this;try{this.ad=this.$app.$def.union_quick_app_sdk.createRewardedVideoAd({apid:this.adOption.placement_id,appid:this.adOption.app_id}),this.ad.onLoad((function(t){e.adLoad(t)})),this.ad.onClose((function(t){e.adClose(t)})),this.ad.onClick&&this.ad.onClick((function(t){e.adClick(t)})),this.ad.onError((function(t){e.ready=!1,e.adError(t)}))}catch(t){this.adError({code:2e3,msg:\"createRewardedVideoAd广告服务错误\"})}sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,null===(t=this.ad)||void 0===t||t.load()},show:function(){this.ad&&this.ready&&(this.ad.show(),this.adShow(),this.ready=!1)},adLoad:function(t){this.lockAdLoad||(this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this))},adShow:function(t){this.lockAdLoad=!0,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){var e,i,n=null!==(e=null==t||null===(i=t.data)||void 0===i?void 0:i.reward)&&void 0!==e&&e;sd.call(this,{name:\"adClose\",params:{reward:n}}),n&&sd.call(this,{name:\"adReward\",params:t})},adError:function(t){if(!this.lockAdLoad){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}}},Id={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){this.isShow=(new Date).getTime(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},bd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.isShow=!0,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},adLoad:function(t){this.ready=!0,this.lockAdClose=!1,this.showClassName=\"union-ad-wraper--show\",sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){this.lockAdClose||sd.call(this,{name:\"adClose\"})},adError:function(t){this.lockAdClose=!0,this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}};function kd(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=void 0===n?{}:n,a=r.placementId,o=r.trafficGroupId,d=r.segmentId,s=r.asId,l=r.nwFirmId,c=r.ecpm,u={key:\"BID_WIN\",unitid:a,requestid:i._request_id,groupid:d,traffic_group_id:o,asid:s,msg:String(l),msg1:String(i._unit_id),msg2:\"\",msg3:\"\",msg4:\"\",msg5:\"\",msg6:\"2\",msg7:\"\",msg8:\"\"+c,msg9:\"\"};Va.call(this,u)}function wd(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=\"\".concat((void 0===n?{}:n).placementId,\"/\").concat(i._unit_id);N.call(this,\"unit\",r,{})}function xd(){var t;null!=this&&this.adOption&&null!=this&&this.adExtra&&\"1\"===(null==this||null===(t=this.adOption)||void 0===t?void 0:t._type)&&(kd.call(this),wd.call(this))}var Sd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.loadFeedAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=\"\".concat((void 0===n?{}:n).placementId,\"/\").concat(i._unit_id),a=j.call(this,\"unit\",r)||{},o={adList:a.offer?[a.offer]:[]};this.adLoad(o)},loadFeedAd:function(){var t,e=this,i=this.adOption,n=i._nw_req_num,r=i.unit_id,a=i.allow_recommend,o=null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk;v(o)?this.adError({code:2e3,msg:\"找不到优量汇SDK\"}):o.onYlhReady((function(){var t={count:n&&n<=10?n:1,placementId:r,recommendation:\"1\"===a?2:1};o.loadFeedAd(t).then((function(t){var i={adList:t||[]};t.code&&t.code>0?e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")}):e.adLoad(i)})).catch((function(t){e.adError({code:2e3,msg:(null==t?void 0:t.message)||\"\"})}))}))},getAd:function(){if(!this.ready)return null;var t=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,t||(this.ready=!1),xd.call(this),t},adLoad:function(t){var e,i;this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(e=null==t?void 0:t.adList)&&void 0!==e?e:[],\"1\"!==(null==this||null===(i=this.adOption)||void 0===i?void 0:i._type)&&(this.adList=this.sortByPrice(this.adList)),sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!0}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)},reportShow:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},reportClick:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},sortByPrice:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return(null==t?void 0:t.length)<=1||t.sort((function(t,e){return e.getECPM()-t.getECPM()})),t}},Td={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.createRewardVideoAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t,e,i=this,n=this||{},r=n.adOption,a=void 0===r?{}:r,o=n.adExtra,d=\"\".concat((void 0===o?{}:o).placementId,\"/\").concat(a._unit_id),s=j.call(this,\"unit\",d)||{},l=null!==(t=null==s?void 0:s.ad)&&void 0!==t?t:null,c=null!==(e=null==s?void 0:s.offer)&&void 0!==e?e:{};l&&(this.adLoad(c),this.bidOffer=c,this.ad=l,this.ad.onExpose((function(t){i.adShow()})),this.ad.onClick((function(){i.adClick()})),this.ad.onVideoFinish((function(){i.adVideoFinish()})),this.ad.onReward((function(){i.adReward()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})))},createRewardVideoAd:function(){var t,e=this,i=this.adOption,n=i.unit_id,r=i.video_muted;if(v(null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk))this.adError({code:2e3,msg:\"找不到优量汇SDK\"});else try{var a={placementId:n,muted:\"1\"===r};this.ad=this.$app.$def.ylh_sdk.createRewardVideoAd(a),this.ad.onLoad((function(){e.adLoad()})),this.ad.onExpose((function(t){e.adShow()})),this.ad.onClick((function(){e.adClick()})),this.ad.onReward((function(){e.adReward()})),this.ad.onVideoFinish((function(){e.adVideoFinish()})),this.ad.onClose((function(){e.adClose()})),this.ad.onError((function(t){e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")})})),this.ad.load()}catch(t){this.adError({code:2e3,msg:t||\"\"})}},show:function(){this.ready&&(xd.call(this),this.ad.show(),this.ready=!1)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adVideoFinish:function(t){this.isVideoEnded=!0},adClose:function(t){sd.call(this,{name:\"adClose\"})},adReward:function(t){sd.call(this,{name:\"adReward\",params:{reward:!0}})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},Ad={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.createSplashAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t,e,i=this,n=this||{},r=n.adOption,a=void 0===r?{}:r,o=n.adExtra,d=\"\".concat((void 0===o?{}:o).placementId,\"/\").concat(a._unit_id),s=j.call(this,\"unit\",d)||{},l=null!==(t=null==s?void 0:s.ad)&&void 0!==t?t:null,c=null!==(e=null==s?void 0:s.offer)&&void 0!==e?e:{};l&&(this.adLoad(c),this.bidOffer=c,this.ad=l,this.ad.onExpose((function(t){i.adShow()})),this.ad.onClick((function(){i.adClick()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})))},createSplashAd:function(){var t,e=this,i=this.adOption.unit_id,n=this.adConfig.entry,r=void 0===n?\"\":n;v(null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk)?this.adError({code:2e3,msg:\"找不到优量汇SDK\"}):this.$app.$def.ylh_sdk.onYlhReady((function(){try{e.ad=e.$app.$def.ylh_sdk.createSplashAd({placementId:i,entry:r}),e.ad.onLoad((function(){e.adLoad()})),e.ad.onExpose((function(t){e.adShow()})),e.ad.onClick((function(){e.adClick()})),e.ad.onClose((function(){e.adClose()})),e.ad.onError((function(t){e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")})})),e.ad.load()}catch(t){e.adError({code:2e3,msg:t||\"\"})}}))},show:function(){this.ready&&(xd.call(this),this.ad.show(),this.ready=!1)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},Ed={main:{entry:td},web:{entry:id},views:{rewarde:ad},66:{native:vd,rewardedVideo:_d},56:{native:gd,rewardedVideo:yd,interstitial:Id,splash:bd},64:{native:Sd,rewardedVideo:Td,splash:Ad},60:{native:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=this,n=S().ad;this.provider=n.getProvider(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var r={adUnitId:this.adOption.ad_id},a=this.adExtra.channelId;a&&(r.channel=a),this.ad=n.createNativeAd(r),this.ad.onLoad((function(t){i.adLoad(t)})),this.ad.onError((function(t){i.adError(t)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createNativeAd广告服务错误\"})}if(!(Date.now()>new Date(\"2023/05/01\").getTime())){var o=this.adExtra,d=o.placementId,s=o.trafficGroupId,l=o.segmentId,c=o.asId,u=o.nwFirmId,h=this.$app.$def.topon_sdk.store,p=void 0===h?{}:h,f={key:\"AD_PROVIDER\",unitid:d,requestid:this.adOption._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==p||null===(t=p.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==p||null===(e=p.device)||void 0===e?void 0:e.info.model)};Va.call(this,f)}},getAd:function(){if(!this.ready)return null;var t=this.adListIndexInUse,e=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,this.currentIndexUse=t,e||(this.ready=!1),e},adLoad:function(t){this.ready=!0,this.adListIndexInUse=0,this.adList=t.adList,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!0}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\",ad:this.adList[this.currentIndexUse]||{}}}),cd.call(this)},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){sd.call(this,{name:\"adClick\"})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},reportShow:function(){var t;null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\",ad:this.adList[this.currentIndexUse]||{}}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\",ad:this.adList[this.currentIndexUse]||{}}}),this.ad.reportAdShow({adId:this.adList[this.currentIndexUse].adId}))},reportClick:function(t){var e;null!==(e=this.adList[this.currentIndexUse])&&void 0!==e&&e.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\",ad:this.adList[this.currentIndexUse]||{}}}),null!=t&&t.reportToProvider&&this.ad.reportAdClick({adId:this.adList[this.currentIndexUse].adId}))},getDownloadStatus:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getAppStatus({adId:this.adList[this.currentIndexUse].adId})},getDownloadProgress:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getDownloadProgress({adId:this.adList[this.currentIndexUse].adId})},subscribeDownloadStatus:function(t){this.ad.onStatusChanged(t)},unsubscribeDownloadStatus:function(){this.ad&&this.ready&&this.ad.offStatusChanged()},subscribeDownloadProgress:function(t){this.ad.onDownloadProgress(t)},unsubscribeDownloadProgress:function(){this.ad&&this.ready&&this.ad.offDownloadProgress()},showAppDetailPage:function(){var t;this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&this.ad.showAppDetailPage({adId:this.adList[this.currentIndexUse].adId})},getInstance:function(){return this.ad||null}},rewardedVideo:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=this,n=S().ad;this.provider=n.getProvider(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,this.showCalled=!1;try{var r={adUnitId:this.adOption.ad_id};this.ad=n.createRewardedVideoAd(r),this.ad.onLoad((function(t){i.adLoad()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createRewardedVideoAd广告服务错误\"})}if(!(Date.now()>new Date(\"2023/05/01\").getTime())){var a=this.adExtra,o=a.placementId,d=a.trafficGroupId,s=a.segmentId,l=a.asId,c=a.nwFirmId,u=this.$app.$def.topon_sdk.store,h=void 0===u?{}:u,p={key:\"AD_PROVIDER\",unitid:o,requestid:this.adOption._request_id,groupid:s,traffic_group_id:d,asid:l,msg:String(c),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==h||null===(t=h.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==h||null===(e=h.device)||void 0===e?void 0:e.info.model)};Va.call(this,p)}},show:function(){var t=this;this.ready&&(this.showCalled=!0,this.ad.show().then((function(e){t.adShow(e)})).catch((function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败\"};sd.call(t,{name:\"adError\",params:r})})),this.ready=!1)},adLoad:function(t){this.lockAdLoad||(this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this))},adShow:function(t){this.lockAdLoad=!0,this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){var e=t.isEnded;sd.call(this,{name:\"adClose\",params:{reward:e}}),e&&sd.call(this,{name:\"adReward\",params:t})},adError:function(t){this.ready=!1;var e=t.errMsg||t.msg,i=t.errCode||t.code,n={msg:e,code:i};this.showCalled&&(n.code=1101,n.msg=\"展示失败 real code: [\".concat(i,\"] real msg: [\").concat(e,\"]\")),delete n.errCode,delete n.errMsg,sd.call(this,{name:\"adError\",params:n}),cd.call(this)},getInstance:function(){return this.ad||null}},banner:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){var t;cd.call(this),this.removeAdEventListener(),null==this||null===(t=this.ad)||void 0===t||t.destroy()}},removeAdEventListener:function(){var t,e,i,n,r,a,o,d;null==this||null===(t=this.ad)||void 0===t||null===(e=t.offLoad)||void 0===e||e.call(t),null==this||null===(i=this.ad)||void 0===i||null===(n=i.offClose)||void 0===n||n.call(i),null==this||null===(r=this.ad)||void 0===r||null===(a=r.offError)||void 0===a||a.call(r),null==this||null===(o=this.ad)||void 0===o||null===(d=o.offResize)||void 0===d||d.call(o)},handleAdInit:function(){var t,e,i=this,n=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,this.ready=!1;try{var r,a={adUnitId:this.adOption.ad_id,style:{width:-1,height:-2,left:0,top:0}};t=a.style,(e=null===(r=this.adConfig)||void 0===r?void 0:r.style)&&!v(e)&&f(e)&&Object.assign(t,e),this.ad=n.createBannerAd(a),this.ad.onLoad((function(t){i.adLoad()})),this.ad.onClose((function(t){var e;i.adClose(t),i.removeAdEventListener(),null===(e=i.ad)||void 0===e||e.destroy()})),this.ad.onError((function(t){console.error(\"onError\",t),i.adError(t)}))}catch(t){this.adError({code:2e3,msg:\"createBannerAd广告服务失败\"})}this._show()},_show:function(){var t=this;this.ad&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),this.ad.show().then((function(){}),(function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败: \".concat(JSON.stringify(e))};sd.call(t,{name:\"adError\",params:r})})))},adLoad:function(t){this.lockAdLoad||(this.ready=!0,this.lockAdLoad=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this),B.call(this,this.adShow))},adShow:function(t){sd.call(this,{name:\"adShow\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\",params:t})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,delete e.subErrCode,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},hide:function(){this.ad&&this.ad.hide&&this.ad.hide()}},interstitial:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){var t;cd.call(this),this.removeAdEventListener(),null==this||null===(t=this.ad)||void 0===t||t.destroy()}},removeAdEventListener:function(){var t,e,i,n,r,a,o,d,s,l;null==this||null===(t=this.ad)||void 0===t||null===(e=t.offLoad)||void 0===e||e.call(t),null==this||null===(i=this.ad)||void 0===i||null===(n=i.offClose)||void 0===n||n.call(i),null==this||null===(r=this.ad)||void 0===r||null===(a=r.offError)||void 0===a||a.call(r),null==this||null===(o=this.ad)||void 0===o||null===(d=o.offResize)||void 0===d||d.call(o),null==this||null===(s=this.ad)||void 0===s||null===(l=s.offClick)||void 0===l||l.call(s)},handleAdInit:function(){var t=this,e=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var i,n={adUnitId:this.adOption.ad_id};this.ad=e.createInterstitialAd(n),this.ad.onLoad((function(e){t.adLoad()})),this.ad.onClose((function(e){var i;t.adClose(e),t.removeAdEventListener(),null===(i=t.ad)||void 0===i||i.destroy()})),this.ad.onError((function(e){t.adError(e)})),null!=this&&null!==(i=this.ad)&&void 0!==i&&i.onClick&&this.ad.onClick((function(e){t.adClick(e)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createInterstitialAd广告服务失败\"})}},show:function(){var t=this;this.ad&&this.ready&&this.ad.show().then((function(){t.adShow()}),(function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败: \".concat(JSON.stringify(e))};sd.call(t,{name:\"adError\",params:r})}))},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\",params:t})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,delete e.subErrCode,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},getInstance:function(){return this.ad||null}}},62:{native:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI_AGD_PRO,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=S().ad;if(this.provider=i.getProvider(),this.createNativeAd(),!(Date.now()>new Date(\"2023/05/01\").getTime())){var n=this.adExtra,r=n.placementId,a=n.trafficGroupId,o=n.segmentId,d=n.asId,s=n.nwFirmId,l=this.$app.$def.topon_sdk.store,c=void 0===l?{}:l,u={key:\"AD_PROVIDER\",unitid:r,requestid:this.adOption._request_id,groupid:o,traffic_group_id:a,asid:d,msg:String(s),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==c||null===(t=c.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==c||null===(e=c.device)||void 0===e?void 0:e.info.model)};Va.call(this,u)}},createNativeAd:function(){var t=this,e=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var i={adUnitId:this.adOption.ad_id},n=this.adExtra.channelId;n&&(i.channel=n),this.ad=e.createNativeAd(i),this.ad.onLoad((function(e){t.adLoad(e)})),this.ad.onError((function(e){t.adError(e)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createNativeAd广告服务错误\"})}},createTemplateAd:function(){var t=this,e=S().ad;try{this.ad=e.createTemplateAd({adUnitId:this.adOption.ad_id,type:this.templateAdType}),this.ad.load({success:function(e){t.adLoad(e)},fail:function(e,i){t.adError({code:2e3,msg:\"createTemplateAd广告服务错误\"})}})}catch(t){this.adError({code:2e3,msg:\"createTemplateAd广告服务错误\"})}},getAd:function(){if(!this.ready)return null;var t=this.adListIndexInUse,e=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,this.currentIndexUse=t,e||(this.ready=!1),e},adLoad:function(t){this.ready=!0,this.adListIndexInUse=0,this.adList=t.adList,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!this.isTemplateAd}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\",ad:this.adList[this.currentIndexUse]||{}}}),cd.call(this)},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){sd.call(this,{name:\"adClick\"})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},reportShow:function(){var t;null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\",ad:this.adList[this.currentIndexUse]||{}}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\",ad:this.adList[this.currentIndexUse]||{}}}),this.ad.reportAdShow({adId:this.adList[this.currentIndexUse].adId}))},reportClick:function(t){var e;null!==(e=this.adList[this.currentIndexUse])&&void 0!==e&&e.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\",ad:this.adList[this.currentIndexUse]||{}}}),null!=t&&t.reportToProvider&&this.ad.reportAdClick({adId:this.adList[this.currentIndexUse].adId}))},getDownloadStatus:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getAppStatus({adId:this.adList[this.currentIndexUse].adId})},getDownloadProgress:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getDownloadProgress({adId:this.adList[this.currentIndexUse].adId})},subscribeDownloadStatus:function(t){this.ad.onStatusChanged(t)},unsubscribeDownloadStatus:function(){this.ad&&this.ready&&this.ad.offStatusChanged()},subscribeDownloadProgress:function(t){this.ad.onDownloadProgress(t)},unsubscribeDownloadProgress:function(){this.ad&&this.ready&&this.ad.offDownloadProgress()},showAppDetailPage:function(){var t;this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&this.ad.showAppDetailPage({adId:this.adList[this.currentIndexUse].adId})},getInstance:function(){return this.ad||null}}}},Cd=new(function(){function t(){d(this,t)}return l(t,[{key:\"dispatch\",value:function(t,e){t.$def.topon_sdk.store=Object.create(null),this._options=e,this.device(t),this.upId(t)}},{key:\"device\",value:function(t){t.$def.topon_sdk.store.device={};var e=[H.getInfo(),H.getOaId(),H.getDeviceIds()];Promise.all(e).then((function(e){t.$def.topon_sdk.store.device.info=e[0]||{},t.$def.topon_sdk.store.device.oaid=e[1]||\"\",t.$def.topon_sdk.store.device.ids=e[2]||{}}))}},{key:\"upId\",value:function(t){G().then((function(e){t.$def.topon_sdk.store.upid=e||\"\"}))}}]),t}()),Dd=function(){function t(e){d(this,t),this.name=e,this.eventMap={}}return l(t,[{key:\"subscribe\",value:function(t,e,i){var n=this;if(i&&i.once){return this.subscribe(t,(function i(r){e(r),n.unsubscribe(t,i)}))}if(this.eventMap[t]=this.eventMap[t]||[],\"function\"==typeof e){var r=this.eventMap[t];-1===r.indexOf(e)&&r.push(e)}}},{key:\"publish\",value:function(t,e){for(var i=null,n=this.eventMap[t]||[],r=0,a=n.length;r<a;r++)i=n[r]&&n[r](e,i);return i}},{key:\"unsubscribe\",value:function(t,e){if(this.eventMap[t]){var i=this.eventMap[t];if(e){var n=i.indexOf(e);n>-1&&i.splice(n,1)}else this.eventMap[t]=[]}}}]),t}(),Ld={};function Od(t){return Ld[t]||(Ld[t]=new Dd(t)),Ld[t]}function Rd(t,e){return Pd.apply(this,arguments)}function Pd(){return(Pd=o(i().mark((function t(e,n){var r,a,o,d,s,l,c,u,h,p,f,m,g,y,I;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,a=n.channelId,o=void 0===a?\"\":a,d=n.subChannelId,s=void 0===d?\"\":d,l=n.customParam,c=void 0===l?{}:l,u=n.placementCustomParam,h=O(c,void 0===u?{}:u),p={placementId:e},t.next=6,to.call(this,p,{isPreload:!0});case 6:if(f=t.sent,m=_(null==f?void 0:f.data)?JSON.parse(null==f?void 0:f.data):(null==f?void 0:f.data)||{},699===f.code&&(m={code:0,data:{ad_delivery_sw:0,ps_ct:864e5,ps_ct_out:0}}),!((null===(r=m)||void 0===r?void 0:r.code)>0||v(m))&&m){t.next=11;break}return t.abrupt(\"return\");case 11:g=(new Date).getTime(),y=o+\"/\"+s,m._ps_ct_timestamp=g+m.data.ps_ct,m._channel=y,m._custom_param=h,m._request_timestamp=g,I=\"TOPON_AD_CACHE_PLACEMENT_\"+e,M.setItem(I,m,!1),t.next=23;break;case 21:t.prev=21,t.t0=t.catch(0);case 23:case\"end\":return t.stop()}}),t,this,[[0,21]])})))).apply(this,arguments)}function Ud(t,e){return $d.apply(this,arguments)}function $d(){return($d=o(i().mark((function t(e,n){var r,a,o,d,s,l;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=\"TOPON_AD_CACHE_PLACEMENT_\"+e,t.next=3,M.getItem(a,!1);case 3:if(t.t0=t.sent,t.t0){t.next=6;break}t.t0={};case 6:if(!v(o=t.t0)){t.next=9;break}return t.abrupt(\"return\",Rd.call(this,e,n));case 9:if(d=(new Date).getTime(),s=(null==o||null===(r=o.data)||void 0===r?void 0:r.ps_ct_max)||6048e5,(l=(null==o?void 0:o._request_timestamp)||0)<=0&&(l=o._ps_ct_timestamp-o.data.ps_ct),!(l+s<d)){t.next=15;break}return t.abrupt(\"return\",Rd.call(this,e,n));case 15:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Nd(t){var e=this,i=t.placementStrategy,n=void 0===i?[]:i;if(n.length){var r=JSON.parse(JSON.stringify(t));delete r.options;var a=n.slice(0,10),o=[];return a.forEach((function(t){o.push(Ud.call(e,t,r))})),Promise.all(o)}}var jd=\"4.2.11\",Fd=\"http://api.anythinktech.com\";function Bd(t){return Wd.apply(this,arguments)}function Wd(){return(Wd=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,X,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return I=e.appId,b=e.appKey,k=e.channelId,w=void 0===k?\"\":k,x=e.subChannelId,T=void 0===x?\"\":x,A=e.abtest_id,L=void 0===A?\"\":A,P=e.customParam,U=void 0===P?{}:P,$=e.placementCustomParam,N=O(U,void 0===$?{}:$),j=R(),F=S(),B=F.app,W=F.network,q=F.device,t.next=6,H.getInfo();case 6:if(t.t0=t.sent,t.t0){t.next=9;break}t.t0={};case 9:return V=t.t0,Y=B.getInfo()||{},t.next=13,W.getType();case 13:if(t.t1=t.sent,t.t1){t.next=16;break}t.t1={};case 16:return z=t.t1,t.next=19,H.getDeviceIds();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:return X=t.t2,t.next=25,H.getOaId();case 25:if(t.t3=t.sent,t.t3){t.next=28;break}t.t3=\"\";case 28:return Q=t.t3,J=\"\".concat(null==V?void 0:V.screenWidth,\"*\").concat(null==V?void 0:V.screenHeight),Z=nt[null==z||null===(n=z.data)||void 0===n?void 0:n.type]||\"-1\",tt=\"1.0\",t.next=34,G();case 34:return et=t.sent,t.next=37,K();case 37:return it=t.sent,t.next=40,M.getItem(\"firstInitTime\");case 40:if(t.t4=t.sent,t.t4){t.next=43;break}t.t4=0;case 43:return rt=t.t4,t.next=46,M.getItem(\"currentInitTime\");case 46:if(t.t5=t.sent,t.t5){t.next=49;break}t.t5=0;case 49:return at=t.t5,ot=Math.ceil((at-rt+1)/864e5),dt={system:1,os_fw:8,mcc:\"1\",mnc:\"1\",timezone:\"\",nw_ver:\"\",orient:1,ua:j||\"\",os_vn:null!==(r=null==V?void 0:V.osVersionName)&&void 0!==r?r:\"\",os_vc:null!==(a=\"\"+(null==V?void 0:V.osVersionCode))&&void 0!==a?a:\"\",package_name:null!==(o=null==Y?void 0:Y.packageName)&&void 0!==o?o:\"\",app_vn:null!==(d=null==Y?void 0:Y.versionName)&&void 0!==d?d:\"\",app_vc:null!==(s=\"\"+(null==Y?void 0:Y.versionCode))&&void 0!==s?s:\"\",brand:null!==(l=null==V?void 0:V.brand)&&void 0!==l?l:\"\",model:null!==(c=null==V?void 0:V.model)&&void 0!==c?c:\"\",pf_vn:null!==(u=null==V?void 0:V.platformVersionName)&&void 0!==u?u:\"\",pf_vc:null!==(h=\"\"+(null==V?void 0:V.platformVersionCode))&&void 0!==h?h:\"\",network_type:Z,screen:J,upid:et,app_id:I,sdk_ver:\"UA_\".concat(jd),platform:1,channel:w||\"\",sub_channel:T||\"\",custom:N,ps_id:it,first_init_time:1*rt,days_from_first_init:ot,deny:String(V.screenDensity),api_ver:\"1.0\",host_vn:null!==(p=null==q||null===(f=q.host)||void 0===f?void 0:f.versionName)&&void 0!==p?p:\"\",host_vc:null!==(v=\"\"+(null==q||null===(m=q.host)||void 0===m?void 0:m.versionCode))&&void 0!==v?v:\"\",abtest_id:L},st={android_id:null!==(_=null==X?void 0:X.user)&&void 0!==_?_:\"\",mac:null!==(g=null==X?void 0:X.mac)&&void 0!==g?g:\"\",imei:\"\",oaid:Q,gaid:null!==(y=null==X?void 0:X.advertising)&&void 0!==y?y:\"\",is_cn_sdk:\"1\"},lt=C(D(dt)),ct=C(D(st)),ut=E(b,[{key:\"api_ver\",value:tt},{key:\"p\",value:lt},{key:\"p2\",value:ct}]),t.abrupt(\"return\",{p:lt,p2:ct,api_ver:tt,sign:ut});case 58:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function qd(t){return Md.apply(this,arguments)}function Md(){return(Md=o(i().mark((function t(e){var n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.appId,t.prev=1,t.next=4,Bd.call(this,e);case 4:return r=t.sent,t.next=7,Na(\"\".concat(Fd,\"/v2/open/app\"),r);case 7:return a=t.sent,o=Date.now(),a._scet_timestamp=o+a.data.scet,a._request_timestamp=o,Vd.call(this,n,a),t.abrupt(\"return\",a);case 15:return t.prev=15,t.t0=t.catch(1),t.abrupt(\"return\",{});case 18:case\"end\":return t.stop()}}),t,this,[[1,15]])})))).apply(this,arguments)}function Vd(t,e){var i=\"TOPON_AD_CACHE_APP_\"+t;return M.setItem(i,e,!1),Yd.call(this,t,e.data.logger),e}function Hd(t){return Gd.apply(this,arguments)}function Gd(){return(Gd=o(i().mark((function t(n){var r,a,o,d,s,l,c,u,h,p=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.appId,a=\"TOPON_AD_CACHE_APP_\"+r,t.next=4,M.getItem(a,!1);case 4:if(t.t0=t.sent,t.t0){t.next=7;break}t.t0={};case 7:if(!v(o=t.t0)){t.next=10;break}return t.abrupt(\"return\",qd.call(this,n));case 10:if(d=Date.now(),s=(null==o?void 0:o._request_timestamp)||0,!(o._scet_timestamp>d)){t.next=16;break}return t.abrupt(\"return\",Vd.call(this,r,o));case 16:if(!(s+6048e5<d)){t.next=20;break}return t.abrupt(\"return\",qd.call(this,e(e({},n),{},{abtest_id:null!==(l=null==o||null===(c=o.data)||void 0===c?void 0:c.abtest_id)&&void 0!==l?l:\"\"})));case 20:return setTimeout((function(){Vd.call(p,r,o)}),100),t.abrupt(\"return\",qd.call(this,e(e({},n),{},{abtest_id:null!==(u=null==o||null===(h=o.data)||void 0===h?void 0:h.abtest_id)&&void 0!==u?u:\"\"})));case 22:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Yd(t,e){var i,n,r,a=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def)&&void 0!==i?i:null;a&&null!=a&&a.topon_sdk&&(a.topon_sdk.cache.logger||(a.topon_sdk.cache.logger=Object.create(null)),a.topon_sdk.cache.logger[t]=e)}function Kd(t){return/^([.A-Za-z0-9_-]){1,128}$/.test(t)}function zd(t){return _(t)?JSON.parse(t):t}function Xd(t){var e=[],i=zd(t);return f(i)?(Object.keys(i).forEach((function(t){h(i[t])||e.push(\"\".concat(t,\"必须为字符串\"))})),e):(e.push(\"setCustomParam参数必须是JSON Object\"),e)}x&&(x.$topon_sdk=function(t,n){function r(){return r=o(i().mark((function t(e){var n,r,o,d,l,u,h,p,f,v,m,_,g=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this&&this.$def&&!this.$def.topon_sdk&&(this.$def.topon_sdk=Object.create(null),this.$def.topon_sdk.components=Ed,this.$def.topon_sdk.appId=e.appId,this.$def.topon_sdk.appKey=e.appKey,this.$def.topon_sdk.isTest=e.isTest||!1,this.$def.topon_sdk.event=Object.create(null),this.$def.topon_sdk.event.deeplink=Od(\"deeplink\"),this.$def.topon_sdk.cache=Object.create(null),this.$def.topon_sdk.channelId=Kd(e.channelId)?e.channelId:\"\",this.$def.topon_sdk.subChannelId=Kd(e.subChannelId)?e.subChannelId:\"\",this.$def.topon_sdk.customParam={},this.$def.topon_sdk.placementCustomParam={},this.$def.topon_sdk.onInitTimestamp=Date.now(),this.$def.topon_sdk.onShowTimestamp=0,this.$def.topon_sdk.onHideTimestamp=0,this.$def.topon_sdk.onDestroyTimestamp=0,this.$def.topon_sdk.onHideCounter=0,this.$def.topon_sdk.destroyParams={},h=(null==e||null===(n=e.config)||void 0===n?void 0:n.device)||\"0\",p=(null==e||null===(r=e.config)||void 0===r?void 0:r.startup)||\"0\",f=(null==e||null===(o=e.config)||void 0===o?void 0:o.startupUnlock)||\"0\",v=(null==e||null===(d=e.config)||void 0===d?void 0:d.enhancedLoggingMode)&&Date.now()<17119008e5,this.$def.topon_sdk.startup=p,this.$def.topon_sdk.startupUnlock=f,this.$def.topon_sdk.startupReported=!1,this.$def.topon_sdk.enhancedLoggingMode=v,m={appId:e.appId,appKey:e.appKey,channelId:Kd(e.channelId)?e.channelId:\"\",subChannelId:Kd(e.subChannelId)?e.subChannelId:\"\",customParam:{},placementCustomParam:{}},Hd.call(this,m),M.setItem(\"needDevice\",h),M.setItem(\"appId\",e.appId),Cd.dispatch(this,e),c.call(this),a.call(this).then((function(){\"1\"!==p&&s.call(g)})),_={placementStrategy:null!==(l=null===(u=e.config)||void 0===u||null===(u=u.preload)||void 0===u?void 0:u.placementStrategy)&&void 0!==l?l:[],channelId:Kd(e.channelId)?e.channelId:\"\",subChannelId:Kd(e.subChannelId)?e.subChannelId:\"\",customParam:{},placementCustomParam:{}},Nd.call(this,_));case 1:case\"end\":return t.stop()}}),t,this)}))),r.apply(this,arguments)}function a(){return d.apply(this,arguments)}function d(){return(d=o(i().mark((function t(){var e,n;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,M.getItem(\"firstInitTime\");case 2:return(!(e=t.sent)||v(e)||1*e<16409664e5)&&(e=Date.now()),n=Date.now(),t.abrupt(\"return\",M.batch({firstInitTime:e,currentInitTime:n}));case 6:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function s(t){var i=e({logType:\"APP_STARTUP\"},t);so.call(this,i)}function l(){if(\"1\"===this.$def.topon_sdk.startup){if(this.$def.topon_sdk.startupReported&&\"1\"===this.$def.topon_sdk.startupUnlock){var t=\"\"+Date.now();return void s.call(this,{psIdVirtual:t})}this.$def.topon_sdk.startupReported||(this.$def.topon_sdk.startupReported=!0,s.call(this))}}function c(){var t=this,e={setChannel:u,setSubChannel:h,setCustomParam:p,setPlacementCustomParam:f,onShow:m,onHide:_,onDestroy:y};Object.keys(e).forEach((function(i){t.$def.topon_sdk[i]=e[i]}))}function u(t){if(!Kd(t))return console.error(\"渠道格式错误，仅支持：“数字“、”字母“、”_-.“\"),void l.call(this);this.$def.topon_sdk.channelId=t,l.call(this)}function h(t){Kd(t)?this.$def.topon_sdk.subChannelId=t:console.error(\"渠道格式错误，仅支持：“数字“、”字母“、”_-.“\")}function p(t){if(t&&!v(t)){var e=Xd(t);if(null!=e&&e.length)for(var i=0;i<e.length;i++)console.error(e[i]);else{var n=zd(t);this.$def.topon_sdk.customParam=n}}else console.error(\"setCustomParam参数错误\")}function f(t,e){if(t&&e&&!v(e)){var i=Xd(e);if(null!=i&&i.length)for(var n=0;n<i.length;n++)console.error(i[n]);else{var r=zd(e);this.$def.topon_sdk.placementCustomParam[t]=r}}else console.error(\"setPlacementCustomParam参数错误\")}function m(){if(this.$def.topon_sdk.onShowTimestamp=Date.now(),this.$def.topon_sdk.onHideTimestamp>0){var t=this.$def.topon_sdk.onShowTimestamp-this.$def.topon_sdk.onHideTimestamp,e={key:\"HOT_START_INTERVAL_TIME\",msg:String(t)};Va.call(this,e),this.$def.topon_sdk.onHideTimestamp=0}}function _(){return g.apply(this,arguments)}function g(){return(g=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.$def.topon_sdk.onHideTimestamp=Date.now(),e=this.$def.topon_sdk.onHideTimestamp-this.$def.topon_sdk.onInitTimestamp,n=this.$def.topon_sdk.onHideTimestamp-this.$def.topon_sdk.onShowTimestamp,o=String(this.$def.topon_sdk.onHideTimestamp),e>n&&this.$def.topon_sdk.onHideCounter>0?(r=\"3\",a=String(this.$def.topon_sdk.onShowTimestamp),d=String(n)):(r=\"1\",a=String(this.$def.topon_sdk.onInitTimestamp),d=String(e)),t.next=7,G();case 7:return s=t.sent,l={key:\"STAY_TIME\",sdk_time:Date.now(),upid:s,msg:r,msg1:a,msg2:o,msg3:d},Va.call(this,l),this.$def.topon_sdk.onHideCounter++,t.next=13,Ga.call(this,l);case 13:c=t.sent,this.$def.topon_sdk.destroyParams=c;case 15:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function y(){this.$def.topon_sdk.onDestroyTimestamp=Date.now();var t,e,i,n,r=this.$def.topon_sdk.onDestroyTimestamp-this.$def.topon_sdk.onInitTimestamp,a=this.$def.topon_sdk.onDestroyTimestamp-this.$def.topon_sdk.onShowTimestamp;i=String(this.$def.topon_sdk.onDestroyTimestamp),r>a&&this.$def.topon_sdk.onHideCounter>1?(t=\"4\",e=String(this.$def.topon_sdk.onShowTimestamp),n=String(a)):(t=\"2\",e=String(this.$def.topon_sdk.onInitTimestamp),n=String(r));var o={key:\"STAY_TIME\",sdk_time:Date.now(),msg:t,msg1:e,msg2:i,msg3:n};za.call(this,o)}return function(t){return r.apply(this,arguments)}.call(t,n)})}();\n";
exports["default"] = _default;

/***/ }),

/***/ "./src/Common/helper/ajax.js":
/*!***********************************!*\
  !*** ./src/Common/helper/ajax.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.fetch"));
var _system2 = _interopRequireDefault($app_require$("@app-module/system.storage"));
var _system3 = _interopRequireDefault($app_require$("@app-module/system.device"));
var _system4 = _interopRequireDefault($app_require$("@app-module/system.prompt"));
var _system5 = _interopRequireDefault($app_require$("@app-module/system.router"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const getUserId = async () => {
  let userId = await _system3.default.getUserId();
  return userId.data.userId;
};
const quit = () => {
  _system4.default.showDialog({
    title: '警告',
    message: "您已注销账号,请退出。",
    buttons: [{
      text: '退出',
      color: '#333333'
    }],
    success: function (data) {
      _system5.default.push({
        uri: "Page_login"
      });
    },
    cancel: function () {
      console.log("cancel");
    }
  });
};
const getTokenData = () => {
  return new Promise(async (resolve, reject) => {
    const example = (__webpack_require__(/*! ./apis/example.js */ "./src/Common/helper/apis/example.js")["default"]);
    const deviceNum = await getUserId();
    // console.log(`getTokenData()---->deviceNum=${deviceNum}`);
    // console.log('是否触发的这里');
    example.toLogin({
      loginType: "DEVICE",
      appId: 'SC_0001',
      deviceNum,
      loginAccount: deviceNum
    }).then(data => {
      console.log('走的成功回调');
      resolve(data);
    }).catch(err => {
      console.log(err, '失败回调');
      try {
        if (JSON.parse(err).code === '310001') {
          console.log('进来了');
          quit();
        }
      } catch (error) {
        console.log(error, '查看获取报错');
      }
      reject(err);
    });
  });
};
let isRefreshing = false; // 是否正在请求刷新token的接口
const refreshSubscribers = []; // 存储请求的数组
const subscribeTokenRefresh = cb => {
  // 将所有的请求都push到数组中,其实数组是[function(token){}, function(token){},...]
  refreshSubscribers.push(cb);
};
const onRrefreshed = token => {
  // 数组中的请求得到新的token之后自执行，用新的token去请求数据
  refreshSubscribers.map(cb => cb(token));
};
const isAccessTokenExpired = authData => {
  // 判断当前token是否过期
  if (new Date().getTime() - authData.expireAt > 10000 * 60) {
    return true;
  }
  return false;
};
const request = options => {
  return new Promise(async (resolve, reject) => {
    const {
      method,
      url,
      data,
      headers = {}
    } = options;
    const authData = (await _system2.default.get({
      key: 'AUTH_TOKEN_DATA'
    })) || {};
    const accessToken = authData.data ? JSON.parse(authData.data).accessToken : '';
    if (isAccessTokenExpired(authData) || !accessToken) {
      if (!options.url.includes("qa/mini/basic/user/login")) {
        if (!isRefreshing) {
          isRefreshing = true;
          getTokenData().then(async res => {
            res = JSON.parse(res);
            isRefreshing = false;
            if (res.code === "000000") {
              headers.Authorization = res.data.accessToken;
              await _system2.default.set({
                key: "AUTH_TOKEN_DATA",
                value: JSON.stringify(res.data)
              });
              console.log('res.data.accessToken', res.data.accessToken);
              onRrefreshed(res.data.accessToken);
            }
          }).catch(err => {
            isRefreshing = false;
          });
        }
        let retry = new Promise(() => {
          subscribeTokenRefresh(token => {
            headers.Authorization = token; // 用最新token请求数据
            return request(options).then(resolve).catch(reject);
          });
        });
        return retry;
      }
    }
    headers.Authorization = accessToken || '';
    _system.default.fetch({
      // url: 'https://test.ipandata.com' + url,
      url: 'https://api.ihaituo.cn' + url,
      method,
      data,
      header: _objectSpread({
        "content-type": "application/json"
      }, headers),
      // success: function (res) {
      //   const data = res.data
      //   if (data.code === "000000" || JSON.parse(data).code === "000000") {
      //     resolve(url.includes("qa/mini/basic/user/login") ? res.data : JSON.parse(res.data));
      //   } else {
      //     if (data.code === "300002") {
      //       $storage.delete({
      //         key: 'AUTH_TOKEN_DATA'
      //       })
      //       request(options)
      //         .then(resolve)
      //         .catch(reject);
      //     } else {
      //       reject(res.data);
      //     }
      //   }
      // },

      success: function (res) {
        try {
          const data = res.data;

          // 尝试解析 JSON 数据，如果解析失败，则会抛出错误
          const parsedData = typeof data === 'string' ? JSON.parse(data) : data;
          if (parsedData.code === "000000") {
            resolve(url.includes("qa/mini/basic/user/login") ? data : parsedData);
          } else {
            if (parsedData.code === "300002") {
              _system2.default.delete({
                key: 'AUTH_TOKEN_DATA'
              });
              request(options).then(resolve).catch(reject);
            } else {
              reject(data);
            }
          }
        } catch (e) {
          console.error("Error parsing JSON or handling code: ", e);

          // 检查是否返回的是 HTML，而不是 JSON
          if (typeof res.data === 'string' && res.data.startsWith('<html>')) {
            reject("Server returned an HTML page instead of JSON. Possible incorrect URL or server error.");
          } else {
            reject("Error parsing JSON or handling code: " + e.message);
          }
        }
      },
      fail: function (err) {
        reject(err);
      },
      complete: function (res) {}
    });
  });
};
var _default = exports["default"] = request;

/***/ }),

/***/ "./src/Common/helper/apis/example.js":
/*!*******************************************!*\
  !*** ./src/Common/helper/apis/example.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ajax = _interopRequireDefault(__webpack_require__(/*! ../ajax.js */ "./src/Common/helper/ajax.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 登录 
const toLogin = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/user/login`,
    data
  });
};

// 上传步数
const uploadsteps = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/sc/upload`,
    data
  });
};
// 获取步数
const getsteps = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/sc`,
    data
  });
};

// 获取最近30天记录
const getstepslist = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/sc/list`
  });
};

//提现
const withdraw = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/user/withdraw`,
    data
  });
};

//用户余额记录
const record = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/cash/record`,
    data
  });
};

//获取广告完成次数
const getAdCount = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/complete/count`,
    data
  });
};

//广告完成
const completeAd = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/complete`,
    data
  });
};

//广告完成-加密
const completeAdRSA = async data => {
  let timestamp = +new Date();
  data.timestamp = timestamp;
  let _data = await $utils.dataEncryption(data);
  let param = {
    data: _data
  };
  console.log('任务加密', param);
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/finish`,
    data: JSON.stringify(param)
  });
};

//广告转化上传   type:广告渠道类型: jh(鲸鸿), ks(快手), jl(巨量), ,可用值:jh,ks,jl
const convertUpload = data => {
  console.log('data= ', data, `url= /qa/mini/basic/ad/convert/upload/${data.type}`);
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/convert/upload/${data.type}`,
    data
  });
};

//获取手势返回配置信息
const bolckReturn = () => {
  let brand = getApp().$def.dataApp.brand;
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/clickControl/return/info/${brand}`
  });
};

/**
 * 获取页面透明层配置信息  
 *
 */

const showTclayer = data => {
  let brand = getApp().$def.dataApp.brand;
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/clickControl/transparentLayer/info/${brand}`,
    data
  });
};

/**
 * 获取是否自动弹窗  
 *
 */

const popUps = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/auto/popUps`
  });
};

/**
 * 转化点击次数
 *
 */
const clickCount = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/convert/clickCount/${data.type}`,
    data
  });
};
var _default = exports["default"] = {
  toLogin,
  uploadsteps,
  getsteps,
  getstepslist,
  withdraw,
  record,
  getAdCount,
  completeAd,
  completeAdRSA,
  convertUpload,
  bolckReturn,
  showTclayer,
  popUps,
  clickCount
};

/***/ }),

/***/ "./src/Common/helper/apis/index.js":
/*!*****************************************!*\
  !*** ./src/Common/helper/apis/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
/**
 * 导出 apis 下目录的所有接口
 */
const files = __webpack_require__("./src/Common/helper/apis sync recursive \\.js");
const modules = {};
files.keys().forEach(key => {
  if (key === './index.js') {
    return;
  }
  modules[key.replace(/(^\.\/|\.js$)/g, '')] = files(key).default;
});
var _default = exports["default"] = modules;

/***/ }),

/***/ "./src/Common/helper/apis/user.js":
/*!****************************************!*\
  !*** ./src/Common/helper/apis/user.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ajax = _interopRequireDefault(__webpack_require__(/*! ../ajax.js */ "./src/Common/helper/ajax.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 登录 
const getUserInfo = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/info`
  });
};

// 金币
const getDailySignDay = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/goldExchangeRule/daily/sign/day`,
    data
  });
};
//签到
const goSianIn = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/goldExchangeRule/daily/sign`,
    data
  });
};

// 反馈
const postUserFeedback = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/user/feedback`,
    data
  });
};
//注销用户
const putForeverLogout = data => {
  return (0, _ajax.default)({
    method: "PUT",
    url: `/qa/mini/user/forever/logout`
  });
};

// 用户余额记录
const getUserCashRecord = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/cash/record`,
    data
  });
};

// 用户金币记录
const getUserGoldRecord = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/gold/record`,
    data
  });
};
//设置支付宝账户
const putAlipayAccount = data => {
  return (0, _ajax.default)({
    method: "PUT",
    url: `/qa/mini/user/alipay/account`,
    data
  });
};

//发送验证码
const postSendCode = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/user/sendCode/${data.phone}`
  });
};
let user = {
  getUserInfo,
  getDailySignDay,
  goSianIn,
  postUserFeedback,
  getUserCashRecord,
  getUserGoldRecord,
  putForeverLogout,
  putAlipayAccount,
  postSendCode
};
var _default = exports["default"] = user;

/***/ }),

/***/ "./src/Common/helper/processData.js":
/*!******************************************!*\
  !*** ./src/Common/helper/processData.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.clearStorage = clearStorage;
exports["default"] = void 0;
exports.deleteStorage = deleteStorage;
exports.getStorage = getStorage;
exports.incrementTodayClicks = incrementTodayClicks;
exports.localStorage = localStorage;
exports.resetTodayClicksIfNeeded = resetTodayClicksIfNeeded;
exports.setStorage = setStorage;
var _system = _interopRequireDefault($app_require$("@app-module/system.storage"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 优化本地存储get方法
function localStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.get({
      key,
      success: function (data) {
        resolve(data);
      },
      fail: function (data, code) {
        reject(data);
      }
    });
  });
}
function setStorage(key, value = "") {
  return new Promise((resolve, reject) => {
    _system.default.set({
      key,
      value: JSON.stringify(value),
      success: function (data) {
        resolve(`setStorage success`);
      },
      fail: function (data, code) {
        reject(`setStorage fail, code = ${code}`);
      }
    });
  });
}
function getStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.get({
      key,
      success: function (data) {
        if (data) {
          const res = JSON.parse(data);
          return resolve(res);
        }
        resolve(data);
      },
      fail: function (data, code) {
        reject(`getStorage fail, code = ${code}`);
      }
    });
  });
}
function deleteStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.delete({
      key,
      success: function (data) {
        resolve(`deleteStorage success`);
      },
      fail: function (data, code) {
        reject(`deleteStorage fail, code = ${code}`);
      }
    });
  });
}
function clearStorage() {
  return new Promise((resolve, reject) => {
    _system.default.clear({
      success: function (data) {
        resolve(`clearStorage success`);
      },
      fail: function (data, code) {
        reject(`clearStorage fail, code = ${code}`);
      }
    });
  });
}

//检查是否需要重置广告点击次数
function resetTodayClicksIfNeeded() {
  const currentDate = new Date().toLocaleDateString(); //当天日期

  _system.default.get({
    key: 'lastResetDate',
    default: '-1',
    success: function (data) {
      console.log('本次检查日期：', currentDate, '--- 最后进入广告页日期：', data);
      if (data !== currentDate) {
        //日期不相同
        // 重置广告点击次数
        _system.default.set({
          key: 'todayClicks',
          value: '0'
        });
      }
    }
  });
}

//进入广告页时执行
function incrementTodayClicks() {
  _system.default.get({
    key: 'todayClicks',
    default: '0',
    //默认0次
    success: function (data) {
      console.log('点击次数+1,当前次数', data);
      let todayClicks = parseInt(data) || 0;
      todayClicks = todayClicks + 1;
      _system.default.set({
        key: 'todayClicks',
        value: todayClicks.toString()
      });
      _system.default.set({
        key: 'lastResetDate',
        value: new Date().toLocaleDateString()
      });
    }
  });
}
var _default = exports["default"] = {
  getStorage,
  setStorage,
  incrementTodayClicks,
  resetTodayClicksIfNeeded
};

/***/ }),

/***/ "./src/Common/helper/utils.js":
/*!************************************!*\
  !*** ./src/Common/helper/utils.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.device"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * 您可以将常用的方法、或系统 API，统一封装，暴露全局，以便各页面、组件调用，而无需 require / import.
 */
// 节流阀
const throttle = (fn, gapTime = 1500) => {
  let _lastTime = null;
  // 返回新的函数
  return function () {
    let _nowTime = +new Date();
    if (_nowTime - _lastTime > gapTime || !_lastTime) {
      fn.apply(this, arguments); //将this和参数传给原函数
      _lastTime = _nowTime;
    }
  };
};
const {
  JSEncrypt
} = __webpack_require__(/*! ../libs/jsencrypt/lib/index */ "./src/Common/libs/jsencrypt/lib/index.js");
const config = {
  publicKey: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqaj0Y3k54jCyTq47t73ScBX9uBsSScDo7/uZ+PhHYh9eQqHNW1bBjKGV4t3Y8Wokhv783krxhIqzkPf9nHeZ2yWqoQlPa3qOUc7Wf/HpX2+eHGRjF1/RLARJmMcEgQYB3WGbdRedu0FjQSGd+OfSS/W7Heh2ZGlF/aSHj2NYhYE4p7x4jjQIi+ueKZvVJNZpu0vhQaF45jpqQDULPL+MkkQePmupjp/PR4Ra8BVg4DwJuI6K8jL77YWaxeQRbMrEiQ0ZbTKRQ4o8N73iIM97E/h8PbDl5FbuNn0k8urkYnmv56AMdkVEyIOUwNEa8oU9QKz37o5Z2L7+yqx2zmLpVwIDAQAB'
};
const dataEncryption = (data, action = "encrypt") => {
  try {
    let keyMap = {
      encrypt: config.publicKey,
      decrypt: config.privateKey
    };
    let key = keyMap[action];
    let _data = action === "encrypt" ? JSON.stringify(data) : data;
    return new Promise((resolve, reject) => {
      if (action === "encrypt") {
        const encryptor = new JSEncrypt();
        encryptor.setPublicKey(key);
        let result = encryptor.encrypt(_data);
        console.log(result, '查看有什么');
        resolve(result);
        return resolve(result);
      }
    });
  } catch (error) {
    console.log(error, '转换报错？');
  }
};
const getUserId = async () => {
  let userId = await _system.default.getUserId();
  return userId.data.userId;
};
const getOAID = async () => {
  let oaid = await _system.default.getOAID();
  return oaid;
};

/**
 * 转化上传
 * @param {*} that 所在this 
 */
function getConvertUpload() {
  let param = _objectSpread({}, getApp().$def.dataApp.actiParam);
  console.log('getConvertUpload() 转化参数param= ', param);
  for (const key in param) {
    param[key] = param[key].replace(/\/$/, "");
  }
  const convertedParam = convertKeysToCamelCase(param);
  if (!convertedParam.callback) {
    return;
  }
  console.log('getConvertUpload() 格式化转化参数convertedParam= ', convertedParam);
  $apis.example.convertUpload(_objectSpread(_objectSpread({}, convertedParam), {}, {
    deviceId: convertedParam.oaid,
    type: convertedParam.type || 'jh'
  })).then(res => {
    console.log(res, '转换成功');
  }).catch(err => {
    console.log(err, '转换失败');
  });
}
function toCamelCase(str) {
  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
}
function convertKeysToCamelCase(obj) {
  if (Array.isArray(obj)) {
    return obj.map(v => convertKeysToCamelCase(v));
  } else if (obj !== null && obj.constructor === Object) {
    return Object.keys(obj).reduce((result, key) => {
      const camelCaseKey = toCamelCase(key);
      result[camelCaseKey] = convertKeysToCamelCase(obj[key]);
      return result;
    }, {});
  }
  return obj;
}

/**
* 保存广告回传参数   router.push(OBJECT)  例：@param {Object} e='hap://app/com.company.app/index?param1=value1'
*/
const saveHapUri = e => {
  console.log('saveHapUri() 转化参数e= ', e);
  const {
    channelValue = '',
    callback = ''
  } = e;
  if (callback) {
    getApp().$def.dataApp.actiParam = _objectSpread({}, e);
  }
};

/**
* 插屏广告 
*/

const tablePlaque = async (onCloseCallback, onCatchCallback) => {
  // const storageFlag = await $processData.getStorage("_PRIVAC");
  // if (!storageFlag) {
  //   //未授权，弹出授权询问
  //   console.log('用户授权= ', storageFlag);
  //   console.log('未授权,不加载插屏广告');
  //   return
  // }

  let Provider = $ad.getProvider();
  if (!Provider) {
    console.log('没有广告商');
    return;
  }
  let interstitialAd = $ad.createInterstitialAd({
    adUnitId: getApp().$def.dataApp.interstitialAdUnitId
  });
  interstitialAd.load().then(res => {
    console.log(res, '查屏加载成功');
    interstitialAd.show().then(() => {
      console.log('插屏广告show成功');
    }, () => {
      console.log('插屏广告show失败');
    });
  })
  // .catch((err) => {
  //   console.log(err, '插屏加载失败');
  // })
  .catch(onCatchCallback);
  interstitialAd.onClick(() => {
    console.log('插屏广告点击了');
    //转化上传
    getConvertUpload();
  });
  interstitialAd.onClose(onCloseCallback);
};

/**
* banner广告  margin_bot底部缩进  
*/

let bannerAd;
const showBannerAd = async margin_bot => {
  // const storageFlag = await $processData.getStorage("_PRIVAC");
  // if (!storageFlag) {
  //   //未授权，弹出授权询问
  //   console.log('用户授权= ', storageFlag);
  //   console.log('未授权,不加载banner广告');
  //   return
  // }

  let Provider = $ad.getProvider();
  if (!Provider) {
    console.log('没有广告返回');
    return;
  }
  var d = _system.default.getInfoSync();
  // console.info("banner广告-设备信息 " + JSON.stringify(d));

  let height = 57; //两种高度  57与144
  //获取页面内可见窗口的高度和宽度，此值不包括标题栏和状态栏高度
  let windowWidth = d.screenWidth;
  let windowHeight = d.screenHeight - 153 - margin_bot;
  //logicWidth对应manifest.json文件设置的designWidth值，默认是750
  let logicWidth = 750;
  //广告自身大小单位是dp，需要转换成px单位
  let realAdHeighPX = height * d.screenDensity;
  //标题栏高度一般是42dp左右，此处也需要转换成px单位
  let titleBarHeight = 42 * d.screenDensity;
  //此处计算很关键，需要将状态栏高度、标题栏高度加上
  let realToppx = windowHeight - realAdHeighPX + d.statusBarHeight + titleBarHeight;

  // console.info("calBannerPostion1 realToppx=" + realToppx + ", logicWidth= " + logicWidth, "windowWidth= " + windowWidth);
  //转换成页面基准值下的逻辑单位
  let logicWebTop = realToppx * logicWidth / windowWidth;

  //此对象请自己在data下定义
  let top = logicWebTop === 0 ? 1230 : logicWebTop;
  // console.info("calBannerPostion1 top=" + top + ", logicWebTop= " + logicWebTop);

  const style = {
    left: 0,
    top: top,
    width: 360,
    height: height
  };
  let adid = getApp().$def.dataApp.bannerAdUnitId;
  // let adid = 'z1v6jykvy9'
  // console.info("banner广告位=" + adid);
  bannerAd = $ad.createBannerAd({
    adUnitId: adid,
    //banner广告位
    style: style,
    adIntervals: 60 //刷新时间，秒
  });
  // console.info("annerAd.style=" + JSON.stringify(bannerAd.style));
  bannerAd.onLoad(e => {
    console.info("load bannerAd  onload success e=" + JSON.stringify(e));
  });
  bannerAd.onError(e => {
    // console.error("load bannerAd  onError " + JSON.stringify(e));
  });
  bannerAd.onClose(e => {
    // console.info("load bannerAd  onClose");
  });
  bannerAd.show();
};
const hideBanerAd = () => {
  if (bannerAd) {
    bannerAd.hide();
  }
};
const viewBanner = () => {
  if (bannerAd) {
    bannerAd.show();
  }
};
const destroyBanner = () => {
  if (bannerAd) {
    bannerAd.destroy();
  }
};

/**
 * 分秒倒计时
 * @param {Object} countDownData 相关参数：totalSeconds倒计时秒数、name属性名称、isFormat格式化
 * @param {*} that 当前组件this
 */
const startCountDown = (countDownData, that) => {
  let {
    totalSeconds = 3,
    name,
    isFormat = false
  } = countDownData;
  let _this = that;
  return new Promise((resolve, reject) => {
    let timer = setInterval(() => {
      if (totalSeconds > 1) {
        totalSeconds--;
        const minutes = isFormat ? (void 0).formatTime(Math.floor(totalSeconds / 60)) : Math.floor(totalSeconds / 60);
        const seconds = isFormat ? (void 0).formatTime(Math.floor(totalSeconds % 60)) : Math.floor(totalSeconds % 60);
        _this[name] = {
          minutes,
          seconds
        };
      } else {
        clearInterval(_this.timer);
        resolve();
      }
    }, 1000);
    _this.timer = timer;
  });
};
var _default = exports["default"] = {
  throttle,
  getUserId,
  getConvertUpload,
  startCountDown,
  dataEncryption,
  tablePlaque,
  showBannerAd,
  hideBanerAd,
  viewBanner,
  destroyBanner,
  saveHapUri,
  getOAID
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/JSEncrypt.js":
/*!****************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/JSEncrypt.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.JSEncrypt = void 0;
var _base = __webpack_require__(/*! ./lib/jsbn/base64 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js");
var _JSEncryptRSAKey = __webpack_require__(/*! ./JSEncryptRSAKey */ "./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js");
var _a;
var version = typeof process !== 'undefined' ? (_a = process.env) === null || _a === void 0 ? void 0 : _a.npm_package_version : undefined;
/**
 *
 * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour
 * possible parameters are:
 * - default_key_size        {number}  default: 1024 the key size in bit
 * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent
 * - log                     {boolean} default: false whether log warn/error or not
 * @constructor
 */
var JSEncrypt = exports.JSEncrypt = /** @class */function () {
  function JSEncrypt(options) {
    if (options === void 0) {
      options = {};
    }
    options = options || {};
    this.default_key_size = options.default_key_size ? parseInt(options.default_key_size, 10) : 1024;
    this.default_public_exponent = options.default_public_exponent || "010001"; // 65537 default openssl public exponent for rsa key type
    this.log = options.log || false;
    // The private and public key.
    this.key = null;
  }
  /**
   * Method to set the rsa key parameter (one method is enough to set both the public
   * and the private key, since the private key contains the public key paramenters)
   * Log a warning if logs are enabled
   * @param {Object|string} key the pem encoded string or an object (with or without header/footer)
   * @public
   */
  JSEncrypt.prototype.setKey = function (key) {
    if (this.log && this.key) {
      console.warn("A key was already set, overriding existing.");
    }
    this.key = new _JSEncryptRSAKey.JSEncryptRSAKey(key);
  };
  /**
   * Proxy method for setKey, for api compatibility
   * @see setKey
   * @public
   */
  JSEncrypt.prototype.setPrivateKey = function (privkey) {
    // Create the key.
    this.setKey(privkey);
  };
  /**
   * Proxy method for setKey, for api compatibility
   * @see setKey
   * @public
   */
  JSEncrypt.prototype.setPublicKey = function (pubkey) {
    // Sets the public key.
    this.setKey(pubkey);
  };
  /**
   * Proxy method for RSAKey object's decrypt, decrypt the string using the private
   * components of the rsa key object. Note that if the object was not set will be created
   * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
   * @param {string} str base64 encoded crypted string to decrypt
   * @return {string} the decrypted string
   * @public
   */
  JSEncrypt.prototype.decrypt = function (str) {
    // Return the decrypted string.
    try {
      return this.getKey().decrypt((0, _base.b64tohex)(str));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's encrypt, encrypt the string using the public
   * components of the rsa key object. Note that if the object was not set will be created
   * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
   * @param {string} str the string to encrypt
   * @return {string} the encrypted string encoded in base64
   * @public
   */
  JSEncrypt.prototype.encrypt = function (str) {
    // Return the encrypted string.
    try {
      return (0, _base.hex2b64)(this.getKey().encrypt(str));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's sign.
   * @param {string} str the string to sign
   * @param {function} digestMethod hash method
   * @param {string} digestName the name of the hash algorithm
   * @return {string} the signature encoded in base64
   * @public
   */
  JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {
    // return the RSA signature of 'str' in 'hex' format.
    try {
      return (0, _base.hex2b64)(this.getKey().sign(str, digestMethod, digestName));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's verify.
   * @param {string} str the string to verify
   * @param {string} signature the signature encoded in base64 to compare the string to
   * @param {function} digestMethod hash method
   * @return {boolean} whether the data and signature match
   * @public
   */
  JSEncrypt.prototype.verify = function (str, signature, digestMethod) {
    // Return the decrypted 'digest' of the signature.
    try {
      return this.getKey().verify(str, (0, _base.b64tohex)(signature), digestMethod);
    } catch (ex) {
      return false;
    }
  };
  /**
   * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object
   * will be created and returned
   * @param {callback} [cb] the callback to be called if we want the key to be generated
   * in an async fashion
   * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object
   * @public
   */
  JSEncrypt.prototype.getKey = function (cb) {
    // Only create new if it does not exist.
    if (!this.key) {
      // Get a new private key.
      this.key = new _JSEncryptRSAKey.JSEncryptRSAKey();
      if (cb && {}.toString.call(cb) === "[object Function]") {
        this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);
        return;
      }
      // Generate the key.
      this.key.generate(this.default_key_size, this.default_public_exponent);
    }
    return this.key;
  };
  /**
   * Returns the pem encoded representation of the private key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the private key WITH header and footer
   * @public
   */
  JSEncrypt.prototype.getPrivateKey = function () {
    // Return the private representation of this key.
    return this.getKey().getPrivateKey();
  };
  /**
   * Returns the pem encoded representation of the private key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the private key WITHOUT header and footer
   * @public
   */
  JSEncrypt.prototype.getPrivateKeyB64 = function () {
    // Return the private representation of this key.
    return this.getKey().getPrivateBaseKeyB64();
  };
  /**
   * Returns the pem encoded representation of the public key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the public key WITH header and footer
   * @public
   */
  JSEncrypt.prototype.getPublicKey = function () {
    // Return the private representation of this key.
    return this.getKey().getPublicKey();
  };
  /**
   * Returns the pem encoded representation of the public key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the public key WITHOUT header and footer
   * @public
   */
  JSEncrypt.prototype.getPublicKeyB64 = function () {
    // Return the private representation of this key.
    return this.getKey().getPublicBaseKeyB64();
  };
  JSEncrypt.version = version;
  return JSEncrypt;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.JSEncryptRSAKey = void 0;
var _base = __webpack_require__(/*! ./lib/jsbn/base64 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js");
var _hex = __webpack_require__(/*! ./lib/asn1js/hex */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js");
var _base2 = __webpack_require__(/*! ./lib/asn1js/base64 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js");
var _asn = __webpack_require__(/*! ./lib/asn1js/asn1 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js");
var _rsa = __webpack_require__(/*! ./lib/jsbn/rsa */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js");
var _jsbn = __webpack_require__(/*! ./lib/jsbn/jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _asn2 = __webpack_require__(/*! ./lib/jsrsasign/asn1-1.0 */ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js");
var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
  };
  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
/**
 * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.
 * This object is just a decorator for parsing the key parameter
 * @param {string|Object} key - The key in string format, or an object containing
 * the parameters needed to build a RSAKey object.
 * @constructor
 */
var JSEncryptRSAKey = exports.JSEncryptRSAKey = /** @class */function (_super) {
  __extends(JSEncryptRSAKey, _super);
  function JSEncryptRSAKey(key) {
    var _this = _super.call(this) || this;
    // Call the super constructor.
    //  RSAKey.call(this);
    // If a key key was provided.
    if (key) {
      // If this is a string...
      if (typeof key === "string") {
        _this.parseKey(key);
      } else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) || JSEncryptRSAKey.hasPublicKeyProperty(key)) {
        // Set the values for the key.
        _this.parsePropertiesFrom(key);
      }
    }
    return _this;
  }
  /**
   * Method to parse a pem encoded string containing both a public or private key.
   * The method will translate the pem encoded string in a der encoded string and
   * will parse private key and public key parameters. This method accepts public key
   * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).
   *
   * @todo Check how many rsa formats use the same format of pkcs #1.
   *
   * The format is defined as:
   * PublicKeyInfo ::= SEQUENCE {
   *   algorithm       AlgorithmIdentifier,
   *   PublicKey       BIT STRING
   * }
   * Where AlgorithmIdentifier is:
   * AlgorithmIdentifier ::= SEQUENCE {
   *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
   *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
   * }
   * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
   * RSAPublicKey ::= SEQUENCE {
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER   -- e
   * }
   * it's possible to examine the structure of the keys obtained from openssl using
   * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/
   * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer
   * @private
   */
  JSEncryptRSAKey.prototype.parseKey = function (pem) {
    try {
      var modulus = 0;
      var public_exponent = 0;
      var reHex = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/;
      var der = reHex.test(pem) ? _hex.Hex.decode(pem) : _base2.Base64.unarmor(pem);
      var asn1 = _asn.ASN1.decode(der);
      // Fixes a bug with OpenSSL 1.0+ private keys
      if (asn1.sub.length === 3) {
        asn1 = asn1.sub[2].sub[0];
      }
      if (asn1.sub.length === 9) {
        // Parse the private key.
        modulus = asn1.sub[1].getHexStringValue(); // bigint
        this.n = (0, _jsbn.parseBigInt)(modulus, 16);
        public_exponent = asn1.sub[2].getHexStringValue(); // int
        this.e = parseInt(public_exponent, 16);
        var private_exponent = asn1.sub[3].getHexStringValue(); // bigint
        this.d = (0, _jsbn.parseBigInt)(private_exponent, 16);
        var prime1 = asn1.sub[4].getHexStringValue(); // bigint
        this.p = (0, _jsbn.parseBigInt)(prime1, 16);
        var prime2 = asn1.sub[5].getHexStringValue(); // bigint
        this.q = (0, _jsbn.parseBigInt)(prime2, 16);
        var exponent1 = asn1.sub[6].getHexStringValue(); // bigint
        this.dmp1 = (0, _jsbn.parseBigInt)(exponent1, 16);
        var exponent2 = asn1.sub[7].getHexStringValue(); // bigint
        this.dmq1 = (0, _jsbn.parseBigInt)(exponent2, 16);
        var coefficient = asn1.sub[8].getHexStringValue(); // bigint
        this.coeff = (0, _jsbn.parseBigInt)(coefficient, 16);
      } else if (asn1.sub.length === 2) {
        if (asn1.sub[0].sub) {
          // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509
          var bit_string = asn1.sub[1];
          var sequence = bit_string.sub[0];
          modulus = sequence.sub[0].getHexStringValue();
          this.n = (0, _jsbn.parseBigInt)(modulus, 16);
          public_exponent = sequence.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        } else {
          // Parse ASN.1 RSAPublicKey type as defined by PKCS #1
          modulus = asn1.sub[0].getHexStringValue();
          this.n = (0, _jsbn.parseBigInt)(modulus, 16);
          public_exponent = asn1.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        }
      } else {
        return false;
      }
      return true;
    } catch (ex) {
      return false;
    }
  };
  /**
   * Translate rsa parameters in a hex encoded string representing the rsa key.
   *
   * The translation follow the ASN.1 notation :
   * RSAPrivateKey ::= SEQUENCE {
   *   version           Version,
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER,  -- e
   *   privateExponent   INTEGER,  -- d
   *   prime1            INTEGER,  -- p
   *   prime2            INTEGER,  -- q
   *   exponent1         INTEGER,  -- d mod (p1)
   *   exponent2         INTEGER,  -- d mod (q-1)
   *   coefficient       INTEGER,  -- (inverse of q) mod p
   * }
   * @returns {string}  DER Encoded String representing the rsa private key
   * @private
   */
  JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {
    var options = {
      array: [new _asn2.KJUR.asn1.DERInteger({
        int: 0
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.n
      }), new _asn2.KJUR.asn1.DERInteger({
        int: this.e
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.d
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.p
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.q
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.dmp1
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.dmq1
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.coeff
      })]
    };
    var seq = new _asn2.KJUR.asn1.DERSequence(options);
    return seq.getEncodedHex();
  };
  /**
   * base64 (pem) encoded version of the DER encoded representation
   * @returns {string} pem encoded representation without header and footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {
    return (0, _base.hex2b64)(this.getPrivateBaseKey());
  };
  /**
   * Translate rsa parameters in a hex encoded string representing the rsa public key.
   * The representation follow the ASN.1 notation :
   * PublicKeyInfo ::= SEQUENCE {
   *   algorithm       AlgorithmIdentifier,
   *   PublicKey       BIT STRING
   * }
   * Where AlgorithmIdentifier is:
   * AlgorithmIdentifier ::= SEQUENCE {
   *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
   *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
   * }
   * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
   * RSAPublicKey ::= SEQUENCE {
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER   -- e
   * }
   * @returns {string} DER Encoded String representing the rsa public key
   * @private
   */
  JSEncryptRSAKey.prototype.getPublicBaseKey = function () {
    var first_sequence = new _asn2.KJUR.asn1.DERSequence({
      array: [new _asn2.KJUR.asn1.DERObjectIdentifier({
        oid: "1.2.840.113549.1.1.1"
      }), new _asn2.KJUR.asn1.DERNull()]
    });
    var second_sequence = new _asn2.KJUR.asn1.DERSequence({
      array: [new _asn2.KJUR.asn1.DERInteger({
        bigint: this.n
      }), new _asn2.KJUR.asn1.DERInteger({
        int: this.e
      })]
    });
    var bit_string = new _asn2.KJUR.asn1.DERBitString({
      hex: "00" + second_sequence.getEncodedHex()
    });
    var seq = new _asn2.KJUR.asn1.DERSequence({
      array: [first_sequence, bit_string]
    });
    return seq.getEncodedHex();
  };
  /**
   * base64 (pem) encoded version of the DER encoded representation
   * @returns {string} pem encoded representation without header and footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {
    return (0, _base.hex2b64)(this.getPublicBaseKey());
  };
  /**
   * wrap the string in block of width chars. The default value for rsa keys is 64
   * characters.
   * @param {string} str the pem encoded string without header and footer
   * @param {Number} [width=64] - the length the string has to be wrapped at
   * @returns {string}
   * @private
   */
  JSEncryptRSAKey.wordwrap = function (str, width) {
    width = width || 64;
    if (!str) {
      return str;
    }
    var regex = "(.{1," + width + "})( +|$\n?)|(.{1," + width + "})";
    return str.match(RegExp(regex, "g")).join("\n");
  };
  /**
   * Retrieve the pem encoded private key
   * @returns {string} the pem encoded private key with header/footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPrivateKey = function () {
    var key = "-----BEGIN RSA PRIVATE KEY-----\n";
    key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + "\n";
    key += "-----END RSA PRIVATE KEY-----";
    return key;
  };
  /**
   * Retrieve the pem encoded public key
   * @returns {string} the pem encoded public key with header/footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPublicKey = function () {
    var key = "-----BEGIN PUBLIC KEY-----\n";
    key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + "\n";
    key += "-----END PUBLIC KEY-----";
    return key;
  };
  /**
   * Check if the object contains the necessary parameters to populate the rsa modulus
   * and public exponent parameters.
   * @param {Object} [obj={}] - An object that may contain the two public key
   * parameters
   * @returns {boolean} true if the object contains both the modulus and the public exponent
   * properties (n and e)
   * @todo check for types of n and e. N should be a parseable bigInt object, E should
   * be a parseable integer number
   * @private
   */
  JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {
    obj = obj || {};
    return obj.hasOwnProperty("n") && obj.hasOwnProperty("e");
  };
  /**
   * Check if the object contains ALL the parameters of an RSA key.
   * @param {Object} [obj={}] - An object that may contain nine rsa key
   * parameters
   * @returns {boolean} true if the object contains all the parameters needed
   * @todo check for types of the parameters all the parameters but the public exponent
   * should be parseable bigint objects, the public exponent should be a parseable integer number
   * @private
   */
  JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {
    obj = obj || {};
    return obj.hasOwnProperty("n") && obj.hasOwnProperty("e") && obj.hasOwnProperty("d") && obj.hasOwnProperty("p") && obj.hasOwnProperty("q") && obj.hasOwnProperty("dmp1") && obj.hasOwnProperty("dmq1") && obj.hasOwnProperty("coeff");
  };
  /**
   * Parse the properties of obj in the current rsa object. Obj should AT LEAST
   * include the modulus and public exponent (n, e) parameters.
   * @param {Object} obj - the object containing rsa parameters
   * @private
   */
  JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {
    this.n = obj.n;
    this.e = obj.e;
    if (obj.hasOwnProperty("d")) {
      this.d = obj.d;
      this.p = obj.p;
      this.q = obj.q;
      this.dmp1 = obj.dmp1;
      this.dmq1 = obj.dmq1;
      this.coeff = obj.coeff;
    }
  };
  return JSEncryptRSAKey;
}(_rsa.RSAKey);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/index.js":
/*!************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "JSEncrypt", ({
  enumerable: true,
  get: function () {
    return _JSEncrypt.JSEncrypt;
  }
}));
exports["default"] = void 0;
var _JSEncrypt = __webpack_require__(/*! ./JSEncrypt */ "./src/Common/libs/jsencrypt/lib/JSEncrypt.js");
var _default = exports["default"] = _JSEncrypt.JSEncrypt;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Stream = exports.ASN1Tag = exports.ASN1 = void 0;
var _int = __webpack_require__(/*! ./int10 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js");
// ASN.1 JavaScript decoder
// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
/*global oids */

var ellipsis = "\u2026";
var reTimeS = /^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
var reTimeL = /^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
function stringCut(str, len) {
  if (str.length > len) {
    str = str.substring(0, len) + ellipsis;
  }
  return str;
}
var Stream = exports.Stream = /** @class */function () {
  function Stream(enc, pos) {
    this.hexDigits = "0123456789ABCDEF";
    if (enc instanceof Stream) {
      this.enc = enc.enc;
      this.pos = enc.pos;
    } else {
      // enc should be an array or a binary string
      this.enc = enc;
      this.pos = pos;
    }
  }
  Stream.prototype.get = function (pos) {
    if (pos === undefined) {
      pos = this.pos++;
    }
    if (pos >= this.enc.length) {
      throw new Error("Requesting byte offset ".concat(pos, " on a stream of length ").concat(this.enc.length));
    }
    return "string" === typeof this.enc ? this.enc.charCodeAt(pos) : this.enc[pos];
  };
  Stream.prototype.hexByte = function (b) {
    return this.hexDigits.charAt(b >> 4 & 0xF) + this.hexDigits.charAt(b & 0xF);
  };
  Stream.prototype.hexDump = function (start, end, raw) {
    var s = "";
    for (var i = start; i < end; ++i) {
      s += this.hexByte(this.get(i));
      if (raw !== true) {
        switch (i & 0xF) {
          case 0x7:
            s += "  ";
            break;
          case 0xF:
            s += "\n";
            break;
          default:
            s += " ";
        }
      }
    }
    return s;
  };
  Stream.prototype.isASCII = function (start, end) {
    for (var i = start; i < end; ++i) {
      var c = this.get(i);
      if (c < 32 || c > 176) {
        return false;
      }
    }
    return true;
  };
  Stream.prototype.parseStringISO = function (start, end) {
    var s = "";
    for (var i = start; i < end; ++i) {
      s += String.fromCharCode(this.get(i));
    }
    return s;
  };
  Stream.prototype.parseStringUTF = function (start, end) {
    var s = "";
    for (var i = start; i < end;) {
      var c = this.get(i++);
      if (c < 128) {
        s += String.fromCharCode(c);
      } else if (c > 191 && c < 224) {
        s += String.fromCharCode((c & 0x1F) << 6 | this.get(i++) & 0x3F);
      } else {
        s += String.fromCharCode((c & 0x0F) << 12 | (this.get(i++) & 0x3F) << 6 | this.get(i++) & 0x3F);
      }
    }
    return s;
  };
  Stream.prototype.parseStringBMP = function (start, end) {
    var str = "";
    var hi;
    var lo;
    for (var i = start; i < end;) {
      hi = this.get(i++);
      lo = this.get(i++);
      str += String.fromCharCode(hi << 8 | lo);
    }
    return str;
  };
  Stream.prototype.parseTime = function (start, end, shortYear) {
    var s = this.parseStringISO(start, end);
    var m = (shortYear ? reTimeS : reTimeL).exec(s);
    if (!m) {
      return "Unrecognized time: " + s;
    }
    if (shortYear) {
      // to avoid querying the timer, use the fixed range [1970, 2069]
      // it will conform with ITU X.400 [-10, +40] sliding window until 2030
      m[1] = +m[1];
      m[1] += +m[1] < 70 ? 2000 : 1900;
    }
    s = m[1] + "-" + m[2] + "-" + m[3] + " " + m[4];
    if (m[5]) {
      s += ":" + m[5];
      if (m[6]) {
        s += ":" + m[6];
        if (m[7]) {
          s += "." + m[7];
        }
      }
    }
    if (m[8]) {
      s += " UTC";
      if (m[8] != "Z") {
        s += m[8];
        if (m[9]) {
          s += ":" + m[9];
        }
      }
    }
    return s;
  };
  Stream.prototype.parseInteger = function (start, end) {
    var v = this.get(start);
    var neg = v > 127;
    var pad = neg ? 255 : 0;
    var len;
    var s = "";
    // skip unuseful bits (not allowed in DER)
    while (v == pad && ++start < end) {
      v = this.get(start);
    }
    len = end - start;
    if (len === 0) {
      return neg ? -1 : 0;
    }
    // show bit length of huge integers
    if (len > 4) {
      s = v;
      len <<= 3;
      while (((+s ^ pad) & 0x80) == 0) {
        s = +s << 1;
        --len;
      }
      s = "(" + len + " bit)\n";
    }
    // decode the integer
    if (neg) {
      v = v - 256;
    }
    var n = new _int.Int10(v);
    for (var i = start + 1; i < end; ++i) {
      n.mulAdd(256, this.get(i));
    }
    return s + n.toString();
  };
  Stream.prototype.parseBitString = function (start, end, maxLength) {
    var unusedBit = this.get(start);
    var lenBit = (end - start - 1 << 3) - unusedBit;
    var intro = "(" + lenBit + " bit)\n";
    var s = "";
    for (var i = start + 1; i < end; ++i) {
      var b = this.get(i);
      var skip = i == end - 1 ? unusedBit : 0;
      for (var j = 7; j >= skip; --j) {
        s += b >> j & 1 ? "1" : "0";
      }
      if (s.length > maxLength) {
        return intro + stringCut(s, maxLength);
      }
    }
    return intro + s;
  };
  Stream.prototype.parseOctetString = function (start, end, maxLength) {
    if (this.isASCII(start, end)) {
      return stringCut(this.parseStringISO(start, end), maxLength);
    }
    var len = end - start;
    var s = "(" + len + " byte)\n";
    maxLength /= 2; // we work in bytes
    if (len > maxLength) {
      end = start + maxLength;
    }
    for (var i = start; i < end; ++i) {
      s += this.hexByte(this.get(i));
    }
    if (len > maxLength) {
      s += ellipsis;
    }
    return s;
  };
  Stream.prototype.parseOID = function (start, end, maxLength) {
    var s = "";
    var n = new _int.Int10();
    var bits = 0;
    for (var i = start; i < end; ++i) {
      var v = this.get(i);
      n.mulAdd(128, v & 0x7F);
      bits += 7;
      if (!(v & 0x80)) {
        // finished
        if (s === "") {
          n = n.simplify();
          if (n instanceof _int.Int10) {
            n.sub(80);
            s = "2." + n.toString();
          } else {
            var m = n < 80 ? n < 40 ? 0 : 1 : 2;
            s = m + "." + (n - m * 40);
          }
        } else {
          s += "." + n.toString();
        }
        if (s.length > maxLength) {
          return stringCut(s, maxLength);
        }
        n = new _int.Int10();
        bits = 0;
      }
    }
    if (bits > 0) {
      s += ".incomplete";
    }
    return s;
  };
  return Stream;
}();
var ASN1 = exports.ASN1 = /** @class */function () {
  function ASN1(stream, header, length, tag, sub) {
    if (!(tag instanceof ASN1Tag)) {
      throw new Error("Invalid tag value.");
    }
    this.stream = stream;
    this.header = header;
    this.length = length;
    this.tag = tag;
    this.sub = sub;
  }
  ASN1.prototype.typeName = function () {
    switch (this.tag.tagClass) {
      case 0:
        // universal
        switch (this.tag.tagNumber) {
          case 0x00:
            return "EOC";
          case 0x01:
            return "BOOLEAN";
          case 0x02:
            return "INTEGER";
          case 0x03:
            return "BIT_STRING";
          case 0x04:
            return "OCTET_STRING";
          case 0x05:
            return "NULL";
          case 0x06:
            return "OBJECT_IDENTIFIER";
          case 0x07:
            return "ObjectDescriptor";
          case 0x08:
            return "EXTERNAL";
          case 0x09:
            return "REAL";
          case 0x0A:
            return "ENUMERATED";
          case 0x0B:
            return "EMBEDDED_PDV";
          case 0x0C:
            return "UTF8String";
          case 0x10:
            return "SEQUENCE";
          case 0x11:
            return "SET";
          case 0x12:
            return "NumericString";
          case 0x13:
            return "PrintableString";
          // ASCII subset
          case 0x14:
            return "TeletexString";
          // aka T61String
          case 0x15:
            return "VideotexString";
          case 0x16:
            return "IA5String";
          // ASCII
          case 0x17:
            return "UTCTime";
          case 0x18:
            return "GeneralizedTime";
          case 0x19:
            return "GraphicString";
          case 0x1A:
            return "VisibleString";
          // ASCII subset
          case 0x1B:
            return "GeneralString";
          case 0x1C:
            return "UniversalString";
          case 0x1E:
            return "BMPString";
        }
        return "Universal_" + this.tag.tagNumber.toString();
      case 1:
        return "Application_" + this.tag.tagNumber.toString();
      case 2:
        return "[" + this.tag.tagNumber.toString() + "]";
      // Context
      case 3:
        return "Private_" + this.tag.tagNumber.toString();
    }
  };
  ASN1.prototype.content = function (maxLength) {
    if (this.tag === undefined) {
      return null;
    }
    if (maxLength === undefined) {
      maxLength = Infinity;
    }
    var content = this.posContent();
    var len = Math.abs(this.length);
    if (!this.tag.isUniversal()) {
      if (this.sub !== null) {
        return "(" + this.sub.length + " elem)";
      }
      return this.stream.parseOctetString(content, content + len, maxLength);
    }
    switch (this.tag.tagNumber) {
      case 0x01:
        // BOOLEAN
        return this.stream.get(content) === 0 ? "false" : "true";
      case 0x02:
        // INTEGER
        return this.stream.parseInteger(content, content + len);
      case 0x03:
        // BIT_STRING
        return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseBitString(content, content + len, maxLength);
      case 0x04:
        // OCTET_STRING
        return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseOctetString(content, content + len, maxLength);
      // case 0x05: // NULL
      case 0x06:
        // OBJECT_IDENTIFIER
        return this.stream.parseOID(content, content + len, maxLength);
      // case 0x07: // ObjectDescriptor
      // case 0x08: // EXTERNAL
      // case 0x09: // REAL
      // case 0x0A: // ENUMERATED
      // case 0x0B: // EMBEDDED_PDV
      case 0x10: // SEQUENCE
      case 0x11:
        // SET
        if (this.sub !== null) {
          return "(" + this.sub.length + " elem)";
        } else {
          return "(no elem)";
        }
      case 0x0C:
        // UTF8String
        return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);
      case 0x12: // NumericString
      case 0x13: // PrintableString
      case 0x14: // TeletexString
      case 0x15: // VideotexString
      case 0x16: // IA5String
      // case 0x19: // GraphicString
      case 0x1A:
        // VisibleString
        // case 0x1B: // GeneralString
        // case 0x1C: // UniversalString
        return stringCut(this.stream.parseStringISO(content, content + len), maxLength);
      case 0x1E:
        // BMPString
        return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);
      case 0x17: // UTCTime
      case 0x18:
        // GeneralizedTime
        return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);
    }
    return null;
  };
  ASN1.prototype.toString = function () {
    return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (this.sub === null ? "null" : this.sub.length) + "]";
  };
  ASN1.prototype.toPrettyString = function (indent) {
    if (indent === undefined) {
      indent = "";
    }
    var s = indent + this.typeName() + " @" + this.stream.pos;
    if (this.length >= 0) {
      s += "+";
    }
    s += this.length;
    if (this.tag.tagConstructed) {
      s += " (constructed)";
    } else if (this.tag.isUniversal() && (this.tag.tagNumber == 0x03 || this.tag.tagNumber == 0x04) && this.sub !== null) {
      s += " (encapsulates)";
    }
    s += "\n";
    if (this.sub !== null) {
      indent += "  ";
      for (var i = 0, max = this.sub.length; i < max; ++i) {
        s += this.sub[i].toPrettyString(indent);
      }
    }
    return s;
  };
  ASN1.prototype.posStart = function () {
    return this.stream.pos;
  };
  ASN1.prototype.posContent = function () {
    return this.stream.pos + this.header;
  };
  ASN1.prototype.posEnd = function () {
    return this.stream.pos + this.header + Math.abs(this.length);
  };
  ASN1.prototype.toHexString = function () {
    return this.stream.hexDump(this.posStart(), this.posEnd(), true);
  };
  ASN1.decodeLength = function (stream) {
    var buf = stream.get();
    var len = buf & 0x7F;
    if (len == buf) {
      return len;
    }
    // no reason to use Int10, as it would be a huge buffer anyways
    if (len > 6) {
      throw new Error("Length over 48 bits not supported at position " + (stream.pos - 1));
    }
    if (len === 0) {
      return null;
    } // undefined
    buf = 0;
    for (var i = 0; i < len; ++i) {
      buf = buf * 256 + stream.get();
    }
    return buf;
  };
  /**
   * Retrieve the hexadecimal value (as a string) of the current ASN.1 element
   * @returns {string}
   * @public
   */
  ASN1.prototype.getHexStringValue = function () {
    var hexString = this.toHexString();
    var offset = this.header * 2;
    var length = this.length * 2;
    return hexString.substr(offset, length);
  };
  ASN1.decode = function (str) {
    var stream;
    if (!(str instanceof Stream)) {
      stream = new Stream(str, 0);
    } else {
      stream = str;
    }
    var streamStart = new Stream(stream);
    var tag = new ASN1Tag(stream);
    var len = ASN1.decodeLength(stream);
    var start = stream.pos;
    var header = start - streamStart.pos;
    var sub = null;
    var getSub = function () {
      var ret = [];
      if (len !== null) {
        // definite length
        var end = start + len;
        while (stream.pos < end) {
          ret[ret.length] = ASN1.decode(stream);
        }
        if (stream.pos != end) {
          throw new Error("Content size is not correct for container starting at offset " + start);
        }
      } else {
        // undefined length
        try {
          for (;;) {
            var s = ASN1.decode(stream);
            if (s.tag.isEOC()) {
              break;
            }
            ret[ret.length] = s;
          }
          len = start - stream.pos; // undefined lengths are represented as negative values
        } catch (e) {
          throw new Error("Exception while decoding undefined length content: " + e);
        }
      }
      return ret;
    };
    if (tag.tagConstructed) {
      // must have valid content
      sub = getSub();
    } else if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {
      // sometimes BitString and OctetString are used to encapsulate ASN.1
      try {
        if (tag.tagNumber == 0x03) {
          if (stream.get() != 0) {
            throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
          }
        }
        sub = getSub();
        for (var i = 0; i < sub.length; ++i) {
          if (sub[i].tag.isEOC()) {
            throw new Error("EOC is not supposed to be actual content.");
          }
        }
      } catch (e) {
        // but silently ignore when they don't
        sub = null;
      }
    }
    if (sub === null) {
      if (len === null) {
        throw new Error("We can't skip over an invalid tag with undefined length at offset " + start);
      }
      stream.pos = start + Math.abs(len);
    }
    return new ASN1(streamStart, header, len, tag, sub);
  };
  return ASN1;
}();
var ASN1Tag = exports.ASN1Tag = /** @class */function () {
  function ASN1Tag(stream) {
    var buf = stream.get();
    this.tagClass = buf >> 6;
    this.tagConstructed = (buf & 0x20) !== 0;
    this.tagNumber = buf & 0x1F;
    if (this.tagNumber == 0x1F) {
      // long tag
      var n = new _int.Int10();
      do {
        buf = stream.get();
        n.mulAdd(128, buf & 0x7F);
      } while (buf & 0x80);
      this.tagNumber = n.simplify();
    }
  }
  ASN1Tag.prototype.isUniversal = function () {
    return this.tagClass === 0x00;
  };
  ASN1Tag.prototype.isEOC = function () {
    return this.tagClass === 0x00 && this.tagNumber === 0x00;
  };
  return ASN1Tag;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js":
/*!************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Base64 = void 0;
// Base64 JavaScript decoder
// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var decoder;
var Base64 = exports.Base64 = {
  decode: function (a) {
    var i;
    if (decoder === undefined) {
      var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var ignore = "= \f\n\r\t\u00A0\u2028\u2029";
      decoder = Object.create(null);
      for (i = 0; i < 64; ++i) {
        decoder[b64.charAt(i)] = i;
      }
      decoder['-'] = 62; //+
      decoder['_'] = 63; //-
      for (i = 0; i < ignore.length; ++i) {
        decoder[ignore.charAt(i)] = -1;
      }
    }
    var out = [];
    var bits = 0;
    var char_count = 0;
    for (i = 0; i < a.length; ++i) {
      var c = a.charAt(i);
      if (c == "=") {
        break;
      }
      c = decoder[c];
      if (c == -1) {
        continue;
      }
      if (c === undefined) {
        throw new Error("Illegal character at offset " + i);
      }
      bits |= c;
      if (++char_count >= 4) {
        out[out.length] = bits >> 16;
        out[out.length] = bits >> 8 & 0xFF;
        out[out.length] = bits & 0xFF;
        bits = 0;
        char_count = 0;
      } else {
        bits <<= 6;
      }
    }
    switch (char_count) {
      case 1:
        throw new Error("Base64 encoding incomplete: at least 2 bits missing");
      case 2:
        out[out.length] = bits >> 10;
        break;
      case 3:
        out[out.length] = bits >> 16;
        out[out.length] = bits >> 8 & 0xFF;
        break;
    }
    return out;
  },
  re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
  unarmor: function (a) {
    var m = Base64.re.exec(a);
    if (m) {
      if (m[1]) {
        a = m[1];
      } else if (m[2]) {
        a = m[2];
      } else {
        throw new Error("RegExp out of sync");
      }
    }
    return Base64.decode(a);
  }
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js":
/*!*********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Hex = void 0;
// Hex JavaScript decoder
// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var decoder;
var Hex = exports.Hex = {
  decode: function (a) {
    var i;
    if (decoder === undefined) {
      var hex = "0123456789ABCDEF";
      var ignore = " \f\n\r\t\u00A0\u2028\u2029";
      decoder = {};
      for (i = 0; i < 16; ++i) {
        decoder[hex.charAt(i)] = i;
      }
      hex = hex.toLowerCase();
      for (i = 10; i < 16; ++i) {
        decoder[hex.charAt(i)] = i;
      }
      for (i = 0; i < ignore.length; ++i) {
        decoder[ignore.charAt(i)] = -1;
      }
    }
    var out = [];
    var bits = 0;
    var char_count = 0;
    for (i = 0; i < a.length; ++i) {
      var c = a.charAt(i);
      if (c == "=") {
        break;
      }
      c = decoder[c];
      if (c == -1) {
        continue;
      }
      if (c === undefined) {
        throw new Error("Illegal character at offset " + i);
      }
      bits |= c;
      if (++char_count >= 2) {
        out[out.length] = bits;
        bits = 0;
        char_count = 0;
      } else {
        bits <<= 4;
      }
    }
    if (char_count) {
      throw new Error("Hex encoding incomplete: 4 bits missing");
    }
    return out;
  }
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js":
/*!***********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Int10 = void 0;
// Big integer base-10 printing library
// Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256
var Int10 = exports.Int10 = /** @class */function () {
  function Int10(value) {
    this.buf = [+value || 0];
  }
  Int10.prototype.mulAdd = function (m, c) {
    // assert(m <= 256)
    var b = this.buf;
    var l = b.length;
    var i;
    var t;
    for (i = 0; i < l; ++i) {
      t = b[i] * m + c;
      if (t < max) {
        c = 0;
      } else {
        c = 0 | t / max;
        t -= c * max;
      }
      b[i] = t;
    }
    if (c > 0) {
      b[i] = c;
    }
  };
  Int10.prototype.sub = function (c) {
    // assert(m <= 256)
    var b = this.buf;
    var l = b.length;
    var i;
    var t;
    for (i = 0; i < l; ++i) {
      t = b[i] - c;
      if (t < 0) {
        t += max;
        c = 1;
      } else {
        c = 0;
      }
      b[i] = t;
    }
    while (b[b.length - 1] === 0) {
      b.pop();
    }
  };
  Int10.prototype.toString = function (base) {
    if ((base || 10) != 10) {
      throw new Error("only base 10 is supported");
    }
    var b = this.buf;
    var s = b[b.length - 1].toString();
    for (var i = b.length - 2; i >= 0; --i) {
      s += (max + b[i]).toString().substring(1);
    }
    return s;
  };
  Int10.prototype.valueOf = function () {
    var b = this.buf;
    var v = 0;
    for (var i = b.length - 1; i >= 0; --i) {
      v = v * max + b[i];
    }
    return v;
  };
  Int10.prototype.simplify = function () {
    var b = this.buf;
    return b.length == 1 ? b[0] : this;
  };
  return Int10;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.b64toBA = b64toBA;
exports.b64tohex = b64tohex;
exports.hex2b64 = hex2b64;
var _util = __webpack_require__(/*! ./util */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js");
var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var b64pad = "=";
function hex2b64(h) {
  var i;
  var c;
  var ret = "";
  for (i = 0; i + 3 <= h.length; i += 3) {
    c = parseInt(h.substring(i, i + 3), 16);
    ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
  }
  if (i + 1 == h.length) {
    c = parseInt(h.substring(i, i + 1), 16);
    ret += b64map.charAt(c << 2);
  } else if (i + 2 == h.length) {
    c = parseInt(h.substring(i, i + 2), 16);
    ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
  }
  while ((ret.length & 3) > 0) {
    ret += b64pad;
  }
  return ret;
}
// convert a base64 string to hex
function b64tohex(s) {
  var ret = "";
  var i;
  var k = 0; // b64 state, 0-3
  var slop = 0;
  for (i = 0; i < s.length; ++i) {
    if (s.charAt(i) == b64pad) {
      break;
    }
    var v = b64map.indexOf(s.charAt(i));
    if (v < 0) {
      continue;
    }
    if (k == 0) {
      ret += (0, _util.int2char)(v >> 2);
      slop = v & 3;
      k = 1;
    } else if (k == 1) {
      ret += (0, _util.int2char)(slop << 2 | v >> 4);
      slop = v & 0xf;
      k = 2;
    } else if (k == 2) {
      ret += (0, _util.int2char)(slop);
      ret += (0, _util.int2char)(v >> 2);
      slop = v & 3;
      k = 3;
    } else {
      ret += (0, _util.int2char)(slop << 2 | v >> 4);
      ret += (0, _util.int2char)(v & 0xf);
      k = 0;
    }
  }
  if (k == 1) {
    ret += (0, _util.int2char)(slop << 2);
  }
  return ret;
}
// convert a base64 string to a byte/number array
function b64toBA(s) {
  // piggyback on b64tohex for now, optimize later
  var h = b64tohex(s);
  var i;
  var a = [];
  for (i = 0; 2 * i < h.length; ++i) {
    a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);
  }
  return a;
}

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js":
/*!********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BigInteger = void 0;
exports.intAt = intAt;
exports.nbi = nbi;
exports.nbits = nbits;
exports.nbv = nbv;
exports.parseBigInt = parseBigInt;
var _util = __webpack_require__(/*! ./util */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js");
// Copyright (c) 2005  Tom Wu
// All Rights Reserved.
// See "LICENSE" for details.
// Basic JavaScript BN library - subset useful for RSA encryption.

// Bits per digit
var dbits;
// JavaScript engine analysis
var canary = 0xdeadbeefcafe;
var j_lm = (canary & 0xffffff) == 0xefcafe;
//#region
var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
//#endregion
// (public) Constructor
var BigInteger = exports.BigInteger = /** @class */function () {
  function BigInteger(a, b, c) {
    if (a != null) {
      if ("number" == typeof a) {
        this.fromNumber(a, b, c);
      } else if (b == null && "string" != typeof a) {
        this.fromString(a, 256);
      } else {
        this.fromString(a, b);
      }
    }
  }
  //#region PUBLIC
  // BigInteger.prototype.toString = bnToString;
  // (public) return string representation in given radix
  BigInteger.prototype.toString = function (b) {
    if (this.s < 0) {
      return "-" + this.negate().toString(b);
    }
    var k;
    if (b == 16) {
      k = 4;
    } else if (b == 8) {
      k = 3;
    } else if (b == 2) {
      k = 1;
    } else if (b == 32) {
      k = 5;
    } else if (b == 4) {
      k = 2;
    } else {
      return this.toRadix(b);
    }
    var km = (1 << k) - 1;
    var d;
    var m = false;
    var r = "";
    var i = this.t;
    var p = this.DB - i * this.DB % k;
    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) > 0) {
        m = true;
        r = (0, _util.int2char)(d);
      }
      while (i >= 0) {
        if (p < k) {
          d = (this[i] & (1 << p) - 1) << k - p;
          d |= this[--i] >> (p += this.DB - k);
        } else {
          d = this[i] >> (p -= k) & km;
          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }
        if (d > 0) {
          m = true;
        }
        if (m) {
          r += (0, _util.int2char)(d);
        }
      }
    }
    return m ? r : "0";
  };
  // BigInteger.prototype.negate = bnNegate;
  // (public) -this
  BigInteger.prototype.negate = function () {
    var r = nbi();
    BigInteger.ZERO.subTo(this, r);
    return r;
  };
  // BigInteger.prototype.abs = bnAbs;
  // (public) |this|
  BigInteger.prototype.abs = function () {
    return this.s < 0 ? this.negate() : this;
  };
  // BigInteger.prototype.compareTo = bnCompareTo;
  // (public) return + if this > a, - if this < a, 0 if equal
  BigInteger.prototype.compareTo = function (a) {
    var r = this.s - a.s;
    if (r != 0) {
      return r;
    }
    var i = this.t;
    r = i - a.t;
    if (r != 0) {
      return this.s < 0 ? -r : r;
    }
    while (--i >= 0) {
      if ((r = this[i] - a[i]) != 0) {
        return r;
      }
    }
    return 0;
  };
  // BigInteger.prototype.bitLength = bnBitLength;
  // (public) return the number of bits in "this"
  BigInteger.prototype.bitLength = function () {
    if (this.t <= 0) {
      return 0;
    }
    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
  };
  // BigInteger.prototype.mod = bnMod;
  // (public) this mod a
  BigInteger.prototype.mod = function (a) {
    var r = nbi();
    this.abs().divRemTo(a, null, r);
    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
      a.subTo(r, r);
    }
    return r;
  };
  // BigInteger.prototype.modPowInt = bnModPowInt;
  // (public) this^e % m, 0 <= e < 2^32
  BigInteger.prototype.modPowInt = function (e, m) {
    var z;
    if (e < 256 || m.isEven()) {
      z = new Classic(m);
    } else {
      z = new Montgomery(m);
    }
    return this.exp(e, z);
  };
  // BigInteger.prototype.clone = bnClone;
  // (public)
  BigInteger.prototype.clone = function () {
    var r = nbi();
    this.copyTo(r);
    return r;
  };
  // BigInteger.prototype.intValue = bnIntValue;
  // (public) return value as integer
  BigInteger.prototype.intValue = function () {
    if (this.s < 0) {
      if (this.t == 1) {
        return this[0] - this.DV;
      } else if (this.t == 0) {
        return -1;
      }
    } else if (this.t == 1) {
      return this[0];
    } else if (this.t == 0) {
      return 0;
    }
    // assumes 16 < DB < 32
    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
  };
  // BigInteger.prototype.byteValue = bnByteValue;
  // (public) return value as byte
  BigInteger.prototype.byteValue = function () {
    return this.t == 0 ? this.s : this[0] << 24 >> 24;
  };
  // BigInteger.prototype.shortValue = bnShortValue;
  // (public) return value as short (assumes DB>=16)
  BigInteger.prototype.shortValue = function () {
    return this.t == 0 ? this.s : this[0] << 16 >> 16;
  };
  // BigInteger.prototype.signum = bnSigNum;
  // (public) 0 if this == 0, 1 if this > 0
  BigInteger.prototype.signum = function () {
    if (this.s < 0) {
      return -1;
    } else if (this.t <= 0 || this.t == 1 && this[0] <= 0) {
      return 0;
    } else {
      return 1;
    }
  };
  // BigInteger.prototype.toByteArray = bnToByteArray;
  // (public) convert to bigendian byte array
  BigInteger.prototype.toByteArray = function () {
    var i = this.t;
    var r = [];
    r[0] = this.s;
    var p = this.DB - i * this.DB % 8;
    var d;
    var k = 0;
    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {
        r[k++] = d | this.s << this.DB - p;
      }
      while (i >= 0) {
        if (p < 8) {
          d = (this[i] & (1 << p) - 1) << 8 - p;
          d |= this[--i] >> (p += this.DB - 8);
        } else {
          d = this[i] >> (p -= 8) & 0xff;
          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }
        if ((d & 0x80) != 0) {
          d |= -256;
        }
        if (k == 0 && (this.s & 0x80) != (d & 0x80)) {
          ++k;
        }
        if (k > 0 || d != this.s) {
          r[k++] = d;
        }
      }
    }
    return r;
  };
  // BigInteger.prototype.equals = bnEquals;
  BigInteger.prototype.equals = function (a) {
    return this.compareTo(a) == 0;
  };
  // BigInteger.prototype.min = bnMin;
  BigInteger.prototype.min = function (a) {
    return this.compareTo(a) < 0 ? this : a;
  };
  // BigInteger.prototype.max = bnMax;
  BigInteger.prototype.max = function (a) {
    return this.compareTo(a) > 0 ? this : a;
  };
  // BigInteger.prototype.and = bnAnd;
  BigInteger.prototype.and = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_and, r);
    return r;
  };
  // BigInteger.prototype.or = bnOr;
  BigInteger.prototype.or = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_or, r);
    return r;
  };
  // BigInteger.prototype.xor = bnXor;
  BigInteger.prototype.xor = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_xor, r);
    return r;
  };
  // BigInteger.prototype.andNot = bnAndNot;
  BigInteger.prototype.andNot = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_andnot, r);
    return r;
  };
  // BigInteger.prototype.not = bnNot;
  // (public) ~this
  BigInteger.prototype.not = function () {
    var r = nbi();
    for (var i = 0; i < this.t; ++i) {
      r[i] = this.DM & ~this[i];
    }
    r.t = this.t;
    r.s = ~this.s;
    return r;
  };
  // BigInteger.prototype.shiftLeft = bnShiftLeft;
  // (public) this << n
  BigInteger.prototype.shiftLeft = function (n) {
    var r = nbi();
    if (n < 0) {
      this.rShiftTo(-n, r);
    } else {
      this.lShiftTo(n, r);
    }
    return r;
  };
  // BigInteger.prototype.shiftRight = bnShiftRight;
  // (public) this >> n
  BigInteger.prototype.shiftRight = function (n) {
    var r = nbi();
    if (n < 0) {
      this.lShiftTo(-n, r);
    } else {
      this.rShiftTo(n, r);
    }
    return r;
  };
  // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
  // (public) returns index of lowest 1-bit (or -1 if none)
  BigInteger.prototype.getLowestSetBit = function () {
    for (var i = 0; i < this.t; ++i) {
      if (this[i] != 0) {
        return i * this.DB + (0, _util.lbit)(this[i]);
      }
    }
    if (this.s < 0) {
      return this.t * this.DB;
    }
    return -1;
  };
  // BigInteger.prototype.bitCount = bnBitCount;
  // (public) return number of set bits
  BigInteger.prototype.bitCount = function () {
    var r = 0;
    var x = this.s & this.DM;
    for (var i = 0; i < this.t; ++i) {
      r += (0, _util.cbit)(this[i] ^ x);
    }
    return r;
  };
  // BigInteger.prototype.testBit = bnTestBit;
  // (public) true iff nth bit is set
  BigInteger.prototype.testBit = function (n) {
    var j = Math.floor(n / this.DB);
    if (j >= this.t) {
      return this.s != 0;
    }
    return (this[j] & 1 << n % this.DB) != 0;
  };
  // BigInteger.prototype.setBit = bnSetBit;
  // (public) this | (1<<n)
  BigInteger.prototype.setBit = function (n) {
    return this.changeBit(n, _util.op_or);
  };
  // BigInteger.prototype.clearBit = bnClearBit;
  // (public) this & ~(1<<n)
  BigInteger.prototype.clearBit = function (n) {
    return this.changeBit(n, _util.op_andnot);
  };
  // BigInteger.prototype.flipBit = bnFlipBit;
  // (public) this ^ (1<<n)
  BigInteger.prototype.flipBit = function (n) {
    return this.changeBit(n, _util.op_xor);
  };
  // BigInteger.prototype.add = bnAdd;
  // (public) this + a
  BigInteger.prototype.add = function (a) {
    var r = nbi();
    this.addTo(a, r);
    return r;
  };
  // BigInteger.prototype.subtract = bnSubtract;
  // (public) this - a
  BigInteger.prototype.subtract = function (a) {
    var r = nbi();
    this.subTo(a, r);
    return r;
  };
  // BigInteger.prototype.multiply = bnMultiply;
  // (public) this * a
  BigInteger.prototype.multiply = function (a) {
    var r = nbi();
    this.multiplyTo(a, r);
    return r;
  };
  // BigInteger.prototype.divide = bnDivide;
  // (public) this / a
  BigInteger.prototype.divide = function (a) {
    var r = nbi();
    this.divRemTo(a, r, null);
    return r;
  };
  // BigInteger.prototype.remainder = bnRemainder;
  // (public) this % a
  BigInteger.prototype.remainder = function (a) {
    var r = nbi();
    this.divRemTo(a, null, r);
    return r;
  };
  // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
  // (public) [this/a,this%a]
  BigInteger.prototype.divideAndRemainder = function (a) {
    var q = nbi();
    var r = nbi();
    this.divRemTo(a, q, r);
    return [q, r];
  };
  // BigInteger.prototype.modPow = bnModPow;
  // (public) this^e % m (HAC 14.85)
  BigInteger.prototype.modPow = function (e, m) {
    var i = e.bitLength();
    var k;
    var r = nbv(1);
    var z;
    if (i <= 0) {
      return r;
    } else if (i < 18) {
      k = 1;
    } else if (i < 48) {
      k = 3;
    } else if (i < 144) {
      k = 4;
    } else if (i < 768) {
      k = 5;
    } else {
      k = 6;
    }
    if (i < 8) {
      z = new Classic(m);
    } else if (m.isEven()) {
      z = new Barrett(m);
    } else {
      z = new Montgomery(m);
    }
    // precomputation
    var g = [];
    var n = 3;
    var k1 = k - 1;
    var km = (1 << k) - 1;
    g[1] = z.convert(this);
    if (k > 1) {
      var g2 = nbi();
      z.sqrTo(g[1], g2);
      while (n <= km) {
        g[n] = nbi();
        z.mulTo(g2, g[n - 2], g[n]);
        n += 2;
      }
    }
    var j = e.t - 1;
    var w;
    var is1 = true;
    var r2 = nbi();
    var t;
    i = nbits(e[j]) - 1;
    while (j >= 0) {
      if (i >= k1) {
        w = e[j] >> i - k1 & km;
      } else {
        w = (e[j] & (1 << i + 1) - 1) << k1 - i;
        if (j > 0) {
          w |= e[j - 1] >> this.DB + i - k1;
        }
      }
      n = k;
      while ((w & 1) == 0) {
        w >>= 1;
        --n;
      }
      if ((i -= n) < 0) {
        i += this.DB;
        --j;
      }
      if (is1) {
        // ret == 1, don't bother squaring or multiplying it
        g[w].copyTo(r);
        is1 = false;
      } else {
        while (n > 1) {
          z.sqrTo(r, r2);
          z.sqrTo(r2, r);
          n -= 2;
        }
        if (n > 0) {
          z.sqrTo(r, r2);
        } else {
          t = r;
          r = r2;
          r2 = t;
        }
        z.mulTo(r2, g[w], r);
      }
      while (j >= 0 && (e[j] & 1 << i) == 0) {
        z.sqrTo(r, r2);
        t = r;
        r = r2;
        r2 = t;
        if (--i < 0) {
          i = this.DB - 1;
          --j;
        }
      }
    }
    return z.revert(r);
  };
  // BigInteger.prototype.modInverse = bnModInverse;
  // (public) 1/this % m (HAC 14.61)
  BigInteger.prototype.modInverse = function (m) {
    var ac = m.isEven();
    if (this.isEven() && ac || m.signum() == 0) {
      return BigInteger.ZERO;
    }
    var u = m.clone();
    var v = this.clone();
    var a = nbv(1);
    var b = nbv(0);
    var c = nbv(0);
    var d = nbv(1);
    while (u.signum() != 0) {
      while (u.isEven()) {
        u.rShiftTo(1, u);
        if (ac) {
          if (!a.isEven() || !b.isEven()) {
            a.addTo(this, a);
            b.subTo(m, b);
          }
          a.rShiftTo(1, a);
        } else if (!b.isEven()) {
          b.subTo(m, b);
        }
        b.rShiftTo(1, b);
      }
      while (v.isEven()) {
        v.rShiftTo(1, v);
        if (ac) {
          if (!c.isEven() || !d.isEven()) {
            c.addTo(this, c);
            d.subTo(m, d);
          }
          c.rShiftTo(1, c);
        } else if (!d.isEven()) {
          d.subTo(m, d);
        }
        d.rShiftTo(1, d);
      }
      if (u.compareTo(v) >= 0) {
        u.subTo(v, u);
        if (ac) {
          a.subTo(c, a);
        }
        b.subTo(d, b);
      } else {
        v.subTo(u, v);
        if (ac) {
          c.subTo(a, c);
        }
        d.subTo(b, d);
      }
    }
    if (v.compareTo(BigInteger.ONE) != 0) {
      return BigInteger.ZERO;
    }
    if (d.compareTo(m) >= 0) {
      return d.subtract(m);
    }
    if (d.signum() < 0) {
      d.addTo(m, d);
    } else {
      return d;
    }
    if (d.signum() < 0) {
      return d.add(m);
    } else {
      return d;
    }
  };
  // BigInteger.prototype.pow = bnPow;
  // (public) this^e
  BigInteger.prototype.pow = function (e) {
    return this.exp(e, new NullExp());
  };
  // BigInteger.prototype.gcd = bnGCD;
  // (public) gcd(this,a) (HAC 14.54)
  BigInteger.prototype.gcd = function (a) {
    var x = this.s < 0 ? this.negate() : this.clone();
    var y = a.s < 0 ? a.negate() : a.clone();
    if (x.compareTo(y) < 0) {
      var t = x;
      x = y;
      y = t;
    }
    var i = x.getLowestSetBit();
    var g = y.getLowestSetBit();
    if (g < 0) {
      return x;
    }
    if (i < g) {
      g = i;
    }
    if (g > 0) {
      x.rShiftTo(g, x);
      y.rShiftTo(g, y);
    }
    while (x.signum() > 0) {
      if ((i = x.getLowestSetBit()) > 0) {
        x.rShiftTo(i, x);
      }
      if ((i = y.getLowestSetBit()) > 0) {
        y.rShiftTo(i, y);
      }
      if (x.compareTo(y) >= 0) {
        x.subTo(y, x);
        x.rShiftTo(1, x);
      } else {
        y.subTo(x, y);
        y.rShiftTo(1, y);
      }
    }
    if (g > 0) {
      y.lShiftTo(g, y);
    }
    return y;
  };
  // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;
  // (public) test primality with certainty >= 1-.5^t
  BigInteger.prototype.isProbablePrime = function (t) {
    var i;
    var x = this.abs();
    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
      for (i = 0; i < lowprimes.length; ++i) {
        if (x[0] == lowprimes[i]) {
          return true;
        }
      }
      return false;
    }
    if (x.isEven()) {
      return false;
    }
    i = 1;
    while (i < lowprimes.length) {
      var m = lowprimes[i];
      var j = i + 1;
      while (j < lowprimes.length && m < lplim) {
        m *= lowprimes[j++];
      }
      m = x.modInt(m);
      while (i < j) {
        if (m % lowprimes[i++] == 0) {
          return false;
        }
      }
    }
    return x.millerRabin(t);
  };
  //#endregion PUBLIC
  //#region PROTECTED
  // BigInteger.prototype.copyTo = bnpCopyTo;
  // (protected) copy this to r
  BigInteger.prototype.copyTo = function (r) {
    for (var i = this.t - 1; i >= 0; --i) {
      r[i] = this[i];
    }
    r.t = this.t;
    r.s = this.s;
  };
  // BigInteger.prototype.fromInt = bnpFromInt;
  // (protected) set from integer value x, -DV <= x < DV
  BigInteger.prototype.fromInt = function (x) {
    this.t = 1;
    this.s = x < 0 ? -1 : 0;
    if (x > 0) {
      this[0] = x;
    } else if (x < -1) {
      this[0] = x + this.DV;
    } else {
      this.t = 0;
    }
  };
  // BigInteger.prototype.fromString = bnpFromString;
  // (protected) set from string and radix
  BigInteger.prototype.fromString = function (s, b) {
    var k;
    if (b == 16) {
      k = 4;
    } else if (b == 8) {
      k = 3;
    } else if (b == 256) {
      k = 8;
      /* byte array */
    } else if (b == 2) {
      k = 1;
    } else if (b == 32) {
      k = 5;
    } else if (b == 4) {
      k = 2;
    } else {
      this.fromRadix(s, b);
      return;
    }
    this.t = 0;
    this.s = 0;
    var i = s.length;
    var mi = false;
    var sh = 0;
    while (--i >= 0) {
      var x = k == 8 ? +s[i] & 0xff : intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) == "-") {
          mi = true;
        }
        continue;
      }
      mi = false;
      if (sh == 0) {
        this[this.t++] = x;
      } else if (sh + k > this.DB) {
        this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
        this[this.t++] = x >> this.DB - sh;
      } else {
        this[this.t - 1] |= x << sh;
      }
      sh += k;
      if (sh >= this.DB) {
        sh -= this.DB;
      }
    }
    if (k == 8 && (+s[0] & 0x80) != 0) {
      this.s = -1;
      if (sh > 0) {
        this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
      }
    }
    this.clamp();
    if (mi) {
      BigInteger.ZERO.subTo(this, this);
    }
  };
  // BigInteger.prototype.clamp = bnpClamp;
  // (protected) clamp off excess high words
  BigInteger.prototype.clamp = function () {
    var c = this.s & this.DM;
    while (this.t > 0 && this[this.t - 1] == c) {
      --this.t;
    }
  };
  // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  // (protected) r = this << n*DB
  BigInteger.prototype.dlShiftTo = function (n, r) {
    var i;
    for (i = this.t - 1; i >= 0; --i) {
      r[i + n] = this[i];
    }
    for (i = n - 1; i >= 0; --i) {
      r[i] = 0;
    }
    r.t = this.t + n;
    r.s = this.s;
  };
  // BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  // (protected) r = this >> n*DB
  BigInteger.prototype.drShiftTo = function (n, r) {
    for (var i = n; i < this.t; ++i) {
      r[i - n] = this[i];
    }
    r.t = Math.max(this.t - n, 0);
    r.s = this.s;
  };
  // BigInteger.prototype.lShiftTo = bnpLShiftTo;
  // (protected) r = this << n
  BigInteger.prototype.lShiftTo = function (n, r) {
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << cbs) - 1;
    var ds = Math.floor(n / this.DB);
    var c = this.s << bs & this.DM;
    for (var i = this.t - 1; i >= 0; --i) {
      r[i + ds + 1] = this[i] >> cbs | c;
      c = (this[i] & bm) << bs;
    }
    for (var i = ds - 1; i >= 0; --i) {
      r[i] = 0;
    }
    r[ds] = c;
    r.t = this.t + ds + 1;
    r.s = this.s;
    r.clamp();
  };
  // BigInteger.prototype.rShiftTo = bnpRShiftTo;
  // (protected) r = this >> n
  BigInteger.prototype.rShiftTo = function (n, r) {
    r.s = this.s;
    var ds = Math.floor(n / this.DB);
    if (ds >= this.t) {
      r.t = 0;
      return;
    }
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << bs) - 1;
    r[0] = this[ds] >> bs;
    for (var i = ds + 1; i < this.t; ++i) {
      r[i - ds - 1] |= (this[i] & bm) << cbs;
      r[i - ds] = this[i] >> bs;
    }
    if (bs > 0) {
      r[this.t - ds - 1] |= (this.s & bm) << cbs;
    }
    r.t = this.t - ds;
    r.clamp();
  };
  // BigInteger.prototype.subTo = bnpSubTo;
  // (protected) r = this - a
  BigInteger.prototype.subTo = function (a, r) {
    var i = 0;
    var c = 0;
    var m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] - a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c -= a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c -= a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c < -1) {
      r[i++] = this.DV + c;
    } else if (c > 0) {
      r[i++] = c;
    }
    r.t = i;
    r.clamp();
  };
  // BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyTo = function (a, r) {
    var x = this.abs();
    var y = a.abs();
    var i = x.t;
    r.t = i + y.t;
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = 0; i < y.t; ++i) {
      r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
    }
    r.s = 0;
    r.clamp();
    if (this.s != a.s) {
      BigInteger.ZERO.subTo(r, r);
    }
  };
  // BigInteger.prototype.squareTo = bnpSquareTo;
  // (protected) r = this^2, r != this (HAC 14.16)
  BigInteger.prototype.squareTo = function (r) {
    var x = this.abs();
    var i = r.t = 2 * x.t;
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = 0; i < x.t - 1; ++i) {
      var c = x.am(i, x[i], r, 2 * i, 0, 1);
      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
        r[i + x.t] -= x.DV;
        r[i + x.t + 1] = 1;
      }
    }
    if (r.t > 0) {
      r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
    }
    r.s = 0;
    r.clamp();
  };
  // BigInteger.prototype.divRemTo = bnpDivRemTo;
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  BigInteger.prototype.divRemTo = function (m, q, r) {
    var pm = m.abs();
    if (pm.t <= 0) {
      return;
    }
    var pt = this.abs();
    if (pt.t < pm.t) {
      if (q != null) {
        q.fromInt(0);
      }
      if (r != null) {
        this.copyTo(r);
      }
      return;
    }
    if (r == null) {
      r = nbi();
    }
    var y = nbi();
    var ts = this.s;
    var ms = m.s;
    var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
    if (nsh > 0) {
      pm.lShiftTo(nsh, y);
      pt.lShiftTo(nsh, r);
    } else {
      pm.copyTo(y);
      pt.copyTo(r);
    }
    var ys = y.t;
    var y0 = y[ys - 1];
    if (y0 == 0) {
      return;
    }
    var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
    var d1 = this.FV / yt;
    var d2 = (1 << this.F1) / yt;
    var e = 1 << this.F2;
    var i = r.t;
    var j = i - ys;
    var t = q == null ? nbi() : q;
    y.dlShiftTo(j, t);
    if (r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t, r);
    }
    BigInteger.ONE.dlShiftTo(ys, t);
    t.subTo(y, y); // "negative" y so we can replace sub with am later
    while (y.t < ys) {
      y[y.t++] = 0;
    }
    while (--j >= 0) {
      // Estimate quotient digit
      var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
        // Try it out
        y.dlShiftTo(j, t);
        r.subTo(t, r);
        while (r[i] < --qd) {
          r.subTo(t, r);
        }
      }
    }
    if (q != null) {
      r.drShiftTo(ys, q);
      if (ts != ms) {
        BigInteger.ZERO.subTo(q, q);
      }
    }
    r.t = ys;
    r.clamp();
    if (nsh > 0) {
      r.rShiftTo(nsh, r);
    } // Denormalize remainder
    if (ts < 0) {
      BigInteger.ZERO.subTo(r, r);
    }
  };
  // BigInteger.prototype.invDigit = bnpInvDigit;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  BigInteger.prototype.invDigit = function () {
    if (this.t < 1) {
      return 0;
    }
    var x = this[0];
    if ((x & 1) == 0) {
      return 0;
    }
    var y = x & 3; // y == 1/x mod 2^2
    y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4
    y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8
    y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return y > 0 ? this.DV - y : -y;
  };
  // BigInteger.prototype.isEven = bnpIsEven;
  // (protected) true iff this is even
  BigInteger.prototype.isEven = function () {
    return (this.t > 0 ? this[0] & 1 : this.s) == 0;
  };
  // BigInteger.prototype.exp = bnpExp;
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  BigInteger.prototype.exp = function (e, z) {
    if (e > 0xffffffff || e < 1) {
      return BigInteger.ONE;
    }
    var r = nbi();
    var r2 = nbi();
    var g = z.convert(this);
    var i = nbits(e) - 1;
    g.copyTo(r);
    while (--i >= 0) {
      z.sqrTo(r, r2);
      if ((e & 1 << i) > 0) {
        z.mulTo(r2, g, r);
      } else {
        var t = r;
        r = r2;
        r2 = t;
      }
    }
    return z.revert(r);
  };
  // BigInteger.prototype.chunkSize = bnpChunkSize;
  // (protected) return x s.t. r^x < DV
  BigInteger.prototype.chunkSize = function (r) {
    return Math.floor(Math.LN2 * this.DB / Math.log(r));
  };
  // BigInteger.prototype.toRadix = bnpToRadix;
  // (protected) convert to radix string
  BigInteger.prototype.toRadix = function (b) {
    if (b == null) {
      b = 10;
    }
    if (this.signum() == 0 || b < 2 || b > 36) {
      return "0";
    }
    var cs = this.chunkSize(b);
    var a = Math.pow(b, cs);
    var d = nbv(a);
    var y = nbi();
    var z = nbi();
    var r = "";
    this.divRemTo(d, y, z);
    while (y.signum() > 0) {
      r = (a + z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d, y, z);
    }
    return z.intValue().toString(b) + r;
  };
  // BigInteger.prototype.fromRadix = bnpFromRadix;
  // (protected) convert from radix string
  BigInteger.prototype.fromRadix = function (s, b) {
    this.fromInt(0);
    if (b == null) {
      b = 10;
    }
    var cs = this.chunkSize(b);
    var d = Math.pow(b, cs);
    var mi = false;
    var j = 0;
    var w = 0;
    for (var i = 0; i < s.length; ++i) {
      var x = intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) == "-" && this.signum() == 0) {
          mi = true;
        }
        continue;
      }
      w = b * w + x;
      if (++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w, 0);
        j = 0;
        w = 0;
      }
    }
    if (j > 0) {
      this.dMultiply(Math.pow(b, j));
      this.dAddOffset(w, 0);
    }
    if (mi) {
      BigInteger.ZERO.subTo(this, this);
    }
  };
  // BigInteger.prototype.fromNumber = bnpFromNumber;
  // (protected) alternate constructor
  BigInteger.prototype.fromNumber = function (a, b, c) {
    if ("number" == typeof b) {
      // new BigInteger(int,int,RNG)
      if (a < 2) {
        this.fromInt(1);
      } else {
        this.fromNumber(a, c);
        if (!this.testBit(a - 1)) {
          // force MSB set
          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util.op_or, this);
        }
        if (this.isEven()) {
          this.dAddOffset(1, 0);
        } // force odd
        while (!this.isProbablePrime(b)) {
          this.dAddOffset(2, 0);
          if (this.bitLength() > a) {
            this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
          }
        }
      }
    } else {
      // new BigInteger(int,RNG)
      var x = [];
      var t = a & 7;
      x.length = (a >> 3) + 1;
      b.nextBytes(x);
      if (t > 0) {
        x[0] &= (1 << t) - 1;
      } else {
        x[0] = 0;
      }
      this.fromString(x, 256);
    }
  };
  // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
  // (protected) r = this op a (bitwise)
  BigInteger.prototype.bitwiseTo = function (a, op, r) {
    var i;
    var f;
    var m = Math.min(a.t, this.t);
    for (i = 0; i < m; ++i) {
      r[i] = op(this[i], a[i]);
    }
    if (a.t < this.t) {
      f = a.s & this.DM;
      for (i = m; i < this.t; ++i) {
        r[i] = op(this[i], f);
      }
      r.t = this.t;
    } else {
      f = this.s & this.DM;
      for (i = m; i < a.t; ++i) {
        r[i] = op(f, a[i]);
      }
      r.t = a.t;
    }
    r.s = op(this.s, a.s);
    r.clamp();
  };
  // BigInteger.prototype.changeBit = bnpChangeBit;
  // (protected) this op (1<<n)
  BigInteger.prototype.changeBit = function (n, op) {
    var r = BigInteger.ONE.shiftLeft(n);
    this.bitwiseTo(r, op, r);
    return r;
  };
  // BigInteger.prototype.addTo = bnpAddTo;
  // (protected) r = this + a
  BigInteger.prototype.addTo = function (a, r) {
    var i = 0;
    var c = 0;
    var m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] + a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c += a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c += a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c > 0) {
      r[i++] = c;
    } else if (c < -1) {
      r[i++] = this.DV + c;
    }
    r.t = i;
    r.clamp();
  };
  // BigInteger.prototype.dMultiply = bnpDMultiply;
  // (protected) this *= n, this >= 0, 1 < n < DV
  BigInteger.prototype.dMultiply = function (n) {
    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
    ++this.t;
    this.clamp();
  };
  // BigInteger.prototype.dAddOffset = bnpDAddOffset;
  // (protected) this += n << w words, this >= 0
  BigInteger.prototype.dAddOffset = function (n, w) {
    if (n == 0) {
      return;
    }
    while (this.t <= w) {
      this[this.t++] = 0;
    }
    this[w] += n;
    while (this[w] >= this.DV) {
      this[w] -= this.DV;
      if (++w >= this.t) {
        this[this.t++] = 0;
      }
      ++this[w];
    }
  };
  // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
  // (protected) r = lower n words of "this * a", a.t <= n
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyLowerTo = function (a, n, r) {
    var i = Math.min(this.t + a.t, n);
    r.s = 0; // assumes a,this >= 0
    r.t = i;
    while (i > 0) {
      r[--i] = 0;
    }
    for (var j = r.t - this.t; i < j; ++i) {
      r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
    }
    for (var j = Math.min(a.t, n); i < j; ++i) {
      this.am(0, a[i], r, i, 0, n - i);
    }
    r.clamp();
  };
  // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
  // (protected) r = "this * a" without lower n words, n > 0
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyUpperTo = function (a, n, r) {
    --n;
    var i = r.t = this.t + a.t - n;
    r.s = 0; // assumes a,this >= 0
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
      r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
    }
    r.clamp();
    r.drShiftTo(1, r);
  };
  // BigInteger.prototype.modInt = bnpModInt;
  // (protected) this % n, n < 2^26
  BigInteger.prototype.modInt = function (n) {
    if (n <= 0) {
      return 0;
    }
    var d = this.DV % n;
    var r = this.s < 0 ? n - 1 : 0;
    if (this.t > 0) {
      if (d == 0) {
        r = this[0] % n;
      } else {
        for (var i = this.t - 1; i >= 0; --i) {
          r = (d * r + this[i]) % n;
        }
      }
    }
    return r;
  };
  // BigInteger.prototype.millerRabin = bnpMillerRabin;
  // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
  BigInteger.prototype.millerRabin = function (t) {
    var n1 = this.subtract(BigInteger.ONE);
    var k = n1.getLowestSetBit();
    if (k <= 0) {
      return false;
    }
    var r = n1.shiftRight(k);
    t = t + 1 >> 1;
    if (t > lowprimes.length) {
      t = lowprimes.length;
    }
    var a = nbi();
    for (var i = 0; i < t; ++i) {
      // Pick bases at random, instead of starting at 2
      a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
      var y = a.modPow(r, this);
      if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
        var j = 1;
        while (j++ < k && y.compareTo(n1) != 0) {
          y = y.modPowInt(2, this);
          if (y.compareTo(BigInteger.ONE) == 0) {
            return false;
          }
        }
        if (y.compareTo(n1) != 0) {
          return false;
        }
      }
    }
    return true;
  };
  // BigInteger.prototype.square = bnSquare;
  // (public) this^2
  BigInteger.prototype.square = function () {
    var r = nbi();
    this.squareTo(r);
    return r;
  };
  //#region ASYNC
  // Public API method
  BigInteger.prototype.gcda = function (a, callback) {
    var x = this.s < 0 ? this.negate() : this.clone();
    var y = a.s < 0 ? a.negate() : a.clone();
    if (x.compareTo(y) < 0) {
      var t = x;
      x = y;
      y = t;
    }
    var i = x.getLowestSetBit();
    var g = y.getLowestSetBit();
    if (g < 0) {
      callback(x);
      return;
    }
    if (i < g) {
      g = i;
    }
    if (g > 0) {
      x.rShiftTo(g, x);
      y.rShiftTo(g, y);
    }
    // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.
    var gcda1 = function () {
      if ((i = x.getLowestSetBit()) > 0) {
        x.rShiftTo(i, x);
      }
      if ((i = y.getLowestSetBit()) > 0) {
        y.rShiftTo(i, y);
      }
      if (x.compareTo(y) >= 0) {
        x.subTo(y, x);
        x.rShiftTo(1, x);
      } else {
        y.subTo(x, y);
        y.rShiftTo(1, y);
      }
      if (!(x.signum() > 0)) {
        if (g > 0) {
          y.lShiftTo(g, y);
        }
        setTimeout(function () {
          callback(y);
        }, 0); // escape
      } else {
        setTimeout(gcda1, 0);
      }
    };
    setTimeout(gcda1, 10);
  };
  // (protected) alternate constructor
  BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {
    if ("number" == typeof b) {
      if (a < 2) {
        this.fromInt(1);
      } else {
        this.fromNumber(a, c);
        if (!this.testBit(a - 1)) {
          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util.op_or, this);
        }
        if (this.isEven()) {
          this.dAddOffset(1, 0);
        }
        var bnp_1 = this;
        var bnpfn1_1 = function () {
          bnp_1.dAddOffset(2, 0);
          if (bnp_1.bitLength() > a) {
            bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);
          }
          if (bnp_1.isProbablePrime(b)) {
            setTimeout(function () {
              callback();
            }, 0); // escape
          } else {
            setTimeout(bnpfn1_1, 0);
          }
        };
        setTimeout(bnpfn1_1, 0);
      }
    } else {
      var x = [];
      var t = a & 7;
      x.length = (a >> 3) + 1;
      b.nextBytes(x);
      if (t > 0) {
        x[0] &= (1 << t) - 1;
      } else {
        x[0] = 0;
      }
      this.fromString(x, 256);
    }
  };
  return BigInteger;
}();
//#region REDUCERS
//#region NullExp
var NullExp = /** @class */function () {
  function NullExp() {}
  // NullExp.prototype.convert = nNop;
  NullExp.prototype.convert = function (x) {
    return x;
  };
  // NullExp.prototype.revert = nNop;
  NullExp.prototype.revert = function (x) {
    return x;
  };
  // NullExp.prototype.mulTo = nMulTo;
  NullExp.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
  };
  // NullExp.prototype.sqrTo = nSqrTo;
  NullExp.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
  };
  return NullExp;
}();
// Modular reduction using "classic" algorithm
var Classic = /** @class */function () {
  function Classic(m) {
    this.m = m;
  }
  // Classic.prototype.convert = cConvert;
  Classic.prototype.convert = function (x) {
    if (x.s < 0 || x.compareTo(this.m) >= 0) {
      return x.mod(this.m);
    } else {
      return x;
    }
  };
  // Classic.prototype.revert = cRevert;
  Classic.prototype.revert = function (x) {
    return x;
  };
  // Classic.prototype.reduce = cReduce;
  Classic.prototype.reduce = function (x) {
    x.divRemTo(this.m, null, x);
  };
  // Classic.prototype.mulTo = cMulTo;
  Classic.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Classic.prototype.sqrTo = cSqrTo;
  Classic.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Classic;
}();
//#endregion
//#region Montgomery
// Montgomery reduction
var Montgomery = /** @class */function () {
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp & 0x7fff;
    this.mph = this.mp >> 15;
    this.um = (1 << m.DB - 15) - 1;
    this.mt2 = 2 * m.t;
  }
  // Montgomery.prototype.convert = montConvert;
  // xR mod m
  Montgomery.prototype.convert = function (x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t, r);
    r.divRemTo(this.m, null, r);
    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
      this.m.subTo(r, r);
    }
    return r;
  };
  // Montgomery.prototype.revert = montRevert;
  // x/R mod m
  Montgomery.prototype.revert = function (x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  };
  // Montgomery.prototype.reduce = montReduce;
  // x = x/R mod m (HAC 14.32)
  Montgomery.prototype.reduce = function (x) {
    while (x.t <= this.mt2) {
      // pad x so am has enough room later
      x[x.t++] = 0;
    }
    for (var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i] & 0x7fff;
      var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i + this.m.t;
      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
      // propagate carry
      while (x[j] >= x.DV) {
        x[j] -= x.DV;
        x[++j]++;
      }
    }
    x.clamp();
    x.drShiftTo(this.m.t, x);
    if (x.compareTo(this.m) >= 0) {
      x.subTo(this.m, x);
    }
  };
  // Montgomery.prototype.mulTo = montMulTo;
  // r = "xy/R mod m"; x,y != r
  Montgomery.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Montgomery.prototype.sqrTo = montSqrTo;
  // r = "x^2/R mod m"; x != r
  Montgomery.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Montgomery;
}();
//#endregion Montgomery
//#region Barrett
// Barrett modular reduction
var Barrett = /** @class */function () {
  function Barrett(m) {
    this.m = m;
    // setup Barrett
    this.r2 = nbi();
    this.q3 = nbi();
    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
    this.mu = this.r2.divide(m);
  }
  // Barrett.prototype.convert = barrettConvert;
  Barrett.prototype.convert = function (x) {
    if (x.s < 0 || x.t > 2 * this.m.t) {
      return x.mod(this.m);
    } else if (x.compareTo(this.m) < 0) {
      return x;
    } else {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    }
  };
  // Barrett.prototype.revert = barrettRevert;
  Barrett.prototype.revert = function (x) {
    return x;
  };
  // Barrett.prototype.reduce = barrettReduce;
  // x = x mod m (HAC 14.42)
  Barrett.prototype.reduce = function (x) {
    x.drShiftTo(this.m.t - 1, this.r2);
    if (x.t > this.m.t + 1) {
      x.t = this.m.t + 1;
      x.clamp();
    }
    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
    while (x.compareTo(this.r2) < 0) {
      x.dAddOffset(1, this.m.t + 1);
    }
    x.subTo(this.r2, x);
    while (x.compareTo(this.m) >= 0) {
      x.subTo(this.m, x);
    }
  };
  // Barrett.prototype.mulTo = barrettMulTo;
  // r = x*y mod m; x,y != r
  Barrett.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Barrett.prototype.sqrTo = barrettSqrTo;
  // r = x^2 mod m; x != r
  Barrett.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Barrett;
}();
//#endregion
//#endregion REDUCERS
// return new, unset BigInteger
function nbi() {
  return new BigInteger(null);
}
function parseBigInt(str, r) {
  return new BigInteger(str, r);
}
// am: Compute w_j += (x*this_i), propagate carries,
// c is initial carry, returns final carry.
// c < 3*dvalue, x < 2*dvalue, this_i < dvalue
// We need to select the fastest one that works in this environment.
var inBrowser = typeof navigator !== "undefined";
if (inBrowser && j_lm && navigator.appName == "Microsoft Internet Explorer") {
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  BigInteger.prototype.am = function am2(i, x, w, j, c, n) {
    var xl = x & 0x7fff;
    var xh = x >> 15;
    while (--n >= 0) {
      var l = this[i] & 0x7fff;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 0x3fffffff;
    }
    return c;
  };
  dbits = 30;
} else if (inBrowser && j_lm && navigator.appName != "Netscape") {
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  BigInteger.prototype.am = function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 0x4000000);
      w[j++] = v & 0x3ffffff;
    }
    return c;
  };
  dbits = 26;
} else {
  // Mozilla/Netscape seems to prefer am3
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  BigInteger.prototype.am = function am3(i, x, w, j, c, n) {
    var xl = x & 0x3fff;
    var xh = x >> 14;
    while (--n >= 0) {
      var l = this[i] & 0x3fff;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 0xfffffff;
    }
    return c;
  };
  dbits = 28;
}
BigInteger.prototype.DB = dbits;
BigInteger.prototype.DM = (1 << dbits) - 1;
BigInteger.prototype.DV = 1 << dbits;
var BI_FP = 52;
BigInteger.prototype.FV = Math.pow(2, BI_FP);
BigInteger.prototype.F1 = BI_FP - dbits;
BigInteger.prototype.F2 = 2 * dbits - BI_FP;
// Digit conversions
var BI_RC = [];
var rr;
var vv;
rr = "0".charCodeAt(0);
for (vv = 0; vv <= 9; ++vv) {
  BI_RC[rr++] = vv;
}
rr = "a".charCodeAt(0);
for (vv = 10; vv < 36; ++vv) {
  BI_RC[rr++] = vv;
}
rr = "A".charCodeAt(0);
for (vv = 10; vv < 36; ++vv) {
  BI_RC[rr++] = vv;
}
function intAt(s, i) {
  var c = BI_RC[s.charCodeAt(i)];
  return c == null ? -1 : c;
}
// return bigint initialized to value
function nbv(i) {
  var r = nbi();
  r.fromInt(i);
  return r;
}
// returns bit length of the integer x
function nbits(x) {
  var r = 1;
  var t;
  if ((t = x >>> 16) != 0) {
    x = t;
    r += 16;
  }
  if ((t = x >> 8) != 0) {
    x = t;
    r += 8;
  }
  if ((t = x >> 4) != 0) {
    x = t;
    r += 4;
  }
  if ((t = x >> 2) != 0) {
    x = t;
    r += 2;
  }
  if ((t = x >> 1) != 0) {
    x = t;
    r += 1;
  }
  return r;
}
// "constants"
BigInteger.ZERO = nbv(0);
BigInteger.ONE = nbv(1);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js":
/*!*********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Arcfour = void 0;
exports.prng_newstate = prng_newstate;
exports.rng_psize = void 0;
// prng4.js - uses Arcfour as a PRNG
var Arcfour = exports.Arcfour = /** @class */function () {
  function Arcfour() {
    this.i = 0;
    this.j = 0;
    this.S = [];
  }
  // Arcfour.prototype.init = ARC4init;
  // Initialize arcfour context from key, an array of ints, each from [0..255]
  Arcfour.prototype.init = function (key) {
    var i;
    var j;
    var t;
    for (i = 0; i < 256; ++i) {
      this.S[i] = i;
    }
    j = 0;
    for (i = 0; i < 256; ++i) {
      j = j + this.S[i] + key[i % key.length] & 255;
      t = this.S[i];
      this.S[i] = this.S[j];
      this.S[j] = t;
    }
    this.i = 0;
    this.j = 0;
  };
  // Arcfour.prototype.next = ARC4next;
  Arcfour.prototype.next = function () {
    var t;
    this.i = this.i + 1 & 255;
    this.j = this.j + this.S[this.i] & 255;
    t = this.S[this.i];
    this.S[this.i] = this.S[this.j];
    this.S[this.j] = t;
    return this.S[t + this.S[this.i] & 255];
  };
  return Arcfour;
}();
// Plug in your RNG constructor here
function prng_newstate() {
  return new Arcfour();
}
// Pool size must be a multiple of 4 and greater than 32.
// An array of bytes the size of the pool will be passed to init()
var rng_psize = exports.rng_psize = 256;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SecureRandom = void 0;
var _prng = __webpack_require__(/*! ./prng4 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js");
// Random number generator - requires a PRNG backend, e.g. prng4.js

var rng_state;
var rng_pool = null;
var rng_pptr;
// Initialize the pool with junk if needed.
if (rng_pool == null) {
  rng_pool = [];
  rng_pptr = 0;
  var t = void 0;
  if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {
    // Extract entropy (2048 bits) from RNG if available
    var z = new Uint32Array(256);
    window.crypto.getRandomValues(z);
    for (t = 0; t < z.length; ++t) {
      rng_pool[rng_pptr++] = z[t] & 255;
    }
  }
  // Use mouse events for entropy, if we do not have enough entropy by the time
  // we need it, entropy will be generated by Math.random.
  var count = 0;
  var onMouseMoveListener_1 = function (ev) {
    count = count || 0;
    if (count >= 256 || rng_pptr >= _prng.rng_psize) {
      if (window.removeEventListener) {
        window.removeEventListener("mousemove", onMouseMoveListener_1, false);
      } else if (window.detachEvent) {
        window.detachEvent("onmousemove", onMouseMoveListener_1);
      }
      return;
    }
    try {
      var mouseCoordinates = ev.x + ev.y;
      rng_pool[rng_pptr++] = mouseCoordinates & 255;
      count += 1;
    } catch (e) {
      // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.
    }
  };
  if (typeof window !== 'undefined') {
    if (window.addEventListener) {
      window.addEventListener("mousemove", onMouseMoveListener_1, false);
    } else if (window.attachEvent) {
      window.attachEvent("onmousemove", onMouseMoveListener_1);
    }
  }
}
function rng_get_byte() {
  if (rng_state == null) {
    rng_state = (0, _prng.prng_newstate)();
    // At this point, we may not have collected enough entropy.  If not, fall back to Math.random
    while (rng_pptr < _prng.rng_psize) {
      var random = Math.floor(65536 * Math.random());
      rng_pool[rng_pptr++] = random & 255;
    }
    rng_state.init(rng_pool);
    for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
      rng_pool[rng_pptr] = 0;
    }
    rng_pptr = 0;
  }
  // TODO: allow reseeding after first request
  return rng_state.next();
}
var SecureRandom = exports.SecureRandom = /** @class */function () {
  function SecureRandom() {}
  SecureRandom.prototype.nextBytes = function (ba) {
    for (var i = 0; i < ba.length; ++i) {
      ba[i] = rng_get_byte();
    }
  };
  return SecureRandom;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RSAKey = void 0;
var _jsbn = __webpack_require__(/*! ./jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _rng = __webpack_require__(/*! ./rng */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js");
// Depends on jsbn.js and rng.js
// Version 1.1: support utf-8 encoding in pkcs1pad2
// convert a (hex) string to a bignum object

// function linebrk(s,n) {
//   var ret = "";
//   var i = 0;
//   while(i + n < s.length) {
//     ret += s.substring(i,i+n) + "\n";
//     i += n;
//   }
//   return ret + s.substring(i,s.length);
// }
// function byte2Hex(b) {
//   if(b < 0x10)
//     return "0" + b.toString(16);
//   else
//     return b.toString(16);
// }
function pkcs1pad1(s, n) {
  if (n < s.length + 22) {
    console.error("Message too long for RSA");
    return null;
  }
  var len = n - s.length - 6;
  var filler = "";
  for (var f = 0; f < len; f += 2) {
    filler += "ff";
  }
  var m = "0001" + filler + "00" + s;
  return (0, _jsbn.parseBigInt)(m, 16);
}
// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
function pkcs1pad2(s, n) {
  if (n < s.length + 11) {
    // TODO: fix for utf-8
    console.error("Message too long for RSA");
    return null;
  }
  var ba = [];
  var i = s.length - 1;
  while (i >= 0 && n > 0) {
    var c = s.charCodeAt(i--);
    if (c < 128) {
      // encode using utf-8
      ba[--n] = c;
    } else if (c > 127 && c < 2048) {
      ba[--n] = c & 63 | 128;
      ba[--n] = c >> 6 | 192;
    } else {
      ba[--n] = c & 63 | 128;
      ba[--n] = c >> 6 & 63 | 128;
      ba[--n] = c >> 12 | 224;
    }
  }
  ba[--n] = 0;
  var rng = new _rng.SecureRandom();
  var x = [];
  while (n > 2) {
    // random non-zero pad
    x[0] = 0;
    while (x[0] == 0) {
      rng.nextBytes(x);
    }
    ba[--n] = x[0];
  }
  ba[--n] = 2;
  ba[--n] = 0;
  return new _jsbn.BigInteger(ba);
}
// "empty" RSA key constructor
var RSAKey = exports.RSAKey = /** @class */function () {
  function RSAKey() {
    this.n = null;
    this.e = 0;
    this.d = null;
    this.p = null;
    this.q = null;
    this.dmp1 = null;
    this.dmq1 = null;
    this.coeff = null;
  }
  //#region PROTECTED
  // protected
  // RSAKey.prototype.doPublic = RSADoPublic;
  // Perform raw public operation on "x": return x^e (mod n)
  RSAKey.prototype.doPublic = function (x) {
    return x.modPowInt(this.e, this.n);
  };
  // RSAKey.prototype.doPrivate = RSADoPrivate;
  // Perform raw private operation on "x": return x^d (mod n)
  RSAKey.prototype.doPrivate = function (x) {
    if (this.p == null || this.q == null) {
      return x.modPow(this.d, this.n);
    }
    // TODO: re-calculate any missing CRT params
    var xp = x.mod(this.p).modPow(this.dmp1, this.p);
    var xq = x.mod(this.q).modPow(this.dmq1, this.q);
    while (xp.compareTo(xq) < 0) {
      xp = xp.add(this.p);
    }
    return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
  };
  //#endregion PROTECTED
  //#region PUBLIC
  // RSAKey.prototype.setPublic = RSASetPublic;
  // Set the public key fields N and e from hex strings
  RSAKey.prototype.setPublic = function (N, E) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
    } else {
      console.error("Invalid RSA public key");
    }
  };
  // RSAKey.prototype.encrypt = RSAEncrypt;
  // Return the PKCS#1 RSA encryption of "text" as an even-length hex string
  RSAKey.prototype.encrypt = function (text) {
    var maxLength = this.n.bitLength() + 7 >> 3;
    var m = pkcs1pad2(text, maxLength);
    if (m == null) {
      return null;
    }
    var c = this.doPublic(m);
    if (c == null) {
      return null;
    }
    var h = c.toString(16);
    var length = h.length;
    // fix zero before result
    for (var i = 0; i < maxLength * 2 - length; i++) {
      h = "0" + h;
    }
    return h;
  };
  // RSAKey.prototype.setPrivate = RSASetPrivate;
  // Set the private key fields N, e, and d from hex strings
  RSAKey.prototype.setPrivate = function (N, E, D) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
      this.d = (0, _jsbn.parseBigInt)(D, 16);
    } else {
      console.error("Invalid RSA private key");
    }
  };
  // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
  // Set the private key fields N, e, d and CRT params from hex strings
  RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
      this.d = (0, _jsbn.parseBigInt)(D, 16);
      this.p = (0, _jsbn.parseBigInt)(P, 16);
      this.q = (0, _jsbn.parseBigInt)(Q, 16);
      this.dmp1 = (0, _jsbn.parseBigInt)(DP, 16);
      this.dmq1 = (0, _jsbn.parseBigInt)(DQ, 16);
      this.coeff = (0, _jsbn.parseBigInt)(C, 16);
    } else {
      console.error("Invalid RSA private key");
    }
  };
  // RSAKey.prototype.generate = RSAGenerate;
  // Generate a new random private key B bits long, using public expt E
  RSAKey.prototype.generate = function (B, E) {
    var rng = new _rng.SecureRandom();
    var qs = B >> 1;
    this.e = parseInt(E, 16);
    var ee = new _jsbn.BigInteger(E, 16);
    for (;;) {
      for (;;) {
        this.p = new _jsbn.BigInteger(B - qs, 1, rng);
        if (this.p.subtract(_jsbn.BigInteger.ONE).gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {
          break;
        }
      }
      for (;;) {
        this.q = new _jsbn.BigInteger(qs, 1, rng);
        if (this.q.subtract(_jsbn.BigInteger.ONE).gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {
          break;
        }
      }
      if (this.p.compareTo(this.q) <= 0) {
        var t = this.p;
        this.p = this.q;
        this.q = t;
      }
      var p1 = this.p.subtract(_jsbn.BigInteger.ONE);
      var q1 = this.q.subtract(_jsbn.BigInteger.ONE);
      var phi = p1.multiply(q1);
      if (phi.gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0) {
        this.n = this.p.multiply(this.q);
        this.d = ee.modInverse(phi);
        this.dmp1 = this.d.mod(p1);
        this.dmq1 = this.d.mod(q1);
        this.coeff = this.q.modInverse(this.p);
        break;
      }
    }
  };
  // RSAKey.prototype.decrypt = RSADecrypt;
  // Return the PKCS#1 RSA decryption of "ctext".
  // "ctext" is an even-length hex string and the output is a plain string.
  RSAKey.prototype.decrypt = function (ctext) {
    var c = (0, _jsbn.parseBigInt)(ctext, 16);
    var m = this.doPrivate(c);
    if (m == null) {
      return null;
    }
    return pkcs1unpad2(m, this.n.bitLength() + 7 >> 3);
  };
  // Generate a new random private key B bits long, using public expt E
  RSAKey.prototype.generateAsync = function (B, E, callback) {
    var rng = new _rng.SecureRandom();
    var qs = B >> 1;
    this.e = parseInt(E, 16);
    var ee = new _jsbn.BigInteger(E, 16);
    var rsa = this;
    // These functions have non-descript names because they were originally for(;;) loops.
    // I don't know about cryptography to give them better names than loop1-4.
    var loop1 = function () {
      var loop4 = function () {
        if (rsa.p.compareTo(rsa.q) <= 0) {
          var t = rsa.p;
          rsa.p = rsa.q;
          rsa.q = t;
        }
        var p1 = rsa.p.subtract(_jsbn.BigInteger.ONE);
        var q1 = rsa.q.subtract(_jsbn.BigInteger.ONE);
        var phi = p1.multiply(q1);
        if (phi.gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0) {
          rsa.n = rsa.p.multiply(rsa.q);
          rsa.d = ee.modInverse(phi);
          rsa.dmp1 = rsa.d.mod(p1);
          rsa.dmq1 = rsa.d.mod(q1);
          rsa.coeff = rsa.q.modInverse(rsa.p);
          setTimeout(function () {
            callback();
          }, 0); // escape
        } else {
          setTimeout(loop1, 0);
        }
      };
      var loop3 = function () {
        rsa.q = (0, _jsbn.nbi)();
        rsa.q.fromNumberAsync(qs, 1, rng, function () {
          rsa.q.subtract(_jsbn.BigInteger.ONE).gcda(ee, function (r) {
            if (r.compareTo(_jsbn.BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {
              setTimeout(loop4, 0);
            } else {
              setTimeout(loop3, 0);
            }
          });
        });
      };
      var loop2 = function () {
        rsa.p = (0, _jsbn.nbi)();
        rsa.p.fromNumberAsync(B - qs, 1, rng, function () {
          rsa.p.subtract(_jsbn.BigInteger.ONE).gcda(ee, function (r) {
            if (r.compareTo(_jsbn.BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {
              setTimeout(loop3, 0);
            } else {
              setTimeout(loop2, 0);
            }
          });
        });
      };
      setTimeout(loop2, 0);
    };
    setTimeout(loop1, 0);
  };
  RSAKey.prototype.sign = function (text, digestMethod, digestName) {
    var header = getDigestHeader(digestName);
    var digest = header + digestMethod(text).toString();
    var m = pkcs1pad1(digest, this.n.bitLength() / 4);
    if (m == null) {
      return null;
    }
    var c = this.doPrivate(m);
    if (c == null) {
      return null;
    }
    var h = c.toString(16);
    if ((h.length & 1) == 0) {
      return h;
    } else {
      return "0" + h;
    }
  };
  RSAKey.prototype.verify = function (text, signature, digestMethod) {
    var c = (0, _jsbn.parseBigInt)(signature, 16);
    var m = this.doPublic(c);
    if (m == null) {
      return null;
    }
    var unpadded = m.toString(16).replace(/^1f+00/, "");
    var digest = removeDigestHeader(unpadded);
    return digest == digestMethod(text).toString();
  };
  return RSAKey;
}();
// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext
function pkcs1unpad2(d, n) {
  var b = d.toByteArray();
  var i = 0;
  while (i < b.length && b[i] == 0) {
    ++i;
  }
  if (b.length - i != n - 1 || b[i] != 2) {
    return null;
  }
  ++i;
  while (b[i] != 0) {
    if (++i >= b.length) {
      return null;
    }
  }
  var ret = "";
  while (++i < b.length) {
    var c = b[i] & 255;
    if (c < 128) {
      // utf-8 decode
      ret += String.fromCharCode(c);
    } else if (c > 191 && c < 224) {
      ret += String.fromCharCode((c & 31) << 6 | b[i + 1] & 63);
      ++i;
    } else {
      ret += String.fromCharCode((c & 15) << 12 | (b[i + 1] & 63) << 6 | b[i + 2] & 63);
      i += 2;
    }
  }
  return ret;
}
// https://tools.ietf.org/html/rfc3447#page-43
var DIGEST_HEADERS = {
  md2: "3020300c06082a864886f70d020205000410",
  md5: "3020300c06082a864886f70d020505000410",
  sha1: "3021300906052b0e03021a05000414",
  sha224: "302d300d06096086480165030402040500041c",
  sha256: "3031300d060960864801650304020105000420",
  sha384: "3041300d060960864801650304020205000430",
  sha512: "3051300d060960864801650304020305000440",
  ripemd160: "3021300906052b2403020105000414"
};
function getDigestHeader(name) {
  return DIGEST_HEADERS[name] || "";
}
function removeDigestHeader(str) {
  for (var name_1 in DIGEST_HEADERS) {
    if (DIGEST_HEADERS.hasOwnProperty(name_1)) {
      var header = DIGEST_HEADERS[name_1];
      var len = header.length;
      if (str.substr(0, len) == header) {
        return str.substr(len);
      }
    }
  }
  return str;
}
// Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
// function RSAEncryptB64(text) {
//  var h = this.encrypt(text);
//  if(h) return hex2b64(h); else return null;
// }
// public
// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js":
/*!********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.cbit = cbit;
exports.int2char = int2char;
exports.lbit = lbit;
exports.op_and = op_and;
exports.op_andnot = op_andnot;
exports.op_or = op_or;
exports.op_xor = op_xor;
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
function int2char(n) {
  return BI_RM.charAt(n);
}
//#region BIT_OPERATIONS
// (public) this & a
function op_and(x, y) {
  return x & y;
}
// (public) this | a
function op_or(x, y) {
  return x | y;
}
// (public) this ^ a
function op_xor(x, y) {
  return x ^ y;
}
// (public) this & ~a
function op_andnot(x, y) {
  return x & ~y;
}
// return index of lowest 1-bit in x, x < 2^31
function lbit(x) {
  if (x == 0) {
    return -1;
  }
  var r = 0;
  if ((x & 0xffff) == 0) {
    x >>= 16;
    r += 16;
  }
  if ((x & 0xff) == 0) {
    x >>= 8;
    r += 8;
  }
  if ((x & 0xf) == 0) {
    x >>= 4;
    r += 4;
  }
  if ((x & 3) == 0) {
    x >>= 2;
    r += 2;
  }
  if ((x & 1) == 0) {
    ++r;
  }
  return r;
}
// return number of 1 bits in x
function cbit(x) {
  var r = 0;
  while (x != 0) {
    x &= x - 1;
    ++r;
  }
  return r;
}
//#endregion BIT_OPERATIONS

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js":
/*!*****************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.KJUR = void 0;
var _jsbn = __webpack_require__(/*! ../jsbn/jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _yahoo = __webpack_require__(/*! ./yahoo */ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js");
/* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
/*
 * asn1.js - ASN.1 DER encoder classes
 *
 * Copyright (c) 2013-2017 Kenji Urushima (kenji.urushima@gmail.com)
 *
 * This software is licensed under the terms of the MIT License.
 * https://kjur.github.io/jsrsasign/license
 *
 * The above copyright and license notice shall be
 * included in all copies or substantial portions of the Software.
 */

/**
 * @fileOverview
 * @name asn1-1.0.js
 * @author Kenji Urushima kenji.urushima@gmail.com
 * @version asn1 1.0.13 (2017-Jun-02)
 * @since jsrsasign 2.1
 * @license <a href="https://kjur.github.io/jsrsasign/license/">MIT License</a>
 */
/**
 * kjur's class library name space
 * <p>
 * This name space provides following name spaces:
 * <ul>
 * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>
 * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>
 * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature
 * class and utilities</li>
 * </ul>
 * </p>
 * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.
 * @name KJUR
 * @namespace kjur's class library name space
 */
var KJUR = exports.KJUR = {};
/**
 * kjur's ASN.1 class library name space
 * <p>
 * This is ITU-T X.690 ASN.1 DER encoder class library and
 * class structure and methods is very similar to
 * org.bouncycastle.asn1 package of
 * well known BouncyCaslte Cryptography Library.
 * <h4>PROVIDING ASN.1 PRIMITIVES</h4>
 * Here are ASN.1 DER primitive classes.
 * <ul>
 * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>
 * <li>0x02 {@link KJUR.asn1.DERInteger}</li>
 * <li>0x03 {@link KJUR.asn1.DERBitString}</li>
 * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>
 * <li>0x05 {@link KJUR.asn1.DERNull}</li>
 * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>
 * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>
 * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>
 * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>
 * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>
 * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>
 * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>
 * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>
 * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>
 * <li>0x30 {@link KJUR.asn1.DERSequence}</li>
 * <li>0x31 {@link KJUR.asn1.DERSet}</li>
 * </ul>
 * <h4>OTHER ASN.1 CLASSES</h4>
 * <ul>
 * <li>{@link KJUR.asn1.ASN1Object}</li>
 * <li>{@link KJUR.asn1.DERAbstractString}</li>
 * <li>{@link KJUR.asn1.DERAbstractTime}</li>
 * <li>{@link KJUR.asn1.DERAbstractStructured}</li>
 * <li>{@link KJUR.asn1.DERTaggedObject}</li>
 * </ul>
 * <h4>SUB NAME SPACES</h4>
 * <ul>
 * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>
 * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>
 * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>
 * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>
 * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>
 * </ul>
 * </p>
 * NOTE: Please ignore method summary and document of this namespace.
 * This caused by a bug of jsdoc2.
 * @name KJUR.asn1
 * @namespace
 */
if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) KJUR.asn1 = {};
/**
 * ASN1 utilities class
 * @name KJUR.asn1.ASN1Util
 * @class ASN1 utilities class
 * @since asn1 1.0.2
 */
KJUR.asn1.ASN1Util = new function () {
  this.integerToByteHex = function (i) {
    var h = i.toString(16);
    if (h.length % 2 == 1) h = '0' + h;
    return h;
  };
  this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {
    var h = bigIntegerValue.toString(16);
    if (h.substr(0, 1) != '-') {
      if (h.length % 2 == 1) {
        h = '0' + h;
      } else {
        if (!h.match(/^[0-7]/)) {
          h = '00' + h;
        }
      }
    } else {
      var hPos = h.substr(1);
      var xorLen = hPos.length;
      if (xorLen % 2 == 1) {
        xorLen += 1;
      } else {
        if (!h.match(/^[0-7]/)) {
          xorLen += 2;
        }
      }
      var hMask = '';
      for (var i = 0; i < xorLen; i++) {
        hMask += 'f';
      }
      var biMask = new _jsbn.BigInteger(hMask, 16);
      var biNeg = biMask.xor(bigIntegerValue).add(_jsbn.BigInteger.ONE);
      h = biNeg.toString(16).replace(/^-/, '');
    }
    return h;
  };
  /**
   * get PEM string from hexadecimal data and header string
   * @name getPEMStringFromHex
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {String} dataHex hexadecimal string of PEM body
   * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')
   * @return {String} PEM formatted string of input data
   * @description
   * This method converts a hexadecimal string to a PEM string with
   * a specified header. Its line break will be CRLF("\r\n").
   * @example
   * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');
   * // value of pem will be:
   * -----BEGIN PRIVATE KEY-----
   * YWFh
   * -----END PRIVATE KEY-----
   */
  this.getPEMStringFromHex = function (dataHex, pemHeader) {
    return hextopem(dataHex, pemHeader);
  };
  /**
   * generate ASN1Object specifed by JSON parameters
   * @name newObject
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {Array} param JSON parameter to generate ASN1Object
   * @return {KJUR.asn1.ASN1Object} generated object
   * @since asn1 1.0.3
   * @description
   * generate any ASN1Object specified by JSON param
   * including ASN.1 primitive or structured.
   * Generally 'param' can be described as follows:
   * <blockquote>
   * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}
   * </blockquote>
   * 'TYPE-OF-ASN1OBJ' can be one of following symbols:
   * <ul>
   * <li>'bool' - DERBoolean</li>
   * <li>'int' - DERInteger</li>
   * <li>'bitstr' - DERBitString</li>
   * <li>'octstr' - DEROctetString</li>
   * <li>'null' - DERNull</li>
   * <li>'oid' - DERObjectIdentifier</li>
   * <li>'enum' - DEREnumerated</li>
   * <li>'utf8str' - DERUTF8String</li>
   * <li>'numstr' - DERNumericString</li>
   * <li>'prnstr' - DERPrintableString</li>
   * <li>'telstr' - DERTeletexString</li>
   * <li>'ia5str' - DERIA5String</li>
   * <li>'utctime' - DERUTCTime</li>
   * <li>'gentime' - DERGeneralizedTime</li>
   * <li>'seq' - DERSequence</li>
   * <li>'set' - DERSet</li>
   * <li>'tag' - DERTaggedObject</li>
   * </ul>
   * @example
   * newObject({'prnstr': 'aaa'});
   * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})
   * // ASN.1 Tagged Object
   * newObject({'tag': {'tag': 'a1',
   *                    'explicit': true,
   *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});
   * // more simple representation of ASN.1 Tagged Object
   * newObject({'tag': ['a1',
   *                    true,
   *                    {'seq': [
   *                      {'int': 3},
   *                      {'prnstr': 'aaa'}]}
   *                   ]});
   */
  this.newObject = function (param) {
    var _KJUR = KJUR,
      _KJUR_asn1 = _KJUR.asn1,
      _DERBoolean = _KJUR_asn1.DERBoolean,
      _DERInteger = _KJUR_asn1.DERInteger,
      _DERBitString = _KJUR_asn1.DERBitString,
      _DEROctetString = _KJUR_asn1.DEROctetString,
      _DERNull = _KJUR_asn1.DERNull,
      _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier,
      _DEREnumerated = _KJUR_asn1.DEREnumerated,
      _DERUTF8String = _KJUR_asn1.DERUTF8String,
      _DERNumericString = _KJUR_asn1.DERNumericString,
      _DERPrintableString = _KJUR_asn1.DERPrintableString,
      _DERTeletexString = _KJUR_asn1.DERTeletexString,
      _DERIA5String = _KJUR_asn1.DERIA5String,
      _DERUTCTime = _KJUR_asn1.DERUTCTime,
      _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime,
      _DERSequence = _KJUR_asn1.DERSequence,
      _DERSet = _KJUR_asn1.DERSet,
      _DERTaggedObject = _KJUR_asn1.DERTaggedObject,
      _newObject = _KJUR_asn1.ASN1Util.newObject;
    var keys = Object.keys(param);
    if (keys.length != 1) throw "key of param shall be only one.";
    var key = keys[0];
    if (":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":" + key + ":") == -1) throw "undefined key: " + key;
    if (key == "bool") return new _DERBoolean(param[key]);
    if (key == "int") return new _DERInteger(param[key]);
    if (key == "bitstr") return new _DERBitString(param[key]);
    if (key == "octstr") return new _DEROctetString(param[key]);
    if (key == "null") return new _DERNull(param[key]);
    if (key == "oid") return new _DERObjectIdentifier(param[key]);
    if (key == "enum") return new _DEREnumerated(param[key]);
    if (key == "utf8str") return new _DERUTF8String(param[key]);
    if (key == "numstr") return new _DERNumericString(param[key]);
    if (key == "prnstr") return new _DERPrintableString(param[key]);
    if (key == "telstr") return new _DERTeletexString(param[key]);
    if (key == "ia5str") return new _DERIA5String(param[key]);
    if (key == "utctime") return new _DERUTCTime(param[key]);
    if (key == "gentime") return new _DERGeneralizedTime(param[key]);
    if (key == "seq") {
      var paramList = param[key];
      var a = [];
      for (var i = 0; i < paramList.length; i++) {
        var asn1Obj = _newObject(paramList[i]);
        a.push(asn1Obj);
      }
      return new _DERSequence({
        'array': a
      });
    }
    if (key == "set") {
      var paramList = param[key];
      var a = [];
      for (var i = 0; i < paramList.length; i++) {
        var asn1Obj = _newObject(paramList[i]);
        a.push(asn1Obj);
      }
      return new _DERSet({
        'array': a
      });
    }
    if (key == "tag") {
      var tagParam = param[key];
      if (Object.prototype.toString.call(tagParam) === '[object Array]' && tagParam.length == 3) {
        var obj = _newObject(tagParam[2]);
        return new _DERTaggedObject({
          tag: tagParam[0],
          explicit: tagParam[1],
          obj: obj
        });
      } else {
        var newParam = {};
        if (tagParam.explicit !== undefined) newParam.explicit = tagParam.explicit;
        if (tagParam.tag !== undefined) newParam.tag = tagParam.tag;
        if (tagParam.obj === undefined) throw "obj shall be specified for 'tag'.";
        newParam.obj = _newObject(tagParam.obj);
        return new _DERTaggedObject(newParam);
      }
    }
  };
  /**
   * get encoded hexadecimal string of ASN1Object specifed by JSON parameters
   * @name jsonToASN1HEX
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {Array} param JSON parameter to generate ASN1Object
   * @return hexadecimal string of ASN1Object
   * @since asn1 1.0.4
   * @description
   * As for ASN.1 object representation of JSON object,
   * please see {@link newObject}.
   * @example
   * jsonToASN1HEX({'prnstr': 'aaa'});
   */
  this.jsonToASN1HEX = function (param) {
    var asn1Obj = this.newObject(param);
    return asn1Obj.getEncodedHex();
  };
}();
/**
 * get dot noted oid number string from hexadecimal value of OID
 * @name oidHexToInt
 * @memberOf KJUR.asn1.ASN1Util
 * @function
 * @param {String} hex hexadecimal value of object identifier
 * @return {String} dot noted string of object identifier
 * @since jsrsasign 4.8.3 asn1 1.0.7
 * @description
 * This static method converts from hexadecimal string representation of
 * ASN.1 value of object identifier to oid number string.
 * @example
 * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; "2.5.4.6"
 */
KJUR.asn1.ASN1Util.oidHexToInt = function (hex) {
  var s = "";
  var i01 = parseInt(hex.substr(0, 2), 16);
  var i0 = Math.floor(i01 / 40);
  var i1 = i01 % 40;
  var s = i0 + "." + i1;
  var binbuf = "";
  for (var i = 2; i < hex.length; i += 2) {
    var value = parseInt(hex.substr(i, 2), 16);
    var bin = ("00000000" + value.toString(2)).slice(-8);
    binbuf = binbuf + bin.substr(1, 7);
    if (bin.substr(0, 1) == "0") {
      var bi = new _jsbn.BigInteger(binbuf, 2);
      s = s + "." + bi.toString(10);
      binbuf = "";
    }
  }
  ;
  return s;
};
/**
 * get hexadecimal value of object identifier from dot noted oid value
 * @name oidIntToHex
 * @memberOf KJUR.asn1.ASN1Util
 * @function
 * @param {String} oidString dot noted string of object identifier
 * @return {String} hexadecimal value of object identifier
 * @since jsrsasign 4.8.3 asn1 1.0.7
 * @description
 * This static method converts from object identifier value string.
 * to hexadecimal string representation of it.
 * @example
 * KJUR.asn1.ASN1Util.oidIntToHex("2.5.4.6") &rarr; "550406"
 */
KJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {
  var itox = function (i) {
    var h = i.toString(16);
    if (h.length == 1) h = '0' + h;
    return h;
  };
  var roidtox = function (roid) {
    var h = '';
    var bi = new _jsbn.BigInteger(roid, 10);
    var b = bi.toString(2);
    var padLen = 7 - b.length % 7;
    if (padLen == 7) padLen = 0;
    var bPad = '';
    for (var i = 0; i < padLen; i++) bPad += '0';
    b = bPad + b;
    for (var i = 0; i < b.length - 1; i += 7) {
      var b8 = b.substr(i, 7);
      if (i != b.length - 7) b8 = '1' + b8;
      h += itox(parseInt(b8, 2));
    }
    return h;
  };
  if (!oidString.match(/^[0-9.]+$/)) {
    throw "malformed oid string: " + oidString;
  }
  var h = '';
  var a = oidString.split('.');
  var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
  h += itox(i0);
  a.splice(0, 2);
  for (var i = 0; i < a.length; i++) {
    h += roidtox(a[i]);
  }
  return h;
};
// ********************************************************************
//  Abstract ASN.1 Classes
// ********************************************************************
// ********************************************************************
/**
 * base class for ASN.1 DER encoder object
 * @name KJUR.asn1.ASN1Object
 * @class base class for ASN.1 DER encoder object
 * @property {Boolean} isModified flag whether internal data was changed
 * @property {String} hTLV hexadecimal string of ASN.1 TLV
 * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)
 * @property {String} hL hexadecimal string of ASN.1 TLV length(L)
 * @property {String} hV hexadecimal string of ASN.1 TLV value(V)
 * @description
 */
KJUR.asn1.ASN1Object = function () {
  var isModified = true;
  var hTLV = null;
  var hT = '00';
  var hL = '00';
  var hV = '';
  /**
   * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)
   * @name getLengthHexFromValue
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV length(L)
   */
  this.getLengthHexFromValue = function () {
    if (typeof this.hV == "undefined" || this.hV == null) {
      throw "this.hV is null or undefined.";
    }
    if (this.hV.length % 2 == 1) {
      throw "value hex must be even length: n=" + hV.length + ",v=" + this.hV;
    }
    var n = this.hV.length / 2;
    var hN = n.toString(16);
    if (hN.length % 2 == 1) {
      hN = "0" + hN;
    }
    if (n < 128) {
      return hN;
    } else {
      var hNlen = hN.length / 2;
      if (hNlen > 15) {
        throw "ASN.1 length too long to represent by 8x: n = " + n.toString(16);
      }
      var head = 128 + hNlen;
      return head.toString(16) + hN;
    }
  };
  /**
   * get hexadecimal string of ASN.1 TLV bytes
   * @name getEncodedHex
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV
   */
  this.getEncodedHex = function () {
    if (this.hTLV == null || this.isModified) {
      this.hV = this.getFreshValueHex();
      this.hL = this.getLengthHexFromValue();
      this.hTLV = this.hT + this.hL + this.hV;
      this.isModified = false;
      //alert("first time: " + this.hTLV);
    }
    return this.hTLV;
  };
  /**
   * get hexadecimal string of ASN.1 TLV value(V) bytes
   * @name getValueHex
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes
   */
  this.getValueHex = function () {
    this.getEncodedHex();
    return this.hV;
  };
  this.getFreshValueHex = function () {
    return '';
  };
};
// == BEGIN DERAbstractString ================================================
/**
 * base class for ASN.1 DER string classes
 * @name KJUR.asn1.DERAbstractString
 * @class base class for ASN.1 DER string classes
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @property {String} s internal string of value
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERAbstractString = function (params) {
  KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
  var s = null;
  var hV = null;
  /**
   * get string value of this string object
   * @name getString
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @return {String} string value of this string object
   */
  this.getString = function () {
    return this.s;
  };
  /**
   * set value by a string
   * @name setString
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @param {String} newS value by a string to set
   */
  this.setString = function (newS) {
    this.hTLV = null;
    this.isModified = true;
    this.s = newS;
    this.hV = stohex(this.s);
  };
  /**
   * set value by a hexadecimal string
   * @name setStringHex
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @param {String} newHexString value by a hexadecimal string to set
   */
  this.setStringHex = function (newHexString) {
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params == "string") {
      this.setString(params);
    } else if (typeof params['str'] != "undefined") {
      this.setString(params['str']);
    } else if (typeof params['hex'] != "undefined") {
      this.setStringHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);
// == END   DERAbstractString ================================================
// == BEGIN DERAbstractTime ==================================================
/**
 * base class for ASN.1 DER Generalized/UTCTime class
 * @name KJUR.asn1.DERAbstractTime
 * @class base class for ASN.1 DER Generalized/UTCTime class
 * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERAbstractTime = function (params) {
  KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);
  var s = null;
  var date = null;
  // --- PRIVATE METHODS --------------------
  this.localDateToUTC = function (d) {
    utc = d.getTime() + d.getTimezoneOffset() * 60000;
    var utcDate = new Date(utc);
    return utcDate;
  };
  /*
   * format date string by Data object
   * @name formatDate
   * @memberOf KJUR.asn1.AbstractTime;
   * @param {Date} dateObject
   * @param {string} type 'utc' or 'gen'
   * @param {boolean} withMillis flag for with millisections or not
   * @description
   * 'withMillis' flag is supported from asn1 1.0.6.
   */
  this.formatDate = function (dateObject, type, withMillis) {
    var pad = this.zeroPadding;
    var d = this.localDateToUTC(dateObject);
    var year = String(d.getFullYear());
    if (type == 'utc') year = year.substr(2, 2);
    var month = pad(String(d.getMonth() + 1), 2);
    var day = pad(String(d.getDate()), 2);
    var hour = pad(String(d.getHours()), 2);
    var min = pad(String(d.getMinutes()), 2);
    var sec = pad(String(d.getSeconds()), 2);
    var s = year + month + day + hour + min + sec;
    if (withMillis === true) {
      var millis = d.getMilliseconds();
      if (millis != 0) {
        var sMillis = pad(String(millis), 3);
        sMillis = sMillis.replace(/[0]+$/, "");
        s = s + "." + sMillis;
      }
    }
    return s + "Z";
  };
  this.zeroPadding = function (s, len) {
    if (s.length >= len) return s;
    return new Array(len - s.length + 1).join('0') + s;
  };
  // --- PUBLIC METHODS --------------------
  /**
   * get string value of this string object
   * @name getString
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @return {String} string value of this time object
   */
  this.getString = function () {
    return this.s;
  };
  /**
   * set value by a string
   * @name setString
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @param {String} newS value by a string to set such like "130430235959Z"
   */
  this.setString = function (newS) {
    this.hTLV = null;
    this.isModified = true;
    this.s = newS;
    this.hV = stohex(newS);
  };
  /**
   * set value by a Date object
   * @name setByDateValue
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @param {Integer} year year of date (ex. 2013)
   * @param {Integer} month month of date between 1 and 12 (ex. 12)
   * @param {Integer} day day of month
   * @param {Integer} hour hours of date
   * @param {Integer} min minutes of date
   * @param {Integer} sec seconds of date
   */
  this.setByDateValue = function (year, month, day, hour, min, sec) {
    var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));
    this.setByDate(dateObject);
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);
// == END   DERAbstractTime ==================================================
// == BEGIN DERAbstractStructured ============================================
/**
 * base class for ASN.1 DER structured class
 * @name KJUR.asn1.DERAbstractStructured
 * @class base class for ASN.1 DER structured class
 * @property {Array} asn1Array internal array of ASN1Object
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERAbstractStructured = function (params) {
  KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
  var asn1Array = null;
  /**
   * set value by array of ASN1Object
   * @name setByASN1ObjectArray
   * @memberOf KJUR.asn1.DERAbstractStructured#
   * @function
   * @param {array} asn1ObjectArray array of ASN1Object to set
   */
  this.setByASN1ObjectArray = function (asn1ObjectArray) {
    this.hTLV = null;
    this.isModified = true;
    this.asn1Array = asn1ObjectArray;
  };
  /**
   * append an ASN1Object to internal array
   * @name appendASN1Object
   * @memberOf KJUR.asn1.DERAbstractStructured#
   * @function
   * @param {ASN1Object} asn1Object to add
   */
  this.appendASN1Object = function (asn1Object) {
    this.hTLV = null;
    this.isModified = true;
    this.asn1Array.push(asn1Object);
  };
  this.asn1Array = new Array();
  if (typeof params != "undefined") {
    if (typeof params['array'] != "undefined") {
      this.asn1Array = params['array'];
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);
// ********************************************************************
//  ASN.1 Object Classes
// ********************************************************************
// ********************************************************************
/**
 * class for ASN.1 DER Boolean
 * @name KJUR.asn1.DERBoolean
 * @class class for ASN.1 DER Boolean
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERBoolean = function () {
  KJUR.asn1.DERBoolean.superclass.constructor.call(this);
  this.hT = "01";
  this.hTLV = "0101ff";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER Integer
 * @name KJUR.asn1.DERInteger
 * @class class for ASN.1 DER Integer
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>int - specify initial ASN.1 value(V) by integer value</li>
 * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERInteger = function (params) {
  KJUR.asn1.DERInteger.superclass.constructor.call(this);
  this.hT = "02";
  /**
   * set value by Tom Wu's BigInteger object
   * @name setByBigInteger
   * @memberOf KJUR.asn1.DERInteger#
   * @function
   * @param {BigInteger} bigIntegerValue to set
   */
  this.setByBigInteger = function (bigIntegerValue) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
  };
  /**
   * set value by integer value
   * @name setByInteger
   * @memberOf KJUR.asn1.DERInteger
   * @function
   * @param {Integer} integer value to set
   */
  this.setByInteger = function (intValue) {
    var bi = new _jsbn.BigInteger(String(intValue), 10);
    this.setByBigInteger(bi);
  };
  /**
   * set value by integer value
   * @name setValueHex
   * @memberOf KJUR.asn1.DERInteger#
   * @function
   * @param {String} hexadecimal string of integer value
   * @description
   * <br/>
   * NOTE: Value shall be represented by minimum octet length of
   * two's complement representation.
   * @example
   * new KJUR.asn1.DERInteger(123);
   * new KJUR.asn1.DERInteger({'int': 123});
   * new KJUR.asn1.DERInteger({'hex': '1fad'});
   */
  this.setValueHex = function (newHexString) {
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['bigint'] != "undefined") {
      this.setByBigInteger(params['bigint']);
    } else if (typeof params['int'] != "undefined") {
      this.setByInteger(params['int']);
    } else if (typeof params == "number") {
      this.setByInteger(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setValueHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER encoded BitString primitive
 * @name KJUR.asn1.DERBitString
 * @class class for ASN.1 DER encoded BitString primitive
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>bin - specify binary string (ex. '10111')</li>
 * <li>array - specify array of boolean (ex. [true,false,true,true])</li>
 * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>
 * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}
 * argument for "BitString encapsulates" structure.</li>
 * </ul>
 * NOTE1: 'params' can be omitted.<br/>
 * NOTE2: 'obj' parameter have been supported since
 * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>
 * @example
 * // default constructor
 * o = new KJUR.asn1.DERBitString();
 * // initialize with binary string
 * o = new KJUR.asn1.DERBitString({bin: "1011"});
 * // initialize with boolean array
 * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});
 * // initialize with hexadecimal string (04 is unused bits)
 * o = new KJUR.asn1.DEROctetString({hex: "04bac0"});
 * // initialize with ASN1Util.newObject argument for encapsulated
 * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
 * // above generates a ASN.1 data like this:
 * // BIT STRING, encapsulates {
 * //   SEQUENCE {
 * //     INTEGER 3
 * //     PrintableString 'aaa'
 * //     }
 * //   }
 */
KJUR.asn1.DERBitString = function (params) {
  if (params !== undefined && typeof params.obj !== "undefined") {
    var o = KJUR.asn1.ASN1Util.newObject(params.obj);
    params.hex = "00" + o.getEncodedHex();
  }
  KJUR.asn1.DERBitString.superclass.constructor.call(this);
  this.hT = "03";
  /**
   * set ASN.1 value(V) by a hexadecimal string including unused bits
   * @name setHexValueIncludingUnusedBits
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {String} newHexStringIncludingUnusedBits
   */
  this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = newHexStringIncludingUnusedBits;
  };
  /**
   * set ASN.1 value(V) by unused bit and hexadecimal string of value
   * @name setUnusedBitsAndHexValue
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {Integer} unusedBits
   * @param {String} hValue
   */
  this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {
    if (unusedBits < 0 || 7 < unusedBits) {
      throw "unused bits shall be from 0 to 7: u = " + unusedBits;
    }
    var hUnusedBits = "0" + unusedBits;
    this.hTLV = null;
    this.isModified = true;
    this.hV = hUnusedBits + hValue;
  };
  /**
   * set ASN.1 DER BitString by binary string<br/>
   * @name setByBinaryString
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {String} binaryString binary value string (i.e. '10111')
   * @description
   * Its unused bits will be calculated automatically by length of
   * 'binaryValue'. <br/>
   * NOTE: Trailing zeros '0' will be ignored.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.setByBooleanArray("01011");
   */
  this.setByBinaryString = function (binaryString) {
    binaryString = binaryString.replace(/0+$/, '');
    var unusedBits = 8 - binaryString.length % 8;
    if (unusedBits == 8) unusedBits = 0;
    for (var i = 0; i <= unusedBits; i++) {
      binaryString += '0';
    }
    var h = '';
    for (var i = 0; i < binaryString.length - 1; i += 8) {
      var b = binaryString.substr(i, 8);
      var x = parseInt(b, 2).toString(16);
      if (x.length == 1) x = '0' + x;
      h += x;
    }
    this.hTLV = null;
    this.isModified = true;
    this.hV = '0' + unusedBits + h;
  };
  /**
   * set ASN.1 TLV value(V) by an array of boolean<br/>
   * @name setByBooleanArray
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {array} booleanArray array of boolean (ex. [true, false, true])
   * @description
   * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.setByBooleanArray([false, true, false, true, true]);
   */
  this.setByBooleanArray = function (booleanArray) {
    var s = '';
    for (var i = 0; i < booleanArray.length; i++) {
      if (booleanArray[i] == true) {
        s += '1';
      } else {
        s += '0';
      }
    }
    this.setByBinaryString(s);
  };
  /**
   * generate an array of falses with specified length<br/>
   * @name newFalseArray
   * @memberOf KJUR.asn1.DERBitString
   * @function
   * @param {Integer} nLength length of array to generate
   * @return {array} array of boolean falses
   * @description
   * This static method may be useful to initialize boolean array.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.newFalseArray(3) &rarr; [false, false, false]
   */
  this.newFalseArray = function (nLength) {
    var a = new Array(nLength);
    for (var i = 0; i < nLength; i++) {
      a[i] = false;
    }
    return a;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params == "string" && params.toLowerCase().match(/^[0-9a-f]+$/)) {
      this.setHexValueIncludingUnusedBits(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setHexValueIncludingUnusedBits(params['hex']);
    } else if (typeof params['bin'] != "undefined") {
      this.setByBinaryString(params['bin']);
    } else if (typeof params['array'] != "undefined") {
      this.setByBooleanArray(params['array']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER OctetString<br/>
 * @name KJUR.asn1.DEROctetString
 * @class class for ASN.1 DER OctetString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * This class provides ASN.1 OctetString simple type.<br/>
 * Supported "params" attributes are:
 * <ul>
 * <li>str - to set a string as a value</li>
 * <li>hex - to set a hexadecimal string as a value</li>
 * <li>obj - to set a encapsulated ASN.1 value by JSON object
 * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>
 * </ul>
 * NOTE: A parameter 'obj' have been supported
 * for "OCTET STRING, encapsulates" structure.
 * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).
 * @see KJUR.asn1.DERAbstractString - superclass
 * @example
 * // default constructor
 * o = new KJUR.asn1.DEROctetString();
 * // initialize with string
 * o = new KJUR.asn1.DEROctetString({str: "aaa"});
 * // initialize with hexadecimal string
 * o = new KJUR.asn1.DEROctetString({hex: "616161"});
 * // initialize with ASN1Util.newObject argument
 * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
 * // above generates a ASN.1 data like this:
 * // OCTET STRING, encapsulates {
 * //   SEQUENCE {
 * //     INTEGER 3
 * //     PrintableString 'aaa'
 * //     }
 * //   }
 */
KJUR.asn1.DEROctetString = function (params) {
  if (params !== undefined && typeof params.obj !== "undefined") {
    var o = KJUR.asn1.ASN1Util.newObject(params.obj);
    params.hex = o.getEncodedHex();
  }
  KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);
  this.hT = "04";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER Null
 * @name KJUR.asn1.DERNull
 * @class class for ASN.1 DER Null
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERNull = function () {
  KJUR.asn1.DERNull.superclass.constructor.call(this);
  this.hT = "05";
  this.hTLV = "0500";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER ObjectIdentifier
 * @name KJUR.asn1.DERObjectIdentifier
 * @class class for ASN.1 DER ObjectIdentifier
 * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERObjectIdentifier = function (params) {
  var itox = function (i) {
    var h = i.toString(16);
    if (h.length == 1) h = '0' + h;
    return h;
  };
  var roidtox = function (roid) {
    var h = '';
    var bi = new _jsbn.BigInteger(roid, 10);
    var b = bi.toString(2);
    var padLen = 7 - b.length % 7;
    if (padLen == 7) padLen = 0;
    var bPad = '';
    for (var i = 0; i < padLen; i++) bPad += '0';
    b = bPad + b;
    for (var i = 0; i < b.length - 1; i += 7) {
      var b8 = b.substr(i, 7);
      if (i != b.length - 7) b8 = '1' + b8;
      h += itox(parseInt(b8, 2));
    }
    return h;
  };
  KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);
  this.hT = "06";
  /**
   * set value by a hexadecimal string
   * @name setValueHex
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} newHexString hexadecimal value of OID bytes
   */
  this.setValueHex = function (newHexString) {
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = newHexString;
  };
  /**
   * set value by a OID string<br/>
   * @name setValueOidString
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} oidString OID string (ex. 2.5.4.13)
   * @example
   * o = new KJUR.asn1.DERObjectIdentifier();
   * o.setValueOidString("2.5.4.13");
   */
  this.setValueOidString = function (oidString) {
    if (!oidString.match(/^[0-9.]+$/)) {
      throw "malformed oid string: " + oidString;
    }
    var h = '';
    var a = oidString.split('.');
    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
    h += itox(i0);
    a.splice(0, 2);
    for (var i = 0; i < a.length; i++) {
      h += roidtox(a[i]);
    }
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = h;
  };
  /**
   * set value by a OID name
   * @name setValueName
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} oidName OID name (ex. 'serverAuth')
   * @since 1.0.1
   * @description
   * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.
   * Otherwise raise error.
   * @example
   * o = new KJUR.asn1.DERObjectIdentifier();
   * o.setValueName("serverAuth");
   */
  this.setValueName = function (oidName) {
    var oid = KJUR.asn1.x509.OID.name2oid(oidName);
    if (oid !== '') {
      this.setValueOidString(oid);
    } else {
      throw "DERObjectIdentifier oidName undefined: " + oidName;
    }
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (params !== undefined) {
    if (typeof params === "string") {
      if (params.match(/^[0-2].[0-9.]+$/)) {
        this.setValueOidString(params);
      } else {
        this.setValueName(params);
      }
    } else if (params.oid !== undefined) {
      this.setValueOidString(params.oid);
    } else if (params.hex !== undefined) {
      this.setValueHex(params.hex);
    } else if (params.name !== undefined) {
      this.setValueName(params.name);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER Enumerated
 * @name KJUR.asn1.DEREnumerated
 * @class class for ASN.1 DER Enumerated
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>int - specify initial ASN.1 value(V) by integer value</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 * @example
 * new KJUR.asn1.DEREnumerated(123);
 * new KJUR.asn1.DEREnumerated({int: 123});
 * new KJUR.asn1.DEREnumerated({hex: '1fad'});
 */
KJUR.asn1.DEREnumerated = function (params) {
  KJUR.asn1.DEREnumerated.superclass.constructor.call(this);
  this.hT = "0a";
  /**
   * set value by Tom Wu's BigInteger object
   * @name setByBigInteger
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {BigInteger} bigIntegerValue to set
   */
  this.setByBigInteger = function (bigIntegerValue) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
  };
  /**
   * set value by integer value
   * @name setByInteger
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {Integer} integer value to set
   */
  this.setByInteger = function (intValue) {
    var bi = new _jsbn.BigInteger(String(intValue), 10);
    this.setByBigInteger(bi);
  };
  /**
   * set value by integer value
   * @name setValueHex
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {String} hexadecimal string of integer value
   * @description
   * <br/>
   * NOTE: Value shall be represented by minimum octet length of
   * two's complement representation.
   */
  this.setValueHex = function (newHexString) {
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['int'] != "undefined") {
      this.setByInteger(params['int']);
    } else if (typeof params == "number") {
      this.setByInteger(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setValueHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER UTF8String
 * @name KJUR.asn1.DERUTF8String
 * @class class for ASN.1 DER UTF8String
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERUTF8String = function (params) {
  KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);
  this.hT = "0c";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER NumericString
 * @name KJUR.asn1.DERNumericString
 * @class class for ASN.1 DER NumericString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERNumericString = function (params) {
  KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);
  this.hT = "12";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER PrintableString
 * @name KJUR.asn1.DERPrintableString
 * @class class for ASN.1 DER PrintableString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERPrintableString = function (params) {
  KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);
  this.hT = "13";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER TeletexString
 * @name KJUR.asn1.DERTeletexString
 * @class class for ASN.1 DER TeletexString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERTeletexString = function (params) {
  KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);
  this.hT = "14";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER IA5String
 * @name KJUR.asn1.DERIA5String
 * @class class for ASN.1 DER IA5String
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERIA5String = function (params) {
  KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);
  this.hT = "16";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER UTCTime
 * @name KJUR.asn1.DERUTCTime
 * @class class for ASN.1 DER UTCTime
 * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
 * @extends KJUR.asn1.DERAbstractTime
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * <li>date - specify Date object.</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 * <h4>EXAMPLES</h4>
 * @example
 * d1 = new KJUR.asn1.DERUTCTime();
 * d1.setString('130430125959Z');
 *
 * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});
 * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});
 * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');
 */
KJUR.asn1.DERUTCTime = function (params) {
  KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);
  this.hT = "17";
  /**
   * set value by a Date object<br/>
   * @name setByDate
   * @memberOf KJUR.asn1.DERUTCTime#
   * @function
   * @param {Date} dateObject Date object to set ASN.1 value(V)
   * @example
   * o = new KJUR.asn1.DERUTCTime();
   * o.setByDate(new Date("2016/12/31"));
   */
  this.setByDate = function (dateObject) {
    this.hTLV = null;
    this.isModified = true;
    this.date = dateObject;
    this.s = this.formatDate(this.date, 'utc');
    this.hV = stohex(this.s);
  };
  this.getFreshValueHex = function () {
    if (typeof this.date == "undefined" && typeof this.s == "undefined") {
      this.date = new Date();
      this.s = this.formatDate(this.date, 'utc');
      this.hV = stohex(this.s);
    }
    return this.hV;
  };
  if (params !== undefined) {
    if (params.str !== undefined) {
      this.setString(params.str);
    } else if (typeof params == "string" && params.match(/^[0-9]{12}Z$/)) {
      this.setString(params);
    } else if (params.hex !== undefined) {
      this.setStringHex(params.hex);
    } else if (params.date !== undefined) {
      this.setByDate(params.date);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);
// ********************************************************************
/**
 * class for ASN.1 DER GeneralizedTime
 * @name KJUR.asn1.DERGeneralizedTime
 * @class class for ASN.1 DER GeneralizedTime
 * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})
 * @property {Boolean} withMillis flag to show milliseconds or not
 * @extends KJUR.asn1.DERAbstractTime
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * <li>date - specify Date object.</li>
 * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>
 * </ul>
 * NOTE1: 'params' can be omitted.
 * NOTE2: 'withMillis' property is supported from asn1 1.0.6.
 */
KJUR.asn1.DERGeneralizedTime = function (params) {
  KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);
  this.hT = "18";
  this.withMillis = false;
  /**
   * set value by a Date object
   * @name setByDate
   * @memberOf KJUR.asn1.DERGeneralizedTime#
   * @function
   * @param {Date} dateObject Date object to set ASN.1 value(V)
   * @example
   * When you specify UTC time, use 'Date.UTC' method like this:<br/>
   * o1 = new DERUTCTime();
   * o1.setByDate(date);
   *
   * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59
   */
  this.setByDate = function (dateObject) {
    this.hTLV = null;
    this.isModified = true;
    this.date = dateObject;
    this.s = this.formatDate(this.date, 'gen', this.withMillis);
    this.hV = stohex(this.s);
  };
  this.getFreshValueHex = function () {
    if (this.date === undefined && this.s === undefined) {
      this.date = new Date();
      this.s = this.formatDate(this.date, 'gen', this.withMillis);
      this.hV = stohex(this.s);
    }
    return this.hV;
  };
  if (params !== undefined) {
    if (params.str !== undefined) {
      this.setString(params.str);
    } else if (typeof params == "string" && params.match(/^[0-9]{14}Z$/)) {
      this.setString(params);
    } else if (params.hex !== undefined) {
      this.setStringHex(params.hex);
    } else if (params.date !== undefined) {
      this.setByDate(params.date);
    }
    if (params.millis === true) {
      this.withMillis = true;
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);
// ********************************************************************
/**
 * class for ASN.1 DER Sequence
 * @name KJUR.asn1.DERSequence
 * @class class for ASN.1 DER Sequence
 * @extends KJUR.asn1.DERAbstractStructured
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>array - specify array of ASN1Object to set elements of content</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERSequence = function (params) {
  KJUR.asn1.DERSequence.superclass.constructor.call(this, params);
  this.hT = "30";
  this.getFreshValueHex = function () {
    var h = '';
    for (var i = 0; i < this.asn1Array.length; i++) {
      var asn1Obj = this.asn1Array[i];
      h += asn1Obj.getEncodedHex();
    }
    this.hV = h;
    return this.hV;
  };
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);
// ********************************************************************
/**
 * class for ASN.1 DER Set
 * @name KJUR.asn1.DERSet
 * @class class for ASN.1 DER Set
 * @extends KJUR.asn1.DERAbstractStructured
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>array - specify array of ASN1Object to set elements of content</li>
 * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>
 * </ul>
 * NOTE1: 'params' can be omitted.<br/>
 * NOTE2: sortflag is supported since 1.0.5.
 */
KJUR.asn1.DERSet = function (params) {
  KJUR.asn1.DERSet.superclass.constructor.call(this, params);
  this.hT = "31";
  this.sortFlag = true; // item shall be sorted only in ASN.1 DER
  this.getFreshValueHex = function () {
    var a = new Array();
    for (var i = 0; i < this.asn1Array.length; i++) {
      var asn1Obj = this.asn1Array[i];
      a.push(asn1Obj.getEncodedHex());
    }
    if (this.sortFlag == true) a.sort();
    this.hV = a.join('');
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params.sortflag != "undefined" && params.sortflag == false) this.sortFlag = false;
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);
// ********************************************************************
/**
 * class for ASN.1 DER TaggedObject
 * @name KJUR.asn1.DERTaggedObject
 * @class class for ASN.1 DER TaggedObject
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.
 * For example, if you find '[1]' tag in a ASN.1 dump,
 * 'tagNoHex' will be 'a1'.
 * <br/>
 * As for optional argument 'params' for constructor, you can specify *ANY* of
 * following properties:
 * <ul>
 * <li>explicit - specify true if this is explicit tag otherwise false
 *     (default is 'true').</li>
 * <li>tag - specify tag (default is 'a0' which means [0])</li>
 * <li>obj - specify ASN1Object which is tagged</li>
 * </ul>
 * @example
 * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});
 * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});
 * hex = d2.getEncodedHex();
 */
KJUR.asn1.DERTaggedObject = function (params) {
  KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);
  this.hT = "a0";
  this.hV = '';
  this.isExplicit = true;
  this.asn1Object = null;
  /**
   * set value by an ASN1Object
   * @name setString
   * @memberOf KJUR.asn1.DERTaggedObject#
   * @function
   * @param {Boolean} isExplicitFlag flag for explicit/implicit tag
   * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag
   * @param {ASN1Object} asn1Object ASN.1 to encapsulate
   */
  this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {
    this.hT = tagNoHex;
    this.isExplicit = isExplicitFlag;
    this.asn1Object = asn1Object;
    if (this.isExplicit) {
      this.hV = this.asn1Object.getEncodedHex();
      this.hTLV = null;
      this.isModified = true;
    } else {
      this.hV = null;
      this.hTLV = asn1Object.getEncodedHex();
      this.hTLV = this.hTLV.replace(/^../, tagNoHex);
      this.isModified = false;
    }
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['tag'] != "undefined") {
      this.hT = params['tag'];
    }
    if (typeof params['explicit'] != "undefined") {
      this.isExplicit = params['explicit'];
    }
    if (typeof params['obj'] != "undefined") {
      this.asn1Object = params['obj'];
      this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js":
/*!**************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.YAHOO = void 0;
/*!
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
var YAHOO = exports.YAHOO = {};
YAHOO.lang = {
  /**
   * Utility to set up the prototype, constructor and superclass properties to
   * support an inheritance strategy that can chain constructors and methods.
   * Static members will not be inherited.
   *
   * @method extend
   * @static
   * @param {Function} subc   the object to modify
   * @param {Function} superc the object to inherit
   * @param {Object} overrides  additional properties/methods to add to the
   *                              subclass prototype.  These will override the
   *                              matching items obtained from the superclass
   *                              if present.
   */
  extend: function (subc, superc, overrides) {
    if (!superc || !subc) {
      throw new Error("YAHOO.lang.extend failed, please check that " + "all dependencies are included.");
    }
    var F = function () {};
    F.prototype = superc.prototype;
    subc.prototype = new F();
    subc.prototype.constructor = subc;
    subc.superclass = superc.prototype;
    if (superc.prototype.constructor == Object.prototype.constructor) {
      superc.prototype.constructor = superc;
    }
    if (overrides) {
      var i;
      for (i in overrides) {
        subc.prototype[i] = overrides[i];
      }
      /*
       * IE will not enumerate native functions in a derived object even if the
       * function was overridden.  This is a workaround for specific functions
       * we care about on the Object prototype.
       * @property _IEEnumFix
       * @param {Function} r  the object to receive the augmentation
       * @param {Function} s  the object that supplies the properties to augment
       * @static
       * @private
       */
      var _IEEnumFix = function () {},
        ADD = ["toString", "valueOf"];
      try {
        if (/MSIE/.test(navigator.userAgent)) {
          _IEEnumFix = function (r, s) {
            for (i = 0; i < ADD.length; i = i + 1) {
              var fname = ADD[i],
                f = s[fname];
              if (typeof f === 'function' && f != Object.prototype[fname]) {
                r[fname] = f;
              }
            }
          };
        }
      } catch (ex) {}
      ;
      _IEEnumFix(subc.prototype, overrides);
    }
  }
};

/***/ }),

/***/ "./src/Common/libs/umeng/umenganalysis.es.min.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/umeng/umenganalysis.es.min.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.storage"));
var _system2 = _interopRequireDefault($app_require$("@app-module/system.device"));
var _system3 = _interopRequireDefault($app_require$("@app-module/system.network"));
var _system4 = _interopRequireDefault($app_require$("@app-module/system.router"));
var _system5 = _interopRequireDefault($app_require$("@app-module/system.app"));
var _system6 = _interopRequireDefault($app_require$("@app-module/system.fetch"));
var _system7 = _interopRequireDefault($app_require$("@app-module/system.file"));
var _system8 = _interopRequireDefault($app_require$("@app-module/system.request"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function buildUniqueId(t) {
  const e = [];
  e.push(DeviceUtil.getAdvertisingId()), e.push(DeviceUtil.getAndroidId()), e.push(DeviceUtil.getOAID()), Promise.all(e).then(e => {
    const n = e[0];
    const o = e[1];
    const i = e[2];
    StorageUtil.putData(constants.MOBILE_ADVERTISING_ID, n);
    StorageUtil.putData(constants.MOBILE_ANDROID_ID, o);
    StorageUtil.putData(constants.MOBILE_OAID, i);
    uniqueidCache = o || n || i;
    StorageUtil.putData("umeng_uniqueid", uniqueidCache);
    t(uniqueidCache);
  });
}
function createCommonjsModule(t, e) {
  return e = {
    exports: {}
  }, t(e, e.exports), e.exports;
}
function MD5$1(t) {
  return MD5(t);
}
function encode(t) {
  return Base64_2.encode(t, !1);
}
function decode(t) {
  return Base64_2.decode(t);
}
function checkEmptyArgument(t) {
  return t.length && this.checkId(t[0]);
}
function checkId(t) {
  return t && "string" == typeof t;
}
function toStr(t) {
  let e = "";
  if (t) try {
    e = JSON.stringify(t);
  } catch (t) {}
  return e;
}
function stringToArray(t) {
  if (t) try {
    return JSON.parse(t);
  } catch (t) {}
  return [];
}
function toObject(t) {
  if (t) try {
    return JSON.parse(t);
  } catch (t) {}
  return null;
}
function checkAttrOrString(t) {
  return !(!t || "string" != typeof t && ("object" != typeof t || isArray(t)));
}
function isArray(t) {
  return "[object Array]" === {}.toString.call(t);
}
function isNotANumber(t) {
  return !isNaN(parseInt(t, 10));
}
function checkMD5(t, e) {
  try {
    return t === MD5(e);
  } catch (t) {
    return !1;
  }
}
function Looper() {}
function send(t) {
  _system3.default.getType({
    success(e) {
      "none" !== e.type && hasEnvelope(t, (e, n) => {
        if (e) {
          if (n) {
            const e = {
              md5Key: n,
              type: "second"
            };
            RequestHelper.getInstance().send(e, () => {
              StoreQueue.getInstance().handleMessage(null);
              realSend(t);
            });
          }
        } else realSend(t);
      });
    },
    fail() {}
  });
}
function hasEnvelope(t, e) {
  StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, n => {
    if (!n) return void e(!1, null);
    const o = UmengUtils.stringToArray(n);
    if (!o || 0 === o.length) return void e(!1, null);
    for (const n in o) if ({}.hasOwnProperty.call(o, n)) {
      const i = o[n];
      if (i) {
        const n = i.indexOf(constants.KEY_EVENT_PREFIX);
        if (0 === n && t === constants.REQUEST_TYPE_EVENT) return void e(!0, i);
        const o = i.indexOf(constants.KEY_HALF_SESSION_PREFIX);
        if (0 === o && t === constants.REQUEST_TYPE_SESSION_HALF) return void e(!0, i);
        const r = i.indexOf(constants.KEY_CLOSE_SESSION_PREFIX);
        if (0 === r && t === constants.REQUEST_TYPE_SESSION_CLOSE) return void e(!0, i);
      }
    }
    e(!1, null);
  });
}
function realSend(t) {
  if (RequestHelper.getInstance().paramsIsValid(t)) if (t === constants.REQUEST_TYPE_SESSION_HALF) {
    const e = RequestHelper.getInstance().buildSendContent(t, null),
      n = e.data;
    n.analytics && RequestHelper.getInstance().send(e, t => {
      t && -1 !== t.indexOf(constants.KEY_HALF_SESSION_PREFIX) && (Header.getInstance().setFirstSendFlag(), StorageUtil.putData(constants.APP_FIRST_OPEN_FLAG, "false"));
    });
  } else if (t === constants.REQUEST_TYPE_SESSION_CLOSE) {
    const e = RequestHelper.getInstance().buildSendContent(t, null);
    if (e && e.data) {
      const t = e.data;
      t.analytics && RequestHelper.getInstance().send(e);
    }
  } else t === constants.REQUEST_TYPE_EVENT && EventStoreQueue.getInstance().readEkvDatas(e => {
    if (!e || 0 === e.length) return;
    const n = RequestHelper.getInstance().buildSendContent(t, e);
    if (n) {
      const t = n.data;
      t.analytics && (RequestHelper.getInstance().send(n), EventController.getInstance().setSendTime());
    }
  });
}
function sendAll() {
  if (0 === time) {
    time = 10;
    const t = setInterval(() => {
      time -= 1;
      0 === time && clearInterval(t);
    }, 100);
    Header.getInstance().getHeader() ? (send(constants.REQUEST_TYPE_SESSION_HALF), send(constants.REQUEST_TYPE_SESSION_CLOSE), send(constants.REQUEST_TYPE_EVENT)) : setTimeout(sendAll, 100);
  }
}
function PageController() {
  this._pagelist = [], this._currentPage = {}, this.pageObject = {};
}
function UmengAnalysisLib() {
  this.pageController = new PageController();
}
function isInit() {
  return !!inited || (console.error("[app.ux] ==> onCreate not invoked init() method"), !1);
}
function sendDatas() {
  Header.getInstance().getHeader() ? (Request.send(constants.REQUEST_TYPE_SESSION_HALF), Request.send(constants.REQUEST_TYPE_SESSION_CLOSE), StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
    t === constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE && Request.send(constants.REQUEST_TYPE_EVENT);
  })) : setTimeout(sendDatas, 100);
}
function SdkUpdater() {
  this.url = constants.SDK_UPDATE_SERVER_ADDRESS;
}
function Page(t) {
  if (t) {
    const e = t.onShow;
    t.onShow = function (...t) {
      try {
        UmengAnalysis.resume(this);
      } catch (t) {}
      if (e) return e.apply(this, t);
    };
    const n = t.onHide;
    t.onHide = function (...t) {
      try {
        UmengAnalysis.pause(this);
      } catch (t) {}
      if (n) return n.apply(this, t);
    };
  }
  return t;
}
const StorageUtil = {
    putData(t, e, n, o) {
      _system.default.set({
        key: t,
        value: e,
        success(t) {
          n && n(t);
        },
        fail(t, e) {
          o && o(t, e);
        }
      });
    },
    getData(t, e, n) {
      _system.default.get({
        key: t,
        success(t) {
          e && e(t);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    },
    deleteData(t, e) {
      _system.default.delete({
        key: t,
        success() {
          e && e(!0);
        },
        fail() {
          e && e(!1);
        }
      });
    }
  },
  constants = {
    KEY_NO_SEND_REQUEST_KEYS: "umeng_key_no_send_request",
    SESSION_INTERVAL: 3e4,
    TEST_URL: "https://preulogs.umeng.com/unify_logs",
    RELEASE_URL: "https://ulogs.umeng.com/unify_logs",
    KEY_SESSION_PREFIX: "umeng_session_prefix_",
    KEY_EVENT_PREFIX: "umeng_event_prefix_",
    KEY_HALF_SESSION_PREFIX: "umeng_half_session_prefix_",
    KEY_CLOSE_SESSION_PREFIX: "umeng_close_session_prefix_",
    REQUEST_TYPE_SESSION_HALF: 1,
    REQUEST_TYPE_SESSION_CLOSE: 2,
    REQUEST_TYPE_EVENT: 3,
    IS_DEBUG: !1,
    SDK_VERSION: "2.0.3",
    APP_FIRST_OPEN_FLAG: "umeng_key_first_open_flag",
    MOBILE_ADVERTISING_ID: "umeng_mobile_advertising_id",
    MOBILE_ANDROID_ID: "umeng_android__id",
    MOBILE_OAID: "umeng_oaid",
    EVENT_SEND_MIN_INTERVAL: 90,
    EVENT_SEND_MAX_INTERVAL: 86400,
    EVENT_LAST_SEND_TIME: "umeng_ekv_last_send_time",
    EVENT_SEND_REPORT_POLICY: "event_send_report_policy",
    EVENT_SEND_REPORT_INTERVAL_TIME: "event_send_report_interval_time",
    EVENT_SEND_REPORT_POLICY_START_SEND_VALUE: "1",
    EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE: "6",
    DOWNLOAD_FILE_FIRST_CACHE: "umeng_sdk_update_firstCacheLevel",
    DOWNLOAD_FILE_SECOND_CACHE: "umeng_sdk_update_secondCacheLevel",
    SDK_UPDATE_SERVER_ADDRESS: "http://s.cnzz.com/sdk/quickapp",
    SDK_UPDATE_LOCAL_STORAGE_PATH: "internal://files/umengsdk/"
  };
let oaidCache = null,
  androididCache = null,
  idfaCache = null,
  uniqueidCache = null,
  deviceInfoCache = null;
const DeviceUtil = {
    getBaseInfo() {
      return new Promise(t => {
        if (deviceInfoCache) return void t(deviceInfoCache);
        _system2.default.getInfo({
          success(e) {
            deviceInfoCache = e, t(e);
          },
          fail() {
            t(null);
          }
        });
      });
    },
    getNetworkInfo(t) {
      _system3.default.getType({
        success(e) {
          t(e);
        }
      });
    },
    getAndroidId() {
      return new Promise(t => {
        if (androididCache) return void t(androididCache.userId);
        _system2.default.getUserId({
          success(e) {
            androididCache = e, t(e.userId);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getAdvertisingId() {
      return new Promise(t => {
        if (idfaCache) return void t(idfaCache.advertisingId);
        _system2.default.getAdvertisingId({
          success(e) {
            idfaCache = e, t(e.advertisingId);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getOAID() {
      return console.log("call getOAID"), new Promise(t => {
        if (null !== oaidCache) return void t(oaidCache.oaid);
        "function" != typeof _system2.default.getOAID || !1 === _system2.default.allowTrackOAID ? t("") : _system2.default.getOAID({
          success(e) {
            oaidCache = e, t(e.oaid);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getUniqueId() {
      return new Promise(t => {
        uniqueidCache ? t(uniqueidCache) : buildUniqueId(t);
      });
    },
    getPageName() {
      try {
        const t = _system4.default.getState();
        return t.name;
      } catch (t) {}
    },
    getSystemBaseInfo(t, e) {
      if (deviceInfoCache) return void (t && t(deviceInfoCache));
      _system2.default.getInfo({
        success(e) {
          deviceInfoCache = e, t && t(e);
        },
        fail(t, n) {
          e && e(t, n);
        }
      });
    }
  },
  Log = {
    d(t) {},
    i(t) {
      try {
        userDebug && console.info(t);
      } catch (t) {}
    },
    e(t) {},
    w(t) {},
    v(t) {}
  };
var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
  MD5 = createCommonjsModule(function (t) {
    !function (e) {
      function n(t, e) {
        var n = (65535 & t) + (65535 & e);
        return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n;
      }
      function o(t, e) {
        return t << e | t >>> 32 - e;
      }
      function i(t, e, i, r, s, c) {
        return n(o(n(n(e, t), n(r, c)), s), i);
      }
      function r(t, e, n, o, r, s, c) {
        return i(e & n | ~e & o, t, e, r, s, c);
      }
      function s(t, e, n, o, r, s, c) {
        return i(e & o | n & ~o, t, e, r, s, c);
      }
      function c(t, e, n, o, r, s, c) {
        return i(e ^ n ^ o, t, e, r, s, c);
      }
      function a(t, e, n, o, r, s, c) {
        return i(n ^ (e | ~o), t, e, r, s, c);
      }
      function u(t, e) {
        t[e >> 5] |= 128 << e % 32, t[14 + (e + 64 >>> 9 << 4)] = e;
        var o,
          i,
          u,
          f,
          l,
          _ = 1732584193,
          E = -271733879,
          g = -1732584194,
          d = 271733878;
        for (o = 0; o < t.length; o += 16) i = _, u = E, f = g, l = d, E = a(E = a(E = a(E = a(E = c(E = c(E = c(E = c(E = s(E = s(E = s(E = s(E = r(E = r(E = r(E = r(E, g = r(g, d = r(d, _ = r(_, E, g, d, t[o], 7, -680876936), E, g, t[o + 1], 12, -389564586), _, E, t[o + 2], 17, 606105819), d, _, t[o + 3], 22, -1044525330), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 4], 7, -176418897), E, g, t[o + 5], 12, 1200080426), _, E, t[o + 6], 17, -1473231341), d, _, t[o + 7], 22, -45705983), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 8], 7, 1770035416), E, g, t[o + 9], 12, -1958414417), _, E, t[o + 10], 17, -42063), d, _, t[o + 11], 22, -1990404162), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 12], 7, 1804603682), E, g, t[o + 13], 12, -40341101), _, E, t[o + 14], 17, -1502002290), d, _, t[o + 15], 22, 1236535329), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 1], 5, -165796510), E, g, t[o + 6], 9, -1069501632), _, E, t[o + 11], 14, 643717713), d, _, t[o], 20, -373897302), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 5], 5, -701558691), E, g, t[o + 10], 9, 38016083), _, E, t[o + 15], 14, -660478335), d, _, t[o + 4], 20, -405537848), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 9], 5, 568446438), E, g, t[o + 14], 9, -1019803690), _, E, t[o + 3], 14, -187363961), d, _, t[o + 8], 20, 1163531501), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 13], 5, -1444681467), E, g, t[o + 2], 9, -51403784), _, E, t[o + 7], 14, 1735328473), d, _, t[o + 12], 20, -1926607734), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 5], 4, -378558), E, g, t[o + 8], 11, -2022574463), _, E, t[o + 11], 16, 1839030562), d, _, t[o + 14], 23, -35309556), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 1], 4, -1530992060), E, g, t[o + 4], 11, 1272893353), _, E, t[o + 7], 16, -155497632), d, _, t[o + 10], 23, -1094730640), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 13], 4, 681279174), E, g, t[o], 11, -358537222), _, E, t[o + 3], 16, -722521979), d, _, t[o + 6], 23, 76029189), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 9], 4, -640364487), E, g, t[o + 12], 11, -421815835), _, E, t[o + 15], 16, 530742520), d, _, t[o + 2], 23, -995338651), g = a(g, d = a(d, _ = a(_, E, g, d, t[o], 6, -198630844), E, g, t[o + 7], 10, 1126891415), _, E, t[o + 14], 15, -1416354905), d, _, t[o + 5], 21, -57434055), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 12], 6, 1700485571), E, g, t[o + 3], 10, -1894986606), _, E, t[o + 10], 15, -1051523), d, _, t[o + 1], 21, -2054922799), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 8], 6, 1873313359), E, g, t[o + 15], 10, -30611744), _, E, t[o + 6], 15, -1560198380), d, _, t[o + 13], 21, 1309151649), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 4], 6, -145523070), E, g, t[o + 11], 10, -1120210379), _, E, t[o + 2], 15, 718787259), d, _, t[o + 9], 21, -343485551), _ = n(_, i), E = n(E, u), g = n(g, f), d = n(d, l);
        return [_, E, g, d];
      }
      function f(t) {
        var e,
          n = "",
          o = 32 * t.length;
        for (e = 0; e < o; e += 8) n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
        return n;
      }
      function l(t) {
        var e,
          n = [];
        for (n[(t.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1) n[e] = 0;
        var o = 8 * t.length;
        for (e = 0; e < o; e += 8) n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
        return n;
      }
      function _(t) {
        return f(u(l(t), 8 * t.length));
      }
      function E(t, e) {
        var n,
          o,
          i = l(t),
          r = [],
          s = [];
        for (r[15] = s[15] = void 0, i.length > 16 && (i = u(i, 8 * t.length)), n = 0; n < 16; n += 1) r[n] = 909522486 ^ i[n], s[n] = 1549556828 ^ i[n];
        return o = u(r.concat(l(e)), 512 + 8 * e.length), f(u(s.concat(o), 640));
      }
      function g(t) {
        var e,
          n,
          o = "";
        for (n = 0; n < t.length; n += 1) e = t.charCodeAt(n), o += "0123456789abcdef".charAt(e >>> 4 & 15) + "0123456789abcdef".charAt(15 & e);
        return o;
      }
      function d(t) {
        return unescape(encodeURIComponent(t));
      }
      function S(t) {
        return _(d(t));
      }
      function h(t) {
        return g(S(t));
      }
      function p(t, e) {
        return E(d(t), d(e));
      }
      function U(t, e) {
        return g(p(t, e));
      }
      function N(t, e, n) {
        return e ? n ? p(e, t) : U(e, t) : n ? S(t) : h(t);
      }
      t.exports ? t.exports = N : e.md5 = N;
    }(commonjsGlobal);
  }),
  Base64_1 = createCommonjsModule(function (module, exports) {
    !function (global, factory) {
      module.exports = function (global) {
        var _Base64 = global.Base64,
          version = "2.4.8",
          buffer;
        if (module.exports) try {
          buffer = eval("require('buffer').Buffer");
        } catch (t) {
          buffer = void 0;
        }
        var b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          b64tab = function (t) {
            for (var e = {}, n = 0, o = t.length; n < o; n++) e[t.charAt(n)] = n;
            return e;
          }(b64chars),
          fromCharCode = String.fromCharCode,
          cb_utob = function (t) {
            if (t.length < 2) return (e = t.charCodeAt(0)) < 128 ? t : e < 2048 ? fromCharCode(192 | e >>> 6) + fromCharCode(128 | 63 & e) : fromCharCode(224 | e >>> 12 & 15) + fromCharCode(128 | e >>> 6 & 63) + fromCharCode(128 | 63 & e);
            var e = 65536 + 1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320);
            return fromCharCode(240 | e >>> 18 & 7) + fromCharCode(128 | e >>> 12 & 63) + fromCharCode(128 | e >>> 6 & 63) + fromCharCode(128 | 63 & e);
          },
          re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,
          utob = function (t) {
            return t.replace(/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, cb_utob);
          },
          cb_encode = function (t) {
            var e = [0, 2, 1][t.length % 3],
              n = t.charCodeAt(0) << 16 | (t.length > 1 ? t.charCodeAt(1) : 0) << 8 | (t.length > 2 ? t.charCodeAt(2) : 0);
            return [b64chars.charAt(n >>> 18), b64chars.charAt(n >>> 12 & 63), e >= 2 ? "=" : b64chars.charAt(n >>> 6 & 63), e >= 1 ? "=" : b64chars.charAt(63 & n)].join("");
          },
          btoa = global.btoa ? function (t) {
            return global.btoa(t);
          } : function (t) {
            return t.replace(/[\s\S]{1,3}/g, cb_encode);
          },
          _encode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (t) {
            return (t.constructor === buffer.constructor ? t : buffer.from(t)).toString("base64");
          } : function (t) {
            return (t.constructor === buffer.constructor ? t : new buffer(t)).toString("base64");
          } : function (t) {
            return btoa(utob(t));
          },
          encode = function (t, e) {
            return e ? _encode(String(t)).replace(/[+\/]/g, function (t) {
              return "+" == t ? "-" : "_";
            }).replace(/=/g, "") : _encode(String(t));
          },
          encodeURI = function (t) {
            return encode(t, !0);
          },
          re_btou = new RegExp(["[À-ß][-¿]", "[à-ï][-¿]{2}", "[ð-÷][-¿]{3}"].join("|"), "g"),
          cb_btou = function (t) {
            switch (t.length) {
              case 4:
                var e = ((7 & t.charCodeAt(0)) << 18 | (63 & t.charCodeAt(1)) << 12 | (63 & t.charCodeAt(2)) << 6 | 63 & t.charCodeAt(3)) - 65536;
                return fromCharCode(55296 + (e >>> 10)) + fromCharCode(56320 + (1023 & e));
              case 3:
                return fromCharCode((15 & t.charCodeAt(0)) << 12 | (63 & t.charCodeAt(1)) << 6 | 63 & t.charCodeAt(2));
              default:
                return fromCharCode((31 & t.charCodeAt(0)) << 6 | 63 & t.charCodeAt(1));
            }
          },
          btou = function (t) {
            return t.replace(re_btou, cb_btou);
          },
          cb_decode = function (t) {
            var e = t.length,
              n = e % 4,
              o = (e > 0 ? b64tab[t.charAt(0)] << 18 : 0) | (e > 1 ? b64tab[t.charAt(1)] << 12 : 0) | (e > 2 ? b64tab[t.charAt(2)] << 6 : 0) | (e > 3 ? b64tab[t.charAt(3)] : 0),
              i = [fromCharCode(o >>> 16), fromCharCode(o >>> 8 & 255), fromCharCode(255 & o)];
            return i.length -= [0, 0, 2, 1][n], i.join("");
          },
          atob = global.atob ? function (t) {
            return global.atob(t);
          } : function (t) {
            return t.replace(/[\s\S]{1,4}/g, cb_decode);
          },
          _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (t) {
            return (t.constructor === buffer.constructor ? t : buffer.from(t, "base64")).toString();
          } : function (t) {
            return (t.constructor === buffer.constructor ? t : new buffer(t, "base64")).toString();
          } : function (t) {
            return btou(atob(t));
          },
          decode = function (t) {
            return _decode(String(t).replace(/[-_]/g, function (t) {
              return "-" == t ? "+" : "/";
            }).replace(/[^A-Za-z0-9\+\/]/g, ""));
          },
          noConflict = function () {
            var t = global.Base64;
            return global.Base64 = _Base64, t;
          };
        if (global.Base64 = {
          VERSION: "2.4.8",
          atob: atob,
          btoa: btoa,
          fromBase64: decode,
          toBase64: encode,
          utob: utob,
          encode: encode,
          encodeURI: encodeURI,
          btou: btou,
          decode: decode,
          noConflict: noConflict,
          __buffer__: buffer
        }, "function" == typeof Object.defineProperty) {
          var noEnum = function (t) {
            return {
              value: t,
              enumerable: !1,
              writable: !0,
              configurable: !0
            };
          };
          global.Base64.extendString = function () {
            Object.defineProperty(String.prototype, "fromBase64", noEnum(function () {
              return decode(this);
            })), Object.defineProperty(String.prototype, "toBase64", noEnum(function (t) {
              return encode(this, t);
            })), Object.defineProperty(String.prototype, "toBase64URI", noEnum(function () {
              return encode(this, !0);
            }));
          };
        }
        return global.Meteor && (Base64 = global.Base64), module.exports && (module.exports.Base64 = global.Base64), {
          Base64: global.Base64
        };
      }(global);
    }("undefined" != typeof self ? self : "undefined" != typeof window ? window : commonjsGlobal);
  }),
  Base64_2 = Base64_1.Base64,
  UmengUtils = {
    MD5: MD5$1,
    encode: encode,
    decode: decode,
    checkEmptyArgument: checkEmptyArgument,
    checkId: checkId,
    stringToArray: stringToArray,
    toStr: toStr,
    toObject: toObject,
    checkAttrOrString: checkAttrOrString,
    isNotANumber: isNotANumber,
    checkMD5: checkMD5
  };
const $JSON_UMENG_SESSIONS$ = "json_umeng_sessions",
  $JSON_UMENG_HALF_SESSIONS$ = "json_umeng_half_session",
  $JSON_UMENG_CURRENT_SESSION$ = "json_umeng_current_session",
  $JSON_UMENG_PAGE_END_TIME$ = "json_umeng_page_end_time",
  Session = function () {
    function t() {
      return {
        getCurrentSessionId() {
          return f;
        },
        getCurrentSession() {
          return a;
        },
        getSessions() {
          return l;
        },
        init(t) {
          this.appkey = t, o();
        },
        endSession() {
          a && (c = Date.now(), a.end_time = c, StorageUtil.putData($JSON_UMENG_CURRENT_SESSION$, UmengUtils.toStr(a)), StorageUtil.putData($JSON_UMENG_PAGE_END_TIME$, c));
        },
        clearSessions() {
          StorageUtil.deleteData($JSON_UMENG_SESSIONS$), l.splice(0, l.length), l = [];
        },
        setOnSessionListener(t) {
          this.sessionListener = t;
        },
        getHalfSessions() {
          return _;
        },
        clearHalfSession() {
          StorageUtil.deleteData($JSON_UMENG_HALF_SESSIONS$), _.splice(0, _.length), _ = [];
        }
      };
    }
    function e(t, e) {
      const n = Date.now();
      DeviceUtil.getUniqueId().then(t => {
        const o = UmengUtils.MD5(`${n}:::${Session.getInstance().appkey}:::${t}`);
        e(o);
      });
    }
    function n(t) {
      const e = {};
      return e.id = t, e.start_time = Date.now(), e;
    }
    function o() {
      const t = Date.now();
      a ? c && t - c > constants.SESSION_INTERVAL && (i(c), r(a)) : StorageUtil.getData($JSON_UMENG_CURRENT_SESSION$, e => {
        e && (a = UmengUtils.toObject(e)) ? StorageUtil.getData($JSON_UMENG_PAGE_END_TIME$, e => {
          e && t - e > constants.SESSION_INTERVAL ? (i(e), r(a)) : f = a.id;
        }) : r(null);
      });
    }
    function i(t) {
      try {
        a.end_time = parseInt(t, 10);
      } catch (e) {
        a.end_time = t;
      }
      const e = t - a.start_time;
      a.duration = e;
    }
    function r(t) {
      const o = t ? t.id : "",
        i = Session.getInstance().sessionListener(o);
      e(o, e => {
        a = n(e);
        StorageUtil.getData($JSON_UMENG_SESSIONS$, n => {
          l = UmengUtils.stringToArray(n);
          t ? i.pages(n => {
            n && n.length > 0 && (t.pages = n, t.$page_num = n.length);
            l.push(t);
            StorageUtil.putData($JSON_UMENG_SESSIONS$, UmengUtils.toStr(l));
            s(i, e);
          }) : s(i, e);
        });
        StorageUtil.putData($JSON_UMENG_CURRENT_SESSION$, UmengUtils.toStr(a));
        f = e;
      });
    }
    function s(t, e) {
      StorageUtil.getData($JSON_UMENG_HALF_SESSIONS$, n => {
        _ = UmengUtils.stringToArray(n);
        a && (_.push(JSON.parse(JSON.stringify(a))), StorageUtil.putData($JSON_UMENG_HALF_SESSIONS$, UmengUtils.toStr(_)), t.generateSessionAfterHandler(e));
      });
    }
    let c,
      a,
      u = null,
      f = "",
      l = [],
      _ = [];
    return {
      getInstance() {
        return u || (u = t()), u;
      }
    };
  }(),
  $JSON_UMENG_HEADER$ = "json_umeng_header",
  $UMENG_KEY_IMPRINT$ = "umeng_key_imprint",
  MOBILE_NETWORK_2G = "2g",
  MOBILE_NETWORK_3G = "3g",
  MOBILE_NETWORK_4G = "4g",
  MOBILE_NETWORK_NONE = "none",
  BLANK_SPACE = " ",
  UMENG_ADVERTISTING_ID = "idfa",
  UMENG_ANDROID_ID = "android_id",
  UMENG_OAID = "oaid",
  Header = function () {
    function t() {
      return {
        init(t) {
          this.appkey = t, this.appInfo = _system5.default.getInfo(), e(t => {
            this.header = t;
            StorageUtil.putData($JSON_UMENG_HEADER$, UmengUtils.toStr(t));
          });
        },
        getHeader(t) {
          switch (t) {
            case constants.REQUEST_TYPE_SESSION_HALF:
              this.header.st = "1", !0 === s && delete this.header.atm;
              break;
            case constants.REQUEST_TYPE_SESSION_CLOSE:
            case constants.REQUEST_TYPE_EVENT:
              delete this.header.st, delete this.header.atm;
          }
          return this.header;
        },
        addHeaderAttr(t, e) {
          this.header && (this.header[t] = e);
        },
        getHeaderAttr(t) {
          return this.header && {}.hasOwnProperty.call(this.header, t) ? this.header[t] : null;
        },
        getPackageName() {
          try {
            return this.appInfo.packageName;
          } catch (t) {}
          return "";
        },
        setFirstSendFlag() {
          s = !0;
        }
      };
    }
    function e(t) {
      DeviceUtil.getBaseInfo().then(e => {
        DeviceUtil.getUniqueId().then(r => {
          DeviceUtil.getNetworkInfo(s => {
            let {
              type: type
            } = s;
            type === MOBILE_NETWORK_NONE && (type = "unknown");
            const c = i(e, r, type);
            StorageUtil.getData($UMENG_KEY_IMPRINT$, e => {
              0 !== e.length && (c.imprint = e);
              StorageUtil.getData(constants.APP_FIRST_OPEN_FLAG, e => {
                const i = "true" === e;
                let r = new Date();
                i && (r = new Date(), c.atm = "1");
                console.log(r);
                StorageUtil.getData(constants.MOBILE_ADVERTISING_ID, e => {
                  if (e) {
                    const t = n(e);
                    if (t) {
                      const e = o(UMENG_ADVERTISTING_ID, t);
                      c.id_tracking = e;
                    }
                  }
                  StorageUtil.getData(constants.MOBILE_ANDROID_ID, e => {
                    if (e) {
                      const t = n(e);
                      if (t) if (c.id_tracking && c.id_tracking.snapshots) c.id_tracking.snapshots[UMENG_ANDROID_ID] = t;else {
                        const e = o(UMENG_ANDROID_ID, t);
                        c.id_tracking = e;
                      }
                    }
                    StorageUtil.getData(constants.MOBILE_OAID, e => {
                      if (e) {
                        const t = n(e);
                        if (t) if (c.id_tracking && c.id_tracking.snapshots) c.id_tracking.snapshots[UMENG_OAID] = t;else {
                          const e = o(UMENG_OAID, t);
                          c.id_tracking = e;
                        }
                      }
                      t(c);
                    });
                  });
                });
              });
            });
          });
        });
      });
    }
    function n(t) {
      if (t) {
        const e = {
          identity: t,
          version: 1,
          ts: Date.now()
        };
        return e;
      }
    }
    function o(t, e) {
      const n = {
        snapshots: {}
      };
      return n.snapshots[t] = e, n;
    }
    function i(t, e, n) {
      let o = null;
      if (t) {
        const n = t.screenWidth,
          i = t.screenHeight,
          s = n > i ? `${n}*${i}` : `${i}*${n}`,
          {
            appInfo: appInfo
          } = r,
          {
            model: model,
            brand: brand
          } = t,
          c = brand.toLowerCase();
        o = {
          app_version: appInfo.versionName,
          version_code: appInfo.versionCode,
          app_source_extra: appInfo.source.extra,
          device_type: "Phone",
          package_name: appInfo.packageName,
          sdk_type: "Android",
          os: "Android",
          sdk_version: constants.SDK_VERSION,
          appkey: r.appkey,
          device_model: model.toLowerCase().indexOf(c) > -1 ? model : c + BLANK_SPACE + model,
          device_brand: brand,
          channel: c,
          device_manufacturer: t.manufacturer,
          device_manuid: model.toLowerCase().indexOf(c) > -1 ? model : c + BLANK_SPACE + model,
          device_name: t.product.toLowerCase().indexOf(c) > -1 ? t.product : c + BLANK_SPACE + t.product,
          os_version: t.osVersionName,
          resolution: s,
          language: t.language,
          display_name: t.name,
          idmd5: UmengUtils.MD5(e),
          platform: "quickapp",
          pro_ver: "1"
        };
      } else o = {
        app_version: r.appInfo.versionName,
        version_code: r.appInfo.versionCode,
        device_type: "Phone",
        package_name: r.appInfo.packageName,
        sdk_type: "Android",
        os: "Android",
        sdk_version: constants.SDK_VERSION,
        appkey: r.appkey,
        idmd5: UmengUtils.MD5(e),
        platform: "quickapp",
        pro_ver: "1"
      };
      switch (n) {
        case MOBILE_NETWORK_4G:
          o.access_subtype = "LTE", o.access = "2G/3G";
          break;
        case MOBILE_NETWORK_3G:
          o.access_subtype = "CDMA", o.access = "2G/3G";
          break;
        case MOBILE_NETWORK_2G:
          o.access_subtype = "GRPS", o.access = "2G/3G";
          break;
        default:
          o.access = n, delete o.access_subtype;
      }
      return o;
    }
    let r = null,
      s = !1;
    return {
      getInstance() {
        return r || (r = t()), r;
      }
    };
  }();
Looper.prototype = {
  prepare(t) {
    this.queueObject = t, this.isRunning = !1, this.isForceStop = !1;
  },
  loop() {
    if (!this.isForceStop && this.queueObject && !this.isRunning) for (this.isRunning = !0; this.isRunning;) {
      if (!this.queueObject.isCanPop()) {
        this.isRunning = !1;
        break;
      }
      try {
        this.queueObject.dispatchMessage();
      } catch (t) {}
    }
  },
  wait() {
    this.isRunning = !1;
  },
  forceStop() {
    this.isForceStop = !0;
  },
  cancelForceStop() {
    this.isForceStop = !1, this.loop();
  }
};
const RequestQueue = function () {
    function t(t) {
      return !!t && (f.unshift(t), u.loop(), !0);
    }
    function e() {
      if (f.length > 0) return f.pop();
      const t = l.length;
      return t > 0 ? (1 === t && RequestHelper.getInstance().clearNoSendDatas(), l.pop()) : null;
    }
    function n(t, e) {
      const n = setTimeout(() => {
          o(t);
        }, 3e4),
        i = {
          key: t,
          timeOutFun: n,
          isExe: !1
        };
      g.push(i), e(t => {
        o(t);
      });
    }
    function o(t) {
      for (let e = g.length - 1; e >= 0; e--) {
        const n = g[e];
        if (n.key === t) {
          if (!n.isExe) {
            n.isExe = !0;
            const t = n.timeOutFun;
            t && clearTimeout(t), i(), g.splice(e, 1);
          }
          break;
        }
      }
    }
    function i() {
      (E -= 1) <= _ && u.loop();
    }
    function r(t) {
      const e = g.length,
        n = t.md5Key;
      for (let t = e - 1; t >= 0; t--) {
        const e = g[t];
        if (e.key === n) return i(), !0;
      }
      return !1;
    }
    function s() {
      RequestHelper.getInstance().onNoSendDatasListener(t => {
        if (!t || 0 === t.length) return;
        for (const e in t) if ({}.hasOwnProperty.call(t, e)) {
          const n = {
            md5Key: t[e],
            type: "second"
          };
          l.push(n);
        }
        u.loop();
      });
    }
    function c() {
      return s(), {
        handleMessage(e, n) {
          e && "second" === e.type && i(), e && e.data && (e.executeFunction = n, t(e));
        },
        dispatchMessage() {
          if (E > _) return void u.wait();
          E += 1;
          const t = e();
          r(t) || (t.data ? n(t.md5Key, t.executeFunction) : RequestHelper.getInstance().send(t), this.isCanPop() || u.wait());
        },
        isCanPop() {
          return f.length > 0 || l.length > 0;
        }
      };
    }
    let a, u;
    const f = [],
      l = [],
      _ = 3;
    let E = 1;
    const g = [];
    return {
      getInstance() {
        return a || (a = c(), (u = new Looper()).prepare(a)), a;
      }
    };
  }(),
  StoreQueue = function () {
    function t(t) {
      if (!t) return !1;
      const e = {
        key: t,
        type: _
      };
      return u.unshift(e), a.loop(), !0;
    }
    function e() {
      if (u.length > 0) return u.pop();
      const t = f.length;
      if (t > 0) {
        const e = f.pop();
        return 0 === t && n(), e;
      }
      return n(), null;
    }
    function n() {
      g || (g = !0, StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, t => {
        g = !1;
        if (!t) return;
        const e = UmengUtils.stringToArray(t);
        const n = t => e => {
          e && '""' !== e || (e = {
            key: t,
            type: E
          }, f.push(e));
          f.length > 0 && a.loop();
        };
        for (const t in e) if ({}.hasOwnProperty.call(e, t)) {
          const o = e[t];
          StorageUtil.getData(o, n(o));
        }
      }, () => {
        g = !1;
      }));
    }
    function o(t) {
      StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, e => {
        e = e ? UmengUtils.toObject(e) : [];
        e.push(t);
        StorageUtil.putData(constants.KEY_NO_SEND_REQUEST_KEYS, UmengUtils.toStr(e), () => {
          r(t);
        }, () => {
          r(t);
        });
      }, () => {
        r(t);
      });
    }
    function i(t) {
      StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, e => {
        if (!e) return void r(t);
        e = UmengUtils.stringToArray(e);
        for (const n in e) if ({}.hasOwnProperty.call(e, n)) {
          const o = e[n];
          if (o === t) {
            e.splice(n, 1);
            break;
          }
        }
        StorageUtil.putData(constants.KEY_NO_SEND_REQUEST_KEYS, UmengUtils.toStr(e), () => {
          r(t);
        }, () => {
          r(t);
        });
      }, () => {
        r(t);
      });
    }
    function r() {
      (d -= 1) <= l && a.loop();
    }
    function s() {
      return n(), {
        handleMessage(e) {
          e ? t(e) : n();
        },
        dispatchMessage() {
          if (d > l) return void a.wait();
          d += 1;
          const t = e();
          if (!t || null === t) return void r();
          const {
            key: key
          } = t;
          t.type === _ ? o(key) : i(key), this.isCanPop() || a.wait();
        },
        isCanPop() {
          return u.length > 0 || f.length > 0;
        }
      };
    }
    let c, a;
    const u = [],
      f = [],
      l = 1,
      _ = "write",
      E = "delete";
    let g = !1,
      d = 1;
    return {
      getInstance() {
        return c || (c = s(), (a = new Looper()).prepare(c)), c;
      }
    };
  }(),
  $UMENG_KEY_IMPRINT$$1 = "umeng_key_imprint";
let noSendRequestKeys = [];
const RequestHelper = function () {
    function t() {
      const t = [].concat(Session.getInstance().getSessions());
      if (t && 0 !== t.length) return Session.getInstance().clearSessions(), t;
    }
    function e() {
      const t = [].concat(Session.getInstance().getHalfSessions());
      if (t && 0 !== t.length) return Session.getInstance().clearHalfSession(), t;
    }
    function n(t) {
      StorageUtil.deleteData(t, t => {
        t && StoreQueue.getInstance().handleMessage(null);
      });
    }
    function o(t, e, o, r) {
      if (!t || '""' === t) return void (o && o(e));
      const s = constants.RELEASE_URL;
      _system6.default.fetch({
        url: s,
        method: "POST",
        data: UmengUtils.encode(t),
        header: {
          "Content-Type": "quickapp/json",
          "Msg-Type": "quickapp/json"
        },
        success(t) {
          if (200 === t.code) {
            Log.i("*** umeng_sdk *** request send success"), n(e), r && r(e);
            try {
              const e = UmengUtils.toObject(t.data);
              i(e.imprint);
            } catch (t) {}
          } else 413 === t.code && (Log.i("*** umeng_sdk *** request is to large!"), n(e), r && r(e));
        },
        fail: function (t, e) {
          Log.i("*** umeng_sdk *** request error, please check your permission! ");
        },
        complete() {
          o && o(e);
        }
      });
    }
    function i(t) {
      try {
        if (t) {
          StorageUtil.putData($UMENG_KEY_IMPRINT$$1, t), Header.getInstance().addHeaderAttr("imprint", t);
          const e = UmengUtils.toObject(UmengUtils.decode(t)),
            n = e.report_policy;
          if (n && UmengUtils.isNotANumber(n)) {
            if (StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, n), n === constants.EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE) {
              let t = e.report_interval;
              t && UmengUtils.isNotANumber(t) ? (t <= constants.EVENT_SEND_MIN_INTERVAL ? t = constants.EVENT_SEND_MIN_INTERVAL : t > constants.EVENT_SEND_MAX_INTERVAL && (t = constants.EVENT_SEND_MAX_INTERVAL), StorageUtil.putData(constants.EVENT_SEND_REPORT_INTERVAL_TIME, t)) : StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
            }
          } else StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
        }
      } catch (t) {}
    }
    function r(t, e) {
      const n = UmengUtils.toStr(e);
      let o = null;
      switch (t) {
        case constants.REQUEST_TYPE_SESSION_HALF:
          o = constants.KEY_HALF_SESSION_PREFIX;
          break;
        case constants.REQUEST_TYPE_SESSION_CLOSE:
          o = constants.KEY_CLOSE_SESSION_PREFIX;
          break;
        case constants.REQUEST_TYPE_EVENT:
          o = constants.KEY_EVENT_PREFIX;
      }
      const i = o + UmengUtils.MD5(n);
      return StorageUtil.putData(i, n), StoreQueue.getInstance().handleMessage(i), 0 === noSendRequestKeys.length && StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, t => {
        if (!t) return;
        const e = UmengUtils.stringToArray(t);
        0 === noSendRequestKeys.length && (noSendRequestKeys = e, a && a(noSendRequestKeys));
      }), i;
    }
    function s() {
      return {
        paramsIsValid(t) {
          return -1 !== [constants.REQUEST_TYPE_SESSION_HALF, constants.REQUEST_TYPE_SESSION_CLOSE, constants.REQUEST_TYPE_EVENT].indexOf(t);
        },
        buildSendContent(n, o) {
          if (Header.getInstance().getHeader(n)) {
            const i = {
              header: Header.getInstance().getHeader(n),
              analytics: null
            };
            switch (n) {
              case constants.REQUEST_TYPE_SESSION_HALF:
                {
                  const t = e();
                  if (!t) break;
                  i.analytics = {
                    sessions: t
                  };
                  break;
                }
              case constants.REQUEST_TYPE_SESSION_CLOSE:
                {
                  const e = t();
                  if (!e) break;
                  i.analytics = {
                    sessions: e
                  };
                  break;
                }
              case constants.REQUEST_TYPE_EVENT:
                o && o.length > 0 && (i.analytics = {
                  ekv: o
                });
            }
            let s = "";
            return i.analytics && (s = r(n, i)), {
              data: i,
              md5Key: s
            };
          }
        },
        send(t, e) {
          const n = t.md5Key;
          n && ("second" === t.type ? StorageUtil.getData(n, n => {
            t.data = UmengUtils.toObject(n);
            t.data || e && e();
            RequestQueue.getInstance().handleMessage(t, n => {
              o(UmengUtils.toStr(t.data), t.md5Key, n, e);
            });
          }) : RequestQueue.getInstance().handleMessage(t, n => {
            o(UmengUtils.toStr(t.data), t.md5Key, n, e);
          }));
        },
        getNoSendRequestKeys() {
          return noSendRequestKeys;
        },
        onNoSendDatasListener(t) {
          a = t;
        },
        clearNoSendDatas() {
          noSendRequestKeys.splice(0, noSendRequestKeys.length), noSendRequestKeys = [];
        }
      };
    }
    let c, a;
    return {
      getInstance() {
        return c || (c = s()), c;
      }
    };
  }(),
  EventStoreQueue = function () {
    function t(t) {
      if (t) {
        if (!Session.getInstance().getCurrentSessionId()) return void U.unshift(t);
        p.unshift(t), p.length >= _ && g.loop();
      }
    }
    function e() {
      return p.length < _ ? null : p.splice(0, _);
    }
    function n() {
      h && h.length > 0 && s(t => {
        for (const e in h) if ({}.hasOwnProperty.call(h, e)) try {
          h[e](t);
        } catch (t) {}
      }), (d -= 1) < 1 && (d = 1), d <= E && g.loop();
    }
    function o(t, e) {
      StorageUtil.putData(u, e, () => {
        StorageUtil.putData(f, UmengUtils.toStr(t), () => {
          n();
        }, () => {
          n();
        });
      }, () => {
        n();
      });
    }
    function i(t, e) {
      t && (h[t] = e);
    }
    function r(t) {
      t && delete h[t];
    }
    function s(t) {
      StorageUtil.getData(f, e => {
        StorageUtil.deleteData(f, () => {
          const n = c(UmengUtils.stringToArray(e), p);
          p.splice(0, p.length);
          t(n);
          g.cancelForceStop();
        });
      }, () => {
        t([]);
        g.cancelForceStop();
      });
    }
    function c(t, e) {
      const n = Session.getInstance().getCurrentSessionId();
      let o,
        i = -1;
      for (const e in t) if ({}.hasOwnProperty.call(t, e)) {
        const r = t[e];
        if (o = r[n]) {
          i = e;
          break;
        }
      }
      return -1 === i && (o = []), (o = o.concat(e)) && 0 !== o.length ? (-1 === i ? t.push({
        [n]: o
      }) : t[i][n] = o, t) : t;
    }
    function a() {
      return {
        saveEkvData(e) {
          t(e), Log.d(`[saveEkvData] data is ${UmengUtils.toStr(e)}`);
        },
        readEkvDatas(t) {
          t && (g.forceStop(), d <= E ? s(e => {
            t(e);
            g.cancelForceStop();
          }) : i("readEkvDatas", e => {
            t(e);
            r("readEkvDatas");
            g.cancelForceStop();
          }));
        },
        handlerNoSessionEkvDatas() {
          if (U && U.length > 0) {
            Log.d(`no sessionId event is ${JSON.stringify(U)}`);
            for (const t in U) ({}).hasOwnProperty.call(U, t) && this.saveEkvData(U[t]);
            U.splice(0, U.length);
          }
        },
        quitHandler() {
          0 !== p.length && (g.forceStop(), d <= E ? StorageUtil.getData(f, t => {
            const e = c(UmengUtils.stringToArray(t), p);
            StorageUtil.putData(f, UmengUtils.toStr(e));
            p.splice(0, p.length);
            g.cancelForceStop();
          }, () => {
            g.cancelForceStop();
          }) : i("quitHandler", t => {
            const e = UmengUtils.toStr(c(t, p));
            StorageUtil.putData(f, e);
            p.splice(0, p.length);
            r("quitHandler");
            g.cancelForceStop();
          }));
        },
        dispatchMessage() {
          if (d > E) return void g.wait();
          d += 1;
          const t = e();
          if (!t || 0 === t.length) return void n();
          StorageUtil.getData(u, e => {
            e || (e = 0);
            e >= l + t.length ? n() : StorageUtil.getData(f, n => {
              const i = c(UmengUtils.stringToArray(n), t);
              o(i, Number(e) + Number(t.length));
            }, () => {
              n();
            });
          }, () => {
            n();
          });
        },
        isCanPop() {
          return p.length >= _;
        }
      };
    }
    const u = "umeng_ekv_count_key",
      f = "umeng_key_ekvs",
      l = 1e4,
      _ = 5,
      E = 1;
    let g,
      d = 1,
      S = null;
    const h = {},
      p = [],
      U = [];
    return {
      getInstance() {
        return S || (S = new a(), (g = new Looper()).prepare(S)), S;
      }
    };
  }(),
  EventController = function () {
    function t(t, e) {
      const n = {
        id: t,
        ts: Date.now()
      };
      switch (typeof e) {
        case "string":
          n[t] = e;
          break;
        case "object":
          for (const t in e) ({}).hasOwnProperty.call(e, t) && (n[t] = e[t]);
      }
      return n;
    }
    function e() {
      StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
        t === constants.EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE && StorageUtil.getData(constants.EVENT_SEND_REPORT_INTERVAL_TIME, t => {
          StorageUtil.getData(constants.EVENT_LAST_SEND_TIME, e => {
            if (t) {
              const n = Date.now();
              e && n - e > 1e3 * t && Request.sendAll();
            } else StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
          });
        });
      });
    }
    function n() {
      return {
        addEvent(n, o) {
          const i = t(n, o);
          EventStoreQueue.getInstance().saveEkvData(i), e();
        },
        handlerNoSessionEkvDatas() {
          EventStoreQueue.getInstance().handlerNoSessionEkvDatas();
        },
        quitHandler() {
          EventStoreQueue.getInstance().quitHandler();
        },
        setSendTime() {
          StorageUtil.putData(constants.EVENT_LAST_SEND_TIME, Date.now());
        }
      };
    }
    let o;
    return {
      getInstance() {
        return o || (o = n()), o;
      }
    };
  }();
let time = 0;
var Request = {
  send: send,
  sendAll: sendAll
};
const KEY_PRE_PAGE = "umeng_page_";
PageController.prototype = {
  addCurrentPage(t) {
    this._currentPage = {
      ts: Date.now(),
      page_name: DeviceUtil.getPageName()
    }, this.pageObject = t;
  },
  savePage(t, e) {
    if (t && e && this._currentPage.page_name && e === this.pageObject) {
      const e = Date.now() - this._currentPage.ts;
      this._currentPage.duration = Math.abs(e), this._pagelist = this._pagelist.concat(this._currentPage), this._currentPage = {}, this.pageObject = {}, this.saveStroragePages(t);
    }
  },
  saveStroragePages(t) {
    t && this._pagelist.length > 0 && this.updateStorage(KEY_PRE_PAGE + t, this._pagelist);
  },
  getPages(t, e) {
    StorageUtil.getData(KEY_PRE_PAGE + t, n => {
      const o = UmengUtils.stringToArray(n).concat(this._pagelist);
      this.clear(t);
      e && e(o);
    }, () => {
      e && e(null);
    });
  },
  updateStorage(t, e) {
    e && 0 !== e.length && StorageUtil.getData(t, n => {
      const o = UmengUtils.stringToArray(n).concat(e);
      StorageUtil.putData(t, UmengUtils.toStr(o), () => {
        this._pagelist = [];
      });
    });
  },
  clear(t) {
    StorageUtil.deleteData(KEY_PRE_PAGE + t), this._pagelist = [];
  }
};
let inited = !1;
UmengAnalysisLib.prototype = {
  init(t) {
    if (Log.i(`*** umeng_sdk *** sdk version is: ${constants.SDK_VERSION}`), !inited) {
      try {
        this.appkey = t.$data.umeng_appkey;
      } catch (t) {}
      if (!this.appkey) return inited = !1, void console.error("please set umeng_appkey : [manifest.json --\x3e config:{data:{umeng_appkey: xxx}}]");
      inited = !0, Header.getInstance().init(this.appkey);
      const e = this;
      if (Session.getInstance().setOnSessionListener(t => ({
        pages(n) {
          e.pageController.getPages(t, n);
        },
        generateSessionAfterHandler(t) {
          EventController.getInstance().handlerNoSessionEkvDatas(), sendDatas();
        }
      })), StorageUtil.getData(constants.APP_FIRST_OPEN_FLAG, t => {
        0 === t.length && StorageUtil.putData(constants.APP_FIRST_OPEN_FLAG, "true");
      }), StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
        t || StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
      }), StorageUtil.getData(constants.EVENT_LAST_SEND_TIME, t => {
        t || EventController.getInstance().setSendTime();
      }), t) try {
        Object.defineProperty(t, "_status", {
          set(t) {
            "destroy" === t && Request.sendAll();
          }
        });
      } catch (t) {}
    }
  },
  resume(t) {
    isInit() && t && (Log.i(`*** umeng_sdk *** page name: ${DeviceUtil.getPageName()}`), this.pageController.addCurrentPage(t), Session.getInstance().init(this.appkey));
  },
  pause(t) {
    isInit() && t && (this.pageController.savePage(Session.getInstance().getCurrentSessionId(), t), Session.getInstance().endSession(), EventController.getInstance().quitHandler());
  },
  trackEvent(t, e) {
    if (isInit()) return UmengUtils.checkId(t) ? e && !UmengUtils.checkAttrOrString(e) ? (console.error("error-----please check trackEvent attr. attr should be 'String' or 'Object'(not include 'Array')"), !1) : (Log.i(`*** umeng_sdk *** event id: ${UmengUtils.toStr(t)}${e ? ` || event attr: ${UmengUtils.toStr(e)}` : ""}`), EventController.getInstance().addEvent(t, e), !0) : (console.error("error-----please check trackEvent id. id should be 'String' and not null"), !1);
  }
};
const FileUtils = {
    getFile(t, e, n) {
      _system7.default.readText({
        uri: t,
        success(t) {
          e && e(t.text);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    },
    moveFile(t, e, n, o) {
      _system7.default.move({
        srcUri: t,
        dstUri: e,
        success(t) {
          n && n(t);
        },
        fail(t, e) {
          o && o(t, e);
        }
      });
    },
    deleteFile(t, e, n) {
      _system7.default.delete({
        uri: t,
        success(t) {
          e && e(t);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    }
  },
  modules = {
    "@system.app": $app_require$("@app-module/system.app"),
    "@system.storage": $app_require$("@app-module/system.storage"),
    "@system.fetch": $app_require$("@app-module/system.fetch"),
    "@system.network": $app_require$("@app-module/system.network"),
    "@system.device": $app_require$("@app-module/system.device"),
    "@system.router": $app_require$("@app-module/system.router"),
    "@system.file": $app_require$("@app-module/system.file")
  },
  callQueue = [],
  umeng_stat_global = Object.getPrototypeOf(global) || global;
SdkUpdater.prototype = {
  init(t, e) {
    this.installApi(t, null);
    try {
      DeviceUtil.getSystemBaseInfo(t => {
        1e3 === t.platformVersionCode ? e(0) : StorageUtil.getData(constants.DOWNLOAD_FILE_FIRST_CACHE, t => {
          t ? this.getSdkFileContent(t, (t, n, o) => {
            t ? e(1, n, o) : this.getSecondCacheFile(e);
          }) : this.getSecondCacheFile(e);
        });
      });
    } catch (t) {
      e(0);
    }
  },
  getSecondCacheFile(t) {
    StorageUtil.getData(constants.DOWNLOAD_FILE_SECOND_CACHE, e => {
      e ? this.getSdkFileContent(e, t) : t(0);
    });
  },
  getSdkFileContent(t, e) {
    try {
      const n = UmengUtils.toObject(t);
      Log.d(`current sdk:${n.version}${n.md5}${n.filePath}`), FileUtils.getFile(n.filePath, t => {
        UmengUtils.checkMD5(n.md5, t) ? e(1, t, n.version) : e(0);
      }, () => {
        e(0);
      });
    } catch (t) {
      e(0);
    }
    return !1;
  },
  downloadFile(t, e, n, o, i) {
    try {
      _system8.default.download({
        url: t,
        success(t) {
          Log.d(`handling success ${t.token}`), _system8.default.onDownloadComplete({
            token: t.token,
            success(t) {
              try {
                const r = t.uri,
                  s = r.split("/"),
                  c = s[s.length - 1];
                let a = constants.SDK_UPDATE_LOCAL_STORAGE_PATH;
                a = `${a + Date.now()}/${c}`, FileUtils.moveFile(t.uri, a, t => {
                  const r = {
                    version: e,
                    md5: n,
                    filePath: t,
                    stable: o
                  };
                  i(r);
                });
              } catch (t) {}
            },
            fail(t, e) {}
          });
        },
        fail() {}
      });
    } catch (t) {}
  },
  storageFileInfo(t) {
    try {
      FileUtils.getFile(t.filePath, e => {
        Log.d(`---------${JSON.stringify(t)}-----------${UmengUtils.MD5(e)}`);
        e && t.md5 && t.md5 === UmengUtils.MD5(e) ? (StorageUtil.getData(constants.DOWNLOAD_FILE_FIRST_CACHE, e => {
          StorageUtil.putData(constants.DOWNLOAD_FILE_FIRST_CACHE, t, () => {
            if (e) {
              const t = UmengUtils.toObject(e);
              !t.stable && t.filePath && FileUtils.deleteFile(t.filePath);
            }
          });
        }), t.stable ? StorageUtil.getData(constants.DOWNLOAD_FILE_SECOND_CACHE, e => {
          StorageUtil.putData(constants.DOWNLOAD_FILE_SECOND_CACHE, t, () => {
            if (e) {
              const t = UmengUtils.toObject(e);
              t.filePath && FileUtils.deleteFile(t.filePath);
            }
          });
        }) : StorageUtil.putData(constants.DOWNLOAD_FILE_FIRST_CACHE, t)) : FileUtils.deleteFile(t.filePath, () => {});
      });
    } catch (t) {
      Log.d(`error message: ${t.toString()}`);
    }
  },
  checkVersionNew(t, e, n, o, i, r) {
    const s = {
      version: t,
      platform: "quickapp",
      appVersion: n,
      appKey: e,
      seedVersion: o,
      systemBaseInfo: i
    };
    _system6.default.fetch({
      url: this.url,
      method: "POST",
      data: s,
      success(t) {
        if (200 === t.code) try {
          const e = UmengUtils.toObject(t.data);
          if (200 === e.code && e.data.update) {
            const t = e.data.info;
            t && r(t);
          }
        } catch (t) {}
      },
      fail(t, e) {},
      complete() {}
    });
  },
  createMethod(t, e, n) {
    try {
      t[e] = n ? function (...t) {
        return n[e](...t);
      } : function (...t) {
        callQueue.push([e, t]);
      };
    } catch (t) {}
  },
  installApi(t, e) {
    try {
      const n = ["resume", "pause", "trackEvent"];
      for (let o = 0, i = n.length; o < i; o++) this.createMethod(t, n[o], e);
      if (e) for (let t = 0, n = callQueue.length; t < n; t++) {
        const n = callQueue[t];
        e[n[0]](...n[1]);
      }
    } catch (t) {}
  },
  compileModule(t, e) {
    try {
      const t = new Function("module", "exports", "require", e),
        n = {
          exports: {}
        },
        o = function (t) {
          return t in modules ? modules[t] : __webpack_require__("./src/Common/libs/umeng sync recursive")(t);
        };
      return t(n, n.exports, o), n.exports;
    } catch (t) {}
  },
  loadModule(t, e) {
    try {
      let n;
      if (0 === t) n = UmengAnalysisLib;else try {
        n = this.compileModule(t, e);
      } catch (t) {
        n = UmengAnalysisLib;
      }
      return n;
    } catch (t) {}
    return null;
  }
};
const UmengAnalysis = {
  seed_version: "0.0.1",
  version: constants.SDK_VERSION,
  appKey: "",
  _impl: null,
  _inited: !1,
  init(t) {
    if (!this._inited) {
      this._inited = !0, umeng_stat_global.userDubug = !!t.$data.umeng_debug, this.appKey = t.$data.umeng_appkey;
      const e = new SdkUpdater();
      e.init(this, (n, o, i) => {
        const r = e.loadModule(n, o);
        if (r) {
          const n = new r();
          this._impl = n, n.init(t), e.installApi(this, n);
        }
        i || (i = this.version);
        DeviceUtil.getSystemBaseInfo(t => {
          if (1e3 === t.platformVersionCode) return;
          e.checkVersionNew(i, this.appKey, _system5.default.getInfo().versionName, this.seed_version, t, t => {
            t && e.downloadFile(t.fileUrl, t.version, t.fileMD5, t.stable, t => {
              e.storageFileInfo(t);
            });
          });
        });
      });
    }
  }
};
!function () {
  umeng_stat_global && (umeng_stat_global.$umeng_stat = UmengAnalysis, umeng_stat_global.Page = Page);
}();
var _default = exports["default"] = UmengAnalysis;

/***/ }),

/***/ "./node_modules/js-base64/base64.js":
/*!******************************************!*\
  !*** ./node_modules/js-base64/base64.js ***!
  \******************************************/
/***/ (function(module) {

//
// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!
//
;
(function (global, factory) {
     true
        ? module.exports = factory()
        : 0;
}((typeof self !== 'undefined' ? self
    : typeof window !== 'undefined' ? window
        : typeof global !== 'undefined' ? global
            : this), function () {
    'use strict';
    /**
     *  base64.ts
     *
     *  Licensed under the BSD 3-Clause License.
     *    http://opensource.org/licenses/BSD-3-Clause
     *
     *  References:
     *    http://en.wikipedia.org/wiki/Base64
     *
     * @author Dan Kogai (https://github.com/dankogai)
     */
    var version = '3.7.2';
    /**
     * @deprecated use lowercase `version`.
     */
    var VERSION = version;
    var _hasatob = typeof atob === 'function';
    var _hasbtoa = typeof btoa === 'function';
    var _hasBuffer = typeof Buffer === 'function';
    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;
    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;
    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    var b64chs = Array.prototype.slice.call(b64ch);
    var b64tab = (function (a) {
        var tab = {};
        a.forEach(function (c, i) { return tab[c] = i; });
        return tab;
    })(b64chs);
    var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
    var _fromCC = String.fromCharCode.bind(String);
    var _U8Afrom = typeof Uint8Array.from === 'function'
        ? Uint8Array.from.bind(Uint8Array)
        : function (it, fn) {
            if (fn === void 0) { fn = function (x) { return x; }; }
            return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));
        };
    var _mkUriSafe = function (src) { return src
        .replace(/=/g, '').replace(/[+\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };
    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\+\/]/g, ''); };
    /**
     * polyfill version of `btoa`
     */
    var btoaPolyfill = function (bin) {
        // console.log('polyfilled');
        var u32, c0, c1, c2, asc = '';
        var pad = bin.length % 3;
        for (var i = 0; i < bin.length;) {
            if ((c0 = bin.charCodeAt(i++)) > 255 ||
                (c1 = bin.charCodeAt(i++)) > 255 ||
                (c2 = bin.charCodeAt(i++)) > 255)
                throw new TypeError('invalid character found');
            u32 = (c0 << 16) | (c1 << 8) | c2;
            asc += b64chs[u32 >> 18 & 63]
                + b64chs[u32 >> 12 & 63]
                + b64chs[u32 >> 6 & 63]
                + b64chs[u32 & 63];
        }
        return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
    };
    /**
     * does what `window.btoa` of web browsers do.
     * @param {String} bin binary string
     * @returns {string} Base64-encoded string
     */
    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }
        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }
            : btoaPolyfill;
    var _fromUint8Array = _hasBuffer
        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }
        : function (u8a) {
            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326
            var maxargs = 0x1000;
            var strs = [];
            for (var i = 0, l = u8a.length; i < l; i += maxargs) {
                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));
            }
            return _btoa(strs.join(''));
        };
    /**
     * converts a Uint8Array to a Base64 string.
     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5
     * @returns {string} Base64 string
     */
    var fromUint8Array = function (u8a, urlsafe) {
        if (urlsafe === void 0) { urlsafe = false; }
        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
    };
    // This trick is found broken https://github.com/dankogai/js-base64/issues/130
    // const utob = (src: string) => unescape(encodeURIComponent(src));
    // reverting good old fationed regexp
    var cb_utob = function (c) {
        if (c.length < 2) {
            var cc = c.charCodeAt(0);
            return cc < 0x80 ? c
                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))
                    + _fromCC(0x80 | (cc & 0x3f)))
                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))
                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
                        + _fromCC(0x80 | (cc & 0x3f)));
        }
        else {
            var cc = 0x10000
                + (c.charCodeAt(0) - 0xD800) * 0x400
                + (c.charCodeAt(1) - 0xDC00);
            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))
                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))
                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
                + _fromCC(0x80 | (cc & 0x3f)));
        }
    };
    var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
    /**
     * @deprecated should have been internal use only.
     * @param {string} src UTF-8 string
     * @returns {string} UTF-16 string
     */
    var utob = function (u) { return u.replace(re_utob, cb_utob); };
    //
    var _encode = _hasBuffer
        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }
        : _TE
            ? function (s) { return _fromUint8Array(_TE.encode(s)); }
            : function (s) { return _btoa(utob(s)); };
    /**
     * converts a UTF-8-encoded string to a Base64 string.
     * @param {boolean} [urlsafe] if `true` make the result URL-safe
     * @returns {string} Base64 string
     */
    var encode = function (src, urlsafe) {
        if (urlsafe === void 0) { urlsafe = false; }
        return urlsafe
            ? _mkUriSafe(_encode(src))
            : _encode(src);
    };
    /**
     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.
     * @returns {string} Base64 string
     */
    var encodeURI = function (src) { return encode(src, true); };
    // This trick is found broken https://github.com/dankogai/js-base64/issues/130
    // const btou = (src: string) => decodeURIComponent(escape(src));
    // reverting good old fationed regexp
    var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
    var cb_btou = function (cccc) {
        switch (cccc.length) {
            case 4:
                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)
                    | ((0x3f & cccc.charCodeAt(1)) << 12)
                    | ((0x3f & cccc.charCodeAt(2)) << 6)
                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;
                return (_fromCC((offset >>> 10) + 0xD800)
                    + _fromCC((offset & 0x3FF) + 0xDC00));
            case 3:
                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)
                    | ((0x3f & cccc.charCodeAt(1)) << 6)
                    | (0x3f & cccc.charCodeAt(2)));
            default:
                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)
                    | (0x3f & cccc.charCodeAt(1)));
        }
    };
    /**
     * @deprecated should have been internal use only.
     * @param {string} src UTF-16 string
     * @returns {string} UTF-8 string
     */
    var btou = function (b) { return b.replace(re_btou, cb_btou); };
    /**
     * polyfill version of `atob`
     */
    var atobPolyfill = function (asc) {
        // console.log('polyfilled');
        asc = asc.replace(/\s+/g, '');
        if (!b64re.test(asc))
            throw new TypeError('malformed base64.');
        asc += '=='.slice(2 - (asc.length & 3));
        var u24, bin = '', r1, r2;
        for (var i = 0; i < asc.length;) {
            u24 = b64tab[asc.charAt(i++)] << 18
                | b64tab[asc.charAt(i++)] << 12
                | (r1 = b64tab[asc.charAt(i++)]) << 6
                | (r2 = b64tab[asc.charAt(i++)]);
            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)
                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)
                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
        }
        return bin;
    };
    /**
     * does what `window.atob` of web browsers do.
     * @param {String} asc Base64-encoded string
     * @returns {string} binary string
     */
    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }
        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }
            : atobPolyfill;
    //
    var _toUint8Array = _hasBuffer
        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }
        : function (a) { return _U8Afrom(_atob(a), function (c) { return c.charCodeAt(0); }); };
    /**
     * converts a Base64 string to a Uint8Array.
     */
    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };
    //
    var _decode = _hasBuffer
        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }
        : _TD
            ? function (a) { return _TD.decode(_toUint8Array(a)); }
            : function (a) { return btou(_atob(a)); };
    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };
    /**
     * converts a Base64 string to a UTF-8 string.
     * @param {String} src Base64 string.  Both normal and URL-safe are supported
     * @returns {string} UTF-8 string
     */
    var decode = function (src) { return _decode(_unURI(src)); };
    /**
     * check if a value is a valid Base64 string
     * @param {String} src a value to check
      */
    var isValid = function (src) {
        if (typeof src !== 'string')
            return false;
        var s = src.replace(/\s+/g, '').replace(/={0,2}$/, '');
        return !/[^\s0-9a-zA-Z\+/]/.test(s) || !/[^\s0-9a-zA-Z\-_]/.test(s);
    };
    //
    var _noEnum = function (v) {
        return {
            value: v, enumerable: false, writable: true, configurable: true
        };
    };
    /**
     * extend String.prototype with relevant methods
     */
    var extendString = function () {
        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };
        _add('fromBase64', function () { return decode(this); });
        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });
        _add('toBase64URI', function () { return encode(this, true); });
        _add('toBase64URL', function () { return encode(this, true); });
        _add('toUint8Array', function () { return toUint8Array(this); });
    };
    /**
     * extend Uint8Array.prototype with relevant methods
     */
    var extendUint8Array = function () {
        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };
        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });
        _add('toBase64URI', function () { return fromUint8Array(this, true); });
        _add('toBase64URL', function () { return fromUint8Array(this, true); });
    };
    /**
     * extend Builtin prototypes with relevant methods
     */
    var extendBuiltins = function () {
        extendString();
        extendUint8Array();
    };
    var gBase64 = {
        version: version,
        VERSION: VERSION,
        atob: _atob,
        atobPolyfill: atobPolyfill,
        btoa: _btoa,
        btoaPolyfill: btoaPolyfill,
        fromBase64: decode,
        toBase64: encode,
        encode: encode,
        encodeURI: encodeURI,
        encodeURL: encodeURI,
        utob: utob,
        btou: btou,
        decode: decode,
        isValid: isValid,
        fromUint8Array: fromUint8Array,
        toUint8Array: toUint8Array,
        extendString: extendString,
        extendUint8Array: extendUint8Array,
        extendBuiltins: extendBuiltins
    };
    //
    // export Base64 to the namespace
    //
    // ES5 is yet to have Object.assign() that may make transpilers unhappy.
    // gBase64.Base64 = Object.assign({}, gBase64);
    gBase64.Base64 = {};
    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });
    return gBase64;
}));


/***/ }),

/***/ "./node_modules/js-md5/src/md5.js":
/*!****************************************!*\
  !*** ./node_modules/js-md5/src/md5.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-md5]{@link https://github.com/emn178/js-md5}
 *
 * @namespace md5
 * @version 0.7.3
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function () {
  'use strict';

  var ERROR = 'input is invalid type';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_MD5_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = global;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && "object" === 'object' && module.exports;
  var AMD =  true && __webpack_require__.amdO;
  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var EXTRA = [128, 32768, 8388608, -2147483648];
  var SHIFT = [0, 8, 16, 24];
  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];
  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

  var blocks = [], buffer8;
  if (ARRAY_BUFFER) {
    var buffer = new ArrayBuffer(68);
    buffer8 = new Uint8Array(buffer);
    blocks = new Uint32Array(buffer);
  }

  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  /**
   * @method hex
   * @memberof md5
   * @description Output hash as hex string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} Hex string
   * @example
   * md5.hex('The quick brown fox jumps over the lazy dog');
   * // equal to
   * md5('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method digest
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.digest('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method array
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.array('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method arrayBuffer
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.buffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method base64
   * @memberof md5
   * @description Output hash as base64 string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} base64 string
   * @example
   * md5.base64('The quick brown fox jumps over the lazy dog');
   */
  var createOutputMethod = function (outputType) {
    return function (message) {
      return new Md5(true).update(message)[outputType]();
    };
  };

  /**
   * @method create
   * @memberof md5
   * @description Create Md5 object
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.create();
   */
  /**
   * @method update
   * @memberof md5
   * @description Create and update Md5 object
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.update('The quick brown fox jumps over the lazy dog');
   * // equal to
   * var hash = md5.create();
   * hash.update('The quick brown fox jumps over the lazy dog');
   */
  var createMethod = function () {
    var method = createOutputMethod('hex');
    if (NODE_JS) {
      method = nodeWrap(method);
    }
    method.create = function () {
      return new Md5();
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(type);
    }
    return method;
  };

  var nodeWrap = function (method) {
    var crypto = eval("require('crypto')");
    var Buffer = eval("require('buffer').Buffer");
    var nodeMethod = function (message) {
      if (typeof message === 'string') {
        return crypto.createHash('md5').update(message, 'utf8').digest('hex');
      } else {
        if (message === null || message === undefined) {
          throw ERROR;
        } else if (message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        }
      }
      if (Array.isArray(message) || ArrayBuffer.isView(message) ||
        message.constructor === Buffer) {
        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');
      } else {
        return method(message);
      }
    };
    return nodeMethod;
  };

  /**
   * Md5 class
   * @class Md5
   * @description This is internal class.
   * @see {@link md5.create}
   */
  function Md5(sharedMemory) {
    if (sharedMemory) {
      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      this.blocks = blocks;
      this.buffer8 = buffer8;
    } else {
      if (ARRAY_BUFFER) {
        var buffer = new ArrayBuffer(68);
        this.buffer8 = new Uint8Array(buffer);
        this.blocks = new Uint32Array(buffer);
      } else {
        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      }
    }
    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;
    this.finalized = this.hashed = false;
    this.first = true;
  }

  /**
   * @method update
   * @memberof Md5
   * @instance
   * @description Update hash
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @see {@link md5.update}
   */
  Md5.prototype.update = function (message) {
    if (this.finalized) {
      return;
    }

    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw ERROR;
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw ERROR;
          }
        }
      } else {
        throw ERROR;
      }
      notString = true;
    }
    var code, index = 0, i, length = message.length, blocks = this.blocks;
    var buffer8 = this.buffer8;

    while (index < length) {
      if (this.hashed) {
        this.hashed = false;
        blocks[0] = blocks[16];
        blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      }

      if (notString) {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            buffer8[i++] = message[index];
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
          }
        }
      } else {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              buffer8[i++] = code;
            } else if (code < 0x800) {
              buffer8[i++] = 0xc0 | (code >> 6);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else if (code < 0xd800 || code >= 0xe000) {
              buffer8[i++] = 0xe0 | (code >> 12);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              buffer8[i++] = 0xf0 | (code >> 18);
              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            }
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              blocks[i >> 2] |= code << SHIFT[i++ & 3];
            } else if (code < 0x800) {
              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else if (code < 0xd800 || code >= 0xe000) {
              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            }
          }
        }
      }
      this.lastByteIndex = i;
      this.bytes += i - this.start;
      if (i >= 64) {
        this.start = i - 64;
        this.hash();
        this.hashed = true;
      } else {
        this.start = i;
      }
    }
    if (this.bytes > 4294967295) {
      this.hBytes += this.bytes / 4294967296 << 0;
      this.bytes = this.bytes % 4294967296;
    }
    return this;
  };

  Md5.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex;
    blocks[i >> 2] |= EXTRA[i & 3];
    if (i >= 56) {
      if (!this.hashed) {
        this.hash();
      }
      blocks[0] = blocks[16];
      blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }
    blocks[14] = this.bytes << 3;
    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;
    this.hash();
  };

  Md5.prototype.hash = function () {
    var a, b, c, d, bc, da, blocks = this.blocks;

    if (this.first) {
      a = blocks[0] - 680876937;
      a = (a << 7 | a >>> 25) - 271733879 << 0;
      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;
      d = (d << 12 | d >>> 20) + a << 0;
      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;
      c = (c << 17 | c >>> 15) + d << 0;
      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;
      b = (b << 22 | b >>> 10) + c << 0;
    } else {
      a = this.h0;
      b = this.h1;
      c = this.h2;
      d = this.h3;
      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;
      a = (a << 7 | a >>> 25) + b << 0;
      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;
      d = (d << 12 | d >>> 20) + a << 0;
      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;
      c = (c << 17 | c >>> 15) + d << 0;
      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;
      b = (b << 22 | b >>> 10) + c << 0;
    }

    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;
    b = (b << 20 | b >>> 12) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[5] - 378558;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[8] - 2022574463;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[11] + 1839030562;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[14] - 35309556;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[1] - 1530992060;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[4] + 1272893353;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[7] - 155497632;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[10] - 1094730640;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[13] + 681279174;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[0] - 358537222;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[3] - 722521979;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[6] + 76029189;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[9] - 640364487;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[12] - 421815835;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[15] + 530742520;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[2] - 995338651;
    b = (b << 23 | b >>> 9) + c << 0;
    a += (c ^ (b | ~d)) + blocks[0] - 198630844;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[5] - 57434055;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[10] - 1051523;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[15] - 30611744;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[4] - 145523070;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[2] + 718787259;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[9] - 343485551;
    b = (b << 21 | b >>> 11) + c << 0;

    if (this.first) {
      this.h0 = a + 1732584193 << 0;
      this.h1 = b - 271733879 << 0;
      this.h2 = c - 1732584194 << 0;
      this.h3 = d + 271733878 << 0;
      this.first = false;
    } else {
      this.h0 = this.h0 + a << 0;
      this.h1 = this.h1 + b << 0;
      this.h2 = this.h2 + c << 0;
      this.h3 = this.h3 + d << 0;
    }
  };

  /**
   * @method hex
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.hex();
   */
  Md5.prototype.hex = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;

    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +
      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +
      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +
      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +
      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +
      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +
      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +
      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +
      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +
      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +
      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +
      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +
      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +
      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +
      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +
      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];
  };

  /**
   * @method toString
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.toString();
   */
  Md5.prototype.toString = Md5.prototype.hex;

  /**
   * @method digest
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.digest}
   * @example
   * hash.digest();
   */
  Md5.prototype.digest = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;
    return [
      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,
      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,
      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,
      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF
    ];
  };

  /**
   * @method array
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.array}
   * @example
   * hash.array();
   */
  Md5.prototype.array = Md5.prototype.digest;

  /**
   * @method arrayBuffer
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.arrayBuffer}
   * @example
   * hash.arrayBuffer();
   */
  Md5.prototype.arrayBuffer = function () {
    this.finalize();

    var buffer = new ArrayBuffer(16);
    var blocks = new Uint32Array(buffer);
    blocks[0] = this.h0;
    blocks[1] = this.h1;
    blocks[2] = this.h2;
    blocks[3] = this.h3;
    return buffer;
  };

  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.buffer}
   * @example
   * hash.buffer();
   */
  Md5.prototype.buffer = Md5.prototype.arrayBuffer;

  /**
   * @method base64
   * @memberof Md5
   * @instance
   * @description Output hash as base64 string
   * @returns {String} base64 string
   * @see {@link md5.base64}
   * @example
   * hash.base64();
   */
  Md5.prototype.base64 = function () {
    var v1, v2, v3, base64Str = '', bytes = this.array();
    for (var i = 0; i < 15;) {
      v1 = bytes[i++];
      v2 = bytes[i++];
      v3 = bytes[i++];
      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +
        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +
        BASE64_ENCODE_CHAR[v3 & 63];
    }
    v1 = bytes[i];
    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +
      '==';
    return base64Str;
  };

  var exports = createMethod();

  if (COMMON_JS) {
    module.exports = exports;
  } else {
    /**
     * @method md5
     * @description Md5 hash function, export to global in browsers.
     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
     * @returns {String} md5 hashes
     * @example
     * md5(''); // d41d8cd98f00b204e9800998ecf8427e
     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6
     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0
     *
     * // It also supports UTF-8 encoding
     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07
     *
     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`
     * md5([]); // d41d8cd98f00b204e9800998ecf8427e
     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e
     */
    root.md5 = exports;
    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return exports;
      }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();


/***/ }),

/***/ "./node_modules/union-quick-app-ad/app.js":
/*!************************************************!*\
  !*** ./node_modules/union-quick-app-ad/app.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(exports, "__esModule", ({value:!0})),exports["default"]=void 0;var _system=_interopRequireDefault($app_require$("@app-module/system.device")),_system2=_interopRequireDefault($app_require$("@app-module/system.app")),_system3=_interopRequireDefault($app_require$("@app-module/system.network")),_system4=_interopRequireDefault($app_require$("@app-module/system.fetch")),_system5=_interopRequireDefault($app_require$("@app-module/system.package")),_system6=_interopRequireDefault($app_require$("@app-module/system.webview")),_system7=_interopRequireDefault($app_require$("@app-module/system.prompt")),_system8=_interopRequireDefault($app_require$("@app-module/system.router")),_system9=_interopRequireDefault($app_require$("@app-module/system.request")),_system10=_interopRequireDefault($app_require$("@app-module/system.storage")),_service=_interopRequireDefault($app_require$("@app-module/service.account")),_system11=_interopRequireDefault($app_require$("@app-module/system.sensor")),_system12=_interopRequireDefault($app_require$("@app-module/system.vibrator")),_system13=_interopRequireDefault($app_require$("@app-module/system.file")),_system14=_interopRequireDefault($app_require$("@app-module/system.image")),_package=__webpack_require__(/*! ./package.json */ "./node_modules/union-quick-app-ad/package.json");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var m_global=Object.getPrototypeOf(global)||global,fileUrl="internal://files/unionad/".concat(_package.version,"/ad-render-quick.min.js");function execRemoteJs(e,t){var r=this;try{new Function(e)()}catch(e){t&&fetchRemoteJs.call(this).then(function(e){execRemoteJs(e,!1),initAdSdk.call(r)})}}function initAdSdk(e){try{m_global.$union_quick_app_sdk&&(m_global.$union_quick_app_sdk.api={device:_system.default,app:_system2.default,network:_system3.default,fetch:_system4.default,pkg:_system5.default,webview:_system6.default,prompt:_system7.default,router:_system8.default,request:_system9.default,storage:_system10.default,account:_service.default,file:_system13.default,sensor:_system11.default,image:_system14.default,vibrator:_system12.default},m_global.$union_quick_app_sdk.sdkVersion=_package.version,m_global.$union_quick_app_sdk.fileUrl=fileUrl,new m_global.$union_quick_app_sdk(this,e))}catch(e){}}function fetchRemoteJs(){return new Promise(function(t,r){_system4.default.fetch({url:"https://cpro.baidustatic.com/cpro/xcx/js/ad-render-quick.min.js",responseType:"text",method:"GET",success:function(e){_system13.default.writeText({uri:fileUrl,text:e.data,success:function(){},fail:function(e,t){}}),t(e.data)},fail:function(e,t){r()}})})}var UNION_AD_SDK=_createClass(function e(r,i){_classCallCheck(this,e),m_global&&m_global.$union_quick_app_sdk?initAdSdk.call(r,i):_system13.default.readText({uri:fileUrl,success:function(e){execRemoteJs.call(r,e.text,!0),initAdSdk.call(r,i)},fail:function(e,t){fetchRemoteJs.call(r).then(function(e){execRemoteJs.call(r,e,!1),initAdSdk.call(r,i)})}})}),_default=UNION_AD_SDK;exports["default"]=_default;

/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/index.js":
/*!****************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ YLH_UNION_AD_SDK),
/* harmony export */   "isPlatformVersionCodeGreaterThen1100": () => (/* binding */ isPlatformVersionCodeGreaterThen1100)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./node_modules/ylh-quick-app-ad-sdk/utils/index.js");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package.json */ "./node_modules/ylh-quick-app-ad-sdk/package.json");
/* eslint-disable import/no-unresolved */
var app = $app_require$( '@app-module/system.app');;
var fetch = $app_require$( '@app-module/system.fetch');;
var file = $app_require$( '@app-module/system.file');;
var device = $app_require$( '@app-module/system.device');;
var network = $app_require$( '@app-module/system.network');;
var shortcut = $app_require$( '@app-module/system.shortcut');;
var battery = $app_require$( '@app-module/system.battery');;
var brightness = $app_require$( '@app-module/system.brightness');;
var webview = $app_require$( '@app-module/system.webview');;
var storage = $app_require$( '@app-module/system.storage');;
var pkg = $app_require$( '@app-module/system.package');;
var router = $app_require$( '@app-module/system.router');;
var prompt = $app_require$( '@app-module/system.prompt');;
var cipher = $app_require$( '@app-module/system.cipher');;
var volume = $app_require$( '@app-module/system.volume');;
var sensor = $app_require$( '@app-module/system.sensor');;
var vibrator = $app_require$( '@app-module/system.vibrator');;



const qaGlobal = Object.getPrototypeOf(global) || global;

const { version } = _package_json__WEBPACK_IMPORTED_MODULE_1__;

const REMOTE_JS_TYPE = {
  CORE: 'core',
  LIBS: 'libs',
};

const FIRST_CORE_VERSION = 1050;

const LIBS_VERSION = '1.0.0';
const FIRST_LIBS_VERSION = 1000;

const isSomeStubVersionScope = ({ entryVersion, localVersion }) => {
  const { length: localLen } = localVersion;
  const { length: entryLen } = entryVersion;
  return localVersion.slice(0, localLen - 2) === entryVersion.slice(0, entryLen - 2);
};

const getRemoteJSConfigInfo = ({
  type,
  firstPublishUrl,
  stubVersion,
  firstPublishPluginVersion,
  isUseRemoteJS,
  validateFn = (localJsUrl) => {
    if (isUseRemoteJS) {
      return !isUseRemoteJS;
    }
    if (!localJsUrl) {
      return false;
    }
    const [localStubVersion, localPluginVersion] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getCoreVersionByUrl)(localJsUrl);
    const isSameSdkVersion = isSomeStubVersionScope({
      entryVersion: stubVersion,
      localVersion: localStubVersion,
    });
    return isSameSdkVersion && localPluginVersion >= firstPublishPluginVersion;
  },
}) => {
  const coreInfo = {
    // 存放本地 JS 文件的 uri 地址
    cacheUri: `internal://files/ylh-sdk-${type}/${stubVersion}`,
    // 本地 JS 不可用（没有或不符合 validateFn 条件）时，重新请求 JS 的远程地址
    remoteUrl: firstPublishUrl,
    validateFn,
  };
  return coreInfo;
};

const coreInfo = getRemoteJSConfigInfo({
  type: REMOTE_JS_TYPE.CORE,
  firstPublishUrl: `https://qzs.gdtimg.com/union/res/ylh-sdk-core-v1.5.1050.min.js?d=${Date.now()}`, // 线上
  stubVersion: version,
  firstPublishPluginVersion: FIRST_CORE_VERSION,
  isUseRemoteJS: false,
});

const libsInfo = getRemoteJSConfigInfo({
  type: REMOTE_JS_TYPE.LIBS,
  firstPublishUrl: `https://qzs.gdtimg.com/union/res/ylh-sdk-libs-v1.0.1000.min.js?d=${Date.now()}`, // 线上
  stubVersion: LIBS_VERSION,
  firstPublishPluginVersion: FIRST_LIBS_VERSION,
  isUseRemoteJS: false,
});

const system = {
  fetch,
  file,
  device,
  network,
  shortcut,
  battery,
  brightness,
  webview,
  storage,
  pkg,
  router,
  prompt,
  cipher,
  volume,
  sensor,
  vibrator,
  app,
  sdkVersion: version,
  BroadcastChannel,
};

// 为加快运行速度，缓存promise
const userPromiseCache = {};

const YLH_SDK_SUPPORT_MINI_PLATFORM_VER = 1100;

const isPlatformVersionCodeGreaterThen1100 = async () => {
  if (!userPromiseCache.platformPromise) {
    userPromiseCache.platformPromise = new Promise((resolve, reject) => {
      device.getInfo({
        success: (deviceInfoInfo) => {
          const { platformVersionCode } = deviceInfoInfo;
          if (platformVersionCode < YLH_SDK_SUPPORT_MINI_PLATFORM_VER) {
            reject(new Error(JSON.stringify({ platform: platformVersionCode })));
          } else {
            resolve(true);
          }
        },
        fail: () => {
          reject(new Error(JSON.stringify({ platform: '未知' })));
        },
      });
    });
  }
  return userPromiseCache.platformPromise;
};

/**
 * 加载远程 CDN JS 广告处理逻辑文件
 * @returns Promise
 */
const fetchRemoteJS = ({ cacheUri, remoteUrl }) => new Promise((resolve, reject) => {
  let pollCount = 0;
  const errMessage = `${remoteUrl} 获取失败`;
  const pollFetch = () => {
    fetch.fetch({
      url: remoteUrl,
      responseType: 'text',
      method: 'get',
      success: (res) => {
        const { code, data: jsCode } = res;
        if (code !== 200) {
          if (pollCount < 3) {
            pollCount += 1;
            // 重试之前等待1s钟
            setTimeout(() => {
              pollFetch();
            }, 1000);
          } else {
            reject(errMessage);
          }
        } else {
          resolve(jsCode);
          // 缓存最新 JS
          if (cacheUri) {
            file.writeText({
              uri: cacheUri,
              text: { jsCode, jsUrl: remoteUrl },
            });
          }
        }
      },
      fail: () => {
        // 当出现网络异常或者其他情况时，进行重试
        if (pollCount < 3) {
          pollCount += 1;
          // 重试之前等待1s钟
          setTimeout(() => {
            pollFetch();
          }, 1000);
        } else {
          reject(errMessage);
        }
      },
    });
  };
  pollFetch();
});

// 获取local JS，如果local JS不可用（没有或不符合validateFn条件）时，重新请求remoteUrl JS
const getLocalJS = async ({ cacheUri, remoteUrl, validateFn }) => {
  try {
    const res = await file.readText({
      uri: cacheUri,
    });
    const { data = {} } = res || {};
    const { jsCode, jsUrl } = JSON.parse(data.text || '{}');
    if (validateFn(jsUrl)) {
      return jsCode;
    }
  } catch (err) {
    console.log('getLocalJS-err', err);
  }

  return fetchRemoteJS({ cacheUri, remoteUrl });
};

// 执行local JS, 如果没有，则从remoteUrl处获取后再执行
const executeLocalJS = async (params) => {
  getLocalJS(params).then((localJS) => {
    // eslint-disable-next-line no-new, no-new-func
    const func = new Function('$YLHSDK', localJS);
    func(qaGlobal.$YLHSDK);
  }).catch((err) => {
    console.log('executeLocalJS出错', err, params);
  });
};

/**
 * 快应用SDK入口函数
 * @param {Object} $app 快应用 App 实例。注意$app和app的区别：$app-快应用实例，app-快应用文档提供的@system.app api。
 */
function YLH_UNION_AD_SDK($app, config = {}) {
  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.classCallCheck)(this, YLH_UNION_AD_SDK);

  if (!config.appId) {
    console.error('必须传递appId，ylh_sdk才会正常运行');
    return;
  }
  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.initYLHSDK)($app);

  isPlatformVersionCodeGreaterThen1100().then(() => {
    qaGlobal.$YLHSDK = {
      $app,
      config,
      system: {
        ...system,
        telecom: $app_require$('@app-module/system.telecom'), // telecom 必须 大于 1080 版本
        keyguard: $app_require$('@app-module/system.keyguard'), // keyguard 必须 大于 1090 版本
        downloadTask: $app_require$('@app-module/system.downloadtask'), // downloadTask 必须 大于 1100 版本
      },
      fetchRemoteJS,
      localCore: {
        localCoreUri: coreInfo.cacheUri,
        getCoreVersionByUrl: _utils__WEBPACK_IMPORTED_MODULE_0__.getCoreVersionByUrl,
      },
      localLibs: {
        localLibsUri: libsInfo.cacheUri,
      },
    };

    executeLocalJS(coreInfo);
    executeLocalJS(libsInfo);
  }).catch((err) => {
    const errObj = err?.message ? JSON.parse(err.message) : {};
    console.warn(`该机型的 minPlatformVersion 为${errObj.platform}, 小于${YLH_SDK_SUPPORT_MINI_PLATFORM_VER}, 
    ylh_sdk 不会运行也不会导致快应用异常`);
  });
}


/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/utils/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/utils/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "classCallCheck": () => (/* binding */ classCallCheck),
/* harmony export */   "defineAdComponent": () => (/* binding */ defineAdComponent),
/* harmony export */   "defineAdScene": () => (/* binding */ defineAdScene),
/* harmony export */   "dispatchAdEvent": () => (/* binding */ dispatchAdEvent),
/* harmony export */   "getCoreVersionByUrl": () => (/* binding */ getCoreVersionByUrl),
/* harmony export */   "initYLHSDK": () => (/* binding */ initYLHSDK)
/* harmony export */ });
function dispatchAdEvent(eventName, params) {
  try {
    if (this.isAdDestroyed) return;
    if (this.lifetimes && this.lifetimes?.[eventName]) {
      this.lifetimes[eventName].call(this, params);
    } else if (this.events && this.events?.[eventName]) {
      this.events[eventName].call(this, params);
    }
  } catch (error) {
    console.warn('dispatchAdEvent error: ', eventName, error.message, params);
  }
}

function registerProps(componentName, adTimer) {
  if (this.$app) {
    const component = this.$app.$def?.ylh_sdk?.components?.[componentName];
    if (component) {
      Object.keys(component).forEach((prop) => {
        this[prop] = component[prop];
      });
      dispatchAdEvent.call(this, 'onInit', componentName);
      if (adTimer) {
        clearInterval(adTimer);
      }
    }
  }
}

function defineAdComponent(componentName) {
  try {
    if (this.adTimer) {
      clearInterval(this.adTimer);
    }
    if (this.$app?.$def?.ylh_sdk?.components) {
      registerProps.call(this, componentName, undefined);
    } else {
      let time = 0;
      const adTimer = setInterval(() => {
        if (time > 1000 * 5) {
          clearInterval(adTimer);
        }
        registerProps.call(this, componentName, adTimer);
        time += 10;
      }, 10);
    }
  } catch (error) {
    console.error(error.message);
    if (this.onYLHSDKError) {
      this.onYLHSDKError(error.message);
    }
  }
}

function defineAdScene(scene) {
  defineAdComponent.call(this, scene);
}

/**
 * 检查类函数是否通过 new 关键字正确调用
 * @param {Object} sdkInstance 实例对象
 * @param {function} sdkConstructor 构造函数
 */
function classCallCheck(sdkInstance, sdkConstructor) {
  if (!(sdkInstance instanceof sdkConstructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

// https://qzs.gdtimg.com/union/res/ylh-sdk-core-v1.3.1030.min.js?d=13333' 从url解析出['1.3', 1030]信息
function getCoreVersionByUrl(jsUrl = '') {
  const res = jsUrl.match(/ylh-sdk-(?:[a-z]+)-v(\d+\.\d+\.\d+)(?:@debug)?\.min\.js/);
  const str = res && res[1] ? res[1] : ''; // '1.3.1030.min/1.3.1030@debug.min'
  const [a, b, c] = str.split('.');
  return [`${a}.${b}.0`, Number(c.substr(0, 4))];
}

// 初始化时, 为onYlhReady添加链式调用方法
function initYLHSDK($app) {
  if ($app.$def?.ylh_sdk) {
    return;
  }
  // eslint-disable-next-line  no-param-reassign
  $app.$def.ylh_sdk = {
    // eslint-disable-next-line  consistent-return
    onYlhReady(callback) {
      const { onYlhReadyCallback = [] } = $app.$def.ylh_sdk;
      // console.log('app.$def.ylh_sdk', app.$def.ylh_sdk, onYlhReadyCallback);
      if (typeof callback !== 'function') {
        console.warn('onYlhReady: then回调必须传递一个方法');
      } else if ($app.$def.ylh_sdk.SDK_CORE_READY) {
        return callback();
      } else {
        // eslint-disable-next-line  no-param-reassign
        $app.$def.ylh_sdk.onYlhReadyCallback = [...onYlhReadyCallback, callback];
      }
    },
  };
}


/***/ }),

/***/ "./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\preset-env,targets=node 8&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-transform-modules-commonjs&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-class-properties&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux":

  !*** ./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\preset-env,targets=node 8&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-transform-modules-commonjs&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-class-properties&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux ***!

/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = function(module, exports, $app_require$){"use strict";

__webpack_require__(/*! ./Common/libs/umeng/umenganalysis.es.min */ "./src/Common/libs/umeng/umenganalysis.es.min.js");
var _app = _interopRequireDefault(__webpack_require__(/*! @topon/quick-app-sdk-hw/app.js */ "./node_modules/@topon/quick-app-sdk-hw/app.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
module.exports = {
  onCreate() {
    console.info('Application onCreate');
    const hook2global = global.__proto__ || global;
    const $router = $app_require$('@app-module/system.router');
    const $utils = (__webpack_require__(/*! ./Common/helper/utils */ "./src/Common/helper/utils.js")["default"]);
    const $storage = $app_require$("@app-module/system.storage");
    const $cipher = $app_require$("@app-module/system.cipher");
    const $prompt = $app_require$("@app-module/system.prompt");
    const $webview = $app_require$("@app-module/system.webview");
    const $apis = (__webpack_require__(/*! ./Common/helper/apis */ "./src/Common/helper/apis/index.js")["default"]);
    const $ad = $app_require$("@app-module/service.ad");
    const $app = $app_require$("@app-module/system.app");
    const $device = $app_require$("@app-module/system.device");
    const $processData = (__webpack_require__(/*! ./Common/helper/processData */ "./src/Common/helper/processData.js")["default"]);
    hook2global.$router = $router;
    hook2global.$utils = $utils;
    hook2global.$storage = $storage;
    hook2global.$prompt = $prompt;
    hook2global.$apis = $apis;
    hook2global.$webview = $webview;
    hook2global.$ad = $ad;
    hook2global.$cipher = $cipher;
    hook2global.$app = $app;
    hook2global.$device = $device;
    hook2global.$processData = $processData;
    console.log("[app.ux] onCreate...");
    $umeng_stat.init(this);
    try {
      const instance = new _app.default({
        app: this,
        appId: 'a6690ddbfd2bbc',
        appKey: 'ac7b8c3807532084e93fdf61490e25fa5'
      });
      this.$def.topon_sdk_instance = instance;
    } catch (error) {
      console.log('error', error);
    }
  },
  onHide() {
    this.instance.onHide();
  },
  onDestroy() {
    console.info('Application onDestroy');
    this.instance.onDestroy();
  },
  dataApp: {
    url1: "http://www.ihaituo.cn/xy/jb/bzzx.html",
    url2: "http://www.ihaituo.cn/xy/jb/yhxy.html",
    url3: "http://www.ihaituo.cn/xy/jb/yszc.html",
    countMax: 8,
    brand: 'HUAWEI',
    channel: 'jh',
    bannerAdUnitId: "z1v6jykvy9",
    nAbannerAdUnitId: "i8zsc3gcbg",
    nativeAdUnitId: "v5h5xsklp2",
    interstitialAdUnitId: "a7nvl7fm00",
    userData: {
      loginPhone: '',
      userId: '',
      balance: 0
    },
    actiParam: ''
  }
};
(exports.default || module.exports).manifest = __webpack_require__(/*! !!../node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./manifest.json */ "./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json")
}

/***/ }),

/***/ "./src/Common/helper/apis sync recursive \\.js":
/*!*******************************************!*\
  !*** ./src/Common/helper/apis/ sync \.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./example.js": "./src/Common/helper/apis/example.js",
	"./index.js": "./src/Common/helper/apis/index.js",
	"./user.js": "./src/Common/helper/apis/user.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src/Common/helper/apis sync recursive \\.js";

/***/ }),

/***/ "./src/Common/libs/umeng sync recursive":
/*!*************************************!*\
  !*** ./src/Common/libs/umeng/ sync ***!
  \*************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./src/Common/libs/umeng sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json":
/*!*******************************************************************************************!*\
  !*** ./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"package":"com.haituo.setpplanet","name":"计步星球","versionName":"1.0.20","versionCode":20,"icon":"/Common/img/logo.png","minPlatformVersion":1100,"features":[{"name":"system.storage"},{"name":"system.fetch"},{"name":"system.network"},{"name":"system.device"},{"name":"system.file"},{"name":"system.sensor"},{"name":"system.webview"},{"name":"system.request"},{"name":"system.package"},{"name":"service.account"},{"name":"service.ad"}],"config":{"data":{"umeng_appkey":"667b68fccac2a664de54f5ac"}},"router":{"entry":"Page_MainTab","pages":{"Page_MainTab":{"launchMode":"singleTask","component":"index"},"Page_Tixian":{"component":"index"},"Page_login":{"component":"index"},"Page_about":{"component":"index"},"feedback":{"component":"index"},"logOut":{"component":"index"},"permissions":{"component":"index"},"Page_setPay":{"component":"index"},"Page_cfd/":{"component":"index"},"Page_cfd-taku/":{"component":"index"},"ad/nativeAD":{"component":"index"},"TopOn/AdLanding":{"component":"index"}}},"display":{"pages":{"Page_MainTab":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0},"Page_cfd/":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0,"titleBarBackgroundOpacity":0},"Page_cfd-taku/":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0,"titleBarBackgroundOpacity":0},"Page_Tixian":{"titleBar":true,"menu":true,"titleBarText":"收益"},"Page_login":{"titleBar":true,"menu":false,"titleBarText":"用户登录"},"TopOn/AdLanding":{"fullScreen":true,"titleBar":false,"statusBarImmersive":true,"menuBarData":{"menuBar":false}}}},"versionType":"debug"}');

/***/ }),

/***/ "./node_modules/union-quick-app-ad/package.json":
/*!******************************************************!*\
  !*** ./node_modules/union-quick-app-ad/package.json ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"union-quick-app-ad","version":"1.0.49","description":"百度联盟快应用广告sdk","main":"app.js","files":["components/*","app.js"],"keywords":["快应用","广告"],"author":"cm-fe","license":"ISC","dependencies":{},"devDependencies":{}}');

/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/package.json":
/*!********************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/package.json ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"ylh-quick-app-ad-sdk","version":"1.5.0","description":"","main":"index.js","scripts":{"test":"eslint ./","cz":"git cz","prepare":"husky install"},"keywords":["快应用","广告","SDK"],"author":"zuoxingli4534@gmail.com","license":"ISC","devDependencies":{"@babel/cli":"^7.21.0","@babel/core":"^7.21.0","@babel/plugin-proposal-object-rest-spread":"^7.20.7","@babel/plugin-proposal-optional-chaining":"^7.21.0","@commitlint/cli":"^17.4.4","@commitlint/config-conventional":"^17.4.4","babel-loader":"^9.1.2","eslint":"^7.32.0 || ^8.2.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.2","husky":"^8.0.3","less":"^4.1.3","less-loader":"^11.1.0"},"husky":{"hooks":{"pre-commit":"lint-staged"}}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!********************!*\
  !*** ./src/app.ux ***!
  \********************/
var $app_script$ = __webpack_require__(/*! !!./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader?presets[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\preset-env,targets=node 8&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-transform-modules-commonjs&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-class-properties&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux */ "./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\preset-env,targets=node 8&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-transform-modules-commonjs&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-class-properties&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux")

$app_define$('@app-application/app', [], function($app_require$, $app_exports$, $app_module$){

        $app_script$($app_module$, $app_exports$, $app_require$)
        if ($app_exports$.__esModule && $app_exports$.default) {
            $app_module$.exports = $app_exports$.default;
        }
})
$app_bootstrap$('@app-application/app',{packagerName:'fa-toolkit', packagerVersion: '14.0.1-Stable.300'})
})();

/******/ })()
;   };
                        if (typeof window === "undefined") {
                            return createAppHandler();
                        }
                        else {
                            window.createAppHandler = createAppHandler
                        }
                    })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,