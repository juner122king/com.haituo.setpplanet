(function(){
                        
                        var $app_define_wrap$ = $app_define_wrap$ || function() {}
                        var createAppHandler = function() {
                            return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@hw-agconnect/api/dist/index.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/@hw-agconnect/api/dist/index.esm.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ r)
/* harmony export */ });
var e=new(function(){function e(){this.servicesIdentifierMap=new Map,this.registeredService=new Map}return e.prototype.registryService=function(e){var r=e.name;this.registeredService.has(r)||this.registeredService.set(r,e)},e.prototype.unregistryService=function(e){},e.prototype.getService=function(e,r,t){void 0===t&&(t="[DEFAULT_CATEGORY]");var i=this.servicesIdentifierMap.get(t);if(null==i)i=new Map,this.servicesIdentifierMap.set(t,i);else if(null!=(s=i.get(e)))return s;var n=this.registeredService.get(e);if(null!=n){var s=n.serviceFactory(r);return i.set(e,s),s}return null},e}());var r=new(function(){function r(){}return r.prototype.registerApiProvider=function(e,r,t){(this[e]=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return r(e)},null!=t)&&function e(r,t){if(!(t instanceof Object))return t;switch(t.constructor){case Array:r=[];break;case Object:void 0===r&&(r={});break;case Date:return new Date(t.getTime());default:return t}for(var i in t)t.hasOwnProperty(i)&&(r[i]=e(r[i],t[i]));return r}(this[e],t)},r.prototype.registerInternalService=function(r){e.registryService(r)},r.prototype.getService=function(r,t,i){return e.getService(r,t,i)},r}());


/***/ }),

/***/ "./node_modules/@hw-agconnect/core/dist/index.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@hw-agconnect/core/dist/index.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_CATEGORY": () => (/* binding */ t),
/* harmony export */   "InstanceMap": () => (/* binding */ i),
/* harmony export */   "Singleton": () => (/* binding */ n)
/* harmony export */ });
var t="[DEFAULT_CATEGORY]",n=function(){function t(t){this.factory=t}return t.prototype.get=function(){return null==this.instance&&(this.instance=this.factory()),this.instance},t}(),i=function(){function t(t){this.instanceMap={},this.factory=t}return t.prototype.get=function(t){if(t&&Array.isArray(t)&&t.length>=1)return this.instanceMap[t[0]]||(this.instanceMap[t[0]]=this.factory(t)),this.instanceMap[t[0]];var n=new Array;return n[0]="[DEFAULT_CATEGORY]",this.get(n)},t}();


/***/ }),

/***/ "./node_modules/@hw-agconnect/instance/dist/index.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/@hw-agconnect/instance/dist/index.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AGCError": () => (/* binding */ c),
/* harmony export */   "AGCErrorCode": () => (/* binding */ p),
/* harmony export */   "BaseResponse": () => (/* binding */ h),
/* harmony export */   "ConnectRet": () => (/* binding */ u)
/* harmony export */ });
/* harmony import */ var _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hw-agconnect/core */ "./node_modules/@hw-agconnect/core/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hw-agconnect/log */ "./node_modules/@hw-agconnect/log/dist/index.esm.js");

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,e)};var i,s,c=function(t){function e(o,n,r){var i=this,s=o.code+e.COLON+o.message;return r&&(s=r+e.DASH+s),n&&(n.message?s=s+e.COMMA+n.message:"string"==typeof n&&(s=s+e.COMMA+n)),(i=t.call(this,s)||this).__proto__=e.prototype,i.code=o.code,i.message=o.message,n&&(n.message?i.message=o.message+e.COMMA+n.message:"string"==typeof n&&(i.message=o.message+e.COMMA+n)),i.msg=i.message,i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}(e,t),e.COLON=": ",e.COMMA=", ",e.DASH="-",e}(Error),p=function(){function t(){}return t.AGC_INNER_ERROR={code:1e4,message:"agc inner error"},t.NETWORK_REQUEST_ERROR={code:10001,message:"agc network request error"},t.GET_AAID_ERROR={code:10002,message:"agc get aaid error"},t.ABTEST_LOAD_EXPERIMENTS_ERROR={code:10003,message:"abtest load experiments error"},t.ABTEST_SAVE_EXPERIMENTS_ERROR={code:10004,message:"abtest save experiments error"},t.ABTEST_REPLACE_EXPERIMENTS_ERROR={code:10005,message:"abtest repalce experiments error"},t.FAIL_TO_GET_STORAGE_SERVICE={code:10006,message:"get agcStorage service failed"},t.FAIL_TO_GET_NETWORK_SERVICE={code:10007,message:"get agcNetwork service failed"},t.REMOVE_TOKEN_FAILED={code:10008,message:"remove client token faild"},t.GET_TOKEN_FAILED={code:10009,message:"get client token faild"},t.AGC_INIT_ERROR={code:10010,message:"AGCInstance init error"},t.FAIL_TO_GET_CRIDENTIAL_SERVICE={code:10011,message:"get agcCredential service failed"},t.WEBSOCKET_NOT_SUPPORT={code:10012,message:"websocket is not support"},t.WEBSOCKET_ERROR={code:10013,message:"websocket error"},t}(),a=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_2__.Logger.createLogger("agconnectInstance"),g=function(){function t(t,o){this.appVersion="",this._config=null,this._customCredentialsProvider=null,this._customAuthProvider=null,this.cryptImpl=void 0,this.option=null,this.repo_=t,this.name_=o||_hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CATEGORY}return t.prototype.name=function(){return this.name_},t.prototype.configInstance=function(t){return this._config=t,this.replaceAppInfo(),this},t.prototype.replaceAppInfo=function(){this._config&&this._config.app_info&&this._config.app_info.app_id&&this._config.client&&(this._config.client.app_id=this._config.app_info.app_id)},t.prototype.config=function(){return this.checkBeforeSetKey(),this._config},t.prototype.setApiKey=function(t){this.checkBeforeSetKey(),this._config.client.api_key=t},t.prototype.setClientSecret=function(t){this.checkBeforeSetKey(),this._config.client.client_secret=t},t.prototype.setClientId=function(t){this.checkBeforeSetKey(),this._config.client.client_id=t},t.prototype.getService=function(t){return this.repo_.getService(t,this,this.name_)},t.prototype.setCustomCredentialsProvider=function(t){return t?t.getToken?1!=t.getToken.length?(a.error("the customCredentialsProvider getToken method must contain single parameter：forceRefresh."),!1):(this._customCredentialsProvider=t,!0):(a.error("the customCredentialsProvider must contain getToken method."),!1):(this._customCredentialsProvider=t,!0)},t.prototype.setCustomAuthProvider=function(t){return t?t.getToken?1!=t.getToken.length?(a.error("the customAuthProvider getToken method must contain single parameter：forceRefresh."),!1):(this._customAuthProvider=t,!0):(a.error("the customAuthProvider must contain getToken method."),!1):(this._customAuthProvider=t,!0)},t.prototype.getCustomCredentialsProvider=function(){return this._customCredentialsProvider},t.prototype.getCustomAuthProvider=function(){return this._customAuthProvider},t.prototype.setCryptImp=function(t){return t?t.decrypt&&t.decrypt instanceof Function&&t.encrypt&&t.encrypt instanceof Function?(this.cryptImpl=t,!0):(a.error("the crypt is not exist necessary methods."),!1):(a.error("the crypt is not available."),!1)},t.prototype.setAppVersion=function(t){this.appVersion=t},t.prototype.setOption=function(t){this.option=t},t.prototype.addHttpToUrl=function(t){return t&&!t.startsWith("https://")?"https://"+t:t},t.prototype.getGwUrl=function(){return null!=this.option?this.option.routePolicy==Number(1)?this.addHttpToUrl(this._config.agcgw_all.CN):this.option.routePolicy==Number(2)?this.addHttpToUrl(this._config.agcgw_all.DE):this.option.routePolicy==Number(3)?this.addHttpToUrl(this._config.agcgw_all.RU):this.option.routePolicy==Number(4)?this.addHttpToUrl(this._config.agcgw_all.SG):this.addHttpToUrl(this._config.agcgw.url):this.addHttpToUrl(this._config.agcgw.url)},t.prototype.getGwBackUrl=function(){return null!=this.option?1==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.CN_back):2==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.DE_back):3==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.RU_back):4==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.SG_back):this.addHttpToUrl(this._config.agcgw.backurl):this.addHttpToUrl(this._config.agcgw.backurl)},t.prototype.getAppVersion=function(){return this.appVersion},t.prototype.getCryptImp=function(){return this.cryptImpl},t.prototype.checkBeforeSetKey=function(){if(null==this._config)throw new c(p.AGC_INIT_ERROR,{message:"AGCInstance not configurated. call agconnect.instance().configInstance() to configure the agconnect."},"instance");if(!this._config.agcgw||!this._config.client)throw new c(p.AGC_INIT_ERROR,{message:"AGCInstance config is invalid."},"instance")},t}(),u=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=""),this.code=t,this.msg=e}return t.prototype.getCode=function(){return this.code},t.prototype.setCode=function(t){this.code=t},t.prototype.getMsg=function(){return this.msg},t.prototype.setMsg=function(t){this.msg=t},t}(),h=function(){function t(){this.ret=new u}return t.prototype.isSuccess=function(){return null!=this.ret&&0==this.ret.getCode()},t.prototype.getRet=function(){return this.ret},t.prototype.setRet=function(t){this.ret=t},t.prototype.constructResponse=function(t){},t}(),l=new _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__.InstanceMap((function(e){return new g(_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"],e[0])}));!function(t){t[t.UNKNOWN=0]="UNKNOWN",t[t.CHINA=1]="CHINA",t[t.GERMANY=2]="GERMANY",t[t.RUSSIA=3]="RUSSIA",t[t.SINGAPORE=4]="SINGAPORE"}(i||(i={})),s={AGCRoutePolicy:i},_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"].registerApiProvider("instance",(function(t){return l.get(t)}),s);


/***/ }),

/***/ "./node_modules/@hw-agconnect/log/dist/index.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/@hw-agconnect/log/dist/index.esm.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogLevel": () => (/* binding */ r),
/* harmony export */   "Logger": () => (/* binding */ e),
/* harmony export */   "setGlobalLogLevel": () => (/* binding */ t),
/* harmony export */   "setGlobalUserLogHandler": () => (/* binding */ n)
/* harmony export */ });
var o,r;!function(o){o[o.DEBUG=0]="DEBUG",o[o.VERBOSE=1]="VERBOSE",o[o.INFO=2]="INFO",o[o.WARN=3]="WARN",o[o.ERROR=4]="ERROR",o[o.SILENT=5]="SILENT"}(r||(r={}));var e=function(){function e(){var o=this;this.moduleName="",this.logLevel=r.VERBOSE,this.userLogProvider=null,this.logProvider=function(r,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];if(!(t<o.logLevel)){var g=e.consoleType[t];if(!g)throw new Error("invalid logType: ".concat(t));console[g]("[Module:".concat(r,"] [").concat((new Date).toISOString(),"] | "),n.toString())}}}return e.createLogger=function(o){for(var r=0,t=e.logInstanceArray;r<t.length;r++){var n=t[r];if(n.moduleName==o)return n}var i=new e;return i.moduleName=o,e.logInstanceArray.push(i),i},e.prototype.setLogProvider=function(o){if("function"!=typeof o)throw new Error("logProvider must be set as a function");this.logProvider=o},e.prototype.setUserLogProvider=function(o){this.userLogProvider=o},e.prototype.debug=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];this.doLog(r.DEBUG,o)},e.prototype.log=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];this.doLog(r.VERBOSE,o)},e.prototype.info=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];this.doLog(r.INFO,o)},e.prototype.warn=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];this.doLog(r.WARN,o)},e.prototype.error=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];this.doLog(r.ERROR,o)},e.prototype.doLog=function(o){for(var r=[],e=1;e<arguments.length;e++)r[e-1]=arguments[e];this.userLogProvider&&this.userLogProvider(this.moduleName,o,r),this.logProvider(this.moduleName,o,r)},e.consoleType=((o={})[r.DEBUG]="log",o[r.VERBOSE]="log",o[r.SILENT]="log",o[r.INFO]="info",o[r.WARN]="warn",o[r.ERROR]="error",o),e.logInstanceArray=[],e}();function t(o){for(var r=0,t=e.logInstanceArray;r<t.length;r++){t[r].logLevel=o}}function n(o){for(var r=function(r){o?r.setUserLogProvider((function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];t<r.logLevel||o(e,t,n)})):r.setUserLogProvider(null)},t=0,n=e.logInstanceArray;t<n.length;t++){r(n[t])}}


/***/ }),

/***/ "./node_modules/@hw-agconnect/network/dist/index.quickapp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@hw-agconnect/network/dist/index.quickapp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hw-agconnect/log */ "./node_modules/@hw-agconnect/log/dist/index.esm.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hw-agconnect/instance */ "./node_modules/@hw-agconnect/instance/dist/index.esm.js");

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}function i(e,t,o,s){return new(o||(o=Promise))((function(a,r){function n(e){try{u(s.next(e))}catch(e){r(e)}}function i(e){try{u(s.throw(e))}catch(e){r(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(n,i)}u((s=s.apply(e,t||[])).next())}))}function u(e,t){var o,s,a,r,n={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function i(r){return function(i){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;n;)try{if(o=1,s&&(a=2&r[0]?s.return:r[0]?s.throw||((a=s.return)&&a.call(s),0):s.next)&&!(a=a.call(s,r[1])).done)return a;switch(s=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return n.label++,{value:r[1],done:!1};case 5:n.label++,s=r[1],r=[0];continue;case 7:r=n.ops.pop(),n.trys.pop();continue;default:if(!(a=n.trys,(a=a.length>0&&a[a.length-1])||6!==r[0]&&2!==r[0])){n=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){n.label=r[1];break}if(6===r[0]&&n.label<a[1]){n.label=a[1],a=r;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(r);break}a[2]&&n.ops.pop(),n.trys.pop();continue}r=t.call(e,n)}catch(e){r=[6,e],s=0}finally{o=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,i])}}}var d=function(){function e(){}return e.prototype.getPlatform=function(){return""},e.prototype.getPlatformVersion=function(){return""},e.prototype.getPackageName=function(){return""},e.prototype.getAppVersion=function(){return""},e.prototype.getLanguage=function(){return""},e.prototype.getScript=function(){return""},e.prototype.getCountry=function(){return""},e.prototype.getSystemInfo=function(){return{name:"",version:""}},e.prototype.getBrowsersInfo=function(){return{name:"",version:""}},e}(),c=$app_require$("@app-module/system.configuration"),l=$app_require$("@app-module/system.app"),p=$app_require$("@app-module/system.device"),f="",h=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("QuickApp");p.getInfo({success:function(e){var t=e;f="android"==t.osType?"Android "+t.osVersionName:t.osType+" "+t.osVersionName},fail:function(e,t){h.warn("Failed to obtain device information. Error code:"+t+"; Error information: "+e)}});var k=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.getPlatform=function(){return"JS-SDK-QuickApp"},t.prototype.getPlatformVersion=function(){return f},t.prototype.getPackageName=function(){return l.getInfo().packageName},t.prototype.getAppVersion=function(){return l.getInfo().versionName},t.prototype.getLanguage=function(){return c.getLocale().language},t.prototype.getCountry=function(){return c.getLocale().countryOrRegion},t}(d),w=function(e){function t(t){var s=e.call(this)||this;return s.CancelToken=void 0,(axios__WEBPACK_IMPORTED_MODULE_2___default().defaults.timeout)=7e4,s.CancelToken=(axios__WEBPACK_IMPORTED_MODULE_2___default().CancelToken),null==t&&null==t||((axios__WEBPACK_IMPORTED_MODULE_2___default().defaults.adapter)=t),s}return n(t,e),t.prototype.getAxiosIns=function(){return (axios__WEBPACK_IMPORTED_MODULE_2___default())},t.prototype.sendRequest=function(e,t,r,n,d){return i(this,void 0,void 0,(function(){var i,c;return u(this,(function(u){switch(u.label){case 0:return this.checkParam(t)?(i={url:t,method:e,transformResponse:null==d?void 0:d.transformResponse,headers:n,timeout:null==d?void 0:d.timeout,responseType:null==d?void 0:d.responseType,onUploadProgress:null==d?void 0:d.onUploadProgress,onDownloadProgress:null==d?void 0:d.onDownloadProgress,validateStatus:null==d?void 0:d.validateStatus,cancelToken:null==d?void 0:d.cancelToken},"PUT"!=e&&"POST"!=e||(i.data=r),"GET"!=e&&"DELETE"!=e||(i.params=r),d&&d.throwOriginException?[2,axios__WEBPACK_IMPORTED_MODULE_2___default().request(i)]:[4,axios__WEBPACK_IMPORTED_MODULE_2___default().request(i).catch((function(e){return Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.NETWORK_REQUEST_ERROR,e,"network"))}))]):[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.NETWORK_REQUEST_ERROR,{message:"url is illegal"},"network"))];case 1:return c=u.sent(),[2,Promise.resolve(c)]}}))}))},t}(function(){function e(){this.CancelToken=void 0}return e.prototype.post=function(e,t,o,s){return this.sendRequest("POST",e,t,o,s)},e.prototype.get=function(e,t,o,s){return this.sendRequest("GET",e,t,o,s)},e.prototype.delete=function(e,t,o,s){return this.sendRequest("DELETE",e,t,o,s)},e.prototype.put=function(e,t,o,s){return this.sendRequest("PUT",e,t,o,s)},e.prototype.checkParam=function(e){return!(!e||e.match(/\s/g)||!e.match(/^(ht)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?/))},e}()),g=$app_require$("@app-module/system.fetch");function T(e){var o=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCNetworkService");return new Promise((function(t,s){var a=null;"PUT"!=e.method&&"POST"!=e.method&&"put"!=e.method&&"post"!=e.method||(a=e.data),"GET"!=e.method&&"DELETE"!=e.method&&"get"!=e.method&&"delete"!=e.method||(a=e.params),g.fetch({url:e.url,data:a,header:e.headers,responseType:e.responseType,method:e.method,success:function(o){var a={data:o.data,status:o.code,statusText:o.statusText,headers:o.headers};if(null!=e.validateStatus)if(!o.code||e.validateStatus(o.code))t(a);else{var r=new Error("Request failed with status code "+o.code);r.code=o.code,r.response=a,s(r)}else t(a)},fail:function(e,t){o.log("quick app fetch fail code : "+t);var a=new Error("Request failed with status code : "+t+" statusText : "+e.statusText);a.code=t,a.response={data:e.data,status:t,statusText:e.statusText,headers:null},s(a)}})}))}var y=function(){function e(){this.logger=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCWebSocketService")}return e.prototype.getReadyState=function(){return this.websocket?Number(this.websocket.readyState):null},e.prototype.send=function(e,t,o){try{if(this.websocket){if(this.websocket.send(e),t)return t()}else if(o)return o()}catch(e){if(this.logger.error(e),o)return o()}},e.prototype.close=function(e,t,o,s){try{if(this.websocket){if(this.websocket.close(e,t),o)return o()}else if(s)return s()}catch(e){if(this.logger.error(e),s)return s()}},e.prototype.onOpen=function(e){if(!this.websocket)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket connect fail"},"network");this.websocket.onopen=e},e.prototype.onMessage=function(e){if(!this.websocket)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket connect fail"},"network");this.websocket.onmessage=function(t){e&&e(t.data)}},e.prototype.onClose=function(e){if(!this.websocket)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket connect fail"},"network");this.websocket.onclose=function(t){e&&e(t.code,t.reason,t.wasClean)}},e.prototype.onError=function(e){if(!this.websocket)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket connect fail"},"network");this.websocket.onerror=function(t){e&&e(t)}},e}(),v=$app_require$("@app-module/system.websocketfactory"),m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.connect=function(e,t,o){return i(this,void 0,void 0,(function(){return u(this,(function(r){return this.websocket&&(this.websocket.close(),this.websocket=null),this.websocket=v.create({url:e,header:t,protocols:o}),this.websocket?[2,Promise.resolve()]:[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket create failed"},"network"))]}))}))},t.prototype.getReadyState=function(){return this.logger.warn("getReadyState not support"),null},t.prototype.send=function(e,t,o){this.websocket?this.websocket.send({data:e,success:t,fail:o}):o&&o()},t.prototype.close=function(e,t,o,s){this.websocket?this.websocket.close({code:e,reason:t,success:o,fail:s}):s&&s()},t.prototype.onError=function(e){if(!this.websocket)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.WEBSOCKET_ERROR,{message:"webSocket connect fail"},"network");this.websocket.onerror=function(t){e&&e(t.data)}},t}(y),q=$app_require$("@app-module/system.downloadtask"),R=function(){function e(){this.logger=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCFileTransloadService"),this.task=void 0}return e.prototype.downloadWithTask=function(e){var t=this;return new Promise((function(o,s){t.task=q.downloadFile({url:e.url,header:e.header,filename:e.filename,timeout:e.timeout,success:function(t){var a={header:t.header,filePath:t.filePath,status:t.statusCode,statusText:t.statusText};null!=e.validateStatus?e.validateStatus(t.statusCode)?o(a):s({code:t.statusCode,message:"downloadtask request failed with status code "+t.statusCode,response:{header:t.header,filePath:t.filePath,status:t.statusCode,statusText:t.statusText}}):o(a)},fail:function(e,t){s({code:t,message:e.statusText,response:{header:e.header,filePath:e.filePath,status:e.statusCode,statusText:e.statusText}})}})}))},e.prototype.onProgressUpdate=function(e){null!=this.task?this.task.onProgressUpdate(e):this.logger.error("please make sure you have called downloadWithTask function")},e.prototype.offProgressUpdate=function(){null!=this.task?this.task.offProgressUpdate():this.logger.error("please make sure you have called downloadWithTask function")},e.prototype.onHeadersReceived=function(e){null!=this.task?this.task.onHeadersReceived(e):this.logger.error("please make sure you have called downloadWithTask function")},e.prototype.offHeadersReceived=function(){null!=this.task?this.task.offHeadersReceived():this.logger.error("please make sure you have called downloadWithTask function")},e.prototype.abort=function(){null!=this.task?this.task.abort():this.logger.error("please make sure you have called downloadWithTask function")},e}(),b=$app_require$("@app-module/system.request"),P=function(){function e(){this.logger=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCFileTransloadService")}return e.prototype.upload=function(e){var t=this;return new Promise((function(o,s){b.upload({url:e.url,header:e.header,method:e.method,files:e.files,data:e.data,success:function(a){var r=a.data;if("string"==typeof a.data)try{r=JSON.parse(a.data)}catch(e){t.logger.error("upload result cannot be parsed to JSON")}var n={data:r,status:a.code,statusText:a.statusText,headers:a.headers};null!=e.validateStatus?e.validateStatus(a.code)?o(n):s({code:a.code,message:"upload request failed with status code "+a.code,response:{data:r,status:a.code,statusText:a.statusText,headers:a.headers}}):o(n)},fail:function(e,t){s({code:t,message:e.statusText,response:{data:e.data,status:t,statusText:e.statusText,headers:e.headers}})}})}))},e.prototype.download=function(e){return new Promise((function(t,o){b.download({url:e.url,header:e.header,description:e.description,filename:e.filename,success:function(s){var a={token:s.token,status:s.code};null!=e.validateStatus?e.validateStatus(s.code)?t(a):o({code:s.code,message:"download request failed with status code "+s.code,response:{data:s.token,status:s.code,statusText:s.statusText}}):t(a)},fail:function(e,t){o({code:t,message:e.statusText,response:{data:e.token,status:t,statusText:e.statusText}})}})}))},e.prototype.onDownloadComplete=function(e){return new Promise((function(t,o){b.onDownloadComplete({token:e.token,success:function(s){var a={uri:s.uri,status:s.code};null!=e.validateStatus?e.validateStatus(s.code)?t(a):o({code:s.code,message:"onDownloadComplete request failed with status code "+s.code,response:{data:s.uri,status:s.code,statusText:s.statusText}}):t(a)},fail:function(e,t){o({code:t,message:e.statusText,response:{data:e.uri,status:t,statusText:e.statusText}})}})}))},e}(),S=$app_require$("@app-module/system.requesttask"),x=function(){function e(){this.logger=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCFileTransloadService"),this.task=void 0}return e.prototype.request=function(e){var t=this;return new Promise((function(o,s){t.task=S.request({url:e.url,data:e.data,header:e.header,method:e.method,responseType:e.responseType,timeout:e.timeout,success:function(t){var a=t.data;if("string"==typeof t.data)try{a=JSON.parse(t.data)}catch(e){}var r={data:a,status:t.statusCode,statusText:t.statusText,header:t.header};null!=e.validateStatus?e.validateStatus(t.statusCode)?o(r):s({code:t.statusCode,message:"requesttask request failed with status code "+t.statusCode,response:{data:a,status:t.statusCode,statusText:t.statusText,header:t.header}}):o(r)},fail:function(e,t){s({code:t,message:e.statusText,response:{data:e.data,status:t,statusText:e.statusText,header:e.header}})}})}))},e.prototype.onProgressUpdate=function(e){null!=this.task?this.task.onProgressUpdate(e):this.logger.error("please make sure you have called request function")},e.prototype.offProgressUpdate=function(){null!=this.task?this.task.offProgressUpdate():this.logger.error("please make sure you have called request function")},e.prototype.onHeadersReceived=function(e){null!=this.task?this.task.onHeadersReceived(e):this.logger.error("please make sure you have called request function")},e.prototype.offHeadersReceived=function(){null!=this.task?this.task.offHeadersReceived():this.logger.error("please make sure you have called request function")},e.prototype.abort=function(){null!=this.task?this.task.abort():this.logger.error("please make sure you have called request function")},e}(),I=$app_require$("@app-module/system.uploadtask"),E=function(){function e(){this.logger=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_1__.Logger.createLogger("AGCFileTransloadService"),this.task=void 0}return e.prototype.uploadWithTask=function(e){var t=this;return new Promise((function(o,s){t.task=I.uploadFile({url:e.url,method:e.method,files:e.files,data:e.data,timeout:e.timeout,success:function(t){var a=t.data;if("string"==typeof t.data)try{a=JSON.parse(t.data)}catch(e){}var r={data:a,status:t.statusCode,statusText:t.statusText,headers:t.headers};null!=e.validateStatus?e.validateStatus(t.statusCode)?o(r):s({code:t.statusCode,message:"uploadtask request failed with status code "+t.statusCode,response:{data:a,status:t.statusCode,statusText:t.statusText,headers:t.headers}}):o(r)},fail:function(e,t){s({code:t,message:e.statusText,response:{data:e.data,status:t,statusText:e.statusText,headers:e.headers}})}})}))},e.prototype.onProgressUpdate=function(e){null!=this.task?this.task.onProgressUpdate(e):this.logger.error("please make sure you have called uploadWithTask function")},e.prototype.offProgressUpdate=function(){null!=this.task?this.task.offProgressUpdate():this.logger.error("please make sure you have called uploadWithTask function")},e.prototype.onHeadersReceived=function(e){null!=this.task?this.task.onHeadersReceived(e):this.logger.error("please make sure you have called uploadWithTask function")},e.prototype.offHeadersReceived=function(){null!=this.task?this.task.offHeadersReceived():this.logger.error("please make sure you have called uploadWithTask function")},e.prototype.abort=function(){null!=this.task?this.task.abort():this.logger.error("please make sure you have called uploadWithTask function")},e}(),C=function(){function e(){this.quickAppReq=void 0,this.uploadTaskIns=void 0,this.downloadTaskIns=void 0,this.reqTask=void 0}return e.prototype.upload=function(e){return this.quickAppReq||(this.quickAppReq=new P),this.quickAppReq.upload(e)},e.prototype.download=function(e){return this.quickAppReq||(this.quickAppReq=new P),this.quickAppReq.download(e)},e.prototype.onDownloadComplete=function(e){return this.quickAppReq||(this.quickAppReq=new P),this.quickAppReq.onDownloadComplete(e)},e.prototype.downloadWithTask=function(e){return this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.downloadWithTask(e)},e.prototype.downloadtaskOnProgressUpdate=function(e){this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.onProgressUpdate(e)},e.prototype.downloadtaskOnHeadersReceived=function(e){this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.onHeadersReceived(e)},e.prototype.downloadtaskOffProgressUpdate=function(){this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.offProgressUpdate()},e.prototype.downloadtaskOffHeadersReceived=function(){this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.offHeadersReceived()},e.prototype.downloadtaskAbort=function(){this.downloadTaskIns||(this.downloadTaskIns=new R),this.downloadTaskIns.abort()},e.prototype.uploadWithTask=function(e){return this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.uploadWithTask(e)},e.prototype.uploadtaskOnProgressUpdate=function(e){this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.onProgressUpdate(e)},e.prototype.uploadtaskOnHeadersReceived=function(e){this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.onHeadersReceived(e)},e.prototype.uploadtaskOffProgressUpdate=function(){this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.offProgressUpdate()},e.prototype.uploadtaskOffHeadersReceived=function(){this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.offHeadersReceived()},e.prototype.uploadtaskAbort=function(){this.uploadTaskIns||(this.uploadTaskIns=new E),this.uploadTaskIns.abort()},e.prototype.request=function(e){return this.reqTask||(this.reqTask=new x),this.reqTask.request(e)},e.prototype.requestOnProgressUpdate=function(e){this.reqTask||(this.reqTask=new x),this.reqTask.onProgressUpdate(e)},e.prototype.requestOnHeadersReceived=function(e){this.reqTask||(this.reqTask=new x),this.reqTask.onHeadersReceived(e)},e.prototype.requestOffProgressUpdate=function(){this.reqTask||(this.reqTask=new x),this.reqTask.offProgressUpdate()},e.prototype.requestOffHeadersReceived=function(){this.reqTask||(this.reqTask=new x),this.reqTask.offHeadersReceived()},e.prototype.requestAbort=function(){this.reqTask||(this.reqTask=new x),this.reqTask.abort()},e}();var O=_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"];O.registerInternalService({name:"AGCNetworkService",serviceFactory:function(e){return new w(T)}}),O.registerInternalService({name:"AGCWebSocketService",serviceFactory:function(e){return new m}}),O.registerInternalService({name:"AGCPlatformInfoService",serviceFactory:function(e){return new k}}),O.registerInternalService({name:"AGCFileTransloadService",serviceFactory:function(e){return new C}});


/***/ }),

/***/ "./node_modules/@hw-agconnect/storage/dist/index.quickapp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@hw-agconnect/storage/dist/index.quickapp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hw-agconnect/core */ "./node_modules/@hw-agconnect/core/dist/index.esm.js");
var n=function(){function t(t){this.encryptImpl=void 0,this.encryptImpl=t}return t.prototype.setEncryptImp=function(t){this.encryptImpl=t},t.prototype.decrypt=function(t){return null!=this.encryptImpl&&null!=this.encryptImpl&&null!=t&&null!=t?this.encryptImpl.decrypt(t):t},t.prototype.encrypt=function(t){return null!=this.encryptImpl&&null!=this.encryptImpl&&null!=t&&null!=t?this.encryptImpl.encrypt(t):t},t}(),r=$app_require$("@app-module/system.storage"),c=function(){function t(){this.agcCryptImpl=new n}return t.getInstance=function(e,n){!t.quickAppStoreMap.has(e)&&t.quickAppStoreMap.get(e)||t.quickAppStoreMap.set(e,new t);var r=t.quickAppStoreMap.get(e);return r.agcCryptImpl.setEncryptImp(n),r},t.prototype.get=function(t){var e=this;return new Promise((function(n,c){r.get({key:t,default:null,success:function(t){n(t&&""!=t?e.agcCryptImpl.decrypt(t):null)},fail:function(t,e){c(t)}})}))},t.prototype.remove=function(t){return new Promise((function(e,n){r.delete({key:t,success:function(t){e()},fail:function(t,r){200==r?e():n(t)}})}))},t.prototype.set=function(t,e){var n=this;return new Promise((function(c,p){r.set({key:t,value:n.agcCryptImpl.encrypt(e),success:function(t){c(t)},fail:function(t,e){p(t)}})}))},t.quickAppStoreMap=new Map,t}(),p=function(){function t(t){this.name=_hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CATEGORY,t&&(this.name=t)}return t.prototype.getStorageInstance=function(t,e){return c.getInstance(this.name,e)},t.prototype.createPersistentStorage=function(){return c.getInstance(this.name)},t.prototype.createTemporaryStorage=function(){return c.getInstance(this.name)},t.prototype.createMemoryStorage=function(){return c.getInstance(this.name)},t}();_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"].registerInternalService({name:"AGCStorageService",serviceFactory:function(t){return new p(t.name())}});


/***/ }),

/***/ "./node_modules/@hw-agconnect/util/dist/index.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@hw-agconnect/util/dist/index.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EnvironmentUtil": () => (/* binding */ l),
/* harmony export */   "ObserverUtil": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hw-agconnect/core */ "./node_modules/@hw-agconnect/core/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hw-agconnect/instance */ "./node_modules/@hw-agconnect/instance/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hw-agconnect/storage */ "./node_modules/@hw-agconnect/storage/dist/index.quickapp.js");
/* harmony import */ var _hw_agconnect_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hw-agconnect/log */ "./node_modules/@hw-agconnect/log/dist/index.esm.js");

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function i(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function c(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}s((r=r.apply(e,t||[])).next())}))}function a(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(i){return function(c){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,c])}}}var c,s=function(){function e(){this.storageImpl=void 0}return e.prototype.getAaid=function(c){return i(this,void 0,void 0,(function(){var i,s,l,u,f;return a(this,(function(a){switch(a.label){case 0:i=_hw_agconnect_log__WEBPACK_IMPORTED_MODULE_4__.Logger.createLogger("ClientInfoService"),a.label=1;case 1:return a.trys.push([1,5,,6]),s="agcAaid_"+c.name()+":"+c.config().client.client_id,c.name()===_hw_agconnect_core__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CATEGORY&&(s="agcAaid:"+c.config().client.client_id),null==(l=c.getService("AGCStorageService"))?(i.error("Get AGC storage Service failed."),[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCErrorCode.GET_AAID_ERROR,{message:"get AGC storage Service failed"},"util"))]):(this.storageImpl||(this.storageImpl=l.getStorageInstance(e.persistence)),[4,this.storageImpl.get(s).catch((function(e){return i.error("get aaid failed",e.message),Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCErrorCode.GET_AAID_ERROR,{message:"get aaid from storage failed"},"util"))}))]);case 2:return null!=(u=a.sent())&&null!=u&&""!=u?[3,4]:(u=this.getRandomString(),[4,this.storageImpl.set(s,u).catch((function(e){return i.error("get aaid failed",e.message),Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCErrorCode.GET_AAID_ERROR,{message:"save aaid to storage failed"},"util"))}))]);case 3:a.sent(),a.label=4;case 4:return[2,u];case 5:return f=a.sent(),i.error("get aaid failed",f.message),[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_2__.AGCErrorCode.GET_AAID_ERROR,f,"util"))];case 6:return[2]}}))}))},e.prototype.getRandomString=function(){var e="0123456789abcdef",t=e.length;return"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".replace(/x/g,(function(){return e.charAt(Math.floor(Math.random()*t))}))},e.persistence=0,e.INSTANCE=new e,e}(),l=function(){function e(){}return e.getEnvironmentIns=function(){return e.instance},e.prototype.isBrowser=function(){return"object"==typeof self&&self.self===self},e.prototype.isNodeJS=function(){try{return"[object process]"===Object.prototype.toString.call(global.process)}catch(e){return!1}},e.prototype.isReactNative=function(){return"object"==typeof navigator&&"ReactNative"===navigator.product},e.prototype.isQuickApp=function(){try{return global&&"fastapp"in global}catch(e){return!1}},e.instance=new e,e}(),u=function(){function t(t){this.instance=t||_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"].instance()}return t.prototype.getAaid=function(){return s.INSTANCE.getAaid(this.instance)},t.prototype.getEnvironmentUtil=function(){return l.getEnvironmentIns()},t}();function f(e){return null!=e}!function(e){var t=function(e,t,n){if("function"==typeof e||f(t)||f(n))this.next=e,this.error=t||null,this.complete=n||null;else{var r=e;this.next=r.next||null,this.error=r.error||null,this.complete=r.complete||null}};e.ObserverImpl=t}(c||(c={})),_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_0__["default"].registerInternalService({name:"ClientInfoService",serviceFactory:function(e){return new u(e)}});


/***/ }),

/***/ "./node_modules/@hw-hmscore/analytics-sdk-quickapp/index.quickapp.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@hw-hmscore/analytics-sdk-quickapp/index.quickapp.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hw-agconnect/core */ "./node_modules/@hw-agconnect/core/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js");
/* harmony import */ var _hw_hmscore_hms_js_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hw-hmscore/hms-js-base */ "./node_modules/@hw-hmscore/hms-js-base/src/index.js");
/* harmony import */ var _hw_hmscore_hms_js_base__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_hw_hmscore_hms_js_base__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hw-agconnect/instance */ "./node_modules/@hw-agconnect/instance/dist/index.esm.js");
/* harmony import */ var _hw_agconnect_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hw-agconnect/storage */ "./node_modules/@hw-agconnect/storage/dist/index.quickapp.js");
/* harmony import */ var _hw_agconnect_network__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @hw-agconnect/network */ "./node_modules/@hw-agconnect/network/dist/index.quickapp.js");
/* harmony import */ var _hw_agconnect_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @hw-agconnect/util */ "./node_modules/@hw-agconnect/util/dist/index.esm.js");
var r = $app_require$("@app-module/system.shortcut");;var{fetch:o}= $app_require$("@app-module/system.fetch");;var a = $app_require$("@app-module/system.app");;var s = $app_require$("@app-module/system.device");;var c = $app_require$("@app-module/system.storage");;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */var d=function(e,t){return(d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function p(e,t){function n(){this.constructor=e}d(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function h(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function s(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(a,s)}c((i=i.apply(e,t||[])).next())}))}function f(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}var g,E="header",v="events_common",C="events",T="event",S="debugMode",y="routePolicy",I="terminalName",A="App-Id",m="App-Ver",P="Sdk-Name",N="Device-Type",O="servicetag",R="Package-Name",L="Request-Id",$="x-hasdk-debug",_="x-hasdk-token",D="x-hasdk-log-region",U="x-hasdk-resourceid",M="x-hasdk-productid",k="x-hasdk-clientid",w="_openness_log_tag",H="_openness_config_tag",b="$StartType",V="$StartScene",F="$PrevActivityName",G="$PrevActivityId",Y="$CurActivityName",B="$CurActivityId",W="$PrePageId",K="$CurrPageId",x="$Duration",j=64,J=100,q=128,Q=256,X=4096,z=2048,Z=100,ee=204800,te=50,ne=25,ie=/^[a-zA-Z_$][A-Za-z0-9_]*$/,re=/^[a-zA-Z][A-Za-z0-9_]*$/,oe=/^[a-zA-Z_$][A-Za-z0-9_]*$/,ae={value:5e3,label:"5s"},se={value:18e6,label:"5h"};!function(e){e[e.BEACON=1]="BEACON",e[e.AJAX=2]="AJAX",e[e.IMG=3]="IMG",e[e.WXREQUEST=4]="WXREQUEST"}(g||(g={}));var ce,ue,le=0,de=1,pe=2,he=3,fe=5,ge="0",Ee="1",ve=1,Ce=60,Te=30,Se=1e3;!function(e){e.AES_CBC_NETWORK="AES_CBC_NETWORK",e.AES_CBC_STORAGE="AES_CBC_STORAGE"}(ce||(ce={})),function(e){e.APP_ID="appId",e.PKG_NAME="packageName",e.ANALYTICS_URL="analyticsUrl"}(ue||(ue={}));var ye="HW_ha_eventSessionName",Ie="HW_ha_analyticsEnabled",Ae="HW_ha_restrictionEnabled",me="HW_ha_restrictionShared",Pe="HW_ha_serverOaidFlag",Ne="HW_ha_isFirstRun",Oe={CN:"HW_ha_pubKeyCN",DE:"HW_ha_pubKeyDE",RU:"HW_ha_pubKeyRU",SG:"HW_ha_pubKeySG"},Re={CN:"HW_ha_workKeyCN",DE:"HW_ha_workKeyDE",RU:"HW_ha_workKeyRU",SG:"HW_ha_workKeySG"},Le={CREATEPAYMENTINFO:"$CreatePaymentInfo",ADDPRODUCT2CART:"$AddProduct2Cart",ADDPRODUCT2WISHLIST:"$AddProduct2WishList",STARTAPP:"$StartApp",STARTCHECKOUT:"$StartCheckout",VIEWCAMPAIGN:"$ViewCampaign",VIEWCHECKOUTSTEP:"$ViewCheckoutStep",WINVIRTUALCOIN:"$WinVirtualCoin",COMPLETEPURCHASE:"$CompletePurchase",OBTAINLEADS:"$ObtainLeads",JOINUSERGROUP:"$JoinUserGroup",COMPLETELEVEL:"$CompleteLevel",STARTLEVEL:"$StartLevel",UPGRADELEVEL:"$UpgradeLevel",SIGNIN:"$SignIn",SIGNOUT:"$SignOut",SUBMITSCORE:"$SubmitScore",CREATEORDER:"$CreateOrder",REFUNDORDER:"$RefundOrder",DELPRODUCTFROMCART:"$DelProductFromCart",SEARCH:"$Search",VIEWCONTENT:"$ViewContent",UPDATECHECKOUTOPTION:"$UpdateCheckoutOption",SHARECONTENT:"$ShareContent",REGISTERACCOUNT:"$RegisterAccount",CONSUMEVIRTUALCOIN:"$ConsumeVirtualCoin",STARTTUTORIAL:"$StartTutorial",COMPLETETUTORIAL:"$CompleteTutorial",OBTAINACHIEVEMENT:"$ObtainAchievement",VIEWPRODUCT:"$ViewProduct",VIEWPRODUCTLIST:"$ViewProductList",VIEWSEARCHRESULT:"$ViewSearchResult",UPDATEMEMBERSHIPLEVEL:"$UpdateMembershipLevel",FILTRATEPRODUCT:"$FiltrateProduct",VIEWCATEGORY:"$ViewCategory",UPDATEORDER:"$UpdateOrder",CANCELORDER:"$CancelOrder",COMPLETEORDER:"$CompleteOrder",CANCELCHECKOUT:"$CancelCheckout",OBTAINVOUCHER:"$ObtainVoucher",CONTACTCUSTOMSERVICE:"$ContactCustomService",NOVICEGUIDESTART:"$NoviceGuideStart",NOVICEGUIDEEND:"$NoviceGuideEnd",STARTGAME:"$StartGame",ENDGAME:"$EndGame",WINPROPS:"$WinProps",EXCHANGEGOODS:"$ExchangeGoods",VIEWHOUSELIST:"$ViewHouseList",VIEWHOUSEDETAIL:"$ViewHouseDetail",INVITE:"$Invite",RATE:"$Rate",CONSUMEPROPS:"$ConsumeProps",ADDFRIEND:"$AddFriend",ADDBLACKLIST:"$AddBlacklist",VIEWFRIENDLIST:"$ViewFriendList",QUITUSERGROUP:"$QuitUserGroup",CREATEUSERGROUP:"$CreateUserGroup",DISBANDUSERGROUP:"$DisbandUserGroup",UPGRADEUSERGROUP:"$UpgradeUserGroup",VIEWUSERGROUP:"$ViewUserGroup",JOINTEAM:"$JoinTeam",SENDMESSAGE:"$SendMessage",LEARNSKILL:"$LearnSkill",USESKILL:"$UseSkill",GETEQUIPMENT:"$GetEquipment",LOSEEQUIPMENT:"$LoseEquipment",ENHANCEEQUIPMENT:"$EnhanceEquipment",SWITCHCLASS:"$SwitchClass",ACCEPTTASK:"$AcceptTask",FINISHTASK:"$FinishTask",ATTENDACTIVITY:"$AttendActivity",FINISHCUTSCENE:"$FinishCutscene",SKIPCUTSCENE:"$SkipCutscene",GETPET:"$GetPet",LOSEPET:"$LosePet",ENHANCEPET:"$EnhancePet",GETMOUNT:"$GetMount",LOSEMOUNT:"$LoseMount",ENHANCEMOUNT:"$EnhanceMount",CREATEROLE:"$CreateRole",SIGNINROLE:"$SignInRole",SIGNOUTROLE:"$SignOutRole",STARTBATTLE:"$StartBattle",ENDBATTLE:"$EndBattle",STARTDUNGEON:"$StartDungeon",FINISHDUNGEON:"$FinishDungeon",VIEWPACKAGE:"$ViewPackage",REDEEM:"$Redeem",MODIFYSETTING:"$ModifySetting",WATCHVIDEO:"$WatchVideo",CLICKMESSAGE:"$ClickMessage",DRAWCARD:"$DrawCard",VIEWCARDLIST:"$ViewCardList",BINDACCOUNT:"$BindAccount",STARTEXERCISE:"$StartExercise",ENDEXERCISE:"$EndExercise",STARTPLAYMEDIA:"$StartPlayMedia",ENDPLAYMEDIA:"$EndPlayMedia",STARTEXAMINE:"$StartExamine",ENDEXAMINE:"$EndExamine",CHECKIN:"$CheckIn",COMPENSATION:"$Compensation",POST:"$Post",SHAREAPP:"$ShareApp",BINDDEVICE:"$BindDevice",UNBINDDEVICE:"$UnBindDevice",RESERVEMAINTENANCE:"$ReserveMaintenance",DEVICEMISSINGREPORT:"$DeviceMissingReport",MODULARCLICK:"$ModularClick",PAGEVIEW:"$PageView",STARTBOOKING:"$StartBooking",LEARNTARGET:"$LearnTarget",LANGUAGETEST:"$LanguageTest",STARTTRAINING:"$StartTraining",ENDTRAINING:"$EndTraining",REGISTERACTIVITY:"$RegisterActivity",EXITACTIVITY:"$ExitActivity",COMPLETEACTIVITY:"$CompleteActivity",FOLLOWCONTENT:"$FollowContent",ENTERACCOUNTOPENING:"$EnterAccountOpening",SUBMITACCOUNTOPENING:"$SubmitAccountOpening",BANDCARD:"$BandCard",BANKTRANSFERIN:"$BankTransferIn",BANKTRANSFEROUT:"$BankTransferOut",VIEWSTOCKDETAIL:"$ViewStockDetail",TRADESTOCKS:"$TradeStocks",VIEWFINANCEPAGE:"$ViewFinancePage",PURCHASEFINANCE:"$PurchaseFinance",REDEMPTIONFINANCE:"$RedemptionFinance",FUNDTRADING:"$FundTrading",FIXEDINVESTMENT:"$Fixedinvestment",APPLYNEW:"$ApplyNew",VIEWINFORMATIONSECTION:"$ViewInformationSection",VIEWINFORMATION:"$ViewInformation",DISPLAYVOUCHER:"$DisplayVoucher",BOOKCOURSE:"$BookCourse",LEARNCOURSES:"$LearnCourses",TRYOUT:"$Tryout",ANSWER:"$Answer",VIEWFUNDPAGE:"$ViewFundPage",CLICKPURCHASE:"$ClickPurchase",ENABLEMEMBER:"$EnableMember",CANCELMEMBER:"$CancelMember",COMMENTCONTENT:"$CommentContent",LIKECONTENT:"$LikeContent",DELETEPRODUCT2WISHLIST:"$DeleteProduct2WishList",ADCLICK:"$AdClick",ADDISPLAY:"$AdDisplay",VIPSUC:"$VipSuc",REGISTERFAILED:"$RegisterFailed",VIPCLICK:"$VipClick",VIPFAILED:"$VipFailed",IMPROVEINFORMATION:"$ImproveInformation"},$e={JOINABTASK:"$JoinABTask",FIRST_OPEN:"$AppFirstOpen",ENTER_SCREEN:"$EnterScreen",EXIT_SCREEN:"$ExitScreen",ADD_QUICK_APP:"$AddQuickApp",HA_NOTIFICATION_DISPLAY:"$HA_NOTIFICATION_DISPLAY",DisplayNotification:"$DisplayNotification",HA_NOTIFICATION_CLICK:"$HA_NOTIFICATION_CLICK",ClickNotification:"$ClickNotification",HA_NOTIFICATION_CLEAR:"$HA_NOTIFICATION_CLEAR",ClearNotification:"$ClearNotification",HA_APP_INSTALL:"$HA_APP_INSTALL",InstallApp:"$InstallApp",HA_APP_START:"$HA_APP_START",LaunchApp:"$LaunchApp",HA_APP_UPDATE:"$HA_APP_UPDATE",UpdateApp:"$UpdateApp",HA_FIRST_OPEN:"$HA_FIRST_OPEN",AppFirstOpen:"$AppFirstOpen",HA_SCREEN_ENTER:"$HA_SCREEN_ENTER",EnterScreen:"$EnterScreen",HA_SCREEN_EXIT:"$HA_SCREEN_EXIT",ExitScreen:"$ExitScreen",HA_CLEAR_DATA:"$HA_CLEAR_DATA",ClearData:"$ClearData",HA_CLEAR_CACHE:"$HA_CLEAR_CACHE",ClearCache:"$ClearCache",HA_APP_UNINSTALL:"$HA_APP_UNINSTALL",UninstallApp:"$UninstallApp",InAppPurchase:"$InAppPurchase",RequestAd:"$RequestAd",DisplayAd:"$DisplayAd",ClickAd:"$ClickAd",STOP_ANALYTICS_COLLECTION:"$StopAnalyticsCollection",AppError:"$AppError",AppPushToken:"$AppPushToken",CampaignPushClick:"$CampaignPushClick",SignIn:"$SignIn",SignOut:"$SignOut",ObtainAdAward:"$ObtainAdAward"},_e=[$e.SignIn,$e.SignOut,$e.JOINABTASK],De={};De[Le.WINVIRTUALCOIN]={VIRTUALCURRNAME:"$VirtualCurrName",LEVEL:"$Level",ENTRY:"$Entry"},De[Le.CONSUMEVIRTUALCOIN]={VIRTUALCURRNAME:"$VirtualCurrName",LEVEL:"$Level",ENTRY:"$Entry"},De[Le.COMPLETEPURCHASE]={LEVEL:"$Level",ENTRY:"$Entry",PURCHASEENTRY:"$PurchaseEntry"},De[Le.NOVICEGUIDEEND]={RESULT:"$Result"},De[Le.ENDGAME]={RESULT:"$Result",DURATION:"$Duration"},De[Le.WINPROPS]={PROPS:"$Props",LEVEL:"$Level",ENTRY:"$Entry",QUANTITY:"$Quantity"},De[Le.CONSUMEPROPS]={PROPS:"$Props",LEVEL:"$Level",ENTRY:"$Entry",QUANTITY:"$Quantity"},De[Le.ADDPRODUCT2CART]={ORDERID:"$OrderId",BRAND:"$Brand",CATEGORY:"$Category",SOURCE:"$Source",MEDIUM:"$Medium",PROMOTIONNAME:"$PromotionName",CONTENT:"$Content",KEYWORDS:"$Keywords",MATERIALNAME:"$MaterialName",MATERIALSLOT:"$MaterialSlot"};function Ue(e){return null==e||""===e}function Me(e){return!Ue(e)}function ke(e){return"string"==typeof e&&!Ue(e)}function we(e,t){if(!ke(e))return t&&t(),!1;for(var n=!1,i=(e=e.replace(/,$/gi,"")).split(","),r=0;r<i.length;r++)Ue(i[r])?t&&t(r):0===r&&(n=!0);return n}var He=new(function(){function e(){}return e.prototype.create=function(){var e=Math.floor(Math.random()*(Math.pow(2,12)-1-0+1))+0,t=Math.floor(Math.random()*(Math.pow(2,32)-1-0+1))+0,n=Math.floor(Math.random()*(Math.pow(2,16)-1-0+1))+0,i=Math.floor(Math.random()*(Math.pow(2,6)-1-0+1))+0,r=Math.floor(Math.random()*(Math.pow(2,8)-1-0+1))+0,o=(0|Math.random()*(1<<30))+(0|Math.random()*(1<<18))*(1<<30);function a(e,t,n){n=n||"0";for(var i=t-(e=String(e)).length;i>0;i>>>=1,n+=n)1&i&&(e=n+e);return e}return[a(t.toString(16),8),a(n.toString(16),4),a((16384|e).toString(16),4),a((128|i).toString(16),2),a(r.toString(16),2),a(o.toString(16),12)].join("")},e}());function be(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=!1),"object"!=typeof e)return e;if(Array.isArray(e)){for(var i=[],r=0;r<e.length;r++)-1===t.indexOf(e[r])&&i.push(be(e[r]));return i}if(null!=e&&e.constructor!==RegExp){var o={};for(var a in e)(n||"function"!=typeof e[a])&&-1===t.indexOf(a)&&(o[a]=be(e[a]));return o}return e}function Ve(e,t){return null!=e&&Object.prototype.hasOwnProperty.call(e,t)}function Fe(e,t){return-1!==e.indexOf(t)}var Ge,Ye,Be,We=new(function(){function e(){this.sessionDuration=18e5,this.minSessionDuration=3e4,this.defaultEventParams={},this.expiryTimeInfinity=-1,this.keyList=[],this.dataList={},this.initCompletedAt=0,this.initPromise=null}return e.prototype.init=function(){return h(this,void 0,void 0,(function(){var e,t,n,i,r;return f(this,(function(o){switch(o.label){case 0:return this.initPromise?[2]:[4,It.hiMigration.migrate()];case 1:return o.sent(),e=this.initKeyNameList(),t=this,[4,this.clearInvalidKey(e)];case 2:t.keyList=o.sent(),n=0,o.label=3;case 3:return n<this.keyList.length?(i=this.keyList[n],[4,It.hiStorage.getSavedObject(i)]):[3,6];case 4:if(r=o.sent()||{},!this.isValidStoredItem(r))return[3,5];-1!=this.initNoRefreshKeyList().indexOf(i)?this.dataList[i]=r:this.saveClientValue(i,r.value),o.label=5;case 5:return n++,[3,3];case 6:return this.initCompletedAt=(new Date).getTime(),It.sendTask.processEventsReceivedAfterLaunch(),[2]}}))}))},e.prototype.clearInvalidKey=function(e){return h(this,void 0,void 0,(function(){var t,n;return f(this,(function(i){switch(i.label){case 0:t=0,i.label=1;case 1:return t<e.length?(n=e[t],[4,It.hiStorage.isKeyExist(n)]):[3,4];case 2:i.sent()||(e.splice(t,1),t--),i.label=3;case 3:return t++,[3,1];case 4:return[2,e]}}))}))},e.prototype.handleSessionValue=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!1);var n=this.getSessionValue(),i=e?He.create()+"_"+(new Date).getTime():n||He.create()+"_"+(new Date).getTime(),r=It.sendTask.getCurFocusStateSessionDuration(!e&&!Ue(n)&&!t);this.saveClientValue(ye,i,r),n!==i&&(It.sendTask.upLoadService.isInit=!1)},e.prototype.getSessionValue=function(){return this.getClientValue(ye)},e.prototype.setSessionDuration=function(e){Number.isInteger(e)&&(this.sessionDuration=e,this.handleSessionValue())},e.prototype.setBackgroundSessionDuration=function(e){Number.isInteger(e)&&(this.minSessionDuration=e,this.handleSessionValue())},e.prototype.getClientExpire=function(e){var t=this;return this.isValidStoredItem(this.dataList[e],(function(){Ue(t.dataList[e])||t.removeClientValue(e)}))?this.dataList[e].expiryTime:0},e.prototype.getClientValue=function(e){var t=this;return this.isValidStoredItem(this.dataList[e],(function(){Ue(t.dataList[e])||t.removeClientValue(e)}))?this.dataList[e].value:""},e.prototype.removeClientValue=function(e){delete this.dataList[e],It.hiStorage.removeItem(e);var t=this.keyList.indexOf(e);-1!==t&&delete this.keyList[t]},e.prototype.isKeyExist=function(e){return!!this.getClientValue(e)},e.prototype.saveClientValue=function(e,t,n){this.dataList[e]={value:t,expiryTime:this.makeExpiryTime(n)},It.hiStorage.saveClientValue(e,t,n),-1==this.keyList.indexOf(e)&&this.keyList.push(e)},e.prototype.isValidStoredItem=function(e,t){return null===e||""===e||void 0===(n="string"==typeof e?JSON.parse(e):e)||isNaN(n.expiryTime)||!1===Ve(n,"value")?(t&&t(),!1):!(n.expiryTime!==this.expiryTimeInfinity&&n.expiryTime<(new Date).getTime())||(t&&t(),!1);var n},e.prototype.makeExpiryTime=function(e){var t=(new Date).getTime()+31536e6;return e&&!isNaN(e)&&e>0&&(t=(new Date).getTime()+e),t},e.prototype.initKeyNameList=function(){return["HW_ha_clientOaidFlag",Pe,"HW_ha_pushTokenFlag","HW_ha_getConfigTime",Ne,"HW_ha_isTestDevice","HW_ha_isNewUser",ye,"HW_ha_appVersion","HW_ha_saltExpire","HW_ha_wxAppId",Oe.CN,Oe.DE,Oe.RU,Oe.SG,Re.CN,Re.DE,Re.RU,Re.SG,"HW_ha_eventUploadPolicy","HW_ha_disableEvents","HW_ha_apiChannel","HW_ha_firstOpenTime","HW_ha_existShortcut","HW_ha_existUserId",Ie,me,Ae]},e.prototype.initNoRefreshKeyList=function(){return[ye,"HW_ha_saltExpire",Oe.CN,Oe.DE,Oe.RU,Oe.SG,Re.CN,Re.DE,Re.RU,Re.SG]},e}()),Ke={code:"CE-001",message:"Cannot find agcgw/url from agconnect-service.json."},xe={code:"PE-002",message:"Length of $1 exceeds the limit. Max Length is $2."},je={code:"PE-003",message:"$1 missed."},Je={code:"PE-004",message:"$1 is reserved."},qe={code:"PE-005",message:"Too many $1 parameters. Max number of parameters is $2."},Qe={code:"PE-006",message:"$1 is invalid."},Xe={code:"PE-007",message:"The size exceeds the limit, the maximum size is $1."},ze={code:"IE-004",message:"Missing agconnect sdk."},Ze={code:"IE-006",message:"The Analytics Kit is disabled."},et={code:"SE-001",message:"Failed to initialize the Analytics Kit."},tt={code:"SE-002",message:"Failed to obtain AAID from hms core sdk."},nt={code:"SE-003",message:"Failed to obtain token from agconnect sdk."},it=function(){function e(){}return e.checkString=function(e,t,n,i){return Ue(n)?(It.hiLog.warn(e,je.code,je.message,{$1:t}),!1):!(String(n).length>i)||(It.hiLog.warn(e,xe.code,xe.message,{$1:t,$2:i}),!1)},e.checkPattern=function(e,t,n,i){return!!i.test(n)||(It.hiLog.warn(e,Qe.code,Qe.message,{$1:t}),!1)},e.checkReserve=function(e,t,n,i){for(var r in i)if(n===i[r])return It.hiLog.warn(e,Je.code,Je.message,{$1:t}),!1;return!0},e.checkLength=function(e,t,n,i){return!(n>i)||(It.hiLog.warn(e,qe.code,qe.message,{$1:t,$2:i}),!1)},e.checkSwitchIsOpen=function(e,t){return!!t||(It.hiLog.warn(e,Ze.code,Ze.message),!1)},e.checkExceedMaxSize=function(e,t,n,i){return!(n>i)||(It.hiLog.warn(e,Xe.code,Xe.message,{$1:t}),!1)},e.checkEmpty=function(e,t,n){return!Ue(n)||(It.hiLog.warn(e,je.code,je.message,{$1:t}),!1)},e}(),rt="1.0",ot="web",at="hianalytics",st="Analytics",ct="aaid",ut="token",lt=new(function(){function e(){this.attributesCollectors=[]}return e.prototype.register=function(e){this.attributesCollectors.push(e)},e.prototype.collectAll=function(){return h(this,void 0,void 0,(function(){var e,t,n,i;return f(this,(function(r){switch(r.label){case 0:e={},t=0,n=this.attributesCollectors,r.label=1;case 1:return t<n.length?[4,n[t].doCollect()]:[3,4];case 2:i=r.sent(),Object.assign(e,i),r.label=3;case 3:return t++,[3,1];case 4:return[2,e]}}))}))},e.prototype.collect=function(e){return h(this,void 0,void 0,(function(){var t,n;return f(this,(function(i){switch(i.label){case 0:return t={},n={},this.attributesCollectors.some((function(t,i){return t.key===e&&(n=t,!0)})),n.doCollect?[4,n.doCollect()]:[3,2];case 1:t=i.sent(),i.label=2;case 2:return[2,t]}}))}))},e.prototype.syncCollect=function(e){return h(this,void 0,void 0,(function(){var t,n;return f(this,(function(i){switch(i.label){case 0:return t={},(n=this.attributesCollectors.find((function(t){return t.key===e})))&&n.doCollect?[4,n.doCollect()]:[3,2];case 1:t=i.sent(),i.label=2;case 2:return[2,t]}}))}))},e}()),dt=new(function(){function e(){this.tag="AaidCollector",this.key=ct,this.cache=null}return e.prototype.doCollect=function(){return h(this,void 0,void 0,(function(){var e;return f(this,(function(t){switch(t.label){case 0:return this.cache&&this.cache[this.key]?[3,2]:(this.cache=this.cache||{},[4,It.hiAgcUtil.getAaid(this.tag)]);case 1:(e=t.sent())&&(this.cache[this.key]=e),t.label=2;case 2:return[2,this.cache]}}))}))},e.prototype.getAaid=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.doCollect()];case 1:return e.sent(),[2,this.cache[ct]||""]}}))}))},e.prototype.refreshAaid=function(){return h(this,void 0,void 0,(function(){var e;return f(this,(function(t){switch(t.label){case 0:return delete this.cache[ct],[4,It.hiAgcUtil.deleteAaid()];case 1:return t.sent(),[4,this.doCollect()];case 2:return(e=t.sent())[ct]&&(vt.addConfig("aaid",e[ct]),vt.setIsTestDevice(),We.removeClientValue("HW_ha_isNewUser")),[2]}}))}))},e}()),pt=function(){function e(){}return e.parse=function(t){var n,i,r,o,a,s,c,u,l,d,p,h;if("function"==typeof URL)return new URL(t);var f={hash:"",host:"",hostname:"",href:"",origin:"",password:"",pathname:"",port:"",protocol:"",search:"",searchParams:new Map,username:""},g=t.match(/^(http:|https:)\/\/(.+[:][^/]+[@])?([^:/]+)([:]\d+)?([^#?]+)?([?])?([^#]+)?([#].+)?$/);return null==g||(g=g.map((function(e){return Ue(e)?"":e})),f.hash=null!==(n=e.parseHash(g))&&void 0!==n?n:"",f.host=null!==(i=e.parseHost(g))&&void 0!==i?i:"",f.hostname=null!==(r=e.parseHostName(g))&&void 0!==r?r:"",f.href=null!==(o=e.parseHref(g))&&void 0!==o?o:"",f.origin=null!==(a=e.parseOrigin(g))&&void 0!==a?a:"",f.password=null!==(s=e.parsePassword(g))&&void 0!==s?s:"",f.pathname=null!==(c=e.parsePathname(g))&&void 0!==c?c:"",f.port=null!==(u=e.parsePort(g))&&void 0!==u?u:"",f.protocol=null!==(l=e.parseProtocol(g))&&void 0!==l?l:"",f.search=null!==(d=e.parseSearch(g))&&void 0!==d?d:"",f.searchParams=null!==(p=e.parseSearchParams(g))&&void 0!==p?p:new Map,f.username=null!==(h=e.parseUsername(g))&&void 0!==h?h:""),f},e.parseHash=function(e){return e[8]},e.parseHost=function(e){return e[3]+e[4]},e.parseHostName=function(e){return e[3]},e.parseHref=function(e){return e[0]},e.parseOrigin=function(e){return e[1]+"//"+e[3]+e[4]},e.parsePassword=function(e){return Ue(e[2])?"":e[2].replace("@","").split(":")[1]},e.parsePathname=function(e){return e[5]},e.parsePort=function(e){return Ue(e[4])?"":e[4].replace(":","")},e.parseProtocol=function(e){return e[1]},e.parseSearch=function(e){return e[6]+e[7]},e.parseSearchParams=function(e){if(Ue(e[7]))return new Map;var t=e[7].split("&").map((function(e){return e.split("=")})),n=new Map;for(var i in t){var r=t[i];n.set(r[0],decodeURIComponent(r[1]))}return n},e.parseUsername=function(e){return Ue(e[2])?"":e[2].replace("@","").split(":")[0]},e}(),ht=new(function(){function e(){}return e.prototype.getPageIdByUrl=function(e){return e},e.prototype.removeParamValues=function(e,t){var n=this.getParams(t.urlParams),i=this.getParams(t.anchorParams),r=[],o=[];if(Object.prototype.hasOwnProperty.call(e.removeParams,"params")){var a=e.removeParams.params;for(var s in a)!0===a[s].removeValuesOnly?"search"===a[s].position?n[s]="":"anchor"===a[s].position?i[s]="":"both"===a[s].position&&(n[s]="",i[s]=""):"search"===a[s].position?r.push(s):"anchor"===a[s].position?o.push(s):"both"===a[s].position&&(r.push(s),o.push(s))}if(Ve(e.removeParams,"removeValuesOnly")&&!0===e.removeParams.removeValuesOnly){for(var s in n)-1===r.indexOf(s)&&(n[s]="");for(var s in i)-1===o.indexOf(s)&&(i[s]="")}return{urlParams:n,anchorParams:i}},e.prototype.generateParams=function(e){var t=[];for(var n in e)t.push(n+"="+e[n]);return t.join("&")},e.prototype.generatePageId=function(e){var t="";return e.protocol&&(t+=e.protocol+"//"),e.origin&&(t+=e.origin),e.path&&(t+=e.path),e.urlParams&&(t+="?"+e.urlParams),e.anchor&&(t+="#"+e.anchor,e.anchorParams&&(t+="?"+e.anchorParams)),t},e.prototype.matchUrlPatterns=function(e,t){var n=t.urlPatterns,i=t.urlSeparators,r=e;i="["+i+"]";var o=new RegExp(i);for(var a in n){for(var s=n[a],c=s.split(/\{\w+\}/g),u=0,l=0,d=!1;;){var p=r.indexOf(c[u],l);if(-1===p){d=!1;break}if(0===u&&0!==p){d=!1;break}if(l=p+c[u].length,c.length>=u&&l>r.length){d=!0;break}var h=r;c.length>u&&(h=c[u+1]);var f=r.indexOf(h,l);if(!(d=null===r.substr(l,f-l).match(o))){d=!1;break}if(u+1>=c.length){d=!0;break}u++}d&&(r=s)}return r},e.prototype.getUrlInfos=function(e){var t=pt.parse(e),n={};n.protocol=t.protocol,n.origin=t.host,n.path=t.pathname,n.urlParams=""===t.search?"":t.search.split("?")[1];var i=""===t.hash?"":t.hash.split("#")[1];return n.anchor=""===i?"":i.split("?")[0],n.anchorParams=""===i?"":i.split("?")[1],n},e.prototype.getParams=function(e){var t={};if(""===e||null==e)return t;var n=e.split("&");for(var i in n){var r={key:n[i].split("=")[0],value:n[i].split("=")[1]};t[r.key]=r.value}return t},e}());!function(e){e.OFF="OFF",e.INFO="INFO",e.WARN="WARN",e.ERROR="ERROR"}(Ge||(Ge={})),function(e){e.CN="CN",e.DE="DE",e.RU="RU",e.SG="SG"}(Ye||(Ye={})),function(e){e.ISFULLLEVEL="is_full_level",e.ISMEMBER="is_member",e.USERLEVEL="user_level"}(Be||(Be={}));var ft=new(function(){function e(){this.tag="TokenCollector",this.key=ut,this.cache=null}return e.prototype.doCollect=function(){return h(this,void 0,void 0,(function(){var e;return f(this,(function(t){switch(t.label){case 0:return this.cache=this.cache||{},[4,It.hiAgcUtil.getToken(this.tag)];case 1:return(e=t.sent())&&(this.cache[this.key]=e),[2,this.cache]}}))}))},e.prototype.getToken=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.doCollect()];case 1:return e.sent(),[2,this.cache[ut]||""]}}))}))},e}()),gt=new function(){this.debugMode=!1,this.terminalName="",this.logDisabled=!1,this.logLevel=Ge.INFO,this.routePolicy=null},Et="Cannot find valid $1 from agconnect-service.json.",vt=new(function(){function e(){this.tag="GlobalSetting",this.clientConfig={},this.serverConfig={},this.externalConfig={},this.userProfiles={},this.prevScreenName="",this.currentScreenName="",this.reportType=-1,this.pageEntryTime=0,this.logLevel=Ge.INFO,this.urlClusteringOptions={},this.campaignPushInfo=null,this.isBackground=!1,this.eventUploadPolicy={}}return e.prototype.init=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return this.updateAnalyticsUrl(),[2]}))}))},e.prototype.initDebugMode=function(e,t){vt.addConfig(S,e),e&&t?((t=t.trim()).length>30&&(It.hiLog.warn(st,xe.code,xe.message,{$1:"terminalName",$2:30}),t=t.substring(0,30)),vt.addConfig(I,t)):vt.addConfig(I,"")},e.prototype.initLogLevel=function(e,t){e?vt.logLevel=Ge.OFF:Fe(Object.keys(Ge),t.toUpperCase())?vt.logLevel=t.toUpperCase():vt.logLevel=Ge.INFO},e.prototype.initDisableEvents=function(){return h(this,void 0,void 0,(function(){var e,t,n,i;return f(this,(function(r){switch(r.label){case 0:return[4,It.hiClient.isOnline()];case 1:return r.sent()?(e="",[4,vt.getHaSdkToken()]):[2];case 2:return(t=r.sent())?(n=It.hiEncryptSendData.generateDisableEventsHttpHeader({sdkToken:t}),(i={}).method="get",i.url=vt.getConfig("analyticsUrl")+"/analytics/api/events/online",It.hiEncryptSendData.getOnlineAndDisableEvents(e,n,i).then((function(e){e.disable_evts&&We.saveClientValue("HW_ha_disableEvents",e.disable_evts)})),[2]):[2]}}))}))},e.prototype.initServerOaidFlag=function(){return h(this,void 0,void 0,(function(){var e,t,n,i;return f(this,(function(r){switch(r.label){case 0:return vt.getRoutePolicy()!==Ye.DE?[2,!0]:Me(e=We.getClientValue("HW_ha_getConfigTime"))&&Date.now()-Number(e)<=864e5?(t=We.getClientValue(Pe)||"false",[2,Promise.resolve("true"===t)]):(n="",[4,vt.getHaSdkToken()]);case 1:return(i=r.sent())?[2,new Promise((function(e,t){var r=It.hiEncryptSendData.generateOaidFlagHttpHeader({sdkToken:i}),o={method:"get"};o.url=vt.getConfig("analyticsUrl")+"/analytics/api/config?config_key=oaid_flag",It.hiEncryptSendData.getServerOaidFlag(n,r,o).then((function(t){var n;We.saveClientValue("HW_ha_getConfigTime",String(Date.now()));var i=null!==(n=t.configList)&&void 0!==n?n:[],r=i[0]&&"true"===i[0].config_value;We.saveClientValue(Pe,String(r),864e5),e(r)})).catch((function(){We.saveClientValue(Pe,String(!1),864e5),e(!1)}))}))]:[2,!1]}}))}))},e.prototype.initPrevScreen=function(){for(var e,t=It.sendTask.eventModels.length-1;t>=0;t--){var n=It.sendTask.eventModels[t];if(n.event===$e.EXIT_SCREEN){e=n;break}}e&&this.setCurrentScreen(e.properties[K])},e.prototype.getAAID=function(){var e=this.getConfig(ct);return e||(It.hiLog.error(st,tt.code,tt.message),"")},e.prototype.getConfigs=function(){return Object.assign({},this.serverConfig,this.clientConfig,this.externalConfig)},e.prototype.getConfig=function(e){var t,n;return null!==(n=null!==(t=this.externalConfig[e])&&void 0!==t?t:this.clientConfig[e])&&void 0!==n?n:this.serverConfig[e]},e.prototype.addConfig=function(e,t){this.externalConfig[e]=t},e.prototype.removeConfig=function(e){delete this.externalConfig[e]},e.prototype.resolveTerminalName=function(){var e;return h(this,void 0,void 0,(function(){var t,n;return f(this,(function(i){switch(i.label){case 0:return t="",this.getConfig(S)?0!==(t=null!==(e=this.getConfig(I))&&void 0!==e?e:"").length?[3,2]:[4,dt.getAaid()]:[3,2];case 1:(n=i.sent())&&(t=n.substring(0,8)),i.label=2;case 2:return[2,t]}}))}))},e.prototype.setUserProfile=function(e,t){if(it.checkString(st,"user name",e,Q)&&it.checkPattern(st,"user name",e,re))if(null!==t){if(it.checkString(st,"user value",t,Q))if(Ve(this.userProfiles,e))this.userProfiles[e]=t;else{var n=Object.keys(this.userProfiles).length+1;it.checkLength(st,"User Profile",n,ne)&&(this.userProfiles[e]=t)}}else delete this.userProfiles[e]},e.prototype.getUserProfiles=function(e){return h(this,void 0,void 0,(function(){var t,n,i,r;return f(this,(function(o){switch(o.label){case 0:return t={},e?(i=(n=Object).assign,r=[t],[4,It.hiClientProperty.generateUserCommonProperty()]):[3,2];case 1:return t=i.apply(n,r.concat([o.sent()])),[3,3];case 2:t=Object.assign(t,this.userProfiles),o.label=3;case 3:return[2,t]}}))}))},e.prototype.pageStart=function(e){if(it.checkString(st,"screenName",e,Q)){this.pageEntryTime=(new Date).getTime();var t={};t[F]=ht.getPageIdByUrl(this.currentScreenName),t[Y]=ht.getPageIdByUrl(e),t[G]=t[F],t[B]=t[Y],e!==this.currentScreenName&&(this.prevScreenName=this.currentScreenName,this.currentScreenName=e);At.onEvent($e.ENTER_SCREEN,t,{immediately:!1,isReserved:!0})}},e.prototype.setPrevScreenName=function(e){this.prevScreenName=e},e.prototype.setCurrentScreen=function(e){this.currentScreenName=e},e.prototype.setPageEntryTime=function(e){this.pageEntryTime=e},e.prototype.getPageEntryTime=function(){return this.pageEntryTime},e.prototype.pageEnd=function(e){if(it.checkString(st,"screenName",e,Q)&&this.getPageEntryTime()){var t=(new Date).getTime()-this.getPageEntryTime(),n={};n[x]=t,n[Y]=ht.getPageIdByUrl(e),n[B]=n[Y];At.onEvent($e.EXIT_SCREEN,n,{immediately:!1,isReserved:!0})}},e.prototype.setReportType=function(e){this.reportType=e},e.prototype.getReportType=function(){return this.reportType},e.prototype.generateClientKey=function(e){return("HW_"+e+"_"+this.getConfig("appId")).replace(/\./g,"_")},e.prototype.checkRoutePolicy=function(e){var t=It.hiAgcUtil.getConfig().service.analytics;if(!vt.getConfig(y))return It.hiLog.warn(st,"","Invalid routePolicy!"),!1;if(!we(t.collector_url,(function(t){null==t?!e&&It.hiLog.warn(st,Ke.code,"Cannot find valid service/analytics/collector_url from agconnect-service.json."):!e&&It.hiLog.warn(st,Ke.code,"Cannot find valid service/analytics/collector_url[$1] from agconnect-service.json.",{$1:t})})))return!1;if(vt.getConfig("routePolicyUsed")){var n=Object.keys(Ye),i=function(i){var r="collector_url_"+n[i].toLowerCase();if(!we(t[r],(function(n){null==n?e&&null!=t[r]||It.hiLog.warn(st,Ke.code,"Cannot find valid service/analytics/$1 from agconnect-service.json.",{$1:r}):e&&null!=t[r]||It.hiLog.warn(st,Ke.code,"Cannot find valid service/analytics/$1[$2] from agconnect-service.json.",{$1:r,$2:n})})))return{value:!1}};for(var r in n){var o=i(r);if("object"==typeof o)return o.value}}return!0},e.prototype.getHaSdkToken=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,ft.getToken()]}))}))},e.prototype.setRoutePolicy=function(e,t){return""===(e=(e=null!=e?e:"").toUpperCase())?vt.addConfig(y,"UNKNOWN"):Ve(Ye,e)?vt.addConfig(y,e):vt.addConfig(y,null),vt.addConfig("routePolicyUsed",""!==e),!!this.checkRoutePolicy(t)},e.prototype.getRoutePolicy=function(){var e,t=this.getConfig(y);return"UNKNOWN"===t?null!==(e=It.hiAgcUtil.getConfig().region)&&void 0!==e?e:"":t},e.prototype.updateAnalyticsUrl=function(){var e;return h(this,void 0,void 0,(function(){var t,n,i;return f(this,(function(r){switch(r.label){case 0:return t=this,[4,lt.syncCollect("serverConfig")];case 1:return t.serverConfig=r.sent(),n=this.serverConfig.analyticsUrl,null==(i=vt.getConfig(y))?n="":"UNKNOWN"!==i&&(n=null!==(e=this.serverConfig.collectorUrls[i.toUpperCase()])&&void 0!==e?e:""),vt.addConfig("analyticsUrl",n),It.hiSendData.setUrl(n),[2]}}))}))},e.prototype.checkAgcConfig=function(){var e,t,n,i,r,o,a=It.hiAgcUtil.getConfig();ke(null===(t=null===(e=null==a?void 0:a.service)||void 0===e?void 0:e.analytics)||void 0===t?void 0:t.resource_id)||It.hiLog.warn(st,"",Et,{$1:"service/analytics/resource_id"}),ke(null===(n=null==a?void 0:a.client)||void 0===n?void 0:n.product_id)||It.hiLog.warn(st,"",Et,{$1:"client/product_id"}),ke(null===(i=null==a?void 0:a.client)||void 0===i?void 0:i.app_id)||It.hiLog.warn(st,"",Et,{$1:"client/app_id"}),ke(null===(r=null==a?void 0:a.client)||void 0===r?void 0:r.client_id)||It.hiLog.warn(st,"",Et,{$1:"client/client_id"});var s=null===(o=null==a?void 0:a.client)||void 0===o?void 0:o.package_name;null==s||ke(s)||It.hiLog.warn(st,"",Et,{$1:"client/package_name"});var c=null==a?void 0:a.region;return null==c||ke(c)&&Ye[c]||It.hiLog.warn(st,"",Et,{$1:"region"}),vt.setRoutePolicy(gt.routePolicy,!1)},e.prototype.getNewUserFlag=function(){if("false"===We.getClientValue("HW_ha_isNewUser"))return 0;var e=Number(We.getClientValue("HW_ha_firstOpenTime")),t=new Date(e).toDateString()===(new Date).toDateString();return t||We.saveClientValue("HW_ha_isNewUser","false"),t?1:0},e.prototype.setIsTestDevice=function(){var e=vt.getConfig(S),t="true"===We.getClientValue("HW_ha_isTestDevice")||e?"true":"false";"true"===t&&We.saveClientValue("HW_ha_isTestDevice",t)},e.prototype.isTestDevice=function(){return"true"===We.getClientValue("HW_ha_isTestDevice")?1:0},e}()),Ct={ON_SCHEDULED_TIME_POLICY:5,ON_CACHE_THRESHOLD_POLICY:30},Tt=function(){function e(){this.reportPolicyDefault=Ct}return e.prototype.eventUploadPolicyLaunch=function(){It.sendTask.uploadData(!0,$e.LaunchApp)},e.prototype.eventUploadPolicyThreshold=function(){var e=this.getEventUploadPolicy();if(e.ON_CACHE_THRESHOLD_POLICY){if(e.ON_CACHE_THRESHOLD_POLICY<Te)return;if(e.ON_CACHE_THRESHOLD_POLICY>Se)return;It.sendTask.eventModels.filter((function(e){return e.event!==$e.STOP_ANALYTICS_COLLECTION&&e.sendState===de||e.sendState===fe})).length>=e.ON_CACHE_THRESHOLD_POLICY&&It.sendTask.uploadData(!1,"")}},e.prototype.eventUploadPolicyScheduleTime=function(){var e,t=this.getEventUploadPolicy();if(vt.getConfig(S))e=1e3;else{if(!t.ON_SCHEDULED_TIME_POLICY)return;if(t.ON_SCHEDULED_TIME_POLICY<ve)return;if(t.ON_SCHEDULED_TIME_POLICY>Ce)return;e=1e3*t.ON_SCHEDULED_TIME_POLICY}It.sendTask.setHeartbeatFunc(e)},e.prototype.eventUploadPolicyBackground=function(){},e.prototype.logUploadPolicyLaunch=function(){var e=this.getEventUploadPolicy();It.hiAutoReport.isLaunchUpload()&&e.ON_APP_LAUNCH_POLICY&&e.ON_APP_LAUNCH_POLICY>0&&It.sendLogTask.uploadData()},e.prototype.logUploadPolicyThreshold=function(){var e=this.getEventUploadPolicy();if(e.ON_CACHE_THRESHOLD_POLICY){if(e.ON_CACHE_THRESHOLD_POLICY<Te)return;if(e.ON_CACHE_THRESHOLD_POLICY>Se)return;It.sendLogTask.logRecords.filter((function(e){return e.sendState===de||e.sendState===fe})).length>=e.ON_CACHE_THRESHOLD_POLICY&&It.sendLogTask.uploadData()}},e.prototype.logUploadPolicyScheduleTime=function(){var e,t=this.getEventUploadPolicy();if(vt.getConfig(S))e=1e3;else{if(!t.ON_SCHEDULED_TIME_POLICY)return;if(t.ON_SCHEDULED_TIME_POLICY<ve)return;if(t.ON_SCHEDULED_TIME_POLICY>Ce)return;e=1e3*t.ON_SCHEDULED_TIME_POLICY}It.sendLogTask.setHeartbeatFunc(e)},e.prototype.logUploadPolicyBackground=function(){},e.prototype.getUploadMaxCount=function(){var e=this.getEventUploadPolicy();return-1===e.ON_CACHE_THRESHOLD_POLICY?300:Math.min(300,e.ON_CACHE_THRESHOLD_POLICY)},e.prototype.getEventUploadPolicy=function(){var e=We.getClientValue("HW_ha_eventUploadPolicy");return Ue(e)&&(e=this.reportPolicyDefault,We.saveClientValue("HW_ha_eventUploadPolicy",e)),e},e}();new Tt;var St=function(){function e(){}return e.prototype.queryAllModels=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,this.generateEventModels()]}))}))},e.prototype.queryModels=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(t){return[2,this.generateEventModels(void 0,e)]}))}))},e.prototype.saveModel=function(e,t){return h(this,void 0,void 0,(function(){var n,i;return f(this,(function(r){switch(r.label){case 0:return n=be(t,["sendState","collectionUrl","routePolicy"]),i=JSON.stringify(n),[4,It.hiDBStorage.saveClientValue(e,i,!0)];case 1:return r.sent(),[2]}}))}))},e.prototype.removeModel=function(e){It.hiDBStorage.removeItem(e,!0)},e.prototype.removeModels=function(e){It.hiDBStorage.removeItems(e,!0)},e.prototype.removeAllModels=function(){It.hiDBStorage.removeAllItems(!0)},e.prototype.generateEventModels=function(e,t){return h(this,void 0,void 0,(function(){var e,t,n,i,r,o;return f(this,(function(a){switch(a.label){case 0:return[4,It.hiDBStorage.getAllClientValue(!0)];case 1:for(e=a.sent(),t=[],n=0;n<e.length;n++)i=e[n],r=i,null!=(o=JSON.parse(r)).id&&t.push(o);return[2,t]}}))}))},e}(),yt=function(){function e(){}return e.prototype.getDatabase=function(){},e.prototype.getAllClientValue=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,Promise.resolve([""])]}))}))},e.prototype.getClientValues=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,Promise.resolve([""])]}))}))},e.prototype.getClientValue=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,Promise.resolve("")]}))}))},e.prototype.isKeyExist=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,Promise.resolve(!1)]}))}))},e.prototype.saveClientValue=function(e,t,n){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.removeItem=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.removeItems=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.removeAllItems=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e}(),It=new(function(){function e(){this.hiAnalytics={},this.hiLog={},this.hiAutoReport={},this.hiEncryptSendData={},this.hiSendData={},this.hiClient={},this.hiClientProperty={},this.hiStorage={},this.hiDBStorage={},this.hiFileStorage={},this.hiMigration={},this.sendLogTask={},this.sendTask={},this.sendPolicy={},this.hiEncrypt={},this.hiKeyStore={},this.hiAgcUtil={},this.hiEventModelsAdapter={},this.setSendPolicy(new Tt),this.setHiEventModelsAdapter(new St),this.setHiDBStorage(new yt)}return e.prototype.setHiAnalytics=function(e){this.hiAnalytics=e},e.prototype.setHiLog=function(e){this.hiLog=e},e.prototype.setHiAutoReport=function(e){this.hiAutoReport=e},e.prototype.setHiEncryptSendData=function(e){this.hiEncryptSendData=e,this.setHiSendData(e)},e.prototype.setHiSendData=function(e){this.hiSendData=e},e.prototype.setHiClient=function(e){this.hiClient=e},e.prototype.setHiClientProperty=function(e){this.hiClientProperty=e},e.prototype.setHiStorage=function(e){this.hiStorage=e},e.prototype.setHiDBStorage=function(e){this.hiDBStorage=e},e.prototype.setHiFileStorage=function(e){this.hiFileStorage=e},e.prototype.setHiMigration=function(e){this.hiMigration=e},e.prototype.setSendLogTask=function(e){this.sendLogTask=e},e.prototype.setSendTask=function(e){this.sendTask=e},e.prototype.setSendPolicy=function(e){this.sendPolicy=e},e.prototype.setHiEncrypt=function(e){this.hiEncrypt=e},e.prototype.setHiKeyStore=function(e){this.hiKeyStore=e},e.prototype.setHiAgcUtil=function(e){this.hiAgcUtil=e},e.prototype.setHiEventModelsAdapter=function(e){this.hiEventModelsAdapter=e},e}()),At=new(function(){function e(){this.eventsReceived=[],this.initialized=!1,this.reportFlag=!0}return e.prototype.init=function(){var e=We.getClientValue(Ie);null==e||0===e.length?We.saveClientValue(Ie,String(this.reportFlag)):this.reportFlag=e===String(!0)},e.prototype.setAnalyticsEnabled=function(e){if(this.reportFlag!==e&&(this.reportFlag=e,We.saveClientValue(Ie,String(e)),!e)){var t=We.getClientValue(Ae);"true"!==t&&"false"!==t||We.saveClientValue(Ae,String(!0));var n=We.getClientValue(me);"true"!==n&&"false"!==n||We.saveClientValue(me,String(!0)),It.hiEventModelsAdapter.removeAllModels(),this.onEvent($e.STOP_ANALYTICS_COLLECTION,{},{isReserved:!0,forceReport:!0,immediately:!0})}},e.prototype.setRestrictionEnabled=function(e){if(this.reportFlag&&(We.saveClientValue(Ae,String(e)),e)){this.onEvent($e.STOP_ANALYTICS_COLLECTION,{},{isReserved:!0,forceReport:!0,immediately:!0});var t=We.getClientValue(me);"true"!==t&&"false"!==t||We.saveClientValue(me,String(e))}},e.prototype.isRestrictionEnabled=function(){var e=We.getClientValue(Ie),t=We.getClientValue(Ae);return""!==t?"true"===t:"true"!==e},e.prototype.setRestrictionShared=function(e){this.reportFlag?vt.getRoutePolicy()===Ye.CN?this.isRestrictionEnabled()?It.hiLog.warn(st,"","Cannot set restriction_shared because restriction_enabled is true!"):We.saveClientValue(me,String(e)):It.hiLog.warn(st,"","Cannot set restriction_shared because routePolicy is not CN!"):It.hiLog.warn(st,"","Cannot set restriction_shared because analytics_enabled is false!")},e.prototype.isRestrictionShared=function(){return vt.getRoutePolicy()!==Ye.CN||(!this.reportFlag||(vt.getRoutePolicy()!==Ye.CN||(!!this.isRestrictionEnabled()||"true"===We.getClientValue(me))))},e.prototype.checkEventLength=function(e){return!!it.checkString(st,"eventId",e,Q)},e.prototype.checkIsPredineEvents=function(e){var t=!1,n=Le;for(var i in n){if(e===n[i]){t=!0;break}}return t},e.prototype.getEventParams=function(e,t){void 0===t&&(t={});var n={};for(var i in this.putEventParams(n,t,e,!1),this.putEventParams(n,We.defaultEventParams,e,!0),n)null==n[i]&&delete n[i];var r=Object.keys(n);if(r.length>z){It.hiLog.warn(st,qe.code,qe.message,{$1:"Event",$2:z});for(var o=r.slice(z),a=0;a<o.length;a++){delete n[i=o[a]]}}return n},e.prototype.putEventParams=function(e,t,n,i){if(i&&n)return e;for(var r in t)i&&Ve(e,r)||it.checkString(st,"params key",r,Q)&&(n||it.checkPattern(st,"params key",r,oe))&&(e[r]=t[r]);return e},e.prototype.checkEventIsValid=function(e,t){return!!this.checkEventLength(e)&&(!(!t&&!it.checkReserve(st,"eventId",e,$e))&&(!!(this.checkIsPredineEvents(e)||t||it.checkPattern(st,"eventId",e,ie))&&(!this.isDisableEvent(e)||(It.hiLog.info("The event is disabled: "+e),!1))))},e.prototype.processEventsReceived=function(){var e=this;0!==this.eventsReceived.length&&(this.reportFlag?this.eventsReceived.forEach((function(t){var n=t.eventId,i=t.param,r=t.config;r.isReserved=_e.some((function(e){return e===n})),e.onEvent(n,i,r)})):It.hiLog.warn(st,Ze.code,Ze.message),this.eventsReceived.length=0)},e.prototype.onEventCallback=function(e,t,n){void 0===t&&(t={}),void 0===n&&(n={}),this.initialized?this.reportFlag?this.onEvent(e,t,n):It.hiLog.warn(st,Ze.code,Ze.message):(this.eventsReceived.length>=300&&(this.eventsReceived.length=0),this.eventsReceived.push({eventId:e,param:t,config:n}))},e.prototype.onEvent=function(e,t,n){void 0===t&&(t={}),void 0===n&&(n={});var i=n.isReserved||!1,r=n.forceReport||!1;if(this.checkEventIsValid(e,i)&&(r||it.checkSwitchIsOpen(st,this.reportFlag))){var o=this.getEventParams(i,t),a=ee/1024+"KB",s=JSON.stringify(o).length;if(it.checkExceedMaxSize(st,a,s,ee)){o.$TaskId="";var c={};c[W]=ht.getPageIdByUrl(vt.prevScreenName),c[K]=ht.getPageIdByUrl(vt.currentScreenName),this.putEventParams(o,c,i,!1);var u=n.eventtime||(new Date).getTime();It.sendTask.onEvent(e,o,"oper",u,n)}}},e.prototype.addDefaultEventParams=function(e){if(null!=e)if("object"==typeof e){var t={};for(var n in e){null==(i=e[n])?delete We.defaultEventParams[n]:t[n]=i}for(var n in t){var i=t[n];if(this.validateDefaultParam(n,i)){if(!Ve(We.defaultEventParams,n)){var r=Object.keys(We.defaultEventParams).length+1;if(!it.checkLength(st,"default event",r,Z))continue}We.defaultEventParams[n]=i}}}else It.hiLog.warn(st,Qe.code,Qe.message,{$1:"default event params"});else We.defaultEventParams={}},e.prototype.validateDefaultParam=function(e,t){return!!it.checkString(st,"default event params key",e,Q)&&(!!it.checkPattern(st,"default event params key",e,oe)&&(!("string"==typeof t&&t.length>Q)||(It.hiLog.warn(st,xe.code,xe.message,{$1:"default event params value",$2:Q}),!1)))},e.prototype.isDisableEvent=function(e){var t=We.getClientValue("HW_ha_disableEvents");return"object"==typeof t&&t instanceof Array&&-1!==t.indexOf(e)},e.prototype.writeLog=function(e,t){return h(this,void 0,void 0,(function(){var n,i,r,o,a,s,c,u,l,d;return f(this,(function(p){return null==e||Ue(t)?(It.hiLog.warn(st,Qe.code,Qe.message,{$1:null==e?"logConfig":"content"}),[2]):"string"!=typeof t?(It.hiLog.warn(st,Qe.code,Qe.message,{$1:"content"}),[2]):(n=e.region,i=e.projectId,r=e.groupId,o=e.streamId,a=e.tags,it.checkString(st,"region",n,q)&&it.checkString(st,"projectId",i,q)&&it.checkString(st,"groupId",r,q)&&it.checkString(st,"streamId",o,q)?(null!=a&&"object"==typeof a||(It.hiLog.warn(st,Qe.code,Qe.message,{$1:"tags"}),a={}),s={},(c=Object.entries(a||{}).filter((function(e){var t=e[0],n=e[1];return!!it.checkString(st,"tag key",t,j)&&(!!it.checkPattern(st,"tag key",t,re)&&!!it.checkString(st,"tag value",n,Q))}))).length>te&&It.hiLog.warn(st,qe.code,qe.message,{$1:"tags",$2:te}),c.slice(0,te).forEach((function(e){var t=e[0],n=e[1];s[t]=n})),t.length>X&&(It.hiLog.warn(st,xe.code,xe.message,{$1:"content",$2:X}),t=t.substring(0,X)),u=vt.getConfig(y),l=It.hiAgcUtil.getConfig().region||"",d={region:n,projectId:i,groupId:r,streamId:o,tags:s,id:He.create(),content:t,type:"maint",eventtime:(new Date).getTime(),collectionUrl:vt.getConfig("analyticsUrl"),routePolicy:"UNKNOWN"===u?l:u,sendState:le},It.sendLogTask.writeLog(d),[2]):[2])}))}))},e.prototype.onReport=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return It.sendTask.uploadData(!1,""),It.sendLogTask.uploadData(),[2]}))}))},e}()),mt=new(function(){function e(){this.userId="",this.clientId=""}return e.prototype.init=function(){},e.prototype.setUserId=function(e){var t=this.isValidUserId(e);t&&We.saveClientValue("HW_ha_existUserId",null!=e?Ee:ge),(e=t&&null!=e?String(e):"")!==this.userId&&We.handleSessionValue(),this.userId=e||""},e.prototype.isValidUserId=function(e){return null==e||("string"!=typeof e&&"number"!=typeof e?(It.hiLog.warn(st,"",Qe.message,{$1:"userId"}),!1):!!it.checkString(st,"userId",e,Q))},e.prototype.setSessionDuration=function(e){return e<ae.value&&(It.hiLog.warn(st,Xe.code,"session duration less than minimum $1.",{$1:ae.label}),e=ae.value),e>se.value&&(It.hiLog.warn(st,Xe.code,"session duration greater than maximum $1.",{$1:se.label}),e=se.value),We.setSessionDuration(e)},e.prototype.setBackgroundSessionDuration=function(e){return e<ae.value&&(It.hiLog.warn(st,Xe.code,"min session duration less than minimum $1.",{$1:ae.label}),e=ae.value),e>se.value&&(It.hiLog.warn(st,Xe.code,"min session duration greater than maximum $1.",{$1:se.label}),e=se.value),We.setBackgroundSessionDuration(e)},e.prototype.getUserInfo=function(e){var t=(void 0===e?{}:e).routePolicy,n=void 0===t?"":t;return h(this,void 0,void 0,(function(){var e,t,i,r,o,a,s,c,u,l,d,p;return f(this,(function(h){switch(h.label){case 0:return e=vt.getAAID(),[4,It.hiClient.getSystemOaidFlag()];case 1:return t=h.sent(),(r=t)?[4,It.hiClient.getClientOaidFlag()]:[3,3];case 2:r=h.sent(),h.label=3;case 3:return i=r,(a=t)?[4,It.hiClient.getServerOaidFlag(n)]:[3,5];case 4:a=h.sent(),h.label=5;case 5:return s={systemOaidFlag:t,clientOaidFlag:i,serverOaidFlag:o=a},u={aaid:e,userid:this.userId},[4,It.hiClientProperty.generateUserCommonProperty(s)];case 6:return u.properties=h.sent(),u.events_global_properties=vt.userProfiles,c=u,t&&i&&o?(l=c,[4,It.hiClient.getOaid()]):[3,9];case 7:return l.oaid=h.sent(),d=c,[4,It.hiClient.getOaidSource()];case 8:return d.oaid_source=h.sent(),[3,10];case 9:c.oaid="",c.oaid_source="",h.label=10;case 10:case 11:return[3,15];case 12:return(void 0).oaid=h.sent(),p=c,[4,It.hiClient.getOaidSource()];case 13:return p.oaid_source=h.sent(),[3,15];case 14:c.oaid="",c.oaid_source="",h.label=15;case 15:return[2,c]}}))}))},e}()),Pt=new(function(){function e(){this.autoReport={},this.hiStorage={},this.hiClient={}}return e.prototype.init=function(){this.autoReport=It.hiAutoReport,this.hiStorage=It.hiStorage,this.hiClient=It.hiClient},e.prototype.reportFirstOpenEvent=function(e){void 0===e&&(e=!1);var t={eventtime:We.getClientValue("HW_ha_firstOpenTime")||String((new Date).getTime()),immediately:!1,isReserved:!0},n={},i=e?"clearCachedData":It.hiClient.getStartType();null!=i&&(n[b]=i);var r=It.hiClient.getStartScene();null!=r&&(n[V]=r),At.onEvent($e.FIRST_OPEN,n,t)},e.prototype.reportLaunchAppEvent=function(e){void 0===e&&(e=!1);var t={},n=e?"clearCachedData":It.hiClient.getStartType();null!=n&&(t[b]=n);var i=It.hiClient.getStartScene();null!=i&&(t[V]=i),At.onEvent($e.LaunchApp,t,{immediately:!1,isReserved:!0})},e.prototype.reportPageEntryEvent=function(){this.reportPageEntryEventAsync()},e.prototype.reportPageEntryEventAsync=function(){return h(this,void 0,void 0,(function(){var e,t,n,i,r;return f(this,(function(o){switch(o.label){case 0:return[4,It.hiAnalytics.initPromise];case 1:return o.sent(),e={},t=(new Date).getTime(),vt.setPageEntryTime(t),n=vt.currentScreenName,i=It.hiClient.getHref(),vt.setPrevScreenName(vt.currentScreenName),vt.setCurrentScreen(i),e[F]=n,e[Y]=ht.getPageIdByUrl(i),e[G]=e[F],e[B]=e[Y],r={immediately:!1,isReserved:!0},At.onEvent($e.ENTER_SCREEN,e,r),[2]}}))}))},e.prototype.reportPageExitEvent=function(){var e=vt.getPageEntryTime();if(e){var t={},n=(new Date).getTime()-e;t[Y]=ht.getPageIdByUrl(vt.currentScreenName),t[B]=t[Y],t[x]=n;At.onEvent($e.EXIT_SCREEN,t,{immediately:!0,isReserved:!0})}},e.prototype.reportCampaignPushInfoEvent=function(){var e=vt.campaignPushInfo;if(e){var t={};t.$CampaignPushInfo=JSON.stringify(e),t.$JobId=e.jobId,t.$ActivityId=e.activityId;At.onEvent($e.CampaignPushClick,t,{immediately:!1,isReserved:!0})}},e.prototype.computeLoadTime=function(){},e.prototype.stateChanged=function(){},e}()),Nt=new(function(){function e(){this.eventListeners=[]}return e.prototype.addListener=function(e){this.eventListeners.push(e)},e.prototype.init=function(){return h(this,void 0,void 0,(function(){var e,t;return f(this,(function(n){switch(n.label){case 0:e=0,t=this.eventListeners,n.label=1;case 1:return e<t.length?[4,t[e].init()]:[3,4];case 2:n.sent(),n.label=3;case 3:return e++,[3,1];case 4:return[2]}}))}))},e}()),Ot=new(function(){function e(){}return e.prototype.init=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(n){return e&&e.forEach((function(e){lt.register(e)})),t&&t.forEach((function(e){Nt.addListener(e)})),Nt.init(),[2]}))}))},e}()),Rt=new(function(){function e(){this.key="serverConfig",this.cache=null}return e.prototype.doCollect=function(){return h(this,void 0,void 0,(function(){var e,t,n;return f(this,(function(i){if(!this.cache){for(n in e=It.hiAgcUtil.getConfig(),t={},Ye)t[n]=this.getUrl(e.service.analytics["collector_url_"+n.toLowerCase()]);this.cache={productId:e.client.product_id,appId:e.client.app_id,clientId:e.client.client_id,packageName:e.client.package_name||e.client.app_id,resourceId:e.service.analytics.resource_id,collectorUrls:t,analyticsUrl:this.getUrl(e.service.analytics.collector_url)}}return[2,this.cache]}))}))},e.prototype.getUrl=function(e){if(null!=e&&"string"!=typeof e)return"";var t=(null!=e?e:"").split(",")[0];return/^https?:\/\//.test(t)||(t="https://"+t),""!==t&&It.sendTask.isServerWebV3()&&(t+="/webv3"),t},e}()),Lt=new(function(){function e(){}return e.prototype.init=function(){Pt.init(),At.init()},e.prototype.onEvent=function(){},e}()),$t=new function(){this.enabled=!1,this.removeProtocol=!0,this.removeOrigin=!1,this.removeAllParams=!0,this.removeParams={removeValuesOnly:!0,params:{}},this.removeAnchor=!0,this.urlPatterns=[],this.urlSeparators=":/.?=&#"},_t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return p(t,e),t.prototype.reportInitEvents=function(t){e.prototype.reportInitEvents.call(this,t),this.registerKitSdk()},t.prototype.setCollectAdsIdEnabled=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),We.saveClientValue("HW_ha_clientOaidFlag",String(e)),[2]}}))}))},t.prototype.setRoutePolicy=function(t){return h(this,void 0,void 0,(function(){return f(this,(function(n){switch(n.label){case 0:return[4,e.prototype.setRoutePolicy.call(this,t)];case 1:return n.sent(),this.refreshKitSdk(),[2]}}))}))},t.prototype.registerKitSdk=function(){var e={_restriction_enabled:We.getClientValue(Ae),_restriction_shared:We.getClientValue(me),region:vt.getRoutePolicy()},t={agcUrl:vt.getConfig(ue.ANALYTICS_URL),appid:vt.getConfig(ue.APP_ID),aaid:vt.getAAID(),pkgName:vt.getConfig(ue.PKG_NAME)||"",params:JSON.stringify(e)},n={uri:"hianalytics.analyticsEvtService",requestJson:JSON.stringify(t),transactId:"1",service_action:"",api_name:"hianalytics.API",subId:vt.getConfig(ue.APP_ID),api_level:1,kit_sdk_version:1,min_apk_version:1};_hw_hmscore_hms_js_base__WEBPACK_IMPORTED_MODULE_2__.hmsjsb.invoke({apiName:"bg.request",args:n,success:function(e){It.hiLog.info("registerKitSdk success")},fail:function(e){e.errCode,e.errMsg,It.hiLog.info("registerKitSdk fail")}})},t.prototype.refreshKitSdk=function(){var e={method:"setKitEnable",pkg_name:vt.getConfig(ue.PKG_NAME)||"","3rd_aaid":vt.getAAID(),app_id:vt.getConfig(ue.APP_ID),enable_collect:We.getClientValue(Ie),_restriction_enabled:We.getClientValue(Ae),_restriction_shared:We.getClientValue(me),_region:vt.getRoutePolicy()},t={uri:"hianalytics.analyticsInvokeService",requestJson:JSON.stringify(e),transactId:"1",service_action:"",api_name:"hianalytics.API",subId:vt.getConfig(ue.APP_ID),api_level:1,kit_sdk_version:1,min_apk_version:1};_hw_hmscore_hms_js_base__WEBPACK_IMPORTED_MODULE_2__.hmsjsb.invoke({apiName:"bg.request",args:t,success:function(e){It.hiLog.info("refreshKitSdk success")},fail:function(e){e.errCode,e.errMsg,It.hiLog.info("refreshKitSdk fail")}})},t}(function(){function e(e,t){var n=this;It.setHiAnalytics(this),this.preConfigPromise=this.preConfig(e,t),this.preStoragePromise=We.init(),this.initPromise=this.initSDK(e),this.initPromise.then((function(){It.hiLog.info("init success"),n.initDone()})).catch((function(e){It.hiLog.warn(st,et.code,et.message)}))}return e.prototype.preConfig=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,It.hiAgcUtil.init()];case 1:return e.sent(),vt.initDebugMode(gt.debugMode,gt.terminalName),vt.initLogLevel(gt.logDisabled,gt.logLevel),vt.urlClusteringOptions=JSON.parse(JSON.stringify($t)),vt.addConfig("launchAppTime",(new Date).getTime()),[2,vt.checkAgcConfig()]}}))}))},e.prototype.initDone=function(){At.initialized=!0,At.processEventsReceived(),It.sendPolicy.eventUploadPolicyScheduleTime(),It.sendPolicy.logUploadPolicyScheduleTime(),setTimeout((function(){It.sendPolicy.eventUploadPolicyLaunch(),It.sendPolicy.logUploadPolicyLaunch()}),50),setInterval((function(){It.sendPolicy.eventUploadPolicyThreshold(),It.sendPolicy.logUploadPolicyThreshold()}),1e3)},e.prototype.initSDK=function(e){return h(this,void 0,void 0,(function(){var e,t,n;return f(this,(function(i){switch(i.label){case 0:return It.hiAutoReport.initAutoEvents(),[4,this.preConfigPromise];case 1:return i.sent()?[4,this.preStoragePromise]:[2,Promise.reject()];case 2:return i.sent(),We.handleSessionValue(),vt.campaignPushInfo=It.hiClient.getCampaignPushInfo(),[4,Ot.init([Rt,dt],[Lt])];case 3:return i.sent(),[4,vt.init()];case 4:return i.sent(),mt.init(),[4,It.sendTask.init()];case 5:return i.sent(),[4,It.sendLogTask.init()];case 6:return i.sent(),vt.initPrevScreen(),[4,lt.collect(ct)];case 7:return(e=i.sent())[ct]&&(vt.addConfig("aaid",e[ct]),vt.setIsTestDevice()),Ue(t=We.getClientValue(Ne))?(t="true",n=(new Date).getTime(),We.saveClientValue("HW_ha_firstOpenTime",String(n)),We.saveClientValue(Ne,t)):"true"===t&&(t="false",We.saveClientValue(Ne,t)),vt.getNewUserFlag(),this.reportInitEvents(t),[2]}}))}))},e.prototype.reportInitEvents=function(e){"true"===e&&Pt.reportFirstOpenEvent(),It.hiAutoReport.initEventTriggers()},e.prototype.destroySDK=function(){},e.prototype.setAnalyticsEnabled=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.setAnalyticsEnabled(e),[2]}}))}))},e.prototype.setRestrictionEnabled=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.setRestrictionEnabled(e),[2]}}))}))},e.prototype.isRestrictionEnabled=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.initPromise];case 1:return e.sent(),[2,At.isRestrictionEnabled()]}}))}))},e.prototype.setRestrictionShared=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.setRestrictionShared(e),[2]}}))}))},e.prototype.isRestrictionShared=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.initPromise];case 1:return e.sent(),[2,At.isRestrictionShared()]}}))}))},e.prototype.setUserId=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.reportFlag?(mt.setUserId(e),[2]):[2]}}))}))},e.prototype.setUserProfile=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(n){switch(n.label){case 0:return[4,this.initPromise];case 1:return n.sent(),At.reportFlag?(vt.setUserProfile(e,t),[2]):[2]}}))}))},e.prototype.getUserProfiles=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.reportFlag?[2,vt.getUserProfiles(e)]:[2,{}]}}))}))},e.prototype.pageStart=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.reportFlag?(vt.pageStart(e),[2]):[2]}}))}))},e.prototype.pageEnd=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.reportFlag?(vt.pageEnd(e),[2]):[2]}}))}))},e.prototype.setSessionDuration=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.preConfigPromise];case 1:return t.sent(),At.reportFlag?(Number.isInteger(e)&&mt.setSessionDuration(e),[2]):[2]}}))}))},e.prototype.onEvent=function(e,t){return h(this,void 0,void 0,(function(){var n;return f(this,(function(i){switch(i.label){case 0:return[4,this.initPromise];case 1:return i.sent(),At.reportFlag?(n={isReserved:_e.some((function(t){return t===e}))},At.onEvent(e,t,n),[2]):(It.hiLog.warn(st,Ze.code,Ze.message),[2])}}))}))},e.prototype.setAppVersion=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.preConfigPromise];case 1:return t.sent(),At.reportFlag?it.checkString(st,"app version",e,J)?(vt.addConfig("appVersion",e),[2]):[2]:[2]}}))}))},e.prototype.getAAID=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.initPromise];case 1:return e.sent(),[2,vt.getAAID()]}}))}))},e.prototype.addDefaultEventParams=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.initPromise];case 1:return t.sent(),At.reportFlag?(At.addDefaultEventParams(e),[2]):[2]}}))}))},e.prototype.writeLog=function(e,t){return h(this,void 0,void 0,(function(){return f(this,(function(n){switch(n.label){case 0:return[4,this.initPromise];case 1:return n.sent(),At.reportFlag?(At.writeLog(e,t),[2]):(It.hiLog.warn(st,Ze.code,Ze.message),[2])}}))}))},e.prototype.setRoutePolicy=function(e){return h(this,void 0,void 0,(function(){var t,n;return f(this,(function(i){switch(i.label){case 0:return[4,this.initPromise];case 1:return i.sent(),t=vt.getRoutePolicy(),vt.setRoutePolicy(e),n=vt.getRoutePolicy(),t===n?[2]:(At.reportFlag||It.sendTask.clearData(t),[4,vt.updateAnalyticsUrl()]);case 2:return i.sent(),[2]}}))}))},e.prototype.setReportPolicies=function(e){return h(this,void 0,void 0,(function(){var t;return f(this,(function(n){switch(n.label){case 0:return[4,this.preConfigPromise];case 1:return n.sent(),t={},"number"!=typeof e.ON_SCHEDULED_TIME_POLICY?t.ON_SCHEDULED_TIME_POLICY=Ct.ON_SCHEDULED_TIME_POLICY:e.ON_SCHEDULED_TIME_POLICY<ve?t.ON_SCHEDULED_TIME_POLICY=ve:e.ON_SCHEDULED_TIME_POLICY>Ce?t.ON_SCHEDULED_TIME_POLICY=Ce:t.ON_SCHEDULED_TIME_POLICY=e.ON_SCHEDULED_TIME_POLICY,"number"!=typeof e.ON_CACHE_THRESHOLD_POLICY?t.ON_CACHE_THRESHOLD_POLICY=Ct.ON_CACHE_THRESHOLD_POLICY:e.ON_CACHE_THRESHOLD_POLICY<Te?t.ON_CACHE_THRESHOLD_POLICY=Te:e.ON_CACHE_THRESHOLD_POLICY>Se?t.ON_CACHE_THRESHOLD_POLICY=Se:t.ON_CACHE_THRESHOLD_POLICY=e.ON_CACHE_THRESHOLD_POLICY,We.saveClientValue("HW_ha_eventUploadPolicy",t),[2]}}))}))},e.prototype.onReport=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,this.preConfigPromise];case 1:return e.sent(),[2,At.onReport()]}}))}))},e}()),Dt=function(e,t,n,i){i&&(i.$1&&(n=n.replace("$1",i.$1)),i.$2&&(n=n.replace("$2",i.$2)));var r=[];return e&&r.push(e),t&&r.push(t),n&&r.push(n),Ut+" => "+r.join("|")},Ut="OpennessSDK",Mt=new(function(){function e(){}return e.prototype.info=function(e,t){if(Fe(this.generateLevels(vt.logLevel),Ge.INFO)){var n=Dt(null,null,e,t);this.printInfo(n)}},e.prototype.warn=function(e,t,n,i){if(Fe(this.generateLevels(vt.logLevel),Ge.WARN)){var r=Dt(e,t,n,i);this.printWarn(r),i&&i.$error&&this.printError(i.$error)}},e.prototype.error=function(e,t,n,i){if(Fe(this.generateLevels(vt.logLevel),Ge.ERROR)){var r=Dt(e,t,n,i);this.printError(r),i&&i.$error&&this.printError(i.$error)}},e.prototype.generateLevels=function(e){return e===Ge.INFO?[Ge.INFO,Ge.WARN,Ge.ERROR]:e===Ge.WARN?[Ge.WARN,Ge.ERROR]:e===Ge.ERROR?[Ge.ERROR]:[]},e.prototype.printInfo=function(e){console.info(e)},e.prototype.printWarn=function(e){console.warn(e)},e.prototype.printError=function(e){console.error(e)},e}()),kt=new(function(){function e(){}return e.prototype.initAutoEvents=function(){},e.prototype.initEventTriggers=function(){this.scheduleCheckAddShortcutState(),Pt.reportLaunchAppEvent(),Pt.reportCampaignPushInfoEvent()},e.prototype.scheduleCheckAddShortcutState=function(){if("function"==typeof r.hasInstalled){clearInterval(this.scheduleId);var e=this.getStorageExistShortcut();e?"1"===e&&this.submitAddQuickAppEvent():(this.checkState(),this.scheduleCheckState())}},e.prototype.scheduleCheckState=function(){var e=this;this.getCheckInfo().isCheck&&(this.scheduleId=setInterval((function(){e.checkState()}),3e5))},e.prototype.checkState=function(){var e=this,t=this.getCheckInfo(),n=t.isCheck,i=t.checkCount;n?(r.hasInstalled({success:function(t){t&&(We.saveClientValue("HW_ha_existShortcut","1"),e.submitAddQuickAppEvent(),clearInterval(e.scheduleId))}}),vt.addConfig("checkAddShortcutCount",i+1)):clearInterval(this.scheduleId)},e.prototype.getCheckInfo=function(){var e=vt.getConfig("checkAddShortcutCount")||0;return{isCheck:e<4,checkCount:e}},e.prototype.submitAddQuickAppEvent=function(){if(!It.sendTask.eventModels.find((function(e){return e.event===$e.ADD_QUICK_APP}))){At.onEvent($e.ADD_QUICK_APP,{},{immediately:!1,isReserved:!0})}},e.prototype.updateAddShortcutState=function(){We.saveClientValue("HW_ha_existShortcut","2")},e.prototype.getStorageExistShortcut=function(){return We.getClientValue("HW_ha_existShortcut")},e.prototype.isLaunchUpload=function(){return!1},e}()),wt=new(function(){function e(){this.url=""}return e.prototype.onEvent=function(e,t,n){var i=this;return new Promise((function(r,a){var s=(null==n?void 0:n.url)||i.url;o({url:s,method:"POST",data:JSON.stringify(e),success:function(e){var t=e&&e.code||200;t>=200&&t<300?r():a("resultCode: "+t)},fail:function(e){return a(e)},header:t})}))},e.prototype.setUrl=function(e){this.url=e},e}());var Ht=new(function(){function e(){}return e.prototype.getReferrer=function(){return""},e.prototype.getHref=function(){return""},e.prototype.getHost=function(){return""},e.prototype.getDefaultTitle=function(){return""},e.prototype.getUAType=function(){return 0},e.prototype.getStartType=function(){return((a.getInfo()||{}).source||{}).packageName||""},e.prototype.getStartScene=function(){var e=(a.getInfo()||{}).source||{},t=e.type||"";return"shortcut"===t?t+"-"+((e.extra||{}).scene||""):t},e.prototype.getLibType=function(){return"quickApp"},e.prototype.getOaid=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,new Promise((function(e,t){if("function"!=typeof s.getOAID)return e("");s.getOAID({success:function(t){e(t&&t.oaid||"")},fail:function(e,n){It.hiLog.warn(Ut,"","getOAID fail, code: "+n+", message: "+e),t(e)}})}))]}))}))},e.prototype.getOaidSource=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,Promise.resolve("oaid")]}))}))},e.prototype.getClientOaidFlag=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return[4,It.hiAnalytics.preStoragePromise];case 1:return e.sent(),[2,"true"===(We.getClientValue("HW_ha_clientOaidFlag")||"true")]}}))}))},e.prototype.getSystemOaidFlag=function(){return h(this,void 0,void 0,(function(){var e;return f(this,(function(t){return null==s.allowTrackOAID?[2,!1]:(e=!s.allowTrackOAID,[2,Promise.resolve(e)])}))}))},e.prototype.getServerOaidFlag=function(e){return h(this,void 0,void 0,(function(){var t,n,i,r,a;return f(this,(function(s){switch(s.label){case 0:return[4,It.hiAnalytics.preStoragePromise];case 1:return s.sent(),[4,Rt.doCollect()];case 2:return s.sent(),t=It.hiAgcUtil.getConfig(),n=t.region,(e=null!=e?e:vt.getRoutePolicy())!==Ye.DE?[3,5]:Me(i=We.getClientValue("HW_ha_getConfigTime"))&&Date.now()-Number(i)<=864e5?(r=We.getClientValue(Pe)||"false",[2,Promise.resolve("true"===r)]):[4,vt.getHaSdkToken()];case 3:return(a=s.sent())?[4,new Promise((function(e,i){var r,s,c="";if(n===Ye.DE&&(c=(null!==(r=t.service.analytics.collector_url)&&void 0!==r?r:"").split(",")[0]),Ue(c)&&(c=(null!==(s=t.service.analytics.collector_url_de)&&void 0!==s?s:"").split(",")[0]),Ue(c))e({oaidFlag:!1});else{var u="https://"+c+"/analytics/api/config?config_key=oaid_flag",l={};l[k]=vt.getConfig("clientId"),l[M]=vt.getConfig("productId"),l[U]=vt.getConfig("resourceId"),l[_]=a,l[A]=vt.getConfig("appId"),o({url:u,method:"GET",header:l,success:function(t){var n=!1,i=t&&t.code||200;if(i>=200&&i<300){var r=JSON.parse(t.data);if("0"===r.result_code){We.saveClientValue("HW_ha_getConfigTime",String(Date.now()));var o=r.configList||[];n=o[0]&&"true"===o[0].config_value||!1}}We.saveClientValue(Pe,String(n)),e({oaidFlag:n})},fail:function(){We.saveClientValue(Pe,"false"),e({oaidFlag:!1})}})}}))]:[2,Promise.resolve(!1)];case 4:return[2,s.sent().oaidFlag];case 5:return[2,Promise.resolve(!0)]}}))}))},e.prototype.getCampaignPushInfo=function(){return null},e.prototype.isOnline=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,!0]}))}))},e}());var bt=new(function(){function e(){}return e.prototype.generateUserCommonProperty=function(e){var t,n,i,r,o,c;return h(this,void 0,void 0,(function(){var u,l,d,p,h,g,E,v,C,T,S,y,I,A;return f(this,(function(f){switch(f.label){case 0:return null===(t=null==e?void 0:e.systemOaidFlag)||void 0===t?[3,1]:(l=t,[3,3]);case 1:return[4,It.hiClient.getSystemOaidFlag()];case 2:l=f.sent(),f.label=3;case 3:return u=l,null===(n=null==e?void 0:e.clientOaidFlag)||void 0===n?[3,4]:(p=n,[3,7]);case 4:return(h=u)?[4,It.hiClient.getClientOaidFlag()]:[3,6];case 5:h=f.sent(),f.label=6;case 6:p=h,f.label=7;case 7:return d=p,null===(i=null==e?void 0:e.serverOaidFlag)||void 0===i?[3,8]:(E=i,[3,11]);case 8:return(v=u)?[4,It.hiClient.getServerOaidFlag()]:[3,10];case 9:v=f.sent(),f.label=10;case 10:E=v,f.label=11;case 11:return g=E,C=d&&g?String(u):"",this.immutableProperties?[3,13]:(T=a.getInfo(),[4,new Promise((function(e,t){s.getInfo({success:function(t){e(t)},fail:function(e,n){It.hiLog.warn(Ut,"","getInfo fail, code: "+n+", message: "+e),t(e)}})}))]);case 12:S=f.sent(),y=null!==(o=null!==(r=S.characteristics)&&void 0!==r?r:S.deviceType)&&void 0!==o?o:"",this.immutableProperties={_model:S.model,_lib_ver:"6.10.0-301",_lib_name:"hianalytics",_lib_type:It.hiClient.getLibType(),_sys_language:S.language,_os:S.osType,_os_ver:S.osVersionName,_screen_height:S.screenHeight,_screen_width:S.screenWidth,_first_open_time:We.getClientValue("HW_ha_firstOpenTime"),_is_testdevice:vt.isTestDevice(),_device_category:y.split(",").map((function(e){return""!==e?"quickAPP."+e:e})).join("|"),_package_name:null!==(c=It.hiAgcUtil.getConfig().client.package_name)&&void 0!==c?c:T.packageName},f.label=13;case 13:return A={_new_user_flag:vt.getNewUserFlag(),_signed:Number(We.getClientValue("HW_ha_existUserId")||ge),_restriction_enabled:String(At.isRestrictionEnabled())},[4,vt.resolveTerminalName()];case 14:return A._terminal_name=f.sent(),A._app_ver=vt.getConfig("appVersion")||"1.0.0",A._oaid_tracking_flag=C,I=A,vt.getRoutePolicy()===Ye.CN&&(I._restriction_shared=String(At.isRestrictionShared())),[2,Object.assign(I,this.immutableProperties)]}}))}))},e}());function Vt(e){return new Promise((function(t,n){c.get({key:e,success:function(e){t(e)},fail:function(t,i){It.hiLog.warn(Ut,"","getClientValue fail, key: "+e+", code: "+i+", message: "+t),n(new Error("get from storage failed"))}})}))}function Ft(e,t){return new Promise((function(n,i){c.set({key:e,value:t,success:function(){n()},fail:function(t,n){It.hiLog.warn(Ut,"","saveClientValue fail, key: "+e+", code: "+n+", message: "+t),i(new Error("save to storage failed"))}})}))}function Gt(e){return new Promise((function(t,n){c.delete({key:e,success:function(){t()},fail:function(t,i){It.hiLog.warn(Ut,"","removeItem fail, key: "+e+", code: "+i+", message: "+t),n(new Error("delete from storage failed"))}})}))}var Yt=new(function(){function e(){this.sessionDuration=18e5,this.sessionValue=""}return e.prototype.getClientValue=function(e){return h(this,void 0,void 0,(function(){var t;return f(this,(function(n){switch(n.label){case 0:return[4,this.getSavedObject(e)];case 1:return t=n.sent(),0===Object.keys(t).length?[2,Promise.resolve("")]:[2,Promise.resolve(t.value)]}}))}))},e.prototype.getSavedObject=function(e){return h(this,void 0,void 0,(function(){var t,n,i=this;return f(this,(function(r){switch(r.label){case 0:return[4,Vt(e)];case 1:return(t=r.sent())&&We.isValidStoredItem(t,(function(){return h(i,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,Vt(e)];case 1:return t.sent()?[4,Gt(e)]:[3,3];case 2:t.sent(),t.label=3;case 3:return[2]}}))}))}))?"object"!=typeof(n=JSON.parse(t))?[2,Promise.resolve({})]:[2,Promise.resolve(n)]:[2,Promise.resolve({})]}}))}))},e.prototype.getSavedString=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){return[2,Vt(e)]}))}))},e.prototype.isKeyExist=function(e){return h(this,void 0,void 0,(function(){var t;return f(this,(function(n){switch(n.label){case 0:return[4,this.getClientValue(e)];case 1:return t=n.sent(),[2,Promise.resolve(!!t)]}}))}))},e.prototype.saveClientValue=function(e,t,n){return h(this,void 0,void 0,(function(){var i;return f(this,(function(r){switch(r.label){case 0:return i=We.makeExpiryTime(n),[4,Ft(e,JSON.stringify({value:t,expiryTime:i}))];case 1:return r.sent(),[2]}}))}))},e.prototype.removeItem=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){switch(t.label){case 0:return[4,this.getClientValue(e)];case 1:return""!==t.sent()&&Gt(e),[2]}}))}))},e}()),Bt=function(){function e(e){this.type="",this.event="",this.properties={},this.eventtime=0,this.event_session_name="",this.first_session_event="",this.id="",this.sendState=le,this.collectionUrl="",this.routePolicy="",this.id=null!=e?e:He.create()}return e.toMemoryEventModel=function(e){return be(e,["properties","eventtime","event_session_name","first_session_event"])},e.toStorageEventModel=function(e){return be(e,["sendState"])},e}(),Wt=new(function(){function e(){this.headAppId="",this.timestamp=0,this.serviceTag=H,this.serviceId="hmshioperqrt",this.reqID="",this.productId=""}return e.prototype.setHeadAppId=function(e){this.headAppId=e},e.prototype.setTimestamp=function(e){this.timestamp=e},e.prototype.setServiceTag=function(e){this.serviceTag=e},e.prototype.setServiceId=function(e){this.serviceId=e},e.prototype.setReqID=function(e){this.reqID=e},e.prototype.setProductId=function(e){this.productId=e},e.prototype.getEventHead=function(){return{protocol_version:"1",serviceid:this.serviceId,appid:this.headAppId,timestamp:this.timestamp,servicetag:this.serviceTag,requestid:this.reqID,productid:this.productId}},e}());var Kt,xt,jt=rt,Jt=ot,qt=at,Qt=function(){function e(){this.sessionFlag="",this.eventUploadData={},this.isInit=!1}return e.prototype.getEvent=function(e,t,n,i,r){var o,a,s,c=new Bt;c.properties=t,c.event=e,c.eventtime=i,c.type=n,c.first_session_event=String(!this.isInit),c.event_session_name=(Ue(s=We.getSessionValue())&&(We.handleSessionValue(!0,!1),s=We.getSessionValue()),s),c.sendState=de,c.collectionUrl=null!==(o=r.url)&&void 0!==o?o:vt.getConfig("analyticsUrl");var u=null!==(a=r.region)&&void 0!==a?a:vt.getConfig(y),l=It.hiAgcUtil.getConfig().region||"";c.routePolicy="UNKNOWN"===u?l:u;var d=It.hiAgcUtil.getABTestProvider();if(d){var p=c,h={tag:st,type:n,source:T};d.onEvent(e,p,h)}return this.isInit||(this.isInit=!0),c},e.prototype.generateHttpHeader=function(e){var t=void 0===e?{}:e,n=t.reqId,i=void 0===n?"":n,r=t.logRegion,o=void 0===r?"":r,a=t.sdkToken,s=void 0===a?"":a,c=t.supportDebugMode,u=void 0===c||c,l={};return l[A]=vt.getConfig("appId"),l[M]=vt.getConfig("productId"),l[U]=vt.getConfig("resourceId"),l[m]=jt,l[N]=Jt,l[O]=o?w:H,l[R]=vt.getConfig("packageName"),l[L]=i,l[P]=qt,l[k]=vt.getConfig("clientId"),o&&(l[D]=encodeURIComponent(o)),u&&(l[$]=String(vt.getConfig(S))),l[_]=s,l},e.prototype.generateEventUploadData=function(e,t){var n;return h(this,void 0,void 0,(function(){var i,r,o,a;return f(this,(function(s){switch(s.label){case 0:return Wt.setHeadAppId(vt.getConfig("appId")),Wt.setProductId(vt.getConfig("productId")),Wt.setTimestamp((new Date).getTime()),Wt.setReqID(t),i=Wt.getEventHead(),(r={})[C]=e.map((function(e){return be(e,["id","sendState","collectionUrl","routePolicy"])})),o=null===(n=null==e?void 0:e[0])||void 0===n?void 0:n.routePolicy,[4,mt.getUserInfo({routePolicy:o})];case 1:return a=s.sent(),r[v]=a,this.eventUploadData[E]=i,this.eventUploadData[T]=r,[2,this.eventUploadData]}}))}))},e.prototype.generateLogPayload=function(e,t){var n={protocol_version:"1",serviceid:"hmshimaintqrt",appid:vt.getConfig("appId"),timestamp:(new Date).getTime(),servicetag:w,requestid:t,productid:vt.getConfig("productId")},i=[];return e.forEach((function(e){var t,n,r=i.find((function(t){var n=t.events_common;return n.projectId===e.projectId&&n.groupId===e.groupId&&n.streamId===e.streamId}));r?(r.events_common.tags=e.tags,r.events.push({eventtime:String(e.eventtime),event:"$WriteLog",properties:(t={},t[G]=ht.getPageIdByUrl(vt.prevScreenName),t[B]=ht.getPageIdByUrl(vt.currentScreenName),t.$Content=e.content,t)})):i.push({events_common:{projectId:e.projectId,groupId:e.groupId,streamId:e.streamId,tags:e.tags},events:[{eventtime:String(e.eventtime),event:"$WriteLog",properties:(n={},n[G]=ht.getPageIdByUrl(vt.prevScreenName),n[B]=ht.getPageIdByUrl(vt.currentScreenName),n.$Content=e.content,n)}]})})),{header:n,event:i}},e.prototype.getUploadEventModels=function(e,t){var n;n=e===$e.STOP_ANALYTICS_COLLECTION?It.sendTask.eventModels.filter((function(e){return e.event===$e.STOP_ANALYTICS_COLLECTION&&e.sendState===de})):e===$e.LaunchApp?t?It.sendTask.eventModels.filter((function(e){var t=e.sendState===de,n=e.sendState===fe;return-1!=[$e.LaunchApp,$e.FIRST_OPEN,$e.ENTER_SCREEN,$e.EXIT_SCREEN].indexOf(e.event)&&(t||n)})):It.sendTask.eventModels.filter((function(t){var n=t.sendState===de,i=t.sendState===fe,r=t.event!==$e.STOP_ANALYTICS_COLLECTION;return t.event===e&&(r&&n||i)})):t?It.sendTask.eventModels.filter((function(t){var n=t.sendState===de,i=t.sendState===fe,r=t.event!==$e.STOP_ANALYTICS_COLLECTION;return t.event===e&&(r&&n||i)})):It.sendTask.eventModels.filter((function(e){var t=e.sendState===de,n=e.sendState===fe;return e.event!==$e.STOP_ANALYTICS_COLLECTION&&t||n}));var i=vt.getConfig("analyticsUrl"),r="",o=n.filter((function(e){var t=e.collectionUrl,n=t!==i&&(""===r||t===r);return n&&""===r&&(r=e.collectionUrl),n}));return o.length>0&&(n=o),n=n.filter((function(e){var t=!0;return At.isDisableEvent(e.event)&&(t=!1,It.sendTask.eventModels=It.sendTask.eventModels.filter((function(t){return t.id!==e.id})),It.hiEventModelsAdapter.removeModel(e.id)),t}))},e.prototype.getUploadLogModels=function(){var e=It.sendLogTask.logRecords.filter((function(e){return e.sendState===de||e.sendState===fe})),t=vt.getConfig("analyticsUrl"),n="",i=e.filter((function(e){var i=e.collectionUrl!==t&&(""===n||e.collectionUrl===n);return i&&""===n&&(n=e.collectionUrl),i}));return i.length>0&&(e=i),e},e}(),Xt=!1,zt=new(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return p(t,e),t.prototype.doEventSendDone=function(e,t){e.forEach((function(e){e.event===$e.ADD_QUICK_APP&&kt.updateAddShortcutState()}))},t}(function(){function e(){this.eventModels=[],this.upLoadService=new Qt}return e.prototype.init=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.uploadData=function(e,t){return void 0===e&&(e=!1),h(this,void 0,void 0,(function(){var n,i,r,o,a,s,c,u=this;return f(this,(function(l){switch(l.label){case 0:return[4,It.hiClient.isOnline()];case 1:return l.sent()&&(At.reportFlag||e&&t===$e.STOP_ANALYTICS_COLLECTION)?0===this.eventModels.length?[2]:[4,this.getAaidAndAuthInfo()]:[2];case 2:return n=l.sent(),i=n.isValid,n.aaid,r=n.authInfo,i&&r?[4,this.generateFinalUploadInfos(e,t,r)]:[2];case 3:if(0===(o=l.sent()).length)return[2];for(a=function(t){0===t?s.sendEventData(e,o[t]):setTimeout((function(){u.sendEventData(e,o[t])}),200*t)},s=this,c=0;c<o.length;c++)a(c);return[2]}}))}))},e.prototype.sendEventData=function(e,t){var n=this,i=t.finalUploadEventData,r=t.uploadEventDataEventModels,o=t.isOtherCollectionUrl,a=t.config,s=t.uploadDataHeader;It.hiSendData.onEvent(i,s,a).then((function(t){It.hiLog.info("resultCode: 200"),n.setEventModelsStatus(r,he),n.doEventSendDone(r,e),n.eventModels=n.eventModels.filter((function(e){return e.sendState!==he}))})).catch((function(){n.setEventModelsStatus(r,fe),n.doEventSendFail(r,o),(o||vt.getConfig(S))&&(n.eventModels=n.eventModels.filter((function(e){return e.sendState!==fe})))}))},e.prototype.chunkEventModels=function(e){for(var t=[],n=It.sendPolicy.getUploadMaxCount(),i=Math.ceil(e.length/n),r=0;r<i;r++){var o=e.slice(r*n,(r+1)*n);t.push(o)}return t},e.prototype.generateFinalUploadInfos=function(e,t,n){return void 0===e&&(e=!1),h(this,void 0,void 0,(function(){var i,r,o,a,s,c,u,l,d,p,h,g,E;return f(this,(function(f){switch(f.label){case 0:if(i=[],0===(r=this.upLoadService.getUploadEventModels(t,e)).length)return[2,i];o=this.backupEventModelStatus(r),this.setEventModelsStatus(r,pe),"",a=this.upLoadService.generateHttpHeader({reqId:"",sdkToken:n}),s=this.chunkEventModels(r),c=0,f.label=1;case 1:return c<s.length?[4,this.getUploadEventDataEventModels(s[c])]:[3,6];case 2:return u=f.sent(),this.revertEventModelStatus(u,s[c],o),l=u[0],d=vt.getConfig("analyticsUrl")!==l.collectionUrl,p={mode:vt.getReportType(),url:l.collectionUrl,async:!e},h=He.create(),[4,this.upLoadService.generateEventUploadData(u,h)];case 3:return g=f.sent(),this.uploadDataAppendEventHeader(g,l),[4,this.generateFinalUploadEventData(g)];case 4:if("string"==typeof(E=f.sent())&&Ue(E))return[3,5];a[L]=h,i.push(be({finalUploadEventData:E,uploadEventDataEventModels:u,config:p,isOtherCollectionUrl:d,uploadDataHeader:a})),f.label=5;case 5:return c++,[3,1];case 6:return[2,i]}}))}))},e.prototype.backupEventModelStatus=function(e){for(var t={},n=0;n<e.length;n++){var i=e[n];t[i.id]=i.sendState}return t},e.prototype.revertEventModelStatus=function(e,t,n){if(e.length!==t.length)for(var i=e.map((function(e){return e.id})),r=0;r<t.length;r++){var o=t[r];-1===i.indexOf(o.id)&&this.setEventModelsStatus([o],n[o.id])}},e.prototype.getUploadEventDataEventModels=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){return[2,e]}))}))},e.prototype.getAaidAndAuthInfo=function(){return h(this,void 0,void 0,(function(){var e,t,n;return f(this,(function(i){switch(i.label){case 0:return(e=vt.getAAID())?[3,2]:[4,lt.collect(ct)];case 1:if(!(t=i.sent())[ct])return[2,{isValid:!1}];vt.addConfig("aaid",t[ct]),vt.setIsTestDevice(),e=vt.getAAID(),i.label=2;case 2:return[4,vt.getHaSdkToken()];case 3:return(n=i.sent())?[2,{aaid:e,authInfo:n,isValid:!0}]:[2,{isValid:!1}]}}))}))},e.prototype.uploadDataAppendEventHeader=function(e,t){},e.prototype.generateFinalUploadEventData=function(e){return h(this,void 0,void 0,(function(){return f(this,(function(t){return[2,e]}))}))},e.prototype.doEventSendDone=function(e,t){},e.prototype.doEventSendFail=function(e,t){},e.prototype.dtmProcessAspect=function(e,t,n){return!1},e.prototype.onEvent=function(e,t,n,i,r){var o,a=this;void 0===r&&(r={}),t=t||{};var s=r.immediately||!1;if(!this.dtmProcessAspect(e,t,r)&&""!==(null!==(o=r.url)&&void 0!==o?o:vt.getConfig("analyticsUrl"))){var c=this.upLoadService.getEvent(e,t,n,i,r);this.pushEventModel(c);var u=this.saveEventModel(c);s&&u.then((function(){a.uploadData(s,e).then((function(e){})).catch((function(e){}))}))}},e.prototype.setHeartbeatFunc=function(e){var t=this;this.timer=setTimeout((function(){Xt||(Xt=!0,t.uploadData(!1,"").then((function(e){Xt=!1,It.sendPolicy.eventUploadPolicyScheduleTime()})).catch((function(e){Xt=!1,It.sendPolicy.eventUploadPolicyScheduleTime()})))}),e)},e.prototype.setEventModelsStatus=function(e,t,n){var i=e.map((function(e){return e.id}));this.eventModels.forEach((function(e){-1!==i.indexOf(e.id)&&(void 0!==n&&e.sendState!==n||(e.sendState=t))}))},e.prototype.processEventsReceivedAfterLaunch=function(){"false"===We.getClientValue(Ie)&&(this.eventModels.length=0,this.removeAllEventModels())},e.prototype.clearData=function(e){this.removeEventModels(e),this.eventModels=this.eventModels.filter((function(t){return null!=e&&t.routePolicy!==e}))},e.prototype.getCurFocusStateSessionDuration=function(e){return vt.isBackground?We.minSessionDuration:We.sessionDuration},e.prototype.pushEventModel=function(e){this.eventModels.push(e)},e.prototype.saveEventModel=function(e){return Promise.resolve()},e.prototype.removeEventModels=function(e){},e.prototype.removeAllEventModels=function(){},e.prototype.isServerWebV3=function(){return!0},e.prototype.isServerWebEvent=function(){return!1},e}())),Zt=new(function(){function e(){}return e.prototype.migrate=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){switch(e.label){case 0:return It.hiLog.info("start quickapp migration"),[4,this.usingObjectStorage()];case 1:return e.sent(),[2,Promise.resolve()]}}))}))},e.prototype.usingObjectStorage=function(){return h(this,void 0,void 0,(function(){var e,t,n,i,r,o;return f(this,(function(a){switch(a.label){case 0:e=this.getKeyMappings(),t=0,n=e,a.label=1;case 1:return t<n.length?(i=n[t],[4,It.hiStorage.getSavedString(i.oldKey)]):[3,6];case 2:return(r=a.sent())?(o=i.newKey===Ne?"false":r,[4,It.hiStorage.saveClientValue(i.newKey,o,i.duration)]):[3,5];case 3:return a.sent(),[4,It.hiStorage.removeItem(i.oldKey)];case 4:a.sent(),a.label=5;case 5:return t++,[3,1];case 6:return[2]}}))}))},e.prototype.getKeyMappings=function(){var e=It.hiAgcUtil.getConfig().client.app_id;return[{oldKey:"HW_ha_"+e,newKey:Ne,duration:31536e6},{oldKey:"HW_hid_"+e,newKey:ye,duration:We.sessionDuration},{oldKey:"HW_analytics_enabled",newKey:Ie,duration:31536e6},{oldKey:"HW_ha_restriction_enabled",newKey:Ae,duration:31536e6}]},e}()),en=!1,tn=new(function(){function e(){this.logRecords=[],this.timerId=0,this.upLoadService=new Qt}return e.prototype.init=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.uploadData=function(){return h(this,void 0,void 0,(function(){var e,t,n,i=this;return f(this,(function(r){switch(r.label){case 0:return[4,It.hiClient.isOnline()];case 1:return r.sent()&&At.reportFlag?0===this.logRecords.length?[2]:[4,vt.getHaSdkToken()]:[2];case 2:return(e=r.sent())?(t={mode:vt.getReportType(),url:vt.getConfig("analyticsUrl")},n={},this.logRecords.forEach((function(e){var t=e.sendState;if(t===de||t===fe){var i=e.region;n[i]=n[i]||[],n[i].push(e)}})),Object.entries(n).forEach((function(n){for(var r=n[0],o=n[1],a=i.chunkLogDatas(o),s=function(n){var o=a[n];if(0===o.length)return{value:void 0};var s=He.create(),c=i.upLoadService.generateLogPayload(o,s),u=i.generateFinalUploadLogData(c);if("string"==typeof u&&Ue(u))return{value:void 0};var l=i.upLoadService.generateHttpHeader({reqId:s,logRegion:r,supportDebugMode:!1,sdkToken:e});o.forEach((function(e){return e.sendState=pe})),It.hiSendData.onEvent(u,l,t).then((function(){It.hiLog.info("upload log successfully, resultCode: 200"),o.forEach((function(e){return e.sendState=he})),i.doLogSendDone(o),i.logRecords=i.logRecords.filter((function(e){return e.sendState!==he}))}),(function(){o.forEach((function(e){return e.sendState=fe})),i.doLogSendFail(o)}))},c=0;c<a.length;c++){var u=s(c);if("object"==typeof u)return u.value}})),[2]):[2]}}))}))},e.prototype.chunkLogDatas=function(e){var t=It.sendPolicy.getUploadMaxCount();return[e.slice(0,t)]},e.prototype.generateFinalUploadLogData=function(e){return e},e.prototype.setHeartbeatFunc=function(e){var t=this;this.timerId=setTimeout((function(){en||(en=!0,t.uploadData().then((function(e){en=!1,It.sendPolicy.logUploadPolicyScheduleTime()})).catch((function(e){en=!1,It.sendPolicy.logUploadPolicyScheduleTime()})))}),e)},e.prototype.writeLog=function(e){e.sendState=de,this.logRecords.push(e),this.saveLogModel(e)},e.prototype.doLogSendDone=function(e){},e.prototype.doLogSendFail=function(e){},e.prototype.saveLogModel=function(e){},e}());!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(xt||(xt={}));var nn=function(){function e(){var t=this;this.moduleName="",this.logLevel=xt.VERBOSE,this.userLogProvider=null,this.logProvider=function(n,i){for(var r=[],o=2;o<arguments.length;o++)r[o-2]=arguments[o];if(!(i<t.logLevel)){var a=e.consoleType[i];if(!a)throw new Error("invalid logType: ".concat(i));console[a]("[Module:".concat(n,"] [").concat((new Date).toISOString(),"] | "),r.toString())}}}return e.createLogger=function(t){for(var n=0,i=e.logInstanceArray;n<i.length;n++){var r=i[n];if(r.moduleName==t)return r}var o=new e;return o.moduleName=t,e.logInstanceArray.push(o),o},e.prototype.setLogProvider=function(e){if("function"!=typeof e)throw new Error("logProvider must be set as a function");this.logProvider=e},e.prototype.setUserLogProvider=function(e){this.userLogProvider=e},e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.doLog(xt.DEBUG,e)},e.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.doLog(xt.VERBOSE,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.doLog(xt.INFO,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.doLog(xt.WARN,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.doLog(xt.ERROR,e)},e.prototype.doLog=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];this.userLogProvider&&this.userLogProvider(this.moduleName,e,t),this.logProvider(this.moduleName,e,t)},e.consoleType=((Kt={})[xt.DEBUG]="log",Kt[xt.VERBOSE]="log",Kt[xt.SILENT]="log",Kt[xt.INFO]="info",Kt[xt.WARN]="warn",Kt[xt.ERROR]="error",Kt),e.logInstanceArray=[],e}(),rn=function(e,t){return(rn=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function on(e,t,n,i){return new(n||(n=Promise))((function(r,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function s(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((i=i.apply(e,t||[])).next())}))}function an(e,t){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}var sn=function(){function e(){this.TWO_MINUTES_EARLY=12e4,this.ONE_HOUR=36e5,this.expiration=0,this.tokenString="",this.issuedAt="0",this.notBefore="0",this.lastRefreshTime=0}return e.prototype.constructFromJson=function(e){this.expiration=e.expiration,this.issuedAt=e.issuedAt,this.tokenString=e.tokenString,this.notBefore=e.notBefore,this.lastRefreshTime=e.lastRefreshTime},e.prototype.isValid=function(){var e=(new Date).getTime(),t=this.lastRefreshTime+1e3*this.expiration-this.TWO_MINUTES_EARLY;return null!=this.tokenString&&e<=t},e.prototype.allowRefresh=function(){return(new Date).getTime()-this.lastRefreshTime>this.ONE_HOUR},e}(),cn=function(e){function t(t){var n=e.call(this,t)||this;return n.REQUEST_URL="/agc/apigw/oauth2/v1/token",n.useJwt=0,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}rn(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.prototype.getBody=function(){return{grant_type:"client_credentials",client_id:this.getHeaderClientId(),client_secret:this.getClientSecret(),useJwt:this.getUseJwt()}},t.prototype.getUrl=function(){return this.getAgcgwUrl()+this.REQUEST_URL},t.prototype.setUseJwt=function(e){this.useJwt=e},t.prototype.getUseJwt=function(){return this.useJwt},t}(function(){function e(e){this.sdkPlatform="",this.sdkPlatformVersion="",this.sdkType="JS",this.packageName="",this.appVersion="",this.headerProductId="",this.headerAppId="",this.headerClientId="",this.clientSecret="",this.agcgwUrl="",this.agcgwBackUrl="",this.agcConfig=null,this.instance=null,this.sdkServiceName="agconnect-credential",this.sdkVersion="1.5.0",this.setAGCInstance(e)}return e.prototype.setAGCInstance=function(e){if(!e)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.AGC_INNER_ERROR,{message:"set AGCInstance using null or undefined object"},"CredentialsService");this.instance=e,this.agcConfig=null},e.prototype.getHeaderClientId=function(){return this.initConfig()?this.headerClientId:""},e.prototype.getClientSecret=function(){return this.initConfig()?this.clientSecret:""},e.prototype.getAgcgwUrl=function(){return this.initConfig()?this.agcgwUrl:""},e.prototype.getHeader=function(){if(!this.initConfig())return"";var e=this.instance.getService("AGCPlatformInfoService");return e&&(this.sdkPlatform=e.getPlatform(),this.sdkPlatformVersion=e.getPlatformVersion(),this.packageName=e.getPackageName(),this.appVersion=e.getAppVersion()),{sdkVersion:this.sdkVersion,sdkPlatform:this.sdkPlatform,sdkServiceName:this.sdkServiceName,sdkPlatformVersion:this.sdkPlatformVersion,sdkType:this.sdkType,packageName:this.packageName,appVersion:this.appVersion,app_id:this.headerAppId,client_id:this.headerClientId,productId:this.headerProductId,"Content-Type":"application/json;charset=UTF-8"}},e.prototype.initConfig=function(){if(!this.instance)throw new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.AGC_INNER_ERROR,{message:"set AGCInstance using null or undefined object"},"CredentialsService");return null==this.agcConfig&&(this.agcConfig=this.instance.config(),this.headerProductId=this.agcConfig.client.product_id,this.headerClientId=this.agcConfig.client.client_id,this.headerAppId=this.agcConfig.client.app_id,this.clientSecret=this.agcConfig.client.client_secret,this.agcgwUrl=this.instance.getGwUrl(),this.agcgwBackUrl=this.instance.getGwBackUrl()),!0},e}()),un=function(){function e(){}return e.getInstance=function(){return e.instance||(e.instance=new e),e.instance},e.prototype.getStorage=function(e){var t=e.getService("AGCStorageService");if(null!=t)return t.getStorageInstance(0,e.getCryptImp());ln.error("Get AGC storage Service failed.")},e}(),ln=nn.createLogger("CredentialsService"),dn=function(){function t(e){this.instance=e||_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].instance()}return t.prototype.removeToken=function(){if(this.instance.getCustomCredentialsProvider())return Promise.resolve();var e=this.getCredentialStoreKey(),t=un.getInstance().getStorage(this.instance);return t?t.remove(e).catch((function(e){return e instanceof _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError?Promise.reject(e):Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.REMOVE_TOKEN_FAILED,e,"CredentialsService"))})):Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.FAIL_TO_GET_STORAGE_SERVICE,null,"CredentialsService"))},t.prototype.getToken=function(e){return on(this,void 0,void 0,(function(){var t,n,i,r,o,a=this;return an(this,(function(s){switch(s.label){case 0:return this.instance.getCustomCredentialsProvider()?(t=new sn,[4,this.instance.getCustomCredentialsProvider().getToken(!!e)]):[3,2];case 1:return(n=s.sent())&&n.tokenString&&n.expiration?isNaN(Number(n.expiration))||Number(n.expiration)<=0?(ln.error("the customCredentialsProvider getToken must return valid expiration."),[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.GET_TOKEN_FAILED,{message:"the customCredentialsProvider getToken must return valid expiration"},"CredentialsService"))]):(t.tokenString=n.tokenString,t.expiration=n.expiration,t.lastRefreshTime=(new Date).getTime(),[2,Promise.resolve(t)]):(ln.error("the customCredentialsProvider getToken method must contain return value: tokenString, expiration."),[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.GET_TOKEN_FAILED,{message:"the customCredentialsProvider getToken method must contain return value: tokenString, expiration"},"CredentialsService"))]);case 2:return i=this.getCredentialStoreKey(),(r=un.getInstance().getStorage(this.instance))?(o=new sn,[2,r.get(i).then((function(t){return on(a,void 0,void 0,(function(){var n,a;return an(this,(function(s){switch(s.label){case 0:return t?o.constructFromJson(JSON.parse(t)):o=null,o&&o.isValid()?e&&o.allowRefresh()?[4,this.requestToken()]:[3,3]:[3,4];case 1:return n=s.sent(),[4,r.set(i,JSON.stringify(n))];case 2:return s.sent(),[2,Promise.resolve(n)];case 3:return[2,Promise.resolve(o)];case 4:return[4,this.requestToken()];case 5:return a=s.sent(),[4,r.set(i,JSON.stringify(a))];case 6:return s.sent(),[2,Promise.resolve(a)]}}))}))})).catch((function(e){return e instanceof _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError?Promise.reject(e):Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.GET_TOKEN_FAILED,e,"CredentialsService"))}))]):[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.FAIL_TO_GET_STORAGE_SERVICE,null,"CredentialsService"))]}}))}))},t.prototype.getCredentialStoreKey=function(){return this.instance.name()===_hw_agconnect_core__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_CATEGORY?"agcClientToken:"+this.instance.config().client.client_id:"agcClientToken_"+this.instance.name()+":"+this.instance.config().client.client_id},t.prototype.requestToken=function(){return on(this,void 0,void 0,(function(){var e,t;return an(this,(function(n){return(e=this.instance.getService("AGCNetworkService"))?((t=new cn(this.instance)).setUseJwt(1),[2,e.post(t.getUrl(),t.getBody(),t.getHeader()).then((function(e){if(e.data.ret&&0!=e.data.ret.code)return Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError({code:e.data.ret.code,message:e.data.ret.msg},null,"CredentialsService"));var t=new sn;return t.tokenString=e.data.access_token,t.expiration=e.data.expires_in,t.lastRefreshTime=(new Date).getTime(),Promise.resolve(t)}))]):[2,Promise.reject(new _hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCError(_hw_agconnect_instance__WEBPACK_IMPORTED_MODULE_3__.AGCErrorCode.FAIL_TO_GET_NETWORK_SERVICE,null,"CredentialsService"))]}))}))},t}();_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].registerInternalService({name:"CredentialsService",serviceFactory:function(e){return new dn(e)}});var pn=new(function(){function e(){}return e.prototype.init=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.getConfig=function(){return _hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].instance().config()},e.prototype.getToken=function(e){return h(this,void 0,void 0,(function(){var t;return f(this,(function(i){switch(i.label){case 0:if(!(t=_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].instance().getService("CredentialsService")))return[3,5];i.label=1;case 1:return i.trys.push([1,3,,4]),[4,t.getToken()];case 2:return[2,i.sent().tokenString];case 3:return i.sent(),It.hiLog.error(e,nt.code,nt.message),[2,""];case 4:return[3,6];case 5:return It.hiLog.warn(e,ze.code,ze.message),[2,""];case 6:return[2]}}))}))},e.prototype.getAaid=function(e){return h(this,void 0,void 0,(function(){var t;return f(this,(function(i){try{return null!=(t=_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].instance().getService("ClientInfoService"))?[2,t.getAaid()]:(It.hiLog.warn(e,ze.code,ze.message),[2,""])}catch(t){return It.hiLog.error(e,tt.code,tt.message),[2,""]}return[2]}))}))},e.prototype.deleteAaid=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2]}))}))},e.prototype.getPushToken=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,""]}))}))},e.prototype.getOaid=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,""]}))}))},e.prototype.getOaidFlag=function(){return h(this,void 0,void 0,(function(){return f(this,(function(e){return[2,!0]}))}))},e.prototype.getABTestProvider=function(){var e=_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].instance().getService("ABTestService");if(null!==e)return e.getABtestInstance("REMOTE_CONFIG")?e:null},e}());It.setHiLog(Mt),It.setHiSendData(wt),It.setSendLogTask(tn),It.setSendTask(zt),It.setHiAutoReport(kt),It.setHiStorage(Yt),It.setHiClientProperty(bt),It.setHiClient(Ht),It.setHiMigration(Zt),It.setHiAgcUtil(pn);var hn=function(){function e(){}return e.prototype.onEventCallback=function(e,t){var n={eventtime:(new Date).getTime(),isCallBack:!0};At.onEventCallback(e,t,n)},e}(),fn=new _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_0__.Singleton((function(){return new _t})),gn=new _hw_agconnect_core__WEBPACK_IMPORTED_MODULE_0__.Singleton((function(){return new hn})),En={InitSettings:gt,RoutePolicy:Ye,LogLevel:Ge,UserProfileType:Be,EventName:Le,ParamName:{STORENAME:"$StoreName",BRAND:"$Brand",CATEGORY:"$Category",PRODUCTID:"$ProductId",PRODUCTNAME:"$ProductName",PRODUCTFEATURE:"$ProductFeature",PRICE:"$Price",QUANTITY:"$Quantity",REVENUE:"$Revenue",CURRNAME:"$CurrName",PLACEID:"$PlaceId",DESTINATION:"$Destination",ENDDATE:"$EndDate",BOOKINGDAYS:"$BookingDays",PASSENGERSNUMBER:"$PassengersNumber",BOOKINGROOMS:"$BookingRooms",ORIGINATINGPLACE:"$OriginatingPlace",BEGINDATE:"$BeginDate",TRANSACTIONID:"$TransactionId",CLASS:"$Class",CLICKID:"$ClickId",PROMOTIONNAME:"$PromotionName",CONTENT:"$Content",EXTENDPARAM:"$ExtendParam",MATERIALNAME:"$MaterialName",MATERIALSLOT:"$MaterialSlot",MEDIUM:"$Medium",SOURCE:"$Source",KEYWORDS:"$Keywords",OPTION:"$Option",STEP:"$Step",VIRTUALCURRNAME:"$VirtualCurrName",VOUCHER:"$Voucher",PLACE:"$Place",SHIPPING:"$Shipping",TAXFEE:"$TaxFee",USERGROUPID:"$UserGroupId",LEVELNAME:"$LevelName",RESULT:"$Result",ROLENAME:"$RoleName",LEVELID:"$LevelId",CHANNEL:"$Channel",SCORE:"$Score",SEARCHKEYWORDS:"$SearchKeywords",CONTENTTYPE:"$ContentType",ACHIEVEMENTID:"$AchievementId",FLIGHTNO:"$FlightNo",POSITIONID:"$PositionId",PRODUCTLIST:"$ProductList",ACOUNTTYPE:"$AcountType",EVTRESULT:"$EvtResult",PREVLEVEL:"$PrevLevel",CURRVLEVEL:"$CurrvLevel",VOUCHERS:"$Vouchers",MATERIALSLOTTYPE:"$MaterialSlotType",LISTID:"$ListId",FILTERS:"$Filters",SORTS:"$Sorts",ORDERID:"$OrderId",PAYTYPE:"$PayType",REASON:"$Reason",EXPIREDATE:"$ExpireDate",VOUCHERTYPE:"$VoucherType",SERVICETYPE:"$ServiceType",DETAILS:"$Details",COMMENTTYPE:"$CommentType",REGISTMETHOD:"$RegistMethod",FEATURE:"$Feature",ROOMS:"$Rooms",SALEPRICE:"$SalePrice",RENTFEE:"$RentFee",RENTTYPE:"$RentType",ACTIVITYNAME:"$ActivityName",ACTIVITYTYPE:"$ActivityType",AMOUNT:"$Amount",BALANCE:"$Balance",BATTLENAME:"$BattleName",BATTLETYPE:"$BattleType",CARDLIST:"$CardList",CLASSLIMIT:"$ClassLimit",COMBAT:"$Combat",CUTSCENENAME:"$CutsceneName",DAMAGE:"$Damage",DIFFICULTY:"$Difficulty",DISCOUNT:"$Discount",DUNGEONNAME:"$DungeonName",DURATION:"$Duration",ENHANCETYPE:"$EnhanceType",EQUIPMENTID:"$EquipmentId",EQUIPMENTLEVEL:"$EquipmentLevel",EQUIPMENTNAME:"$EquipmentName",FIRSTCREATE:"$FirstCreate",FIRSTPAY:"$FirstPay",FIRSTSIGNIN:"$FirstSignIn",FRIENDNUMBER:"$FriendNumber",GIFTNAME:"$GiftName",GIFTTYPE:"$GiftType",INVITER:"$Inviter",ISFREE:"$IsFree",ISTOPLEVEL:"$IsTopLevel",ITEMLIST:"$ItemList",LEFTPULLSFORGUARANTEE:"$LeftPullsForGuarantee",LEVELBEFORE:"$LevelBefore",LEVELLIMIT:"$LevelLimit",MEMBERS:"$Members",MESSAGETITLE:"$MessageTitle",MESSAGETYPE:"$MessageType",MOUNTDEFAULTNAME:"$MountDefaultName",MOUNTID:"$MountId",MOUNTLEVEL:"$MountLevel",MVP:"$MVP",NEWCLASS:"$NewClass",NEWVALUE:"$NewValue",NUMBEROFCARDS:"$NumberOfCards",NUMBEROFDRAWING:"$NumberOfDrawing",OLDCLASS:"$OldClass",OLDVALUE:"$OldValue",OPERATION:"$Operation",PACKAGETYPE:"$PackageType",PARTICIPANTS:"$Participants",PETDEFAULTNAME:"$PetDefaultName",PETID:"$PetId",PETLEVEL:"$PetLevel",QUALITY:"$Quality",RANKING:"$Ranking",REWARD:"$Reward",ROLECLASS:"$RoleClass",ROLECOMBAT:"$RoleCombat",ROLEGENDER:"$RoleGender",SERVER:"$Server",SKILLLEVEL:"$SkillLevel",SKILLLEVELBEFORE:"$SkillLevelBefore",SKILLNAME:"$SkillName",TASKNAME:"$TaskName",TASKTYPE:"$TaskType",TOTALAFTERCHANGE:"$TotalAfterChange",TYPE:"$Type",USERGROUPLEVEL:"$UserGroupLevel",USERGROUPNAME:"$UserGroupName",VIDEONAME:"$VideoName",VIDEOTYPE:"$VideoType",VIPLEVEL:"$VIPLevel",WINREASON:"$WinReason",VIPTYPE:"$VIPType",VIPSTATUS:"$VIPStatus",VIPEXPIREDATE:"$VIPExpireDate",ENTER:"$Enter",STARTDATE:"$StartDate",EFFECTIVETIME:"$EffectiveTime",NAME:"$Name",MODE:"$Mode",SUBJECT:"$Subject",ACCURACY:"$Accuracy",CONTENTLENGTH:"$ContentLength",REMARK:"$Remark",DAYS:"$Days",POSTID:"$PostId",ENTRY:"$Entry",INFORMATIONTYPE:"$InformationType",INFORMATION:"$Information",TASKID:"$TaskId",LEVEL:"$Level",CONTENTNAME:"$ContentName",PAGENAME:"$PageName",PROPS:"$Props",PURCHASEENTRY:"$PurchaseEntry",ARRIVALDATE:"$ArrivalDate",BINDDURATION:"$BindDuration",BUYERTYPE:"$BuyerType",CONFIGURATION:"$Configuration",DEALERNAME:"$DealerName",DEVICETYPE:"$DeviceType",DEVICENAME:"$DeviceName",ENERGY:"$Energy",ISLOAN:"$IsLoan",LOANCHANNEL:"$LoanChannel",LOANPRODUCTNAME:"$LoanProductName",MODEL:"$Model",OCCURREDDATE:"$OccurredDate",REPAYMENTMETHOD:"$RepaymentMethod",SEAT:"$Seat",SERIES:"$Series",ACTION:"$Action",PAGE:"$Page",INDEX:"$Index",MODULE:"$Module",SOURCEPAGENAME:"$SourcePageName",CITY:"$City",FROMCITY:"$FromCity",TOCITY:"$ToCity",DEPARTUREDATE:"$DepartureDate",RETURNDATE:"$ReturnDate",TRIPTYPE:"$TripType",SEARCHHOTEL:"$SearchHotel",SPECIALTICKET:"$SpecialTicket",HASBABY:"$HasBaby",HASCHILDREN:"$HasChildren",COUNTRY:"$Country",STAR:"$Star",CHECKINDATE:"$CheckinDate",CHECKOUTDATE:"$CheckoutDate",ALDULTCOUNT:"$AldultCount",BABYCOUNT:"$BabyCount",CHILDRENCOUNT:"$ChildrenCount",FROM:"$From",CARMODE:"$CarMode",CARTIME:"$CarTime",FLIGHTID:"$FlightID",SEARCHRESULT:"$SearchResult",PRODUCT:"$Product",DEPARTURETIME:"$DepartureTime",ARRIVETIME:"$ArriveTime",DEPARTUREAIRPORT:"$DepartureAirport",ARRIVEEAIRPORT:"$ArriveeAirport",AIRLINE:"$Airline",FLIGHTTYPE:"$FlightType",DIRECTFLIGHT:"$DirectFlight",TRAINTYPE:"$TrainType",FROMSTATION:"$FromStation",BEDTYPE:"$BedType",BREAKFAST:"$Breakfast",ARRIVEDATE:"$ArriveDate",TRAINID:"$TrainID",HOTELID:"$HotelID",HOTELNAME:"$HotelName",TRIPTAG:"$TripTag",HOTELTYPE:"$HotelType",CABIN:"$Cabin",ROOMTYPE:"$RoomType",CARTYPE:"$CarType",SUPPLIER:"$Supplier",STUDENTCOUNT:"$StudentCount",ROOMCOUNT:"$RoomCount",PERSONCOUNT:"$PersonCount",VOUCHERID:"$VoucherID",VOUCHERNAME:"$VoucherName",VOUCHERPRICE:"$VoucherPrice",USERTYPE:"$UserType",TARGET:"$Target",ISCOMPELETED:"$IsCompeleted",USERLEVEL:"$UserLevel",TIME:"$Time",DISTANCE:"$Distance",CALORIECONSUMED:"$CalorieConsumed",PROGRESS:"$Progress",SOURCEPAGE:"$SourcePage",MULTIPLEACCOUNTS:"$MultipleAccounts",ACCOUNTTYPE:"$AccountType",FAILUREREASON:"$FailureReason",AUTHORITY:"$Authority",CARDTYPE:"$CardType",ISSUEBANK:"$IssueBank",TRANSFORMAMOUNT:"$TransformAmount",BANKNAME:"$BankName",ANK_NAME:"bank_name",SOURCEMODULE:"$SourceModule",STOCKCODE:"$Stockcode",STOCKNAME:"$Stockname",MARKETCODE:"$MarketCode",MARKETNAME:"$MarketName",VIEWTYPE:"$ViewType",TRENDCYCLE:"$TrendCycle",TRANSACTIONTYPE:"$TransactionType",CURRENCY:"$Currency",MONEY:"$Money",FINANCEID:"$FinanceId",FINANCENAME:"$FinanceName",FINANCETYPE:"$FinanceType",FINANCERATE:"$FinanceRate",FINANCETIMELIMIT:"$FinanceTimeLimit",FINANCEAMOUNTMIN:"$FinanceAmountMin",FINANCERISKLEV:"$FinanceRiskLev",PURCHASEAMOUNT:"$PurchaseAmount",HANDLINGFEES:"$HandlingFees",REDEMPTIONAMOUNT:"$RedemptionAmount",RETURNAMOUNT:"$ReturnAmount",FUNDCODE:"$FundCode",FUNDTYPE:"$FundType",FUNDNAME:"$FundName",FUNDRISKLEV:"$FundRiskLev",CHARGERATE:"$ChargeRate",PAYMENTMETHOD:"$PaymentMethod",FIXEDCYCLE:"$FixedCycle",ENTRANCE:"$Entrance",CODE:"$code",NEWSTOPIC:"$NewsTopic",INFORMATIONSOURCE:"$InformationSource",COMMENTSNUMBER:"$CommentsNumber",FORWARDINGNUMBER:"$forwardingNumber",LIKES:"$Likes",TITLE:"$Title",SEARCHTYPE:"$SearchType",SOURCELOCATION:"$SourceLocation",LOCATION:"$Location",ID:"$Id",PLAYMODE:"$PlayMode",LISTS:"$Lists",ADLOCATION:"$Adlocation",ADCATEGORY:"$AdCategory",ADTHEME:"$AdTheme",BUTTONNAME:"$ButtonName",USERID:"$UserID",PAGECATEGORY:"$PageCategory",RATING:"$Rating",PERFORMANCE:"$Performance",TRADINGRULES:"$TradingRules",PORTFOLIO:"$Portfolio",INVESTMENTMANAGER:"$InvestmentManager",FUNDSIZE:"$FundSize",VIPMONEY:"$VipMoney",VIPLOCATION:"$VipLocation",VIPFAILED:"$VipFailed",SECTION:"$Section"}};_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"].registerApiProvider("analytics",(function(){return fn.get()}),En),function(e){e.registerApiProvider("hmscore_analytics",(function(){return gn.get()}))}(_hw_agconnect_api__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/@hw-hmscore/hms-js-base/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@hw-hmscore/hms-js-base/src/index.js ***!
  \***********************************************************/
/***/ (function(module) {

!function(e,t){ true?module.exports=t():0}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=26)}([function(e,t,r){"use strict";r.d(t,"a",(function(){return y}));var n,i,o,a,s,u=r(3),c=r.n(u),f=r(4),l=r.n(f),p=r(7);function h(){(n=p.a.get("hmscoreFramework","HMSLogger"))&&(i=n.debug,o=n.info,a=n.warn,s=n.error)}function d(e,t,r,n){for(var i=arguments.length,o=new Array(i>4?i-4:0),a=4;a<i;a++)o[a-4]=arguments[a];"function"==typeof e?e.apply(void 0,[r,n].concat(o)):t.apply(void 0,["[".concat(r,"] ").concat(n||"")].concat(o))}var y=function(){function e(){c()(this,e)}return l()(e,null,[{key:"debug",value:function(e,t){n||h();for(var r=arguments.length,o=new Array(r>2?r-2:0),a=2;a<r;a++)o[a-2]=arguments[a];d.apply(void 0,[i,console.debug||console.log,e,t].concat(o))}},{key:"info",value:function(e,t){n||h();for(var r=arguments.length,i=new Array(r>2?r-2:0),a=2;a<r;a++)i[a-2]=arguments[a];d.apply(void 0,[o,console.info,e,t].concat(i))}},{key:"warn",value:function(e,t){n||h();for(var r=arguments.length,i=new Array(r>2?r-2:0),o=2;o<r;o++)i[o-2]=arguments[o];d.apply(void 0,[a,console.warn,e,t].concat(i))}},{key:"error",value:function(e,t){n||h();for(var r=arguments.length,i=new Array(r>2?r-2:0),o=2;o<r;o++)i[o-2]=arguments[o];d.apply(void 0,[s,console.error,e,t].concat(i))}}]),e}()},function(e,t,r){"use strict";r.d(t,"j",(function(){return n})),r.d(t,"k",(function(){return i})),r.d(t,"i",(function(){return o})),r.d(t,"e",(function(){return a})),r.d(t,"c",(function(){return s})),r.d(t,"d",(function(){return u})),r.d(t,"g",(function(){return c})),r.d(t,"f",(function(){return f})),r.d(t,"b",(function(){return l})),r.d(t,"h",(function(){return p})),r.d(t,"a",(function(){return h}));var n="HMS-JS-BASE",i="weexJsbCallback",o="rnJsbCallback",a="com.huawei.hms.adapter",s="JsbInternalAbility",u=1001,c=1002,f=1005,l=1,p=0,h=1},function(e,t,r){"use strict";(function(e){var n,i=r(0),o=r(1),a=0;t.a={uniqueId:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return"".concat(e).concat(a++,"_").concat((new Date).getTime(),"_").concat(Math.random())},getJSCore:function(){return n||(this.isWeex()?n=weex.requireModule("JSCore"):this.isRN()?i.a.debug(o.j,"this is RN"):n=this.isHarmony()?ModuleGroup.getGroup("AceModuleGroup/HmsBridge"):this.isQickApp()?e.requireAPI("service.jsb"):window.JSCore,n)},setJSCore:function(e){n=e},isWebView:function(){return"function"==typeof Window&&window instanceof Window},isWeex:function(){return"undefined"!=typeof weex},isRN:function(){return"undefined"!=typeof GLOBAL},isCordova:function(){return"undefined"!=typeof window&&void 0!==window.cordova&&!this.isCapacitor()},isCapacitor:function(){return"undefined"!=typeof window&&void 0!==window.Capacitor&&void 0!==window.Capacitor.Plugins.JSBCapacitorPlugin},isHarmony:function(){return"undefined"!=typeof ModuleGroup},isOHOS:function(){var e;return"undefined"!=typeof globalThis&&"ohos.base"===(null===(e=globalThis.hmscoreFramework)||void 0===e?void 0:e.xpsfJsTrigger)},isSupportPAF:function(){var e,t;return"undefined"!=typeof globalThis&&("paf.base"===(null===(e=globalThis.pafFramework)||void 0===e?void 0:e.xpsfJsTrigger)||"paf.binding"===(null===(t=globalThis.pafFramework)||void 0===t?void 0:t.xpsfJsTrigger))},isHarmonyWebview:function(){return"undefined"!=typeof window&&!!(window.jsbHarmonyWebview&&"function"==typeof window.jsbHarmonyWebview.call)},isQickApp:function(){return void 0!==e&&void 0!==e.quickapp},getPositionInfoById:function(e){var t=document.getElementById(e),r=t.getBoundingClientRect(),n=r.left+t.scrollLeft,i=r.top+t.scrollTop;return{left:n,top:i,width:r.right-n,height:r.bottom-i}}}}).call(this,r(18))},function(e,t){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){function r(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}e.exports=function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=function(){};n.prototype.toDebugString,n.prototype.toDebugStringInternal;var i={FieldType:{INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31},WireType:{INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5},FieldTypeToWireType:function(e){var t=i.FieldType,r=i.WireType;switch(e){case t.INT32:case t.INT64:case t.UINT32:case t.UINT64:case t.SINT32:case t.SINT64:case t.BOOL:case t.ENUM:case t.VHASH64:return r.VARINT;case t.DOUBLE:case t.FIXED64:case t.SFIXED64:case t.FHASH64:return r.FIXED64;case t.STRING:case t.MESSAGE:case t.BYTES:return r.DELIMITED;case t.FLOAT:case t.FIXED32:case t.SFIXED32:return r.FIXED32;case t.INVALID:case t.GROUP:default:return r.INVALID}},INVALID_FIELD_NUMBER:-1,FLOAT32_EPS:1401298464324817e-60,FLOAT32_MIN:11754943508222875e-54,FLOAT32_MAX:34028234663852886e22,FLOAT64_EPS:5e-324,FLOAT64_MIN:22250738585072014e-324,FLOAT64_MAX:17976931348623157e292,TWO_TO_20:1048576,TWO_TO_23:8388608,TWO_TO_31:2147483648,TWO_TO_32:4294967296,TWO_TO_52:4503599627370496,TWO_TO_63:0x8000000000000000,TWO_TO_64:0x10000000000000000,ZERO_HASH:"\0\0\0\0\0\0\0\0"}},function(e,t){e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return f}));var n,i=r(3),o=r.n(i),a=r(4),s=r.n(a),u=r(1),c=r(0);n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:void 0;var f=function(){function e(){o()(this,e)}return s()(e,null,[{key:"set",value:function(e,t,r){"string"==typeof e?"string"==typeof t?(n[e]||(n[e]={}),n[e][t]=r):c.a.error(u.j,"HGlobalVariableManager.set key is not string."):c.a.error(u.j,"HGlobalVariableManager.set moduleName is not string.")}},{key:"get",value:function(e,t){if("string"==typeof e){if("string"==typeof t)return n[e]?n[e][t]:void 0;c.a.error(u.j,"HGlobalVariableManager.get key is not string.")}else c.a.error(u.j,"HGlobalVariableManager.get moduleName is not string.")}}]),e}()}).call(this,r(18))},function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return o}));var n=r(5),i=r(13),o={},a="[ptotobuf utils] ";o.split64Low=0,o.split64High=0,o.splitUint64=function(e){console.log("".concat(a," ").concat("utils"," splitUint64"));var t=e>>>0,r=Math.floor((e-t)/n.a.TWO_TO_32)>>>0;o.split64Low=t,o.split64High=r},o.splitInt64=function(e){var t=e<0,r=(e=Math.abs(e))>>>0,i=Math.floor((e-r)/n.a.TWO_TO_32);i>>>=0,t&&(i=~i>>>0,r=~r>>>0,(r+=1)>4294967295&&(r=0,++i>4294967295&&(i=0))),o.split64Low=r,o.split64High=i},o.splitZigzag64=function(e){console.log("".concat(a," ").concat("utils"," splitZigzag64"));var t=e<0;e=2*Math.abs(e),o.splitUint64(e);var r=o.split64Low,n=o.split64High;t&&(0==r?0==n?(r=4294967295,n=4294967295):(n--,r=4294967295):r--),o.split64Low=r,o.split64High=n},o.splitFloat32=function(e){var t,r,i=e<0?1:0;if(0!==(e=i?-e:e)){if(isNaN(e))return o.split64High=0,void(o.split64Low=2147483647);if(e>n.a.FLOAT32_MAX)return o.split64High=0,void(o.split64Low=(i<<31|2139095040)>>>0);if(e<n.a.FLOAT32_MIN)return r=Math.round(e/Math.pow(2,-149)),o.split64High=0,void(o.split64Low=(i<<31|r)>>>0);t=Math.floor(Math.log(e)/Math.LN2),r=e*Math.pow(2,-t),(r=Math.round(r*n.a.TWO_TO_23))>=16777216&&++t,r&=8388607,o.split64High=0,o.split64Low=(i<<31|t+127<<23|r)>>>0}else 1/e>0?(o.split64High=0,o.split64Low=0):(o.split64High=0,o.split64Low=2147483648)},o.splitFloat64=function(e){var t=e<0?1:0;if(0!==(e=t?-e:e)){if(isNaN(e))return o.split64High=2147483647,void(o.split64Low=4294967295);if(e>n.a.FLOAT64_MAX)return o.split64High=(t<<31|2146435072)>>>0,void(o.split64Low=0);if(e<n.a.FLOAT64_MIN){var r=(s=e/Math.pow(2,-1074))/n.a.TWO_TO_32;return o.split64High=(t<<31|r)>>>0,void(o.split64Low=s>>>0)}var i=e,a=0;if(i>=2)for(;i>=2&&a<1023;)a++,i/=2;else for(;i<1&&a>-1022;)i*=2,a--;r=(s=e*Math.pow(2,-a))*n.a.TWO_TO_20&1048575;var s,u=s*n.a.TWO_TO_52>>>0;o.split64High=(t<<31|a+1023<<20|r)>>>0,o.split64Low=u}else 1/e>0?(o.split64High=0,o.split64Low=0):(o.split64High=2147483648,o.split64Low=0)},o.joinUint64=function(e,t){return t*n.a.TWO_TO_32+(e>>>0)},o.joinInt64=function(e,t){var r=2147483648&t;r&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0));var n=o.joinUint64(e,t);return r?-n:n},o.joinFloat32=function(e,t){var r=2*(e>>31)+1,n=e>>>23&255,i=8388607&e;return 255==n?i?NaN:r*(1/0):0==n?r*Math.pow(2,-149)*i:r*Math.pow(2,n-150)*(i+Math.pow(2,23))},o.joinFloat64=function(e,t){var r=2*(t>>31)+1,i=t>>>20&2047,o=n.a.TWO_TO_32*(1048575&t)+e;return 2047==i?o?NaN:r*(1/0):0==i?r*Math.pow(2,-1074)*o:r*Math.pow(2,i-1075)*(o+n.a.TWO_TO_52)},o.DIGITS=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],o.ZERO_CHAR_CODE_=48,o.A_CHAR_CODE_=97,o.joinSignedDecimalString=function(e,t){console.log("".concat(a," ").concat("utils"," joinSignedDecimalString"));var r=2147483648&t;r&&(t=~t+(0==(e=1+~e>>>0)?1:0)>>>0);var n=o.joinUnsignedDecimalString(e,t);return r?"-"+n:n},o.byteSourceToUint8Array=function(t){return t.constructor===Uint8Array?t:t.constructor===ArrayBuffer?(t=t,new Uint8Array(t)):void 0!==e&&t.constructor===e?new Uint8Array(t):t.constructor===Array?(t=t,new Uint8Array(t)):t.constructor===String?(t=t,Object(i.b)(t)):new Uint8Array(0)}}).call(this,r(35).Buffer)},function(e,t,r){var n=r(33),i=r(22);e.exports=function(e,t){var r=i(e,t,"get");return n(e,r)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){function r(t){return e.exports=r=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},e.exports.__esModule=!0,e.exports.default=e.exports,r(t)}e.exports=r,e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(39)();e.exports=n;try{regeneratorRuntime=n}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}},function(e,t){function r(t){return e.exports=r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,r(t)}e.exports=r,e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){"use strict";r.d(t,"b",(function(){return s})),r.d(t,"a",(function(){return l})),r.d(t,"c",(function(){return p}));var n=null,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o={},a=0,s=function(e){var t=e.length,r=3*t/4;r%3?r=Math.floor(r):u(e[t-1])&&(u(e[t-2])?r-=2:r-=1);var n=new Uint8Array(r),i=0;return c(e,(function(e){n[i++]=e})),i!==r?n.subarray(0,i):n},u=function(e){return-1!="=.".indexOf(e)},c=function(e,t){f();var r=0;function i(t){for(;r<e.length;){var i=e.charAt(r++),o=n[i];if(null!=o)return o;if(!/^[\s\xa0]*$/.test(i))throw new Error("Unknown base64 encoding at char: "+i)}return t}for(;;){var o=i(-1),a=i(0),s=i(64),u=i(64);if(64===u&&-1===o)return;if(t(o<<2|a>>4),64!=s)if(t(a<<4&240|s>>2),64!=u)t(s<<6&192|u)}},f=function(){if(!n){n={};for(var e=i.split(""),t=["+/=","+/","-_=","-_.","-_"],r=0;r<5;r++){var a=e.concat(t[r].split(""));o[r]=a;for(var s=0;s<a.length;s++){var u=a[s];void 0===n[u]&&(n[u]=s)}}}},l=function(e){if(e.length<=8192)return String.fromCharCode.apply(null,e);for(var t="",r=0;r<e.length;r+=8192){var n=Array.prototype.slice.call(e,r,r+8192);t+=String.fromCharCode.apply(null,n)}return t},p=function(e,t){void 0===t&&(t=a),f();for(var r=o[t],n=new Array(Math.floor(e.length/3)),i=r[64]||"",s=0,u=0;s<e.length-2;s+=3){var c=e[s],l=e[s+1],p=e[s+2],h=r[c>>2],d=r[(3&c)<<4|l>>4],y=r[(15&l)<<2|p>>6],g=r[63&p];n[u++]=""+h+d+y+g}var v=0,b=i;switch(e.length-s){case 2:b=r[(15&(v=e[s+1]))<<2]||i;case 1:var w=e[s],m=r[w>>2],_=r[(3&w)<<4|v>>4];n[u]=""+m+_+b+i}return n.join("")}},function(e,t,r){var n=r(31);e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&n(e,t)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(12).default,i=r(32);e.exports=function(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return i(e)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){function r(e,t,r,n,i,o,a){try{var s=e[o](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,i)}e.exports=function(e){return function(){var t=this,n=arguments;return new Promise((function(i,o){var a=e.apply(t,n);function s(e){r(a,i,o,s,u,"next",e)}function u(e){r(a,i,o,s,u,"throw",e)}s(void 0)}))}},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(34),i=r(22);e.exports=function(e,t,r){var o=i(e,t,"set");return n(e,o,r),r},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(19);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to "+r+" private field on non-instance");return t.get(e)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(27),i=r(20),o=r(21),a=r(28);e.exports=function(e){return n(e)||i(e)||o(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){var n=r(29),i=r(20),o=r(21),a=r(30);e.exports=function(e){return n(e)||i(e)||o(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},function(e){e.exports=JSON.parse('{"a":"6.8.0-300"}')},function(e,t,r){e.exports=r(40)},function(e,t,r){var n=r(19);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e){if(Array.isArray(e))return e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){function r(t,n){return e.exports=r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},e.exports.__esModule=!0,e.exports.default=e.exports,r(t,n)}e.exports=r,e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e,t){return t.get?t.get.call(e):t.value},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t){e.exports=function(e,t,r){if(t.set)t.set.call(e,r);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=r}},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var n=r(36),i=r(37),o=r(38);function a(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,r);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return l(this,e)}return c(this,e,t,r)}function c(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=p(e,t);return e}(e,t,r,n):"string"==typeof t?function(e,t,r){"string"==typeof r&&""!==r||(r="utf8");if(!u.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|d(t,r),i=(e=s(e,n)).write(t,r);i!==n&&(e=e.slice(0,i));return e}(e,t,r):function(e,t){if(u.isBuffer(t)){var r=0|h(t.length);return 0===(e=s(e,r)).length||t.copy(e,0,0,r),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?s(e,0):p(e,t);if("Buffer"===t.type&&o(t.data))return p(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function f(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function l(e,t){if(f(t),e=s(e,t<0?0:0|h(t)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}function p(e,t){var r=t.length<0?0:0|h(t.length);e=s(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function h(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function d(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return U(e).length;default:if(n)return B(e).length;t=(""+t).toLowerCase(),n=!0}}function y(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return k(this,t,r);case"utf8":case"utf-8":return T(this,t,r);case"ascii":return O(this,t,r);case"latin1":case"binary":return R(this,t,r);case"base64":return A(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function g(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function v(e,t,r,n,i){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:b(e,t,r,n,i);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):b(e,[t],r,n,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,r,n,i){var o,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var f=-1;for(o=r;o<s;o++)if(c(e,o)===c(t,-1===f?0:o-f)){if(-1===f&&(f=o),o-f+1===u)return f*a}else-1!==f&&(o-=o-f),f=-1}else for(r+u>s&&(r=s-u),o=r;o>=0;o--){for(var l=!0,p=0;p<u;p++)if(c(e,o+p)!==c(t,p)){l=!1;break}if(l)return o}return-1}function w(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");n>o/2&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[r+a]=s}return a}function m(e,t,r,n){return V(B(t,e.length-r),e,r,n)}function _(e,t,r,n){return V(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function E(e,t,r,n){return _(e,t,r,n)}function I(e,t,r,n){return V(U(t),e,r,n)}function S(e,t,r,n){return V(function(e,t){for(var r,n,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function A(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function T(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,a,s,u,c=e[i],f=null,l=c>239?4:c>223?3:c>191?2:1;if(i+l<=r)switch(l){case 1:c<128&&(f=c);break;case 2:128==(192&(o=e[i+1]))&&(u=(31&c)<<6|63&o)>127&&(f=u);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(u=(15&c)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(f=u);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&c)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(f=u)}null===f?(f=65533,l=1):f>65535&&(f-=65536,n.push(f>>>10&1023|55296),f=56320|1023&f),n.push(f),i+=l}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=a(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,r){return c(null,e,t,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,r){return function(e,t,r,n){return f(t),t<=0?s(e,t):void 0!==r?"string"==typeof n?s(e,t).fill(r,n):s(e,t).fill(r):s(e,t)}(null,e,t,r)},u.allocUnsafe=function(e){return l(null,e)},u.allocUnsafeSlow=function(e){return l(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,i=0,o=Math.min(r,n);i<o;++i)if(e[i]!==t[i]){r=e[i],n=t[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=u.allocUnsafe(t),i=0;for(r=0;r<e.length;++r){var a=e[r];if(!u.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(n,i),i+=a.length}return n},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?T(this,0,e):y.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,r,n,i){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),t<0||r>e.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&t>=r)return 0;if(n>=i)return-1;if(t>=r)return 1;if(this===e)return 0;for(var o=(i>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(o,a),c=this.slice(n,i),f=e.slice(t,r),l=0;l<s;++l)if(c[l]!==f[l]){o=c[l],a=f[l];break}return o<a?-1:a<o?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return v(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return v(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return w(this,e,t,r);case"utf8":case"utf-8":return m(this,e,t,r);case"ascii":return _(this,e,t,r);case"latin1":case"binary":return E(this,e,t,r);case"base64":return I(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function O(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function R(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function k(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=t;o<r;++o)i+=F(e[o]);return i}function P(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function N(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function x(e,t,r,n,i,o){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function j(e,t,r,n){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-r,2);i<o;++i)e[r+i]=(t&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function C(e,t,r,n){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-r,4);i<o;++i)e[r+i]=t>>>8*(n?i:3-i)&255}function M(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function H(e,t,r,n,o){return o||M(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function L(e,t,r,n,o){return o||M(e,0,r,8),i.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=u.prototype;else{var i=t-e;r=new u(i,void 0);for(var o=0;o<i;++o)r[o]=this[o+e]}return r},u.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||N(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},u.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||N(e,t,this.length);for(var n=this[e+--t],i=1;t>0&&(i*=256);)n+=this[e+--t]*i;return n},u.prototype.readUInt8=function(e,t){return t||N(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||N(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||N(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||N(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||N(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||N(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||N(e,t,this.length);for(var n=t,i=1,o=this[e+--n];n>0&&(i*=256);)o+=this[e+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},u.prototype.readInt8=function(e,t){return t||N(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||N(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){t||N(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return t||N(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||N(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||N(e,4,this.length),i.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||N(e,4,this.length),i.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||N(e,8,this.length),i.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||N(e,8,this.length),i.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||x(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||x(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):C(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):C(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var i=Math.pow(2,8*r-1);x(this,e,t,r,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<r&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var i=Math.pow(2,8*r-1);x(this,e,t,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):j(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):j(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):C(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||x(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):C(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,r){return H(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return H(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return L(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return L(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var i,o=n-r;if(this===e&&r<t&&t<n)for(i=o-1;i>=0;--i)e[i+t]=this[i+r];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+o),t);return o},u.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var i=e.charCodeAt(0);i<256&&(e=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{var a=u.isBuffer(e)?e:B(new u(e,n).toString()),s=a.length;for(o=0;o<r-t;++o)this[o+t]=a[o%s]}return this};var D=/[^+\/0-9A-Za-z-_]/g;function F(e){return e<16?"0"+e.toString(16):e.toString(16)}function B(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],a=0;a<n;++a){if((r=e.charCodeAt(a))>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function U(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(D,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function V(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}}).call(this,r(18))},function(e,t,r){"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,n=c(e),a=n[0],s=n[1],u=new o(function(e,t,r){return 3*(t+r)/4-r}(0,a,s)),f=0,l=s>0?a-4:a;for(r=0;r<l;r+=4)t=i[e.charCodeAt(r)]<<18|i[e.charCodeAt(r+1)]<<12|i[e.charCodeAt(r+2)]<<6|i[e.charCodeAt(r+3)],u[f++]=t>>16&255,u[f++]=t>>8&255,u[f++]=255&t;2===s&&(t=i[e.charCodeAt(r)]<<2|i[e.charCodeAt(r+1)]>>4,u[f++]=255&t);1===s&&(t=i[e.charCodeAt(r)]<<10|i[e.charCodeAt(r+1)]<<4|i[e.charCodeAt(r+2)]>>2,u[f++]=t>>8&255,u[f++]=255&t);return u},t.fromByteArray=function(e){for(var t,r=e.length,i=r%3,o=[],a=0,s=r-i;a<s;a+=16383)o.push(f(e,a,a+16383>s?s:a+16383));1===i?(t=e[r-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[r-2]<<8)+e[r-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return o.join("")};for(var n=[],i=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=a.length;s<u;++s)n[s]=a[s],i[a.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function f(e,t,r){for(var i,o,a=[],s=t;s<r;s+=3)i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(n[(o=i)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return a.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,r,n,i){var o,a,s=8*i-n-1,u=(1<<s)-1,c=u>>1,f=-7,l=r?i-1:0,p=r?-1:1,h=e[t+l];for(l+=p,o=h&(1<<-f)-1,h>>=-f,f+=s;f>0;o=256*o+e[t+l],l+=p,f-=8);for(a=o&(1<<-f)-1,o>>=-f,f+=n;f>0;a=256*a+e[t+l],l+=p,f-=8);if(0===o)o=1-c;else{if(o===u)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,n),o-=c}return(h?-1:1)*a*Math.pow(2,o-n)},t.write=function(e,t,r,n,i,o){var a,s,u,c=8*o-i-1,f=(1<<c)-1,l=f>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:o-1,d=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=f):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+l>=1?p/u:p*Math.pow(2,1-l))*u>=2&&(a++,u/=2),a+l>=f?(s=0,a=f):a+l>=1?(s=(t*u-1)*Math.pow(2,i),a+=l):(s=t*Math.pow(2,l-1)*Math.pow(2,i),a=0));i>=8;e[r+h]=255&s,h+=d,s/=256,i-=8);for(a=a<<i|s,c+=i;c>0;e[r+h]=255&a,h+=d,a/=256,c-=8);e[r+h-d]|=128*y}},function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==r.call(e)}},function(e,t,r){var n=r(12).default;function i(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */e.exports=i=function(){return t},e.exports.__esModule=!0,e.exports.default=e.exports;var t={},r=Object.prototype,o=r.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",u=a.asyncIterator||"@@asyncIterator",c=a.toStringTag||"@@toStringTag";function f(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},"")}catch(e){f=function(e,t,r){return e[t]=r}}function l(e,t,r,n){var i=t&&t.prototype instanceof d?t:d,o=Object.create(i.prototype),a=new T(n||[]);return o._invoke=function(e,t,r){var n="suspendedStart";return function(i,o){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===i)throw o;return R()}for(r.method=i,r.arg=o;;){var a=r.delegate;if(a){var s=I(a,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var u=p(e,t,r);if("normal"===u.type){if(n=r.done?"completed":"suspendedYield",u.arg===h)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n="completed",r.method="throw",r.arg=u.arg)}}}(e,r,a),o}function p(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=l;var h={};function d(){}function y(){}function g(){}var v={};f(v,s,(function(){return this}));var b=Object.getPrototypeOf,w=b&&b(b(O([])));w&&w!==r&&o.call(w,s)&&(v=w);var m=g.prototype=d.prototype=Object.create(v);function _(e){["next","throw","return"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function E(e,t){var r;this._invoke=function(i,a){function s(){return new t((function(r,s){!function r(i,a,s,u){var c=p(e[i],e,a);if("throw"!==c.type){var f=c.arg,l=f.value;return l&&"object"==n(l)&&o.call(l,"__await")?t.resolve(l.__await).then((function(e){r("next",e,s,u)}),(function(e){r("throw",e,s,u)})):t.resolve(l).then((function(e){f.value=e,s(f)}),(function(e){return r("throw",e,s,u)}))}u(c.arg)}(i,a,r,s)}))}return r=r?r.then(s,s):s()}}function I(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,I(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var n=p(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,h;var i=n.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,h):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function S(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function A(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function O(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(o.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return n.next=n}}return{next:R}}function R(){return{value:void 0,done:!0}}return y.prototype=g,f(m,"constructor",g),f(g,"constructor",y),y.displayName=f(g,c,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,f(e,c,"GeneratorFunction")),e.prototype=Object.create(m),e},t.awrap=function(e){return{__await:e}},_(E.prototype),f(E.prototype,u,(function(){return this})),t.AsyncIterator=E,t.async=function(e,r,n,i,o){void 0===o&&(o=Promise);var a=new E(l(e,r,n,i),o);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},_(m),f(m,c,"Generator"),f(m,s,(function(){return this})),f(m,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},t.values=O,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(A),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=o.call(i,"catchLoc"),u=o.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),A(r),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var i=n.arg;A(r)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:O(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),h}},t}e.exports=i,e.exports.__esModule=!0,e.exports.default=e.exports},function(e,t,r){"use strict";r.r(t),r.d(t,"hmsjsb",(function(){return ze})),r.d(t,"callbackMap",(function(){return Ye})),r.d(t,"eventMap",(function(){return Xe})),r.d(t,"hmsbase",(function(){return B})),r.d(t,"HError",(function(){return N})),r.d(t,"HHeader",(function(){return V})),r.d(t,"HParcel",(function(){return ne})),r.d(t,"HBaseAdapter",(function(){return U})),r.d(t,"HJSBAdapter",(function(){return Fe})),r.d(t,"HObject",(function(){return Le})),r.d(t,"HUnknownObject",(function(){return re})),r.d(t,"HServiceManager",(function(){return Be})),r.d(t,"HServiceRegistry",(function(){return oe})),r.d(t,"HServiceRegistryInfo",(function(){return ie})),r.d(t,"IClassFactory",(function(){return ce})),r.d(t,"HViewHolder",(function(){return ue})),r.d(t,"IXPSFSolution",(function(){return de})),r.d(t,"XPSFServiceInfo",(function(){return ye})),r.d(t,"MainEntry",(function(){return ge})),r.d(t,"KitRegisterCenter",(function(){return ve})),r.d(t,"JsServiceInfo",(function(){return we})),r.d(t,"CppServiceInfo",(function(){return _e})),r.d(t,"HAppInfoManager",(function(){return Ie})),r.d(t,"HPreferencesManager",(function(){return Pe})),r.d(t,"HPageStarter",(function(){return je})),r.d(t,"HPageInfo",(function(){return Te})),r.d(t,"HCommonMessenger",(function(){return Ae})),r.d(t,"HGlobalVariableManager",(function(){return M.a})),r.d(t,"HLogger",(function(){return l.a})),r.d(t,"HTrace",(function(){return xe})),r.d(t,"ErrorCode",(function(){return h})),r.d(t,"BaseCode",(function(){return d})),r.d(t,"ResolutionResult",(function(){return y})),r.d(t,"AvailableCode",(function(){return g})),r.d(t,"JSBCompat",(function(){return Ue})),r.d(t,"PageInfo",(function(){return Oe}));var n={};r.r(n),r.d(n,"Message",(function(){return Y})),r.d(n,"BinaryReader",(function(){return Q})),r.d(n,"BinaryWriter",(function(){return ee}));var i=r(23),o=r.n(i),a=r(6),s=r.n(a),u=r(2),c=r(24),f=r.n(c),l=r(0),p=r(1),h={ARGUMENTS_INVALID:907135e3,INTERNAL_ERROR:907135001,NAMING_INVALID:907135002,CLIENT_API_INVALID:907135003,EXECUTE_TIMEOUT:907135004,NOT_IN_SERVICE:907135005,SESSION_INVALID:907135006,DENY_NETWORK:907135007,GET_SCOPE_ERROR:907135700,SCOPE_LIST_EMPTY:907135701,CERT_FINGERPRINT_EMPTY:907135702,PERMISSION_LIST_EMPTY:907135703,GET_SCOPE_NETWORK_ERROR:907135704,AUTH_INFO_NOT_EXIST:907135705,CERT_FINGERPRINT_ERROR:907135706,PERMISSION_NOT_EXIST:907135707,PERMISSION_NOT_AUTHORIZED:907135708,PERMISSION_EXPIRED:907135709,SCOPE_ILLEGAL_PARAMETER:907135710,SCOPE_INTERNAL_ERROR:907135711,SUBAPP_CHECKER_NOT_EXIST:907135720,SUBAPP_AUTH_ERROR:907135721,KIT_NOT_EXIST:907135900,API_MODULE_NOT_EXIST:1e3,API_CLIENT_SESSION_EXPIRED:1001,CALL_UNASSIGNED_API_ERROR:1002,HMS_CORE_NOT_READY:1201,PARAMETER_INVALID:1210,CALLER_SESSION_INVALID:1211,KIT_NEED_UPDATE:1212,KIT_BREAKER:1213,MEMORY_OVER_LIMIT:1215,NOT_REGISTER_API:1216,AUTH_FAILED:1217,RUNTIME_OTHER:1260,NOT_FOUND_STUB:1303,SESSION_AUTH_FAILED:1304,API_LEVEL_NOT_SUPPORT:907180001,API_LEVEL_NOT_EXIST:907180002,INTERFACE_UPDATE_FAILED:907180003,ADAPTER_UNINITIALIZED:907180004,ADAPTER_DISCONNECT:907180005,ADAPTER_CONNECT_FAILED:907180006,ADAPTER_CONNECT_TIMEOUT:907180007,GET_APPID_FAILED:907180008,GET_SERVICEINFO_FAILED:907180009,GET_BUNDLEINFO_FAILED:907180010,GET_BUNDLENAME_FAILED:907180011,GET_APP_FINGER_PRINT_ERROR:907180012,CALL_SERVICE_FAILED:907180013,NOT_FOUND_SERVICE:907180014,IID_NOT_EXPORTED:907180016,BUNDLENAME_NOT_MATCH:907180017,SERVICE_PROCESS_DIED:907180020,REMOTE_OBJECT_RELEASING:907180021,REMOTE_OBJECT_NOT_EXIST:907180022,INVOKE_UNIMPLEMENTED_METHOD:907180023,METHOD_NOT_EXIST:907180024,NOT_SUPPORTED_PLATFORM:907180025},d={RETURN_PARAM_NULL:-1,PARAM_ERROR:-2,SUCCESS:0,SERVICE_KILLED:1,SERVICE_CONNECT_LOST:2},y={INTERNAL_ERROR:8},g={CANCELED:13,APP_IS_BACKGROUND_OR_LOCKED:28,HMS_IS_SPOOF:29,USER_ALREADY_KNOWS_SERVICE_UNAVAILABLE:30,CURRENT_SHOWING_SERVICE_UNAVAILABLE:31},v=r(3),b=r.n(v),w=r(4),m=r.n(w),_=r(14),E=r.n(_),I=r(15),S=r.n(I),A=r(10),T=r.n(A),O=r(9),R=r.n(O),k=r(17),P=r.n(k),N=function(){function e(t,r){b()(this,e),this.code=t,this.message=r}return m()(e,[{key:"setData",value:function(e){this.data=e}},{key:"setSolution",value:function(e){this.solution=e}}]),e}(),x=r(25);function j(e,t){if("function"==typeof t){Object.defineProperties(t,{hmsClassName:{get:function(){return e}},hmsVersion:{get:function(){return x.a}}});try{Object.defineProperty(t,Symbol.hasInstance,{value:function(e){for(var r=Object.getPrototypeOf(e).constructor;r;){if(r.hmsClassName===t.hmsClassName)return r.hmsVersion===t.hmsVersion;r=Object.getPrototypeOf(r)}return!1}}),Object.defineProperty(t.prototype,Symbol.toStringTag,{get:function(){return e}})}catch(e){l.a.error(p.j,"The device does not support rewriting the instanceof method.")}}}function C(e){for(var t=Object.keys(e),r=0;r<t.length;r++){var n=t[r];j(n,e[n])}}var M=r(7);function H(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function L(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?H(Object(r),!0).forEach((function(t){s()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):H(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function D(e){var t=e.apiName,r=e.args,n=e.success,i=e.fail,o=e.complete;return ze.invoke({apiName:t,args:r,success:n,fail:i,complete:o})}function F(e,t){var r=t.success,n=t.fail,i=t.complete;if("function"!=typeof r&&"function"!=typeof n&&"function"!=typeof i)return e;e.then((function(){"function"==typeof r&&r.apply(void 0,arguments)})).catch((function(){"function"==typeof n&&n.apply(void 0,arguments)})).finally((function(){"function"==typeof i&&i.apply(void 0,arguments)}))}var B={setSPvalue:function(e){var t=e.key,r=e.value,n=e.spname;return D(L(L({},e),{},{args:{key:t,value:r,spname:n},apiName:"sp.setSPvalue"}))},getSPvalue:function(e){var t=e.key,r=e.spname;return D(L(L({},e),{},{args:{key:t,spname:r},apiName:"sp.getSPvalue"}))},removeSPvalue:function(e){var t=e.key,r=e.spname;return D(L(L({},e),{},{args:{key:t,spname:r},apiName:"sp.removeSPvalue"}))},getMetadata:function(e){var t=e.key,r=e.packagename;return D(L(L({},e),{},{args:{key:t,packagename:r},apiName:"metadata.getvalue"}))},getPackageName:function(e){return u.a.isOHOS()?F(Ie.getPackageName(),e):D(L(L({},e),{},{apiName:"package.name"}))},getAppId:function(e){return u.a.isOHOS()?F(Ie.getAppId(),e):D(L(L({},e),{},{apiName:"base.getappid"}))},getAaId:function(e){return D(L(L({},e),{},{apiName:"base.getaaid"}))},getUid:function(e){return D(L(L({},e),{},{apiName:"base.getUid"}))},getAppVersion:function(e){return D(L(L({},e),{},{apiName:"base.getAppVersion"}))},getAgcConfig:function(e){var t=e.key;return D(L(L({},e),{},{args:{key:t},apiName:"base.getAgcConfig"}))},reportEntry:function(e){var t=e.uri,r=e.kitSdkVersion;return D(L(L({},e),{},{args:{uri:t,kitSdkVersion:r},apiName:"analytics.reportEntry"}))},reportExit:function(e){var t=e.uri,r=e.transactId,n=e.statusCode,i=e.errorCode,o=e.kitSdkVersionName;return D(L(L({},e),{},{args:{uri:t,transactId:r,statusCode:n,errorCode:i,kitSdkVersionName:o},apiName:"analytics.reportExit"}))},encrypt:function(e){var t=e.encryptWord;return D(L(L({},e),{},{args:{encryptWord:t},apiName:"security.encrypter"}))},decrypt:function(e){var t=e.encryptWord;return D(L(L({},e),{},{args:{encryptWord:t},apiName:"security.decrypter"}))},config:function(e){var t=e.subId;return D(L(L({},e),{},{args:{subId:t},apiName:"config.auth"}))},isJsbKitAvailable:function(e){var t=e.min_api_level;return D(L(L({},e),{},{args:{min_api_level:t},apiName:"update.availability"}))},upgrade:function(e){return D(L(L({},e),{},{apiName:"update.upgrade"}))},reload:function(e){return D(L(L({},e),{},{apiName:"update.reload"}))}},U=function(){function e(){b()(this,e)}return m()(e,[{key:"hGetClassObject",value:function(t,r){throw new Error("The hGetClassObject method is not implemented on the ".concat(e.type," adapter."))}},{key:"transact",value:function(t,r,n){throw new Error("The transact method is not implemented on the ".concat(e.type," adapter."))}},{key:"newStub",value:function(t){throw new Error("The newStub method is not implemented on the ".concat(e.type," adapter."))}}]),e}();s()(U,"type","");var V=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;b()(this,e),this.protolVersion=t,this.appid=void 0,this.packageName=void 0,this.transactId=void 0,this.status=void 0,this.callingUid=void 0,this.subAppId=void 0}return m()(e,[{key:"readMessage",value:function(e){var t=this;e.nextField()&&(1e4===e.getFieldNumber()&&e.readMessage(this,(function(e,r){for(;r.nextField()&&!r.isEndGroup();){switch(r.getFieldNumber()){case 1:t.protolVersion=r.readInt32();break;case 2:t.appid=r.readString();break;case 3:t.packageName=r.readString();break;case 4:t.transactId=r.readString();break;case 5:t.status=r.readInt32();break;case 6:t.callingUid=r.readString();break;case 7:t.subAppId=r.readString();break;default:r.skipField()}}})))}},{key:"writeMessage",value:function(e){var t=this;e.writeMessage(1e4,this,(function(e,r){r.writeInt32(1,t.protolVersion),r.writeString(2,t.appid),r.writeString(3,t.packageName),r.writeString(4,t.transactId),r.writeInt32(5,t.status),r.writeString(6,t.callingUid),r.writeString(7,t.subAppId)}))}}]),e}(),W=r(12),J=r.n(W),G=r(13),Y=function(){};Y.GENERATE_TO_OBJECT=!0,Y.GENERATE_FROM_OBJECT=!1,Y.GENERATE_TO_STRING=!0,Y.ASSUME_LOCAL_ARRAYS=!1,Y.SERIALIZE_EMPTY_TRAILING_FIELDS=!0,Y.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array,Y.prototype.array,Y.prototype.wrappers_,Y.prototype.extensionObject_,Y.prototype.pivot_,Y.prototype.messageId_,Y.prototype.convertedPrimitiveFields_,Y.prototype.repeatedFields;Y.prototype.arrayIndexOffset_,Y.hiddenES6Property_=function(){return m()((function e(){b()(this,e)}))}(),Y.EMPTY_LIST_SENTINEL_=[],Y.bytesAsU8=function(e){return null==e||e instanceof Uint8Array?e:"string"==typeof e?Object(G.b)(e):null},Y.getFieldProto3=Y.getFieldWithDefault,Y.GENERATE_TO_STRING,Y.messageSetExtensions={},Y.messageSetExtensionsBinary={};var X=r(5),q=r(8),K=function(e,t,r){this.bytes_=null,this.start_=0,this.end_=0,this.cursor_=0,this.error_=!1,e&&this.setBlock(e,t,r)};K.instanceCache_=[];var z="[ptotobuf decoder] ";K.alloc=function(e,t,r){if(K.instanceCache_.length){var n=K.instanceCache_.pop();return e&&n.setBlock(e,t,r),n}return new K(e,t,r)},K.prototype.getBuffer=function(){return console.log("".concat(z," ").concat("BinaryDecoder"," getBuffer")),this.bytes_},K.prototype.setBlock=function(e,t,r){this.bytes_=q.a.byteSourceToUint8Array(e),this.start_=void 0!==t?t:0,this.end_=void 0!==r?this.start_+r:this.bytes_.length,this.cursor_=this.start_},K.prototype.getEnd=function(){return this.end_},K.prototype.setEnd=function(e){this.end_=e},K.prototype.getCursor=function(){return this.cursor_},K.prototype.setCursor=function(e){this.cursor_=e},K.prototype.advance=function(e){console.log("".concat(z," ").concat("BinaryDecoder"," advance")),this.cursor_+=e},K.prototype.atEnd=function(){return this.cursor_==this.end_},K.prototype.getError=function(){return this.error_||this.cursor_<0||this.cursor_>this.end_},K.prototype.readSplitVarint64=function(e){for(var t=128,r=0,n=0,i=0;i<4&&t>=128;i++)r|=(127&(t=this.bytes_[this.cursor_++]))<<7*i;if(t>=128&&(r|=(127&(t=this.bytes_[this.cursor_++]))<<28,n|=(127&t)>>4),t>=128)for(i=0;i<5&&t>=128;i++)n|=(127&(t=this.bytes_[this.cursor_++]))<<7*i+3;if(t<128)return e(r>>>0,n>>>0);this.error_=!0},K.prototype.skipVarint=function(){for(console.log("".concat(z," ").concat("BinaryDecoder"," skipVarint"));128&this.bytes_[this.cursor_];)this.cursor_++;this.cursor_++},K.prototype.readUnsignedVarint32=function(){var e,t=this.bytes_,r=127&(e=t[this.cursor_+0]);return e<128?(this.cursor_+=1,r):(r|=(127&(e=t[this.cursor_+1]))<<7,e<128?(this.cursor_+=2,r):(r|=(127&(e=t[this.cursor_+2]))<<14,e<128?(this.cursor_+=3,r):(r|=(127&(e=t[this.cursor_+3]))<<21,e<128?(this.cursor_+=4,r):(r|=(15&(e=t[this.cursor_+4]))<<28,e<128?(this.cursor_+=5,r>>>0):(this.cursor_+=5,t[this.cursor_++]>=128&&t[this.cursor_++]>=128&&t[this.cursor_++]>=128&&t[this.cursor_++]>=128&&t[this.cursor_++],r)))))},K.prototype.readSignedVarint32=K.prototype.readUnsignedVarint32,K.prototype.readSignedVarint64=function(){return this.readSplitVarint64(q.a.joinInt64)},K.prototype.readUint32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],r=this.bytes_[this.cursor_+2],n=this.bytes_[this.cursor_+3];return this.cursor_+=4,(e<<0|t<<8|r<<16|n<<24)>>>0},K.prototype.readFloat=function(){var e=this.readUint32();return q.a.joinFloat32(e,0)},K.prototype.readDouble=function(){var e=this.readUint32(),t=this.readUint32();return q.a.joinFloat64(e,t)},K.prototype.readBool=function(){return console.log("".concat(z," ").concat("BinaryDecoder"," readBool")),!!this.bytes_[this.cursor_++]},K.prototype.readString=function(e){for(var t=this.bytes_,r=this.cursor_,n=r+e,i=[],o="";r<n;){var a=t[r++];if(a<128)i.push(a);else{if(a<192)continue;if(a<224){var s=t[r++];i.push((31&a)<<6|63&s)}else if(a<240){s=t[r++];var u=t[r++];i.push((15&a)<<12|(63&s)<<6|63&u)}else if(a<248){var c=(7&a)<<18|(63&(s=t[r++]))<<12|(63&(u=t[r++]))<<6|63&t[r++],f=56320+(1023&(c-=65536)),l=55296+(c>>10&1023);i.push(l,f)}}i.length>=8192&&(o+=String.fromCharCode.apply(null,i),i.length=0)}return o+=Object(G.a)(i),this.cursor_=r,o},K.prototype.readBytes=function(e){if(console.log("".concat(z," ").concat("BinaryDecoder"," readBytes")),e<0||this.cursor_+e>this.bytes_.length)return this.error_=!0,new Uint8Array(0);var t=this.bytes_.subarray(this.cursor_,this.cursor_+e);return this.cursor_+=e,t};var Z="[ptotobuf reader] ",Q=function(e,t,r){this.decoder_=K.alloc(e,t,r),this.fieldCursor_=this.decoder_.getCursor(),this.nextField_=X.a.INVALID_FIELD_NUMBER,this.nextWireType_=X.a.WireType.INVALID,this.error_=!1,this.readCallbacks_=null};Q.instanceCache_=[],Q.prototype.alloc=Q.alloc,Q.prototype.getBuffer=function(){return console.log("".concat(Z," ").concat("BinaryReader"," getBuffer")),this.decoder_.getBuffer()},Q.prototype.getFieldNumber=function(){return this.nextField_},Q.prototype.isEndGroup=function(){return this.nextWireType_==X.a.WireType.END_GROUP},Q.prototype.getError=function(){return this.error_||this.decoder_.getError()},Q.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return!1;this.fieldCursor_=this.decoder_.getCursor();var e=this.decoder_.readUnsignedVarint32(),t=e>>>3,r=7&e;return r!=X.a.WireType.VARINT&&r!=X.a.WireType.FIXED32&&r!=X.a.WireType.FIXED64&&r!=X.a.WireType.DELIMITED&&r!=X.a.WireType.START_GROUP&&r!=X.a.WireType.END_GROUP?(this.error_=!0,!1):(this.nextField_=t,this.nextWireType_=r,!0)},Q.prototype.skipVarintField=function(){console.log("".concat(Z," ").concat("BinaryReader"," skipVarintField")),this.nextWireType_==X.a.WireType.VARINT?this.decoder_.skipVarint():this.skipField()},Q.prototype.skipDelimitedField=function(){if(console.log("".concat(Z," ").concat("BinaryReader"," skipDelimitedField")),this.nextWireType_==X.a.WireType.DELIMITED){var e=this.decoder_.readUnsignedVarint32();this.decoder_.advance(e)}else this.skipField()},Q.prototype.skipFixed32Field=function(){console.log("".concat(Z," ").concat("BinaryReader"," skipFixed32Field")),this.nextWireType_==X.a.WireType.FIXED32?this.decoder_.advance(4):this.skipField()},Q.prototype.skipFixed64Field=function(){console.log("".concat(Z," ").concat("BinaryReader"," skipFixed64Field")),this.nextWireType_==X.a.WireType.FIXED64?this.decoder_.advance(8):this.skipField()},Q.prototype.skipGroup=function(){console.log("".concat(Z," ").concat("BinaryReader"," skipGroup"));for(var e=this.nextField_;;){if(!this.nextField())return void(this.error_=!0);if(this.nextWireType_==X.a.WireType.END_GROUP)return this.nextField_!=e?void(this.error_=!0):void 0;this.skipField()}},Q.prototype.skipField=function(){switch(console.log("".concat(Z," ").concat("BinaryReader"," skipField")),this.nextWireType_){case X.a.WireType.VARINT:this.skipVarintField();break;case X.a.WireType.FIXED64:this.skipFixed64Field();break;case X.a.WireType.DELIMITED:this.skipDelimitedField();break;case X.a.WireType.FIXED32:this.skipFixed32Field();break;case X.a.WireType.START_GROUP:this.skipGroup()}},Q.prototype.readMessage=function(e,t){var r=this.decoder_.getEnd(),n=this.decoder_.readUnsignedVarint32(),i=this.decoder_.getCursor()+n;this.decoder_.setEnd(i),t(e,this),this.decoder_.setCursor(i),this.decoder_.setEnd(r)},Q.prototype.readInt32=function(){return this.decoder_.readSignedVarint32()},Q.prototype.readInt64=function(){return this.decoder_.readSignedVarint64()},Q.prototype.readFloat=function(){return this.decoder_.readFloat()},Q.prototype.readDouble=function(){return this.decoder_.readDouble()},Q.prototype.readBool=function(){return!!this.decoder_.readUnsignedVarint32()},Q.prototype.readString=function(){var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(e)},Q.prototype.readBytes=function(){console.log("".concat(Z," ").concat("BinaryReader"," readBytes"));var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(e)};var $=function(){this.buffer_=[]};$.prototype.length=function(){return this.buffer_.length},$.prototype.end=function(){var e=this.buffer_;return this.buffer_=[],e},$.prototype.writeSplitVarint64=function(e,t){for(;t>0||e>127;)this.buffer_.push(127&e|128),e=(e>>>7|t<<25)>>>0,t>>>=7;this.buffer_.push(e)},$.prototype.writeUnsignedVarint32=function(e){for(;e>127;)this.buffer_.push(127&e|128),e>>>=7;this.buffer_.push(e)},$.prototype.writeSignedVarint32=function(e){if(e>=0)this.writeUnsignedVarint32(e);else{for(var t=0;t<9;t++)this.buffer_.push(127&e|128),e>>=7;this.buffer_.push(1)}},$.prototype.writeSignedVarint64=function(e){q.a.splitInt64(e),this.writeSplitVarint64(q.a.split64Low,q.a.split64High)},$.prototype.writeUint32=function(e){this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},$.prototype.writeFloat=function(e){q.a.splitFloat32(e),this.writeUint32(q.a.split64Low)},$.prototype.writeDouble=function(e){q.a.splitFloat64(e),this.writeUint32(q.a.split64Low),this.writeUint32(q.a.split64High)},$.prototype.writeBool=function(e){this.buffer_.push(e?1:0)},$.prototype.writeString=function(e){for(var t=this.buffer_.length,r=0;r<e.length;r++){var n=e.charCodeAt(r);if(n<128)this.buffer_.push(n);else if(n<2048)this.buffer_.push(n>>6|192),this.buffer_.push(63&n|128);else if(n<65536)if(n>=55296&&n<=56319&&r+1<e.length){var i=e.charCodeAt(r+1);i>=56320&&i<=57343&&(n=1024*(n-55296)+i-56320+65536,this.buffer_.push(n>>18|240),this.buffer_.push(n>>12&63|128),this.buffer_.push(n>>6&63|128),this.buffer_.push(63&n|128),r++)}else this.buffer_.push(n>>12|224),this.buffer_.push(n>>6&63|128),this.buffer_.push(63&n|128)}return this.buffer_.length-t};var ee=function(){this.blocks_=[],this.totalLength_=0,this.encoder_=new $,this.bookmarks_=[]};ee.prototype.appendUint8Array_=function(e){console.log("".concat("[ptotobuf writer] "," ").concat("BinaryWriter"," appendUint8Array_"));var t=this.encoder_.end();this.blocks_.push(t),this.blocks_.push(e),this.totalLength_+=t.length+e.length},ee.prototype.beginDelimited_=function(e){this.writeFieldHeader_(e,X.a.WireType.DELIMITED);var t=this.encoder_.end();return this.blocks_.push(t),this.totalLength_+=t.length,t.push(this.totalLength_),t},ee.prototype.endDelimited_=function(e){for(var t=e.pop(),r=this.totalLength_+this.encoder_.length()-t;r>127;)e.push(127&r|128),r>>>=7,this.totalLength_++;e.push(r),this.totalLength_++},ee.prototype.getResultBuffer=function(){for(var e=new Uint8Array(this.totalLength_+this.encoder_.length()),t=this.blocks_,r=t.length,n=0,i=0;i<r;i++){var o=t[i];e.set(o,n),n+=o.length}var a=this.encoder_.end();return e.set(a,n),n+=a.length,this.blocks_=[e],e},ee.prototype.getResultBase64String=function(e){return Object(G.c)(this.getResultBuffer(),e)},ee.prototype.writeFieldHeader_=function(e,t){var r=8*e+t;this.encoder_.writeUnsignedVarint32(r)},ee.prototype.writeSignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,X.a.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},ee.prototype.writeSignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,X.a.WireType.VARINT),this.encoder_.writeSignedVarint64(t))},ee.prototype.writeInt32=function(e,t){null!=t&&this.writeSignedVarint32_(e,t)},ee.prototype.writeInt64=function(e,t){null!=t&&this.writeSignedVarint64_(e,t)},ee.prototype.writeFloat=function(e,t){null!=t&&(this.writeFieldHeader_(e,X.a.WireType.FIXED32),this.encoder_.writeFloat(t))},ee.prototype.writeDouble=function(e,t){null!=t&&(this.writeFieldHeader_(e,X.a.WireType.FIXED64),this.encoder_.writeDouble(t))},ee.prototype.writeBool=function(e,t){null!=t&&(this.writeFieldHeader_(e,X.a.WireType.VARINT),this.encoder_.writeBool(t))},ee.prototype.writeString=function(e,t){if(null!=t){var r=this.beginDelimited_(e);this.encoder_.writeString(t),this.endDelimited_(r)}},ee.prototype.writeBytes=function(e,t){if(console.log("".concat("[ptotobuf writer] "," ").concat("BinaryWriter"," writeBytes")),null!=t){var r=q.a.byteSourceToUint8Array(t);this.writeFieldHeader_(e,X.a.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(r.length),this.appendUint8Array_(r)}},ee.prototype.writeMessage=function(e,t,r){if(null!=t){var n=this.beginDelimited_(e);r(t,this),this.endDelimited_(n)}},ee.prototype.writeRepeatedInt32=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeSignedVarint32_(e,t[r])},ee.prototype.writeRepeatedInt64=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeSignedVarint64_(e,t[r])},ee.prototype.writeRepeatedFloat=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeFloat(e,t[r])},ee.prototype.writeRepeatedDouble=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeDouble(e,t[r])},ee.prototype.writeRepeatedBool=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeBool(e,t[r])},ee.prototype.writeRepeatedString=function(e,t){if(null!=t)for(var r=0;r<t.length;r++)this.writeString(e,t[r])};var te=n,re=m()((function e(t){b()(this,e),this.mId=t})),ne=function(){function e(){b()(this,e),this.mAdapter=void 0,this.mWriter=new te.BinaryWriter,this.mWriteHObjectIds=[],this.mWriteHObjects=[],this.mWriteHObjectIndex=0}return m()(e,[{key:"getHObjectsNum",value:function(){return this.mWriteHObjectIds.length}},{key:"getHObjectIds",value:function(){return this.mWriteHObjectIds}},{key:"setHObjectIds",value:function(e){this.mWriteHObjectIds=e}},{key:"toBase64",value:function(){return this.mWriter.getResultBase64String()}},{key:"fromBase64",value:function(e){var t=te.Message.bytesAsU8(e);return this.mReader=new te.BinaryReader(t,0,t.length),this}},{key:"getWriterBuffer",value:function(){return this.mWriter.getResultBuffer()}},{key:"setWriterBuffer",value:function(e){this.mWriter=new te.BinaryWriter;var t=new Uint8Array(e);return this.mWriter.appendUint8Array_(t),this}},{key:"getReaderBuffer",value:function(){return this.mReader.getBuffer()}},{key:"setReaderBuffer",value:function(e){var t=new Uint8Array(e);return this.mReader=new te.BinaryReader(t,0,t.length),this}},{key:"nextField",value:function(){return this.mReader.nextField()}},{key:"skipField",value:function(){this.mReader.skipField()}},{key:"isEndGroup",value:function(){return this.mReader.isEndGroup()}},{key:"getFieldNumber",value:function(){return this.mReader.getFieldNumber()}},{key:"readHeader",value:function(){var e=new V;return e.readMessage(this.mReader),e}},{key:"readHParcelable",value:function(t){var r=this;this.mReader.readMessage(this,(function(n,i){var o=new e;o.mReader=i,o.mAdapter=r.mAdapter,t(o)}))}},{key:"readString",value:function(){return this.mReader.readString()}},{key:"readBytes",value:function(){return this.mReader.readBytes()}},{key:"readBool",value:function(){return this.mReader.readBool()}},{key:"readInt",value:function(){return this.mReader.readInt32()}},{key:"readInt64",value:function(){var e=this.mReader.readInt64();return(e>Number.MAX_SAFE_INTEGER||e<Number.MIN_SAFE_INTEGER)&&l.a.warn(p.j,"readInt64: longValue(".concat(e,') not within the safe range, it will be distorted.         You are advised to use "string" instead.')),e}},{key:"readFloat",value:function(){return this.mReader.readFloat()}},{key:"readDouble",value:function(){return this.mReader.readDouble()}},{key:"readHObject",value:function(){var e=new Le;return e.mId=this.mReader.readString(),e.mAdapter=this.mAdapter,e}},{key:"readHUnknownObject",value:function(){var e=this.mReader.readString();return new re(e)}},{key:"writeHeader",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new V;"function"==typeof e.writeMessage?e.writeMessage(this.mWriter):(l.a.warn(p.j,"writeHeader: params is not HHeader, write default HHeader."),(new V).writeMessage(this.mWriter))}},{key:"writeAny",value:function(e,t,r){if(Array.isArray(t))this.writeRepeatAny(e,t,r);else switch(r){case"boolean":this.writeBool(e,t);break;case"string":this.writeString(e,t);break;case"int":this.writeInt(e,t);break;case"long":this.writeInt64(e,t);break;case"float":this.writeFloat(e,t);break;case"double":this.writeDouble(e,t);break;case"hparcelable":this.writeHParcelable(e,t);break;case"hobject":this.writeHObject(e,t);break;case"hunknownobject":this.writeHUnknownObject(e,t);break;case"bytes":this.writeBytes(e,t);break;default:l.a.warn(p.j,"writeAny: is not supported type: ".concat(r))}}},{key:"writeBool",value:function(e,t){this.mWriter.writeBool(e,t)}},{key:"writeFloat",value:function(e,t){this.mWriter.writeFloat(e,this.anyTypeToNumber(t,!0))}},{key:"writeDouble",value:function(e,t){this.mWriter.writeDouble(e,this.anyTypeToNumber(t,!0))}},{key:"writeInt",value:function(e,t){this.mWriter.writeInt32(e,this.anyTypeToNumber(t))}},{key:"writeInt64",value:function(e,t){var r=this.anyTypeToNumber(t);isNaN(r)?l.a.warn(p.j,"writeInt64: longValue(".concat(J()(t),") not is number")):(r>Number.MAX_SAFE_INTEGER||r<Number.MIN_SAFE_INTEGER)&&l.a.warn(p.j,"writeInt64: longValue(".concat(t,') not within the safe range, it will be distorted.         You are advised to use "string" instead.')),this.mWriter.writeInt64(e,r)}},{key:"writeString",value:function(e,t){this.mWriter.writeString(e,this.anyTypeToString(t))}},{key:"writeBytes",value:function(e,t){t instanceof Uint8Array?this.mWriter.writeBytes(e,t):t instanceof Int8Array&&this.mWriter.writeBytes(e,new Uint8Array(t))}},{key:"writeRepeatAny",value:function(e,t,r){if(Array.isArray(t))switch(r){case"boolean":this.writeRepeatBool(e,t);break;case"string":this.writeRepeatString(e,t);break;case"int":this.writeRepeatInt32(e,t);break;case"long":this.writeRepeatInt64(e,t);break;case"float":this.writeRepeatFloat(e,t);break;case"double":this.writeRepeatDouble(e,t);break;case"hparcelable":this.writeRepeatHParcelable(e,t);break;default:l.a.warn(p.j,"writeRepeatAny: is not supported type: ".concat(r))}else l.a.debug(p.j,"writeRepeatAny: repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatBool",value:function(e,t){Array.isArray(t)?this.mWriter.writeRepeatedBool(e,t):l.a.warn(p.j,"writeRepeatBool: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatFloat",value:function(e,t){Array.isArray(t)?this.mWriter.writeRepeatedFloat(e,t):l.a.warn(p.j,"writeRepeatFloat: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatDouble",value:function(e,t){Array.isArray(t)?this.mWriter.writeRepeatedDouble(e,t):l.a.warn(p.j,"writeRepeatDouble: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatInt32",value:function(e,t){Array.isArray(t)?this.mWriter.writeRepeatedInt32(e,t):l.a.warn(p.j,"writeRepeatInt32: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatInt64",value:function(e,t){if(Array.isArray(t)){for(var r=0;r<t.length;r++){var n=t[r];(n>Number.MAX_SAFE_INTEGER||n<Number.MIN_SAFE_INTEGER)&&l.a.warn(p.j,"writeRepeatInt64: repeatedValue[".concat(r,"](").concat(n,') not within the safe range,           it will be distorted. You are advised to use "string" instead.'))}this.mWriter.writeRepeatedInt64(e,t)}else l.a.warn(p.j,"writeRepeatInt64: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeRepeatString",value:function(e,t){Array.isArray(t)?this.mWriter.writeRepeatedString(e,t):l.a.warn(p.j,"writeRepeatString: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeHParcelable",value:function(e,t){var r=this;t&&"function"==typeof t.writeToParcel?this.mWriter.writeMessage(e,this,(function(){t.writeToParcel(r)})):l.a.debug(p.j,"writeHParcelable params parcelable error")}},{key:"writeRepeatHParcelable",value:function(e,t){if(Array.isArray(t))for(var r=0;r<t.length;r++){var n=t[r];this.writeHParcelable(e,n)}else l.a.warn(p.j,"writeRepeatHParcelable: skip! Because repeatedValue is not array! is ".concat(t))}},{key:"writeHObject",value:function(e,t){void 0!==t?t.mId?(this.writeString(e,t.mId),this.mWriteHObjects[this.mWriteHObjectIndex]=t,this.mWriteHObjectIds[this.mWriteHObjectIndex++]=t.mId):l.a.warn(p.j,"writeHObject: skip! Because hObject is not HObject! No mId! "):l.a.warn(p.j,"writeHObject: skip! Because hObject is undefined!")}},{key:"writeHUnknownObject",value:function(e,t){void 0!==t?this.writeString(e,t.mId):l.a.warn(p.j,"writeHUnknownObject: skip! Because hUnknownObject is undefined!")}},{key:"anyTypeToNumber",value:function(e,t){switch(J()(e)){case"number":return e;case"boolean":return e?1:0;case"string":case"bigint":return t?parseFloat(e):parseInt(e);default:return NaN}}},{key:"anyTypeToString",value:function(e){switch(J()(e)){case"string":return e;case"object":return"[Object]";case"function":return"[Function]";case"symbol":return"[Symbol]";case"undefined":return"";default:return"".concat(e)}}}]),e}(),ie=m()((function e(t,r,n,i,o){b()(this,e),this.mSId=t,this.mProgId=r,this.mPath=n,this.mTrigger=i,this.mProc=o,this.mApiLevel=void 0})),oe=function(){function e(){b()(this,e),this.mProgInfos=new Map}return m()(e,[{key:"initPolicy",value:function(){l.a.debug(p.j,"init policy")}},{key:"addProgInfos",value:function(e,t,r,n,i){var o=new ie(e,t,r,n,i);this.mProgInfos.set(t,o)}},{key:"findInfoByProgId",value:function(e){return this.mProgInfos.get(e)}},{key:"findInfo",value:function(e,t,r){var n=this.findInfoByProgId(e);if(n)return n;var i=void 0,o=M.a.get("pafFramework","xpsfJsPafRegistryCenter");if(void 0!==o&&"function"==typeof o.findServiceInfo){var a=o.findServiceInfo(e);void 0!==a&&(i=!0===a.isSupportBinding?M.a.get("pafFramework","bindingJsTrigger"):M.a.get("pafFramework","xpsfJsTrigger"))}l.a.debug(p.j,"pafTrigger = ".concat(i));var s=M.a.get("hmscoreFramework","xpsfJsTrigger");l.a.debug(p.j,"defaultTrigger = ".concat(s));var u=new ie;return u.mSId=t,u.mProgId=e,u.mApiLevel=r,u.mTrigger=i||s||"jsb",u}}]),e}();function ae(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function se(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ae(Object(r),!0).forEach((function(t){s()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ae(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}s()(oe,"defaultTrigger",M.a.get("hmscoreFramework","xpsfJsTrigger")||"jsb");var ue=function(){function e(){b()(this,e)}return m()(e,null,[{key:"createView",value:function(t,r){var n=this;return new Promise((function(i,o){if(t)if("string"==typeof t)if(r){if("string"==typeof r.mId)r=r.mId;else if("string"!=typeof r)return void o({errCode:-2,errMsg:"objId is not string or HObject"});var a=document.getElementById(t);if(a){var s=se(se({},e.initalPropsOf(a)),{},{objId:r,containerId:t});l.a.debug(p.j,"view props:",s),ze.createView({apiName:"createView",args:s,containerId:t,success:function(e){var t=new Le;t.mId=e.data.id,t.mAdapter=n,i(t)},fail:o})}else o({errCode:-2,errMsg:"Cannot find view with id '".concat(t,"'")})}else o({errCode:-2,errMsg:"objId is null"});else o({errCode:-2,errMsg:"containerId is not string"});else o({errCode:-2,errMsg:"containerId is null"})}))}},{key:"initalPropsOf",value:function(e){var t=e.getBoundingClientRect(),r=window.getComputedStyle(e,null);return{x:t.x,y:t.y,width:parseInt(r.getPropertyValue("width"),10),height:parseInt(r.getPropertyValue("height"),10)}}}]),e}(),ce=m()((function e(){b()(this,e)}));ce.asInterface=function(e){return new ce.Proxy(e)},ce.Proxy=function(){function e(t){b()(this,e),this.mRemoteObj=t}return m()(e,[{key:"createInstance",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new V;return new Promise((function(n){var i=new ne;i.writeHeader(r),i.writeString(1,e),t.mRemoteObj.mAdapter.transact(t.mRemoteObj,1,i).then((function(e){for(var t,r=e.readHeader();e.nextField()&&!e.isEndGroup();){switch(e.getFieldNumber()){case 1:t=e.readHObject();break;default:e.skipField()}}n(t,r)}))}))}}]),e}(),ce.IID_IClassFactory="IID_IClassFactory";var fe=r(16),le=r.n(fe),pe=r(11),he=r.n(pe),de=function(){function e(){b()(this,e),this.header=null,this.startDefaultSolution=null}return m()(e,[{key:"onTransact",value:function(t,r,n){var i=this;return new Promise((function(o,a){try{switch(t){case e.CODE_START_DEFAULT_SOLUTION:var s=0;for(i.header=r.readHeader();r.nextField()&&!r.isEndGroup();){switch(r.getFieldNumber()){case 1:s=r.readInt();break;default:r.skipField()}}return void i.callMethod(i.startDefaultSolution,"int",n,o,s);default:var u="IXPSFSolution ApiLevel is not match with the service's: "+"there is no function for code = ".concat(t);return l.a.error("HMSCore HIDL_Js",u),void a(new N(h.API_LEVEL_NOT_SUPPORT,u))}}catch(e){l.a.error("HMSCore HIDL_Js","IXPSFSolution onTransact code = ".concat(t,", ").concat(e.message)),a(e)}}))}},{key:"doCallBack",value:function(e,t,r,n){r&&(e.writeHeader(),e.writeAny(1,r,n)),t(e)}},{key:"callMethod",value:function(e,t,r,n){var i=this;if("function"==typeof e)if("function"==typeof n){for(var o=arguments.length,a=new Array(o>4?o-4:0),s=4;s<o;s++)a[s-4]=arguments[s];var u=e.apply(void 0,a);u instanceof Promise?u.then((function(e){l.a.debug("HMSCore HIDL_Js","callMethod return Promise. asynReslut = ".concat(e)),i.doCallBack(r,n,e,t)})):this.doCallBack(r,n,u,t)}else l.a.debug("HMSCore HIDL_Js","callback is not a function. callback = ".concat(n));else l.a.debug("HMSCore HIDL_Js","method is not a function. method = ".concat(e))}}],[{key:"asInterface",value:function(t){return new e.Proxy(t)}}]),e}();s()(de,"API_LELVEL",1),s()(de,"CODE_START_DEFAULT_SOLUTION",1),s()(de,"Proxy",function(){function e(t){b()(this,e),this.mRemoteObj=t}var t;return m()(e,[{key:"startDefaultSolution",value:(t=le()(he.a.mark((function e(t){var r,n,i,o,a;return he.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,l.a.debug("HMSCore HIDL_Js","IXPSFSolution Proxy startDefaultSolution."),r=new ne,e.next=5,this.mRemoteObj.mAdapter.createHeader(this.mRemoteObj);case 5:return n=e.sent,r.writeHeader(n),r.writeInt(1,t),e.next=10,this.mRemoteObj.mAdapter.transact(this.mRemoteObj,de.CODE_START_DEFAULT_SOLUTION,r);case 10:i=e.sent,l.a.debug("HMSCore HIDL_Js","IXPSFSolution Proxy startDefaultSolution result coming..."),i.readHeader(),o=0;case 14:if(!i.nextField()){e.next=27;break}if(!i.isEndGroup()){e.next=17;break}return e.abrupt("break",27);case 17:a=i.getFieldNumber(),e.t0=a,e.next=1===e.t0?21:23;break;case 21:return o=i.readInt(),e.abrupt("break",25);case 23:return i.skipField(),e.abrupt("break",25);case 25:e.next=14;break;case 27:return e.abrupt("return",o);case 30:throw e.prev=30,e.t1=e.catch(0),l.a.error("HMSCore HIDL_Js","IXPSFSolution Proxy startDefaultSolution, ".concat(e.t1.message)),e.t1;case 34:case"end":return e.stop()}}),e,this,[[0,30]])}))),function(e){return t.apply(this,arguments)})}]),e}());var ye=function(){function e(){b()(this,e),s()(this,"mIidPermissions",new Map),s()(this,"mApiPermissions",new Map),s()(this,"mDisableAuthObjs",new Set),s()(this,"mIsIidExport",new Map)}return m()(e,[{key:"registerPermission",value:function(e,t){this.mIidPermissions.set(e,t)}},{key:"registerApiPermission",value:function(e,t,r){var n;this.mApiPermissions.has(e)?null===(n=this.mApiPermissions.get(e))||void 0===n||n.set(t,r):this.mApiPermissions.set(e,new Map([[t,r]]))}},{key:"disableAuth",value:function(e){this.mDisableAuthObjs.add(e)}},{key:"registerIsServiceIidExport",value:function(e,t){this.mIsIidExport.set(e,t)}},{key:"getPermission",value:function(e){return this.mIidPermissions.get(e)}},{key:"getApiPermissions",value:function(e){return this.mApiPermissions.get(e)}},{key:"isAuthDisabled",value:function(e){return this.mDisableAuthObjs.has(e)}},{key:"getIsServiceIidExport",value:function(e){return this.mIsIidExport.get(e)}}]),e}();s()(ye,"JS_SERVICE_TYPE",1),s()(ye,"CPP_SERVICE_TYPE",2);var ge=m()((function e(){b()(this,e)})),ve=function(){function e(){b()(this,e)}return m()(e,null,[{key:"registerServiceInfo",value:function(e){var t=M.a.get("hmscoreFramework","registerCenter");e.initPermissions?e.initPermissions():l.a.debug(p.j,"Registered service initPermissions undefined"),e.initIsServiceIidExport?e.initIsServiceIidExport():l.a.debug(p.j,"Registered service initIsServiceIidExport undefined"),t.registerServiceInfo(e)}}]),e}();function be(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=T()(e);if(t){var i=T()(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return S()(this,r)}}var we=function(e){E()(r,e);var t=be(r);function r(){return b()(this,r),t.apply(this,arguments)}return m()(r,[{key:"getType",value:function(){return ye.JS_SERVICE_TYPE}}]),r}(ye);function me(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=T()(e);if(t){var i=T()(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return S()(this,r)}}var _e=function(e){E()(r,e);var t=me(r);function r(){return b()(this,r),t.apply(this,arguments)}return m()(r,[{key:"getType",value:function(){return ye.CPP_SERVICE_TYPE}}]),r}(ye);function Ee(){if(u.a.isOHOS()){var e=M.a.get("hmscoreFramework","xpsfJsTrigger");return Be.mSupprotAdapters[e]||Be.init(),Be.mSupprotAdapters[e]().getAppInfoManager()}}C({HError:N,HHeader:V,HBaseAdapter:U,HJSBAdapter:Fe,HObject:Le,HUnknownObject:re,HParcel:ne,HServiceRegistry:oe,HServiceRegistryInfo:ie,HViewHolder:ue,IXPSFSolution:de,IClassFactory:ce});var Ie=function(){function e(){b()(this,e)}return m()(e,null,[{key:"getAppId",value:function(){var e=Ee();return e?e.getAppId():new Promise((function(e,t){B.getAppId().then((function(r){var n=r.errCode,i=r.errMsg,o=r.data;0===n?e(o):t(new N(n,i))})).catch(t)}))}},{key:"getProjectId",value:function(){var e=Ee();return e?e.getProjectId():new Promise((function(e,t){t(new N(h.NOT_SUPPORTED_PLATFORM,"The HAppInfoManager.getProjectId method is not supported by the current platform."))}))}},{key:"getPackageName",value:function(){var e=Ee();return e?e.getPackageName():new Promise((function(e,t){B.getPackageName().then((function(r){var n=r.errCode,i=r.errMsg,o=r.data;0===n?e(o):t(new N(n,i))})).catch(t)}))}}]),e}();function Se(){if(u.a.isOHOS()){var e=M.a.get("hmscoreFramework","xpsfJsTrigger");return Be.mSupprotAdapters[e]||Be.init(),Be.mSupprotAdapters[e]().getCommonMessenger()}return new U}var Ae=function(){function e(){b()(this,e)}return m()(e,null,[{key:"on",value:function(e,t){u.a.isOHOS()?Se().on(e,t):l.a.debug(p.j,"The HCommonMessenger is not supported by the current platform.")}},{key:"off",value:function(e){u.a.isOHOS()?Se().off(e):l.a.debug(p.j,"The HCommonMessenger is not supported by the current platform.")}}]),e}(),Te=function(){function e(){b()(this,e),s()(this,"packageName",void 0),s()(this,"pageName",void 0),s()(this,"action",void 0),s()(this,"extra",void 0)}var t;return m()(e,[{key:"writeToParcel",value:function(e){try{e.writeString(1,this.packageName),e.writeString(2,this.pageName),e.writeString(3,this.action),e.writeString(4,this.extra)}catch(e){throw l.a.error("HMSCore HIDL_Js","HPageInfo writeToParcel ".concat(e.message)),e}}},{key:"registerHObject",value:(t=le()(he.a.mark((function e(t){return he.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:l.a.debug("HMSCore HIDL_Js","registerHObject ".concat(t));case 1:case"end":return e.stop()}}),e)}))),function(e){return t.apply(this,arguments)})}],[{key:"creatorFromHParcel",value:function(t){try{var r=new e,n="",i="",o="",a="";return t.readHParcelable((function(e){for(;e.nextField()&&!e.isEndGroup();){switch(e.getFieldNumber()){case 1:n=e.readString();break;case 2:i=e.readString();break;case 3:o=e.readString();break;case 4:a=e.readString();break;default:e.skipField()}}})),r.packageName=n,r.pageName=i,r.action=o,r.extra=a,r}catch(e){throw l.a.error("HMSCore HIDL_Js","HPageInfo creatorFromHParcel ".concat(e.message)),e}}}]),e}(),Oe=Te;function Re(e,t,r){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,r)}var ke=new WeakMap,Pe=function(){function e(t){b()(this,e),Re(this,ke,{writable:!0,value:void 0});var r=function(){if(u.a.isOHOS()){var e=M.a.get("hmscoreFramework","xpsfJsTrigger");return Be.mSupprotAdapters[e]||Be.init(),Be.mSupprotAdapters[e]().getPreferencesManager()}}();if(r)P()(this,ke,new r(t));else{l.a.debug(p.j,"The HPreferencesManager is not supported by the current platform.");var n=function(){return new Promise((function(){l.a.debug(p.j,"The HPreferencesManager is not supported by the current platform.")}))};P()(this,ke,{get:n,set:n,has:n,delete:n,clear:n,synchronize:n})}}return m()(e,[{key:"get",value:function(e,t){return R()(this,ke).get(e,t)}},{key:"set",value:function(e,t){return R()(this,ke).set(e,t)}},{key:"has",value:function(e){return R()(this,ke).has(e)}},{key:"delete",value:function(e){return R()(this,ke).delete(e)}},{key:"clear",value:function(){return R()(this,ke).clear()}},{key:"synchronize",value:function(){return R()(this,ke).synchronize()}}]),e}();function Ne(){return M.a.get("pafFramework","pafTrace")}var xe=function(){function e(){b()(this,e)}return m()(e,null,[{key:"traceBegin",value:function(e,t){var r=Ne();if(r)return r.traceBegin(e,t)}},{key:"traceError",value:function(e,t){var r=Ne();r&&r.traceError(e,t)}},{key:"traceEnd",value:function(e,t){var r=Ne();r&&r.traceEnd(e,t)}}]),e}(),je={mSupprotAdapters:[],init:function(){this.registerAdapter("ohos.base",(function(){return M.a.get("hmscoreFramework","abilityManager")}))},registerAdapter:function(e,t){this.mSupprotAdapters[e]=t},start:function(e,t,r){var n=this;return l.a.debug(p.j,"startAbilityForResult enter"),this.init(),l.a.debug(p.j,"startAbilityForResult end"),new Promise((function(i,o){u.a.isOHOS()?n.mSupprotAdapters["ohos.base"]().startAbilityForResult(e,t,r).then(i,o):(l.a.debug(p.j,"HAbilityManager is not find adapter"),o())}))}};function Ce(e,t,r){!function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,t),t.set(e,r)}C({HAppInfoManager:Ie,HCommonMessenger:Ae,HGlobalVariableManager:M.a,HLogger:l.a,HPageInfo:Te,HPreferencesManager:Pe,HTrace:xe});var Me=new WeakMap,He=new WeakMap,Le=function(){function e(){b()(this,e),s()(this,"mId",u.a.uniqueId("hobject")),s()(this,"mAdapter",void 0),s()(this,"mRemoteStub",void 0),Ce(this,Me,{writable:!0,value:void 0}),Ce(this,He,{writable:!0,value:{}})}return m()(e,[{key:"onTransact",value:function(e,t,r,n){throw new N(h.INVOKE_UNIMPLEMENTED_METHOD,"The onTransact method is not implemented on the HObject.")}},{key:"bindRemoteObject",value:function(e,t){this.unbindRemoteObject(),this.mId=e,P()(this,Me,ze.on(e,(function(e){var r=e;if("string"==typeof r)try{r=JSON.parse(r)}catch(e){l.a.warn(p.j,"resultData is not JSON string. ".concat(r))}if("string"==typeof r.value&&void 0===r.transferData)try{r=JSON.parse(r.value)}catch(e){l.a.warn(p.j,"resultData.value is not JSON string. ".concat(r.value))}"function"==typeof t&&t(r||{})}),R()(this,He)))}},{key:"unbindRemoteObject",value:function(){this.mId&&R()(this,Me)&&(ze.off(this.mId,R()(this,Me),R()(this,He)),P()(this,Me,void 0))}},{key:"release",value:function(){l.a.debug(p.j,"HObject release"),this.unbindRemoteObject()}}]),e}();function De(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=T()(e);if(t){var i=T()(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return S()(this,r)}}Object.defineProperty(Le.prototype,"refCount",{get:function(){return this._refCount||0},set:function(e){this._refCount=e,0===e&&this.release()}});var Fe=function(e){E()(r,e);var t=De(r);function r(){return b()(this,r),t.apply(this,arguments)}return m()(r,[{key:"hGetClassObject",value:function(e,t){var r=this;return new Promise((function(n,i){ze.invoke({apiName:"service.hGetClassObject",args:{sId:e.mSId,iId:t,path:e.mPath,apiLevel:e.mApiLevel},success:function(e){var t=new Le;t.mId=e.data.id,t.mAdapter=r,n(t)},fail:i})}))}},{key:"transact",value:function(e,t,r){var n=this;return new Promise((function(i){ze.invoke({apiName:"service.transact",args:{stubId:e.mId,code:t,transferData:r.toBase64(),extras:r.mWriteHObjectIds},success:function(e){if("HIDL_JSB no value returned."!==e.data){var t=(new ne).fromBase64(e.data);t.mAdapter=n,i(t)}else i("success. no value returened.")}})}))}},{key:"newStub",value:function(e){return new Promise((function(t){ze.invoke({apiName:"service.newStub",args:{mode:1},success:function(r){e.bindRemoteObject(r.data,(function(t){var r=t.code,n=t.transferData,i=(new ne).fromBase64(n);e.onTransact(r,i,new ne,0)})),t(e)}})}))}}]),r}(U);Fe.type="jsb";var Be={mRegistry:void 0,mSupprotAdapters:[],init:function(){this.registerAdapter(Fe.type,(function(){return new Fe})),this.registerAdapter("ohos.base",(function(){return M.a.get("hmscoreFramework","xpsfJsAdapter")})),this.registerAdapter("paf.base",(function(){return M.a.get("pafFramework","xpsfJsPafAdapter")})),this.registerAdapter("paf.binding",(function(){return M.a.get("pafFramework","bindingJsPafAdapter")}))},registerAdapter:function(e,t){this.mSupprotAdapters[e]=t},hCreateInstance:function(e){for(var t,r=e.apiLevel,n=void 0===r?1:r,i=e.progId,o=e.iId,a=e.success,s=e.failed,c=arguments.length,f=new Array(c>1?c-1:0),h=1;h<c;h++)f[h-1]=arguments[h];if("string"==typeof e&&f.length>0&&(i=e,o=f[0],a=f[1],s=f[2]),void 0===this.mRegistry&&(l.a.debug(p.j,"mRegistry is null."),this.mRegistry=new oe,this.mRegistry.initPolicy(),this.init()),u.a.isOHOS()||u.a.isSupportPAF()){var d=this.mRegistry.findInfo(i,"",n);t=this.mSupprotAdapters[d.mTrigger]().hGetClassObject(d,o)}else{var y=this.mRegistry.findInfoByProgId(i);y.mApiLevel=n,t=this.mSupprotAdapters[y.mTrigger]().hGetClassObject(y,ce.IID_IClassFactory).then((function(e){return ce.asInterface(e).createInstance(o)}))}return"function"==typeof a||"function"==typeof s?void t.then(a).catch(s):t},hGetClassObject:function(e,t,r){void 0===this.mRegistry&&(this.mRegistry=new oe,this.mRegistry.initPolicy());var n=this.mRegistry.findInfoByProgId(e);l.a.debug(p.j,"hGetClassObject info = ".concat(JSON.stringify(n))),this.mSupprotAdapters[n.mTrigger]().hGetClassObject(n,t).then((function(e){l.a.debug(p.j,"HServiceManager hGetClassObject result ".concat(e.mId)),r(e)}))}},Ue=function(){function e(){b()(this,e),this.header=null,this.sendRequest=null}return m()(e,[{key:"onTransact",value:function(t,r,n){var i=this;return new Promise((function(o,a){try{switch(t){case e.CODE_SEND_REQUEST:var s="";for(i.header=r.readHeader();r.nextField()&&!r.isEndGroup();){switch(r.getFieldNumber()){case 1:s=r.readString();break;default:r.skipField()}}return void i.callMethod(i.sendRequest,"string",n,o,s);default:return a(new N),void l.a.debug("HMSCore HIDL_Js","there is no function in JSBCompat for code = ".concat(t))}}catch(e){l.a.error("HMSCore HIDL_Js","JSBCompat onTransact code = ".concat(t,", ").concat(e.message)),a(e)}}))}},{key:"doCallBack",value:function(e,t,r,n){r&&(e.writeHeader(),e.writeAny(1,r,n)),t(e)}},{key:"callMethod",value:function(e,t,r,n){var i=this;if("function"==typeof e)if("function"==typeof n){for(var o=arguments.length,a=new Array(o>4?o-4:0),s=4;s<o;s++)a[s-4]=arguments[s];var u=e.apply(void 0,a);u instanceof Promise?u.then((function(e){l.a.debug("HMSCore HIDL_Js","callMethod return Promise. asynReslut = ".concat(e)),i.doCallBack(r,n,e,t)})):this.doCallBack(r,n,u,t)}else l.a.debug("HMSCore HIDL_Js","callback is not a function. callback = ".concat(n));else l.a.debug("HMSCore HIDL_Js","method is not a function. method = ".concat(e))}}],[{key:"asInterface",value:function(t){return new e.Proxy(t)}}]),e}();s()(Ue,"API_LELVEL",1),s()(Ue,"CODE_SEND_REQUEST",1),s()(Ue,"Proxy",function(){function e(t){b()(this,e),this.mRemoteObj=t}var t;return m()(e,[{key:"sendRequest",value:(t=le()(he.a.mark((function e(t){var r,n,i,o,a;return he.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,l.a.debug("HMSCore HIDL_Js","JSBCompat Proxy sendRequest."),r=new ne,e.next=5,this.mRemoteObj.mAdapter.createHeader();case 5:return n=e.sent,r.writeHeader(n),r.writeString(1,t),e.next=10,this.mRemoteObj.mAdapter.transact(this.mRemoteObj,Ue.CODE_SEND_REQUEST,r);case 10:i=e.sent,l.a.debug("HMSCore HIDL_Js","JSBCompat Proxy sendRequest result coming..."),i.readHeader(),o="";case 14:if(!i.nextField()){e.next=27;break}if(!i.isEndGroup()){e.next=17;break}return e.abrupt("break",27);case 17:a=i.getFieldNumber(),e.t0=a,e.next=1===e.t0?21:23;break;case 21:return o=i.readString(),e.abrupt("break",25);case 23:return i.skipField(),e.abrupt("break",25);case 25:e.next=14;break;case 27:return e.abrupt("return",o);case 30:e.prev=30,e.t1=e.catch(0),l.a.error("HMSCore HIDL_Js","JSBCompat Proxy sendRequest, ".concat(e.t1.message));case 33:return e.abrupt("return",void 0);case 34:case"end":return e.stop()}}),e,this,[[0,30]])}))),function(e){return t.apply(this,arguments)})}]),e}());var Ve=function(e,t){return l.a.debug(p.j,"apiName: ".concat(e,", args: ").concat(JSON.stringify(t))),new Promise((function(r,n){if("fg.request"===e||"bg.request"===e)if("string"==typeof(null==t?void 0:t.uri)){var i=t.uri.split("."),o=f()(i),a=o[0],s=o.slice(1);Be.hCreateInstance({progId:a,iId:s.join("."),apiLevel:(null==t?void 0:t.api_level)||1}).then((function(e){var i=JSON.stringify(t);Ue.asInterface(e).sendRequest(i).then((function(e){r(e)})).catch((function(e){var t=e.code,r=e.message;n({errCode:t,errMsg:r})}))})).catch(n)}else n({errCode:h.PARAMETER_INVALID,errMsg:'"args.uri" is required.'});else n({errCode:h.PARAMETER_INVALID,errMsg:'Invoke only "bg.request" and "fg.request" are supported.'})}))};function We(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}var Je,Ge,Ye={},Xe={};function qe(e,t,r){var n={id:u.a.uniqueId("cb_"),success:e,fail:t,complete:r};return Ye[n.id]=n,n.id}function Ke(e){var t;try{"string"==typeof e?t=JSON.parse(e):(l.a.info(p.j,"result is not string",e),t=e)}catch(r){t={errCode:-1,errMsg:"callback result parsing error"},l.a.error(p.j,"json parse failed, ".concat(e))}return t}var ze={initAppId:function(e){M.a.set("hmscoreFramework","hmsSubId",e),l.a.info("initAppId(), appId:".concat(e))},invoke:function(e){var t=this,r=e.apiName,n=e.args,i=e.success,o=e.fail,a=e.complete;if(l.a.info(p.j,"invoke start, apiName: ".concat(r)),r){var c=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?We(Object(r),!0).forEach((function(t){s()(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):We(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({subId:M.a.get("hmscoreFramework","hmsSubId")},n),f=JSON.stringify(c);Ze();var h={};h.apiName=r,h.args=c;var d={};if(d.bundleName=p.e,d.abilityName=p.c,!(i&&"function"==typeof i||o&&"function"==typeof o||a&&"function"==typeof a)){if(u.a.isHarmonyWebview())return new Promise((function(e,t){var n={method:r,data:c};try{e(Ke(window.invoke.call(JSON.stringify(n))))}catch(e){l.a.error(p.j,"Harmony webview invoke",e),t(e)}}));if(u.a.isOHOS())return Ve(r,c);if(u.a.isHarmony())return d.messageCode=p.g,d.data=h,d.abilityType=p.b,d.syncOption=p.h,function(e){return new Promise((function(t,r){e.then((function(e){t(Ke(e))})).catch((function(e){r(Ke(e))}))}))}(FeatureAbility.callAbility(d));if(u.a.isCordova())return new Promise((function(e,t){var n={method:r,data:c};window.cordova.exec((function(t){e(Ke(t))}),(function(e){t(Ke(e))}),"JSCore","invoke",n)}));if(u.a.isCapacitor()){var y={method:r,data:c};return window.Capacitor.Plugins.JSBCapacitorPlugin.invoke(y)}return new Promise((function(e){e(Ke(u.a.getJSCore().invoke(r,f)))}))}var g=qe(i,o,a);if(l.a.info(p.j,"invoke Async, callbackId:".concat(g)),u.a.isHarmonyWebview()){var v={method:r,data:c,callback:g};try{window.invokeAsync.call(JSON.stringify(v))}catch(e){l.a.error(p.j,"Harmony webview invokeAsync",e),this.callback(g,e)}}else if(u.a.isOHOS())Ve(r,c).then((function(e){ze.callback(g,e)})).catch((function(e){l.a.error(p.j,"ohos adapter invokeAsync failed ".concat(JSON.stringify(e))),ze.callback(g,e)}));else if(u.a.isHarmony())h.callbackId=g,d.messageCode=p.d,d.data=h,d.abilityType=p.b,d.syncOption=p.a,FeatureAbility.callAbility(d).then((function(e){var t=Ke(e);"callback result parsing error"!==t.errMsg&&ze.callback(g,t.data)}),(function(e){l.a.error(p.j,"call ability failed ".concat(e))}));else if(u.a.isQickApp())u.a.getJSCore().invokeAsync({apiName:r,args:f,callbackId:g,callback:this.callback});else if(u.a.isCordova()){var b={method:r,data:c};window.cordova.exec((function(e){t.callback(g,e)}),(function(e){t.callback(g,e)}),"JSCore","invokeAsync",b)}else if(u.a.isCapacitor()){var w={method:r,data:c};window.Capacitor.Plugins.JSBCapacitorPlugin.invokeAsync(w).then((function(e){ze.callback(g,e.value)})).catch((function(e){l.a.error(p.j,"capacitor adapter invokeAsync failed",e)}))}else u.a.getJSCore().invokeAsync(r,f,g)}},callback:function(e,t){if(l.a.info(p.j,"callback start, cbId: ".concat(e)),t){var r=Ye[e];if(r){!function(e){delete Ye[e.id]}(r);var n=Ke(t);if("callback result parsing error"===n.errMsg&&"function"==typeof r.fail)return void r.fail(n);var i={errCode:n.errCode,errMsg:n.errMsg||"",data:n.data,extras:n.extras};0===n.errCode?("function"==typeof r.success&&r.success(i),"function"==typeof r.complete&&r.complete(i)):("function"==typeof r.fail&&r.fail(i),"function"==typeof r.complete&&r.complete(i))}}else l.a.error(p.j,"callback params is null")},on:function(e,t,r){if(l.a.info(p.j,"on start, eventName: ".concat(e)),r&&u.a.isHarmony())return function(e,t,r){var n={id:u.a.uniqueId("ecb_"),eventName:e,callback:t};return r[n.id]=n,n.id}(e,t,r);if(!u.a.isWeex()){if(u.a.isRN())return Ge.addListener(e,(function(e){var r;try{r=JSON.parse(e)}catch(e){return}t(r)}));if(u.a.isCapacitor())return window.Capacitor.Plugins.JSBCapacitorPlugin.addListener(e,(function(e){t(e)}));u.a.isCordova()&&0===Object.keys(Xe).length&&window.cordova.exec(ze.cordovaHandler,ze.cordovaHandler,"JSCore","addEventListener",{eventName:e});var n=u.a.uniqueId("subscribeEvent_");l.a.info(p.j,"on browser, offKey: ".concat(n));var i=Xe["event_"+e];return i||(i={},Xe["event_"+e]=i),i[n]=t,n}weex.requireModule("globalEvent").addEventListener(e,t)},off:function(e,t,r){if(l.a.info(p.j,"off start, eventName: ".concat(e,", offKey: ").concat(t)),r&&u.a.isHarmony())delete r[t];else if(u.a.isWeex()){weex.requireModule("globalEvent").removeEventListener(e)}else if(u.a.isRN()||u.a.isCapacitor())t&&t.remove();else{var n=Xe["event_"+e];if(n)if("string"==typeof t)delete n[t];else if("function"==typeof t){var i=Object.keys(n).filter((function(e){return n[e]===t}));i&&i.length&&delete n[i[0]]}}},publishHandler:function(e,t){var r;l.a.info(p.j,"publishHandler start, eventName: ".concat(e));try{r=JSON.parse(t)}catch(e){l.a.error(p.j,"pushEvent data parsing error"),r=t}var n=Xe["event_"+e];n&&Object.keys(n).forEach((function(e){var t=n[e];"function"==typeof t&&t(r)}))},cordovaHandler:function(e){e&&ze.publishHandler(e.event,e.data)},createView:function(e){var t=this,r=e.apiName,n=e.args,i=e.containerId,a=e.success,s=e.fail,c=e.complete,f=void 0!==n?JSON.stringify(n):"",l=qe(a,s,c);if(u.a.isCordova())window.cordova.exec((function(e){t.callback(l,e)}),(function(e){t.callback(l,e)}),"JSCoreView","createView",n);else if(u.a.isWebView()){var p,h=u.a.getPositionInfoById(i);(p=u.a.getJSCore()).createView.apply(p,[r,f,l,i].concat(o()(h)))}else u.a.getJSCore().createView(r,f,l,i)},scrollViewToY:function(e,t){u.a.isWebView()&&u.a.getJSCore().scrollViewToY(e,t)},init:function(e){if(l.a.info(p.j,"init start"),u.a.isRN()){var t=e.NativeModules;u.a.setJSCore(t.JSCore),Ge=e.DeviceEventEmitter,Ze(),this.utils=t.ModuleUtils}else if(u.a.isHarmony()){var r={};r.bundleName=p.e,r.abilityName=p.c,r.messageCode=p.f,r.abilityType=p.b,r.syncOption=p.a,FeatureAbility.subscribeAbilityEvent(r,(function(t){var r;try{r=JSON.parse(t)}catch(e){return void l.a.error(p.j,"subscribe event result parse error: ".concat(t))}var n=r.data.eventName;Object.keys(e).forEach((function(t){var i=e[t];n===i.eventName&&i.callback(r.data.eventResult)}))})).catch((function(e){return l.a.error(p.j,"subscribe event fail",e)}))}},destroy:function(){l.a.info(p.j,"destroy start"),u.a.isRN()?Je&&Je.remove():u.a.isCordova()&&window.cordova.exec(ze.cordovaHandler,ze.cordovaHandler,"JSCore","removeEventListener")}};function Ze(){u.a.isWebView()||u.a.isHarmonyWebview()?window.JSBridge=ze:u.a.isWeex()?ze.on(p.k,(function(e){var t=e.id,r=e.value;ze.callback(t,r)})):u.a.isRN()?Ge&&(Je&&Je.remove(),Je=ze.on(p.i,(function(e){var t=e.id,r=e.value;ze.callback(t,r)}))):u.a.isQickApp()&&(u.a.getJSCore().onEventCallBack=ze.publishHandler)}if(Ze(),u.a.isHarmonyWebview()&&document.currentScript&&document.currentScript.href){var Qe=document.currentScript.href;l.a.info(p.j,"script href: ".concat(document.currentScript.href));var $e=Qe.match(/[?&]appid=([^&=]+)/i);$e&&$e[1]&&ze.initAppId($e[1])}}])}));

/***/ }),

/***/ "./node_modules/@topon/quick-app-sdk-hw/app.js":
/*!*****************************************************!*\
  !*** ./node_modules/@topon/quick-app-sdk-hw/app.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

Object.defineProperty(exports, "__esModule", ({value:!0})),exports["default"]=void 0;var e=v(__webpack_require__(/*! union-quick-app-ad/app.js */ "./node_modules/union-quick-app-ad/app.js")),t=v($app_require$("@app-module/system.device")),n=v($app_require$("@app-module/system.package")),o=v($app_require$("@app-module/system.network")),r=v($app_require$("@app-module/system.app")),l=v($app_require$("@app-module/system.storage")),i=v($app_require$("@app-module/service.ad")),u=v($app_require$("@app-module/system.fetch")),a=v($app_require$("@app-module/system.file")),c=v($app_require$("@app-module/system.router")),s=v($app_require$("@app-module/system.prompt")),d=v(__webpack_require__(/*! js-md5 */ "./node_modules/js-md5/src/md5.js")),f=v(__webpack_require__(/*! js-base64 */ "./node_modules/js-base64/base64.js")),p=v(__webpack_require__(/*! ./bundle */ "./node_modules/@topon/quick-app-sdk-hw/bundle/index.js"));function v(e){return e&&e.__esModule?e:{default:e}}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function b(e,t,n){return(t=k(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,k(o.key),o)}}function k(e){var t=function(e,t){if("object"!=y(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,t||"default");if("object"!=y(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==y(t)?t:t+""}var $=Object.getPrototypeOf(global)||global,O="internal://files/toponad/".concat("".concat("4.2.11"),"/core-render.js"),x="local",j="http://192.168.86.113:7001";function w(e){try{new Function(e)()}catch(e){console.error("load sdk error",e)}}function P(){return new Promise((function(e,t){u.default.fetch({url:"".concat(j,"/core/render/core-render.js"),responseType:"text",method:"GET",success:function(t){a.default.writeText({uri:O,text:t.data,success:function(){},fail:function(e,t){}}),e(t.data)},fail:function(e,n){t()}})}))}function _(a){try{var p;$.$topon_sdk&&($.$topon_sdk.api={device:t.default,pkg:n.default,network:o.default,app:r.default,storage:l.default,ad:i.default,$fetch:u.default,router:c.default,prompt:s.default,md5:d.default,jsBase64:f.default}),new $.$topon_sdk(this,a),new e.default(this);var v=(null==a||null===(p=a.config)||void 0===p?void 0:p.ylhAppId)||"";if(v)try{new(0,(__webpack_require__(/*! ylh-quick-app-ad-sdk */ "./node_modules/ylh-quick-app-ad-sdk/index.js")["default"]))(this,{appId:v})}catch(e){}}catch(e){console.error("init sdk error",e)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var n=t.app,o=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t);this.$ctx=n,delete o.app,$&&$.$topon_sdk?_.call(n,o):"local"===x?(w.call(n,p.default,!1),_.call(n,o)):a.default.readText({uri:O,success:function(e){w.call(n,e.text),_.call(n,o)},fail:function(e,t){P.call(n).then((function(e){w.call(n,e,!1),_.call(n,o)}))}})}var t,n,o;return t=e,(n=[{key:"setChannel",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setChannel.call(this.$ctx,e)}},{key:"setSubChannel",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setSubChannel.call(this.$ctx,e)}},{key:"setCustomParam",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setCustomParam.call(this.$ctx,e)}},{key:"setPlacementCustomParam",value:function(e){var t;return null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.setPlacementCustomParam.call(this.$ctx,e)}},{key:"onShow",value:function(){var e,t;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.publish("app-on-show"),null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.onShow.call(this.$ctx)}},{key:"onHide",value:function(){var e,t;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.publish("app-on-hide"),null==this||null===(t=this.$ctx)||void 0===t||null===(t=t.$def)||void 0===t||null===(t=t.topon_sdk)||void 0===t?void 0:t.onHide.call(this.$ctx)}},{key:"onDestroy",value:function(){var e;return null==this||null===(e=this.$ctx)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e?void 0:e.onDestroy.call(this.$ctx)}}])&&m(t.prototype,n),o&&m(t,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();exports["default"]=g;

/***/ }),

/***/ "./node_modules/@topon/quick-app-sdk-hw/bundle/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@topon/quick-app-sdk-hw/bundle/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = "!function(){function t(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function e(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?t(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(){i=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,a=Object.defineProperty||function(t,e,i){t[e]=i.value},o=\"function\"==typeof Symbol?Symbol:{},d=o.iterator||\"@@iterator\",s=o.asyncIterator||\"@@asyncIterator\",l=o.toStringTag||\"@@toStringTag\";function c(t,e,i){return Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},\"\")}catch(t){c=function(t,e,i){return t[e]=i}}function u(t,e,i,n){var r=e&&e.prototype instanceof _?e:_,o=Object.create(r.prototype),d=new D(n||[]);return a(o,\"_invoke\",{value:T(t,i,d)}),o}function h(t,e,i){try{return{type:\"normal\",arg:t.call(e,i)}}catch(t){return{type:\"throw\",arg:t}}}e.wrap=u;var p=\"suspendedStart\",f=\"executing\",v=\"completed\",m={};function _(){}function g(){}function y(){}var I={};c(I,d,(function(){return this}));var b=Object.getPrototypeOf,k=b&&b(b(L([])));k&&k!==n&&r.call(k,d)&&(I=k);var w=y.prototype=_.prototype=Object.create(I);function x(t){[\"next\",\"throw\",\"return\"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function S(t,e){function i(n,a,o,d){var s=h(t[n],t,a);if(\"throw\"!==s.type){var l=s.arg,c=l.value;return c&&\"object\"==typeof c&&r.call(c,\"__await\")?e.resolve(c.__await).then((function(t){i(\"next\",t,o,d)}),(function(t){i(\"throw\",t,o,d)})):e.resolve(c).then((function(t){l.value=t,o(l)}),(function(t){return i(\"throw\",t,o,d)}))}d(s.arg)}var n;a(this,\"_invoke\",{value:function(t,r){function a(){return new e((function(e,n){i(t,r,e,n)}))}return n=n?n.then(a,a):a()}})}function T(e,i,n){var r=p;return function(a,o){if(r===f)throw Error(\"Generator is already running\");if(r===v){if(\"throw\"===a)throw o;return{value:t,done:!0}}for(n.method=a,n.arg=o;;){var d=n.delegate;if(d){var s=A(d,n);if(s){if(s===m)continue;return s}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(r===p)throw r=v,n.arg;n.dispatchException(n.arg)}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);r=f;var l=h(e,i,n);if(\"normal\"===l.type){if(r=n.done?v:\"suspendedYield\",l.arg===m)continue;return{value:l.arg,done:n.done}}\"throw\"===l.type&&(r=v,n.method=\"throw\",n.arg=l.arg)}}}function A(e,i){var n=i.method,r=e.iterator[n];if(r===t)return i.delegate=null,\"throw\"===n&&e.iterator.return&&(i.method=\"return\",i.arg=t,A(e,i),\"throw\"===i.method)||\"return\"!==n&&(i.method=\"throw\",i.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),m;var a=h(r,e.iterator,i.arg);if(\"throw\"===a.type)return i.method=\"throw\",i.arg=a.arg,i.delegate=null,m;var o=a.arg;return o?o.done?(i[e.resultName]=o.value,i.next=e.nextLoc,\"return\"!==i.method&&(i.method=\"next\",i.arg=t),i.delegate=null,m):o:(i.method=\"throw\",i.arg=new TypeError(\"iterator result is not an object\"),i.delegate=null,m)}function E(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function C(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e}function D(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(E,this),this.reset(!0)}function L(e){if(e||\"\"===e){var i=e[d];if(i)return i.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function i(){for(;++n<e.length;)if(r.call(e,n))return i.value=e[n],i.done=!1,i;return i.value=t,i.done=!0,i};return a.next=a}}throw new TypeError(typeof e+\" is not iterable\")}return g.prototype=y,a(w,\"constructor\",{value:y,configurable:!0}),a(y,\"constructor\",{value:g,configurable:!0}),g.displayName=c(y,l,\"GeneratorFunction\"),e.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===g||\"GeneratorFunction\"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,c(t,l,\"GeneratorFunction\")),t.prototype=Object.create(w),t},e.awrap=function(t){return{__await:t}},x(S.prototype),c(S.prototype,s,(function(){return this})),e.AsyncIterator=S,e.async=function(t,i,n,r,a){void 0===a&&(a=Promise);var o=new S(u(t,i,n,r),a);return e.isGeneratorFunction(i)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},x(w),c(w,l,\"Generator\"),c(w,d,(function(){return this})),c(w,\"toString\",(function(){return\"[object Generator]\"})),e.keys=function(t){var e=Object(t),i=[];for(var n in e)i.push(n);return i.reverse(),function t(){for(;i.length;){var n=i.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=L,D.prototype={constructor:D,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(C),!e)for(var i in this)\"t\"===i.charAt(0)&&r.call(this,i)&&!isNaN(+i.slice(1))&&(this[i]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var i=this;function n(n,r){return d.type=\"throw\",d.arg=e,i.next=n,r&&(i.method=\"next\",i.arg=t),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],d=o.completion;if(\"root\"===o.tryLoc)return n(\"end\");if(o.tryLoc<=this.prev){var s=r.call(o,\"catchLoc\"),l=r.call(o,\"finallyLoc\");if(s&&l){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!l)throw Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var n=this.tryEntries[i];if(n.tryLoc<=this.prev&&r.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var a=n;break}}a&&(\"break\"===t||\"continue\"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method=\"next\",this.next=a.finallyLoc,m):this.complete(o)},complete:function(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.finallyLoc===t)return this.complete(i.completion,i.afterLoc),C(i),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc===t){var n=i.completion;if(\"throw\"===n.type){var r=n.arg;C(i)}return r}}throw Error(\"illegal catch attempt\")},delegateYield:function(e,i,n){return this.delegate={iterator:L(e),resultName:i,nextLoc:n},\"next\"===this.method&&(this.arg=t),m}},e}function n(t){var e=function(t,e){if(\"object\"!=typeof t||!t)return t;var i=t[Symbol.toPrimitive];if(void 0!==i){var n=i.call(t,e||\"default\");if(\"object\"!=typeof n)return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"==typeof e?e:e+\"\"}function r(t){return r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},r(t)}function a(t,e,i,n,r,a,o){try{var d=t[a](o),s=d.value}catch(t){return void i(t)}d.done?e(s):Promise.resolve(s).then(n,r)}function o(t){return function(){var e=this,i=arguments;return new Promise((function(n,r){var o=t.apply(e,i);function d(t){a(o,n,r,d,s,\"next\",t)}function s(t){a(o,n,r,d,s,\"throw\",t)}d(void 0)}))}}function d(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function s(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,n(r.key),r)}}function l(t,e,i){return e&&s(t.prototype,e),i&&s(t,i),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function c(t,e,i){return(e=n(e))in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function u(t,e){return function(t){return Object.prototype.toString.call(t).slice(8,-1)}(t)===e}function h(t){return u(t,\"String\")}function p(t){return u(t,\"Number\")}function f(t){return u(t,\"Object\")}function v(t){for(var e in t)if({}.hasOwnProperty.call(t,e))return!1;return!0}function m(t,e){var i=Object.getOwnPropertyNames(t),n=Object.getOwnPropertyNames(e);if(i.length!==n.length)return!1;for(var r=0;r<i.length;r+=1){var a=i[r];if(t[a]!==e[a])return!1}return!0}function _(t){if(\"string\"==typeof t)try{var e=JSON.parse(t);return!(\"object\"!==r(e)||!e)}catch(t){return!1}}var g={VIVO:54,OPPO:55,BAIDU:56,HUAWEI:60,XIAOMI:61,HUAWEI_AGD_PRO:62,HONOR:63,YLH:64,ADX:66},y={VIVO:54,OPPO:55,YLH:64};function I(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.separator||\"-\",n=e.split||/(?=[A-Z])/;return t.split(n).join(i).toLowerCase()}function b(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",e=\"hb\"===t?y:g,i=Object.values(e)||[];return i}var k=[\"containerStyle\",\"imgStyle\",\"titleStyle\",\"buttonStyle\",\"descStyle\"],w={g:function(){if(\"object\"==(\"undefined\"==typeof globalThis?\"undefined\":r(globalThis)))return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==(\"undefined\"==typeof window?\"undefined\":r(window)))return window}}()},x=Object.getPrototypeOf(w.g)||w.g;function S(){return x&&x.$topon_sdk?x.$topon_sdk.api:null}function T(t,e){var i=[];for(var n in e)i.push(n+\"=\"+e[n]);var r=i.join(\"&\");return r?\"\".concat(t,\"?\").concat(r):t}function A(t,e){return Math.floor(Math.random()*(e-t))+t}function E(t,e){for(var i=e.length,n=[],r=0;r<i;r++){var a=e[r].key,o=e[r].value,d=\"\".concat(a,\"=\").concat(o);n.push(d)}return L(t+n.join(\"&\"))}function C(t){return S().jsBase64.Base64.encode(t)}function D(t){return JSON.stringify(t).replace(/\\//g,\"\\\\/\")}function L(t){return(0,S().md5)(t).toString()}function O(t,i){var n=e({},t);return Object.keys(i).forEach((function(e){t[e]&&t[e]===i[e]||(n[e]=i[e])})),n}function R(){var t,e=(null===(t=global)||void 0===t?void 0:t.navigator)||{},i=e.userAgent||\"\",n=e.vendor||\"\";return\"\".concat(i,\" \").concat(n).toLowerCase()}function P(t,e,i){var n=t.nwFirmIds||[];return(t.unitIds||[]).includes(1*i)?9006:n.includes(1*e)?9007:0}function U(t,e){e||(e=this.$app&&this.$app.$def.manifest.config&&this.$app.$def.manifest.config.designWidth);var i=p(e)?e/750:1,n={};for(var r in t)if(t.hasOwnProperty(r))if(t[r]&&f(t[r]))n[r]=U.call(this,t[r]);else if(h(t[r])&&t[r].endsWith(\"px\")){var a=parseInt(t[r].split(\"px\")[0],10);p(a)&&(n[r]=a*i+\"px\")}else n[r]=t[r];return n}function $(t,e){var i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=JSON.parse(JSON.stringify(t)),r=JSON.parse(JSON.stringify(e));if(i)for(var a in r)k.includes(a)||delete r[a];function o(t,e){for(var i in e)if(e.hasOwnProperty(i)){var n=e[i];if(f(n))for(var r in n)n.hasOwnProperty(r)&&(f(n[r])?o(t[i][r],n[r]):!t[i]||t[i][r]&&t[i][r]===n[r]||(t[i][r]=n[r]));else t[i]&&t[i]===n||(t[i]=n)}}return o(n,r),null!=n&&n.imgPropertiesStyle&&null!=n&&n.imgStyle&&(n.imgPropertiesStyle=Object.assign({},n.imgPropertiesStyle,n.imgStyle),delete n.imgPropertiesStyle.position),n}function N(t,e,i){var n,r,a,o=null!==(n=null!==(r=null===(a=this.$app)||void 0===a?void 0:a.$def)&&void 0!==r?r:this.$def)&&void 0!==n?n:null;o&&null!=o&&o.topon_sdk&&(o.topon_sdk.cache[t]||(o.topon_sdk.cache[t]=Object.create(null)),o.topon_sdk.cache[t][e]=i)}function j(t,e){var i,n,r,a,o,d=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def)&&void 0!==i?i:null;return d&&null!=d&&d.topon_sdk&&null!==(a=null===(o=d.topon_sdk)||void 0===o||null===(o=o.cache[t])||void 0===o?void 0:o[e])&&void 0!==a?a:null}function F(t,e){var i,n,r,a,o,d=null!==(i=null==t?void 0:t.width)&&void 0!==i?i:0,s=null!==(n=null==t?void 0:t.height)&&void 0!==n?n:0,l=null!==(r=null==e?void 0:e.screenWidth)&&void 0!==r?r:750,c=null!==(a=null==e?void 0:e.screenHeight)&&void 0!==a?a:1415,u=(null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.manifest)||void 0===o||null===(o=o.config)||void 0===o?void 0:o.designWidth)||750;return d*s/(u*(u*(c/l)))}function B(t){var e=this;null!=this&&this.$nextTick?this.$nextTick((function(){return t.call(e)})):void 0!==(\"undefined\"==typeof Promise?\"undefined\":r(Promise))?Promise.resolve().then(t):setTimeout(t,0)}var W=\"TOPON_AD_CACHE\",q=function(){function t(){d(this,t),this._storage={}}var e,n,r,a;return l(t,[{key:\"_getKey\",value:function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!e)return t;var i=I(t,{separator:\"_\"});return i=\"\".concat(W,\"_\").concat(i.toUpperCase())}},{key:\"batch\",value:(a=o(i().mark((function t(e){var n,r,a=this,o=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=!(o.length>1&&void 0!==o[1])||o[1],r=[],Object.keys(e).forEach((function(t){r.push(a.setItem(t,e[t],n))})),t.abrupt(\"return\",Promise.all(r));case 4:case\"end\":return t.stop()}}),t)}))),function(t){return a.apply(this,arguments)})},{key:\"setItem\",value:(r=o(i().mark((function t(e,n){var r,a,o,d,s=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=!(s.length>2&&void 0!==s[2])||s[2],a=this._getKey(e,r),o=S(),d=o.storage,t.abrupt(\"return\",d.set({key:a,value:n}));case 4:case\"end\":return t.stop()}}),t,this)}))),function(t,e){return r.apply(this,arguments)})},{key:\"getItem\",value:(n=o(i().mark((function t(e){var n,r,a,o,d,s,l,c=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=!(c.length>1&&void 0!==c[1])||c[1],a=this._getKey(e,r),o=S(),d=o.storage,t.next=5,d.get({key:a});case 5:return s=t.sent,l=null!==(n=null==s?void 0:s.data)&&void 0!==n?n:\"\",t.abrupt(\"return\",_(l)?JSON.parse(l):l);case 8:case\"end\":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})},{key:\"delete\",value:(e=o(i().mark((function t(e){var n,r,a=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=!(a.length>1&&void 0!==a[1])||a[1],r=this._getKey(e,n),S().storage.delete({key:r});case 4:case\"end\":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:\"clear\",value:function(){S().storage.clear()}}]),t}(),M=new q,V=function(){function t(){d(this,t),this._device={}}var e,n,r,a,s;return l(t,[{key:\"getInfo\",value:(s=o(i().mark((function t(){var e,n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,n=S(),r=n.device,t.next=4,r.getInfo();case 4:return a=t.sent,o=null!==(e=null==a?void 0:a.data)&&void 0!==e?e:{},t.abrupt(\"return\",o);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",{});case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return s.apply(this,arguments)})},{key:\"getAdvertisingId\",value:(a=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getAdvertisingId();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.advertisingId)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return a.apply(this,arguments)})},{key:\"getOaId\",value:(r=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getOAID();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.oaid)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return r.apply(this,arguments)})},{key:\"getUserId\",value:(n=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=S(),a=r.device,t.next=4,a.getUserId();case 4:return o=t.sent,d=null!==(e=null==o||null===(n=o.data)||void 0===n?void 0:n.userId)&&void 0!==e?e:\"\",t.abrupt(\"return\",d);case 9:t.prev=9,t.t0=t.catch(0);case 11:return t.abrupt(\"return\",\"\");case 12:case\"end\":return t.stop()}}),t,null,[[0,9]])}))),function(){return n.apply(this,arguments)})},{key:\"getDeviceIds\",value:(e=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=\"\",n=\"\",r=\"\",a=\"\",o=S(),d=o.device,t.prev=2,t.next=5,M.getItem(\"needDevice\");case 5:if(\"1\"!=t.sent){t.next=17;break}return t.next=9,d.getId({type:[\"device\",\"mac\",\"user\"]});case 9:p=t.sent,f=null!==(s=null==p?void 0:p.data)&&void 0!==s?s:{},e=null!==(l=null==f?void 0:f.advertising)&&void 0!==l?l:\"\",n=null!==(c=null==f?void 0:f.user)&&void 0!==c?c:\"\",r=null!==(u=null==f?void 0:f.device)&&void 0!==u?u:\"\",a=null!==(h=null==f?void 0:f.mac)&&void 0!==h?h:\"\",t.next=30;break;case 17:return t.next=19,d.getUserId();case 19:return _=t.sent,n=null!==(v=null==_||null===(m=_.data)||void 0===m?void 0:m.userId)&&void 0!==v?v:\"\",t.prev=21,t.next=24,d.getAdvertisingId();case 24:I=t.sent,e=null!==(g=null==I||null===(y=I.data)||void 0===y?void 0:y.advertisingId)&&void 0!==g?g:\"\",t.next=30;break;case 28:t.prev=28,t.t0=t.catch(21);case 30:t.next=39;break;case 32:return t.prev=32,t.t1=t.catch(2),201===t.t1.code&&M.setItem(\"needDevice\",\"0\"),t.next=37,d.getUserId();case 37:w=t.sent,n=null!==(b=null==w||null===(k=w.data)||void 0===k?void 0:k.userId)&&void 0!==b?b:\"\";case 39:return t.abrupt(\"return\",{device:r,mac:a,user:n,advertising:e});case 40:case\"end\":return t.stop()}}),t,null,[[2,32],[21,28]])}))),function(){return e.apply(this,arguments)})}]),t}(),H=new V;function G(){return Y.apply(this,arguments)}function Y(){return(Y=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=\"upId\",a=\"\",t.next=4,M.getItem(r);case 4:if(o=t.sent,[\"d41d8cd98f00b204e9800998ecf8427e\",\"9f89c84a559f573636a47ff8daed0d33\"].includes(a=o)&&(a=\"\",M.delete(r)),!a){t.next=9;break}return t.abrupt(\"return\",a);case 9:return t.next=11,H.getDeviceIds();case 11:return d=t.sent,t.next=14,H.getOaId();case 14:if(t.t0=t.sent,t.t0){t.next=17;break}t.t0=\"\";case 17:if(s=t.t0,l=null!==(e=null==d?void 0:d.advertising)&&void 0!==e?e:\"\",c=null!==(n=null==d?void 0:d.user)&&void 0!==n?n:\"\",!l){t.next=24;break}a=L(l),t.next=36;break;case 24:if(!s||\"00000000-0000-0000-0000-000000000000\"===s){t.next=28;break}a=L(s),t.next=36;break;case 28:if(!c){t.next=32;break}a=L(c),t.next=36;break;case 32:return t.next=34,M.getItem(\"appId\");case 34:u=t.sent,a=L(u+Date.now()+A(0,1e8));case 36:return t.next=38,M.setItem(r,a);case 38:return t.abrupt(\"return\",a);case 39:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function K(){return z.apply(this,arguments)}function z(){return(z=o(i().mark((function t(){var e,n,r,a;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,G();case 2:return e=t.sent,t.next=5,M.getItem(\"appId\");case 5:return n=t.sent,t.next=8,M.getItem(\"currentInitTime\");case 8:return r=t.sent,a=L(e+n+r),t.abrupt(\"return\",a);case 11:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function X(t){return Q.apply(this,arguments)}function Q(){return(Q=o(i().mark((function t(e){var n,r,a;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,G();case 2:return n=t.sent,r=Date.now(),a=L(n+e+r),t.abrupt(\"return\",a);case 6:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function J(){return Z.apply(this,arguments)}function Z(){return(Z=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=(new Date).getTime(),t.next=3,H.getDeviceIds();case 3:return a=t.sent,t.next=6,G();case 6:for(o=t.sent,d=null!==(e=null==a?void 0:a.user)&&void 0!==e?e:\"\",s=null!==(n=null==a?void 0:a.advertising)&&void 0!==n?n:\"\",l=[d,s,o,r],c=A(0,1e4),u=l.length,h=[],p=0;p<u;p++)h.push(l[p]);return h.push(c),f=h.join(\"&\"),v=L(f),t.abrupt(\"return\",v);case 18:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}var tt=e({},g),et=e({},y),it={54:\"unit_id\",55:\"unit_id\",56:\"placement_id\",60:\"ad_id\",61:\"unit_id\",62:\"ad_id\",63:\"unit_id\",64:\"unit_id\"},nt={\"2g\":\"1\",\"3g\":\"3\",\"4g\":\"13\",\"5g\":\"15\",wifi:\"-2\",none:\"-1\"},rt=new(function(){function t(){d(this,t),this.code={54:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,2e3,9e3,9001,9006,9007],loading:[1105],show:[1101,1106]},55:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},56:{load:[\"error\",\"adError\",9e3,9001,9006,9007],loading:[],show:[\"error\",1101]},60:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},61:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},62:{load:[1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1100,1102,1103,1104,1105,2e3,9e3,9001,9006,9007],loading:[8e3],show:[1101,1106]},63:{load:[1e3,1001,1002,1003,1004],loading:[],show:[]},64:{load:[1001,1004,1100],loading:[],show:[]},66:{load:[9006,9007,9008],loading:[],show:[1101]}}}return l(t,[{key:\"codeToEvent\",value:function(t,e){var i,n,r,a=isNaN(e)?e:1*e;return null!==(i=this.code[t])&&void 0!==i&&null!==(i=i.load)&&void 0!==i&&i.includes(a)?\"load\":null!==(n=this.code[t])&&void 0!==n&&null!==(n=n.loading)&&void 0!==n&&n.includes(a)?\"loading\":null!==(r=this.code[t])&&void 0!==r&&null!==(r=r.show)&&void 0!==r&&r.includes(a)?\"show\":\"unknown\"}}]),t}()),at={100133:1001,136001:1001,136002:1001,136004:1001,102006:1004,109502:1100},ot=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};var dt=function(){this.__data__=[],this.size=0};var st=function(t,e){return t===e||t!=t&&e!=e},lt=st;var ct=function(t,e){for(var i=t.length;i--;)if(lt(t[i][0],e))return i;return-1},ut=ct,ht=Array.prototype.splice;var pt=ct;var ft=ct;var vt=ct;var mt=dt,_t=function(t){var e=this.__data__,i=ut(e,t);return!(i<0)&&(i==e.length-1?e.pop():ht.call(e,i,1),--this.size,!0)},gt=function(t){var e=this.__data__,i=pt(e,t);return i<0?void 0:e[i][1]},yt=function(t){return ft(this.__data__,t)>-1},It=function(t,e){var i=this.__data__,n=vt(i,t);return n<0?(++this.size,i.push([t,e])):i[n][1]=e,this};function bt(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}bt.prototype.clear=mt,bt.prototype.delete=_t,bt.prototype.get=gt,bt.prototype.has=yt,bt.prototype.set=It;var kt=bt,wt=kt;var xt=function(){this.__data__=new wt,this.size=0};var St=function(t){var e=this.__data__,i=e.delete(t);return this.size=e.size,i};var Tt=function(t){return this.__data__.get(t)};var At=function(t){return this.__data__.has(t)},Et=\"object\"==typeof ot&&ot&&ot.Object===Object&&ot,Ct=Et,Dt=\"object\"==typeof self&&self&&self.Object===Object&&self,Lt=Ct||Dt||Function(\"return this\")(),Ot=Lt.Symbol,Rt=Ot,Pt=Object.prototype,Ut=Pt.hasOwnProperty,$t=Pt.toString,Nt=Rt?Rt.toStringTag:void 0;var jt=function(t){var e=Ut.call(t,Nt),i=t[Nt];try{t[Nt]=void 0;var n=!0}catch(t){}var r=$t.call(t);return n&&(e?t[Nt]=i:delete t[Nt]),r},Ft=Object.prototype.toString;var Bt=jt,Wt=function(t){return Ft.call(t)},qt=Ot?Ot.toStringTag:void 0;var Mt=function(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":qt&&qt in Object(t)?Bt(t):Wt(t)};var Vt=function(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)},Ht=Mt,Gt=Vt;var Yt,Kt=function(t){if(!Gt(t))return!1;var e=Ht(t);return\"[object Function]\"==e||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e},zt=Lt[\"__core-js_shared__\"],Xt=(Yt=/[^.]+$/.exec(zt&&zt.keys&&zt.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+Yt:\"\";var Qt=function(t){return!!Xt&&Xt in t},Jt=Function.prototype.toString;var Zt=function(t){if(null!=t){try{return Jt.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"},te=Kt,ee=Qt,ie=Vt,ne=Zt,re=/^\\[object .+?Constructor\\]$/,ae=Function.prototype,oe=Object.prototype,de=ae.toString,se=oe.hasOwnProperty,le=RegExp(\"^\"+de.call(se).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\");var ce=function(t){return!(!ie(t)||ee(t))&&(te(t)?le:re).test(ne(t))},ue=function(t,e){return null==t?void 0:t[e]};var he=function(t,e){var i=ue(t,e);return ce(i)?i:void 0},pe=he(Lt,\"Map\"),fe=he(Object,\"create\"),ve=fe;var me=function(){this.__data__=ve?ve(null):{},this.size=0};var _e=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},ge=fe,ye=Object.prototype.hasOwnProperty;var Ie=function(t){var e=this.__data__;if(ge){var i=e[t];return\"__lodash_hash_undefined__\"===i?void 0:i}return ye.call(e,t)?e[t]:void 0},be=fe,ke=Object.prototype.hasOwnProperty;var we=fe;var xe=me,Se=_e,Te=Ie,Ae=function(t){var e=this.__data__;return be?void 0!==e[t]:ke.call(e,t)},Ee=function(t,e){var i=this.__data__;return this.size+=this.has(t)?0:1,i[t]=we&&void 0===e?\"__lodash_hash_undefined__\":e,this};function Ce(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}Ce.prototype.clear=xe,Ce.prototype.delete=Se,Ce.prototype.get=Te,Ce.prototype.has=Ae,Ce.prototype.set=Ee;var De=Ce,Le=kt,Oe=pe;var Re=function(t){var e=typeof t;return\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t};var Pe=function(t,e){var i=t.__data__;return Re(e)?i[\"string\"==typeof e?\"string\":\"hash\"]:i.map},Ue=Pe;var $e=Pe;var Ne=Pe;var je=Pe;var Fe=function(){this.size=0,this.__data__={hash:new De,map:new(Oe||Le),string:new De}},Be=function(t){var e=Ue(this,t).delete(t);return this.size-=e?1:0,e},We=function(t){return $e(this,t).get(t)},qe=function(t){return Ne(this,t).has(t)},Me=function(t,e){var i=je(this,t),n=i.size;return i.set(t,e),this.size+=i.size==n?0:1,this};function Ve(t){var e=-1,i=null==t?0:t.length;for(this.clear();++e<i;){var n=t[e];this.set(n[0],n[1])}}Ve.prototype.clear=Fe,Ve.prototype.delete=Be,Ve.prototype.get=We,Ve.prototype.has=qe,Ve.prototype.set=Me;var He=kt,Ge=pe,Ye=Ve;var Ke=kt,ze=xt,Xe=St,Qe=Tt,Je=At,Ze=function(t,e){var i=this.__data__;if(i instanceof He){var n=i.__data__;if(!Ge||n.length<199)return n.push([t,e]),this.size=++i.size,this;i=this.__data__=new Ye(n)}return i.set(t,e),this.size=i.size,this};function ti(t){var e=this.__data__=new Ke(t);this.size=e.size}ti.prototype.clear=ze,ti.prototype.delete=Xe,ti.prototype.get=Qe,ti.prototype.has=Je,ti.prototype.set=Ze;var ei=ti;var ii=function(t,e){for(var i=-1,n=null==t?0:t.length;++i<n&&!1!==e(t[i],i,t););return t},ni=he,ri=function(){try{var t=ni(Object,\"defineProperty\");return t({},\"\",{}),t}catch(t){}}();var ai=function(t,e,i){\"__proto__\"==e&&ri?ri(t,e,{configurable:!0,enumerable:!0,value:i,writable:!0}):t[e]=i},oi=ai,di=st,si=Object.prototype.hasOwnProperty;var li=function(t,e,i){var n=t[e];si.call(t,e)&&di(n,i)&&(void 0!==i||e in t)||oi(t,e,i)},ci=li,ui=ai;var hi=function(t,e,i,n){var r=!i;i||(i={});for(var a=-1,o=e.length;++a<o;){var d=e[a],s=n?n(i[d],t[d],d,i,t):void 0;void 0===s&&(s=t[d]),r?ui(i,d,s):ci(i,d,s)}return i};var pi=function(t,e){for(var i=-1,n=Array(t);++i<t;)n[i]=e(i);return n};var fi=function(t){return null!=t&&\"object\"==typeof t},vi=Mt,mi=fi;var _i=function(t){return mi(t)&&\"[object Arguments]\"==vi(t)},gi=fi,yi=Object.prototype,Ii=yi.hasOwnProperty,bi=yi.propertyIsEnumerable,ki=_i(function(){return arguments}())?_i:function(t){return gi(t)&&Ii.call(t,\"callee\")&&!bi.call(t,\"callee\")},wi=ki,xi=Array.isArray,Si={};var Ti=function(){return!1};!function(t,e){var i=Lt,n=Ti,r=e&&!e.nodeType&&e,a=r&&t&&!t.nodeType&&t,o=a&&a.exports===r?i.Buffer:void 0,d=(o?o.isBuffer:void 0)||n;t.exports=d}({get exports(){return Si},set exports(t){Si=t}},Si);var Ai=/^(?:0|[1-9]\\d*)$/;var Ei=function(t,e){var i=typeof t;return!!(e=null==e?9007199254740991:e)&&(\"number\"==i||\"symbol\"!=i&&Ai.test(t))&&t>-1&&t%1==0&&t<e};var Ci=function(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991},Di=Mt,Li=Ci,Oi=fi,Ri={};Ri[\"[object Float32Array]\"]=Ri[\"[object Float64Array]\"]=Ri[\"[object Int8Array]\"]=Ri[\"[object Int16Array]\"]=Ri[\"[object Int32Array]\"]=Ri[\"[object Uint8Array]\"]=Ri[\"[object Uint8ClampedArray]\"]=Ri[\"[object Uint16Array]\"]=Ri[\"[object Uint32Array]\"]=!0,Ri[\"[object Arguments]\"]=Ri[\"[object Array]\"]=Ri[\"[object ArrayBuffer]\"]=Ri[\"[object Boolean]\"]=Ri[\"[object DataView]\"]=Ri[\"[object Date]\"]=Ri[\"[object Error]\"]=Ri[\"[object Function]\"]=Ri[\"[object Map]\"]=Ri[\"[object Number]\"]=Ri[\"[object Object]\"]=Ri[\"[object RegExp]\"]=Ri[\"[object Set]\"]=Ri[\"[object String]\"]=Ri[\"[object WeakMap]\"]=!1;var Pi=function(t){return Oi(t)&&Li(t.length)&&!!Ri[Di(t)]};var Ui=function(t){return function(e){return t(e)}},$i={};!function(t,e){var i=Et,n=e&&!e.nodeType&&e,r=n&&t&&!t.nodeType&&t,a=r&&r.exports===n&&i.process,o=function(){try{var t=r&&r.require&&r.require(\"util\").types;return t||a&&a.binding&&a.binding(\"util\")}catch(t){}}();t.exports=o}({get exports(){return $i},set exports(t){$i=t}},$i);var Ni=Pi,ji=Ui,Fi=$i&&$i.isTypedArray,Bi=Fi?ji(Fi):Ni,Wi=pi,qi=wi,Mi=xi,Vi=Si,Hi=Ei,Gi=Bi,Yi=Object.prototype.hasOwnProperty;var Ki=function(t,e){var i=Mi(t),n=!i&&qi(t),r=!i&&!n&&Vi(t),a=!i&&!n&&!r&&Gi(t),o=i||n||r||a,d=o?Wi(t.length,String):[],s=d.length;for(var l in t)!e&&!Yi.call(t,l)||o&&(\"length\"==l||r&&(\"offset\"==l||\"parent\"==l)||a&&(\"buffer\"==l||\"byteLength\"==l||\"byteOffset\"==l)||Hi(l,s))||d.push(l);return d},zi=Object.prototype;var Xi=function(t){var e=t&&t.constructor;return t===(\"function\"==typeof e&&e.prototype||zi)};var Qi=function(t,e){return function(i){return t(e(i))}},Ji=Qi(Object.keys,Object),Zi=Xi,tn=Ji,en=Object.prototype.hasOwnProperty;var nn=Kt,rn=Ci;var an=function(t){return null!=t&&rn(t.length)&&!nn(t)},on=Ki,dn=function(t){if(!Zi(t))return tn(t);var e=[];for(var i in Object(t))en.call(t,i)&&\"constructor\"!=i&&e.push(i);return e},sn=an;var ln=function(t){return sn(t)?on(t):dn(t)},cn=hi,un=ln;var hn=function(t,e){return t&&cn(e,un(e),t)};var pn=Vt,fn=Xi,vn=function(t){var e=[];if(null!=t)for(var i in Object(t))e.push(i);return e},mn=Object.prototype.hasOwnProperty;var _n=Ki,gn=function(t){if(!pn(t))return vn(t);var e=fn(t),i=[];for(var n in t)(\"constructor\"!=n||!e&&mn.call(t,n))&&i.push(n);return i},yn=an;var In=function(t){return yn(t)?_n(t,!0):gn(t)},bn=hi,kn=In;var wn=function(t,e){return t&&bn(e,kn(e),t)},xn={};!function(t,e){var i=Lt,n=e&&!e.nodeType&&e,r=n&&t&&!t.nodeType&&t,a=r&&r.exports===n?i.Buffer:void 0,o=a?a.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var i=t.length,n=o?o(i):new t.constructor(i);return t.copy(n),n}}({get exports(){return xn},set exports(t){xn=t}},xn);var Sn=function(t,e){var i=-1,n=t.length;for(e||(e=Array(n));++i<n;)e[i]=t[i];return e};var Tn=function(){return[]},An=function(t,e){for(var i=-1,n=null==t?0:t.length,r=0,a=[];++i<n;){var o=t[i];e(o,i,t)&&(a[r++]=o)}return a},En=Tn,Cn=Object.prototype.propertyIsEnumerable,Dn=Object.getOwnPropertySymbols,Ln=Dn?function(t){return null==t?[]:(t=Object(t),An(Dn(t),(function(e){return Cn.call(t,e)})))}:En,On=hi,Rn=Ln;var Pn=function(t,e){return On(t,Rn(t),e)};var Un=function(t,e){for(var i=-1,n=e.length,r=t.length;++i<n;)t[r+i]=e[i];return t},$n=Qi(Object.getPrototypeOf,Object),Nn=Un,jn=$n,Fn=Ln,Bn=Tn,Wn=Object.getOwnPropertySymbols?function(t){for(var e=[];t;)Nn(e,Fn(t)),t=jn(t);return e}:Bn,qn=hi,Mn=Wn;var Vn=function(t,e){return qn(t,Mn(t),e)},Hn=Un,Gn=xi;var Yn=function(t,e,i){var n=e(t);return Gn(t)?n:Hn(n,i(t))},Kn=Yn,zn=Ln,Xn=ln;var Qn=function(t){return Kn(t,Xn,zn)},Jn=Yn,Zn=Wn,tr=In;var er=function(t){return Jn(t,tr,Zn)},ir=he(Lt,\"DataView\"),nr=pe,rr=he(Lt,\"Promise\"),ar=he(Lt,\"Set\"),or=he(Lt,\"WeakMap\"),dr=Mt,sr=Zt,lr=\"[object Map]\",cr=\"[object Promise]\",ur=\"[object Set]\",hr=\"[object WeakMap]\",pr=\"[object DataView]\",fr=sr(ir),vr=sr(nr),mr=sr(rr),_r=sr(ar),gr=sr(or),yr=dr;(ir&&yr(new ir(new ArrayBuffer(1)))!=pr||nr&&yr(new nr)!=lr||rr&&yr(rr.resolve())!=cr||ar&&yr(new ar)!=ur||or&&yr(new or)!=hr)&&(yr=function(t){var e=dr(t),i=\"[object Object]\"==e?t.constructor:void 0,n=i?sr(i):\"\";if(n)switch(n){case fr:return pr;case vr:return lr;case mr:return cr;case _r:return ur;case gr:return hr}return e});var Ir=yr,br=Object.prototype.hasOwnProperty;var kr=function(t){var e=t.length,i=new t.constructor(e);return e&&\"string\"==typeof t[0]&&br.call(t,\"index\")&&(i.index=t.index,i.input=t.input),i},wr=Lt.Uint8Array;var xr=function(t){var e=new t.constructor(t.byteLength);return new wr(e).set(new wr(t)),e},Sr=xr;var Tr=function(t,e){var i=e?Sr(t.buffer):t.buffer;return new t.constructor(i,t.byteOffset,t.byteLength)},Ar=/\\w*$/;var Er=function(t){var e=new t.constructor(t.source,Ar.exec(t));return e.lastIndex=t.lastIndex,e},Cr=Ot?Ot.prototype:void 0,Dr=Cr?Cr.valueOf:void 0;var Lr=xr;var Or=xr,Rr=Tr,Pr=Er,Ur=function(t){return Dr?Object(Dr.call(t)):{}},$r=function(t,e){var i=e?Lr(t.buffer):t.buffer;return new t.constructor(i,t.byteOffset,t.length)};var Nr=function(t,e,i){var n=t.constructor;switch(e){case\"[object ArrayBuffer]\":return Or(t);case\"[object Boolean]\":case\"[object Date]\":return new n(+t);case\"[object DataView]\":return Rr(t,i);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":case\"[object Uint16Array]\":case\"[object Uint32Array]\":return $r(t,i);case\"[object Map]\":case\"[object Set]\":return new n;case\"[object Number]\":case\"[object String]\":return new n(t);case\"[object RegExp]\":return Pr(t);case\"[object Symbol]\":return Ur(t)}},jr=Vt,Fr=Object.create,Br=function(){function t(){}return function(e){if(!jr(e))return{};if(Fr)return Fr(e);t.prototype=e;var i=new t;return t.prototype=void 0,i}}(),Wr=$n,qr=Xi;var Mr=function(t){return\"function\"!=typeof t.constructor||qr(t)?{}:Br(Wr(t))},Vr=Ir,Hr=fi;var Gr=function(t){return Hr(t)&&\"[object Map]\"==Vr(t)},Yr=Ui,Kr=$i&&$i.isMap,zr=Kr?Yr(Kr):Gr,Xr=Ir,Qr=fi;var Jr=function(t){return Qr(t)&&\"[object Set]\"==Xr(t)},Zr=Ui,ta=$i&&$i.isSet,ea=ta?Zr(ta):Jr,ia=ei,na=ii,ra=li,aa=hn,oa=wn,da=xn,sa=Sn,la=Pn,ca=Vn,ua=Qn,ha=er,pa=Ir,fa=kr,va=Nr,ma=Mr,_a=xi,ga=Si,ya=zr,Ia=Vt,ba=ea,ka=ln,wa=In,xa=\"[object Arguments]\",Sa=\"[object Function]\",Ta=\"[object Object]\",Aa={};Aa[xa]=Aa[\"[object Array]\"]=Aa[\"[object ArrayBuffer]\"]=Aa[\"[object DataView]\"]=Aa[\"[object Boolean]\"]=Aa[\"[object Date]\"]=Aa[\"[object Float32Array]\"]=Aa[\"[object Float64Array]\"]=Aa[\"[object Int8Array]\"]=Aa[\"[object Int16Array]\"]=Aa[\"[object Int32Array]\"]=Aa[\"[object Map]\"]=Aa[\"[object Number]\"]=Aa[Ta]=Aa[\"[object RegExp]\"]=Aa[\"[object Set]\"]=Aa[\"[object String]\"]=Aa[\"[object Symbol]\"]=Aa[\"[object Uint8Array]\"]=Aa[\"[object Uint8ClampedArray]\"]=Aa[\"[object Uint16Array]\"]=Aa[\"[object Uint32Array]\"]=!0,Aa[\"[object Error]\"]=Aa[Sa]=Aa[\"[object WeakMap]\"]=!1;var Ea=function t(e,i,n,r,a,o){var d,s=1&i,l=2&i,c=4&i;if(n&&(d=a?n(e,r,a,o):n(e)),void 0!==d)return d;if(!Ia(e))return e;var u=_a(e);if(u){if(d=fa(e),!s)return sa(e,d)}else{var h=pa(e),p=h==Sa||\"[object GeneratorFunction]\"==h;if(ga(e))return da(e,s);if(h==Ta||h==xa||p&&!a){if(d=l||p?{}:ma(e),!s)return l?ca(e,oa(d,e)):la(e,aa(d,e))}else{if(!Aa[h])return a?e:{};d=va(e,h,s)}}o||(o=new ia);var f=o.get(e);if(f)return f;o.set(e,d),ba(e)?e.forEach((function(r){d.add(t(r,i,n,r,e,o))})):ya(e)&&e.forEach((function(r,a){d.set(a,t(r,i,n,a,e,o))}));var v=u?void 0:(c?l?ha:ua:l?wa:ka)(e);return na(v||e,(function(r,a){v&&(r=e[a=r]),ra(d,a,t(r,i,n,a,e,o))})),d},Ca=Ea;var Da=function(t){return Ca(t,5)},La=function(){function t(){d(this,t),this.reqUgNum=1,this.progress=0,this.isFirst=!0,this.statusList=[],this.STATUS_WAITING=\"waiting\",this.STATUS_LOADING=\"loading\",this.STATUS_CACHING=\"caching\",this.STATUS_TIMEOUT=\"timeout\",this.STATUS_EXPIRED=\"expired\",this.STATUS_FAILED=\"failed\",this.STATUS_SHOWED=\"showed\"}return l(t,[{key:\"load\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.progress=0;var n=[];e.forEach((function(e,i){var r=e.unit_id,a={index:i,itemId:r,unitId:r,nwFirmId:e.nw_firm_id,ecpm:e.ecpm,ecpmSort:e.s_pty,rank:e.sp_ps,rankSort:0,status:t.STATUS_WAITING,expirationTime:0,context:{},type:0,unit:Da(e)};n.push(a)})),(null==n?void 0:n.length)>1&&Oa(n),n.sort((function(t,e){var i=e.ecpmSort-t.ecpmSort,n=e.rankSort-t.rankSort;return 0===i?n:i})),n.forEach((function(t,e){t.index=e}));var r=i.reqUgNum,a=void 0===r?1:r;this.reqUgNum=a,this.progress=a-1,this.isFirst=!0,this.initStatusList(n)}},{key:\"merge\",value:function(t){var e,i=this;if(!(t.length<=0)){var n=[];t.forEach((function(t){var e=t.unit_id,r=t.nw_firm_id,a=t.ecpm,o=t.s_pty,d=t.nw_cache_time,s={index:0,itemId:e,unitId:e,nwFirmId:r,ecpm:a,ecpmSort:o,rank:t.sp_ps,rankSort:0,status:i.STATUS_WAITING,expirationTime:Date.now()+d,context:{},type:66==r?2:1,unit:Da(t)};n.push(s)})),(e=this.statusList).push.apply(e,n),this.statusList.sort((function(t,e){var i=e.ecpmSort-t.ecpmSort,n=e.type-t.type;return 0===i?n:i})),this.statusList.forEach((function(t,e){t.index=e,[1,2].includes(t.type)&&t.index<=i.progress&&(t.status=i.STATUS_LOADING),t.unit.bidTk&&(t.unit.bidTk.sortPriority=e+1)}))}}},{key:\"scheduler\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=[this.STATUS_WAITING],n=[this.STATUS_CACHING,this.STATUS_SHOWED],r=[this.STATUS_LOADING,this.STATUS_CACHING],a=[this.STATUS_LOADING,this.STATUS_CACHING,this.STATUS_TIMEOUT,this.STATUS_SHOWED],o=[],d=[],s=[],l=[];if(this.statusList.forEach((function(e,c){a.includes(e.status)&&o.push(e.itemId),r.includes(e.status)&&c<=t.progress&&d.push(e.itemId),i.includes(e.status)&&s.push(e.itemId),n.includes(e.status)&&l.push(e.itemId)})),e)return o;if((d.length<this.reqUgNum||this.isFirst)&&l.length<1){var c=this.reqUgNum-d.length,u=s.slice(0,c);this.statusList.forEach((function(e,i){u.includes(e.itemId)&&(e.status=t.STATUS_LOADING,t.progress=i)})),o=o.concat(u),this.isFirst=!1}return o}},{key:\"selecter\",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"STATUS_CACHING\",i=Date.now(),n={};return this.statusList.forEach((function(r,a){[t[e]].includes(r.status)&&(0===r.expirationTime||r.expirationTime>i)&&v(n)&&(n=r)})),n}},{key:\"itemIdSeleter\",value:function(){var t=this.selecter();return t&&t.itemId?t.itemId:null}},{key:\"indexSeleter\",value:function(){var t=this.selecter();return t&&t.index?t.index:null}},{key:\"setLoading\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_LOADING,e)}},{key:\"setCaching\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.setStatus(t,this.STATUS_CACHING,e,i)}},{key:\"setTimeout\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_TIMEOUT,e)}},{key:\"setFailed\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_FAILED,e)}},{key:\"setShowed\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.setStatus(t,this.STATUS_SHOWED,e)}},{key:\"getIndex\",value:function(t){var e=0;return this.statusList.forEach((function(i){i.itemId===t&&(e=i.index)})),e}},{key:\"getStatusList\",value:function(){return this.statusList}},{key:\"initStatusList\",value:function(t){var e=this,i=[],n=Date.now();t.forEach((function(t){e.statusList.forEach((function(i){i.itemId===t.itemId&&[e.STATUS_CACHING].includes(i.status)&&(0===i.expirationTime||i.expirationTime>n)&&(t.status=e.STATUS_CACHING,t.context=i.context,t.expirationTime=i.expirationTime)})),i.push(t)})),this.statusList=i}},{key:\"setStatus\",value:function(t,e){var i=this,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=r.expirationTime,o=void 0===a?0:a;this.statusList.forEach((function(r){r.itemId===t&&(r.status=e,e===i.STATUS_CACHING&&(r.expirationTime=o,r.context=n))}))}},{key:\"isExpired\",value:function(){var t=this,e=0,i=Date.now(),n=this.statusList.filter((function(e){return[t.STATUS_LOADING,t.STATUS_TIMEOUT,t.STATUS_CACHING,t.STATUS_SHOWED].includes(e.status)}));return!(n.length<=0)&&(n.forEach((function(n,r){[t.STATUS_LOADING,t.STATUS_TIMEOUT,t.STATUS_SHOWED].includes(n.status)?t.setStatus(n.itemId,t.STATUS_EXPIRED):0===n.expirationTime||n.expirationTime>i?e++:t.setStatus(n.itemId,t.STATUS_EXPIRED)})),e<=0)}},{key:\"isFailed\",value:function(){var t=this;return this.statusList.filter((function(e){return e.status===t.STATUS_FAILED})).length>=this.statusList.length}},{key:\"isExist\",value:function(t){var e=!1;return this.statusList.forEach((function(i){i.itemId===t&&(e=!0)})),e}},{key:\"isLoaded\",value:function(){var t=this,e=this.statusList.filter((function(e){return e.status===t.STATUS_CACHING}));return(null==e?void 0:e.length)>0}}]),t}();function Oa(t){var e,i=(e=\"ecpmSort\",t.reduce((function(t,i){return t[i[e]]=t[i[e]]||[],t[i[e]].push(i),t}),{}));Object.keys(i).forEach((function(e){var n=Da(i[e]);if(!(n.length<=1||Ra(n,\"rank\"))){var r=function(t){var e=[];function i(t){if(t.length)if(1!==t.length)for(var n=t.length,r=function(){var r=A(1,Pa(t,\"rank\")),a=function(t,e){for(var i=[[1,t[0][e]]],n=t.length,r=1;r<n;r++){var a=i[i.length-1][1]+1,o=a+t[r][e]-1;i.push([a,o])}return i}(Da(t),\"rank\"),o=a.findIndex((function(t){return t[0]<=r&&r<=t[1]})),d={index:t.splice(o,1)[0].index,rankSort:n};e.push(d),i(t)},a=0;a<t.length;a++)r();else{var o={index:t[0].index,rankSort:1};e.push(o)}}return i(t),e}(n);r.forEach((function(e){t[e.index].rankSort=e.rankSort}))}}))}var Ra=function(t,e){return t.every((function(i){return i[e]===t[0][e]}))},Pa=function(t,e){return t.reduce((function(t,i){return t+i[e]}),0)};function Ua(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.rawResponse,n=void 0!==i&&i;return new Promise((function(e,i){S().$fetch.fetch({url:t.url,method:t.method,header:{\"Content-Type\":\"application/json;charset=utf-8\"},data:t.data}).then((function(t){if(n)e(t.data);else{var i=t.data,r=_(null==i?void 0:i.data)?JSON.parse(null==i?void 0:i.data):i.data;e(r)}})).catch((function(t){i(t)})).finally((function(){e()}))}))}function $a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.timeout,n=void 0===i?2e4:i;try{return Promise.race([Ua(t,e),new Promise((function(t,e){setTimeout((function(){e(new Error(\"网络状况不太好，再刷新一次？\"))}),n)}))])}catch(t){}}Promise.prototype.finally=function(t){var e=this.constructor;return this.then((function(i){return e.resolve(t()).then((function(){return i}))}),(function(i){return e.resolve(t()).then((function(){throw i}))}))};var Na=function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $a({method:\"post\",url:t,data:e},i)},ja=function(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $a({method:\"get\",url:T(t,e)},i)},Fa=\"http://da.anythinktech.com\",Ba=\"4.2.11\",Wa={API_ERROR:\"1004616\",STRATEGY_REQUEST_TIME:\"1004635\",LOAD_FAILED:\"1004630\",REQUEST_FAILED:\"1004631\",IS_READY:\"1004632\",SHOW_FAILED:\"1004633\",CAN_NOT_GET_DEVICE_INFO:\"1004681\",HOT_START_INTERVAL_TIME:\"1004682\",STAY_TIME:\"1004644\",CALLBACK_ERROR:\"1004683\",CLICK_URL_FAIL:\"1004648\",DEEPLINK_RESULT:\"1004650\",BID_LOSS:\"1004659\",BID_WIN:\"1004667\",BID_MERGE_TO_WF:\"1004668\",ADX_WEBVIEW_ACTION:\"1004675\",ADX_IMP_INVALID:\"1100004\",GET_AD:\"1100001\",VIVO_AD_PRICE:\"1100002\",AD_FEEDBACK:\"1004652\",BANNER_HIDE:\"1100003\"};function qa(t){return Ma.apply(this,arguments)}function Ma(){return(Ma=o(i().mark((function t(n){var r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,O,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(L=null!==(r=null===(a=this.$app)||void 0===a?void 0:a.$def)&&void 0!==r?r:this.$def,O=(null==L?void 0:L.topon_sdk)||{},P=O.appKey,U=O.appId,$=O.store,N=O.channelId,j=void 0===N?\"\":N,F=O.subChannelId,B=void 0===F?\"\":F,W=R(),q=S(),V=q.app,Y=q.network,v(null==$||null===(o=$.device)||void 0===o?void 0:o.info)){t.next=8;break}t.t0=null==$||null===(d=$.device)||void 0===d?void 0:d.info,t.next=14;break;case 8:return t.next=10,H.getInfo();case 10:if(t.t1=t.sent,t.t1){t.next=13;break}t.t1={};case 13:t.t0=t.t1;case 14:return z=t.t0,Q=V.getInfo()||{},t.next=18,Y.getType();case 18:if(t.t2=t.sent,t.t2){t.next=21;break}t.t2={};case 21:if(J=t.t2,t.t4=null==$||null===(s=$.device)||void 0===s?void 0:s.ids,t.t4){t.next=27;break}return t.next=26,H.getDeviceIds();case 26:t.t4=t.sent;case 27:if(t.t3=t.t4,t.t3){t.next=30;break}t.t3={};case 30:if(Z=t.t3,t.t6=null==$||null===(l=$.device)||void 0===l?void 0:l.oaid,t.t6){t.next=36;break}return t.next=35,H.getOaId();case 35:t.t6=t.sent;case 36:if(t.t5=t.t6,t.t5){t.next=39;break}t.t5=\"\";case 39:if(tt=t.t5,et=Wa[n.key],it=\"1.0\",t.t7=null==$?void 0:$.upid,t.t7){t.next=47;break}return t.next=46,G();case 46:t.t7=t.sent;case 47:return rt=t.t7,t.next=50,K();case 50:return at=t.sent,ot=null!==(c=null==Q?void 0:Q.packageName)&&void 0!==c?c:\"\",dt=null!==(u=\"\"+(null==Q?void 0:Q.versionCode))&&void 0!==u?u:\"\",st=null!==(h=\"\"+(null==Q?void 0:Q.versionName))&&void 0!==h?h:\"\",lt=\"\".concat(null==z?void 0:z.screenWidth,\"*\").concat(null==z?void 0:z.screenHeight),ct=nt[null==J||null===(p=J.data)||void 0===p?void 0:p.type]||\"-1\",t.next=58,M.getItem(\"firstInitTime\");case 58:if(t.t8=t.sent,t.t8){t.next=61;break}t.t8=0;case 61:return ut=t.t8,t.next=64,M.getItem(\"currentInitTime\");case 64:if(t.t9=t.sent,t.t9){t.next=67;break}t.t9=0;case 67:return ht=t.t9,pt=Math.ceil((ht-ut+1)/864e5),ft=\"TOPON_AD_CACHE_APP_\"+U,t.next=72,M.getItem(ft,!1);case 72:if(t.t10=t.sent,t.t10){t.next=75;break}t.t10={};case 75:if(vt=t.t10,mt=e(e({},n),{},{key:et,psid:at,timestamp:String(Date.now())}),_t=\"\",!n.unitid){t.next=83;break}return t.next=81,X(n.unitid);case 81:_t=t.sent,mt.sessionid=_t;case 83:return gt=[mt],yt={app_id:U,system:1,platform:1,os_vn:null!==(f=\"\"+(null==z?void 0:z.osVersionName))&&void 0!==f?f:\"\",os_vc:null!==(m=\"\"+(null==z?void 0:z.osVersionCode))&&void 0!==m?m:\"\",package_name:ot,app_vn:st,app_vc:dt,brand:null!==(_=null==z?void 0:z.brand)&&void 0!==_?_:\"\",model:null!==(g=null==z?void 0:z.model)&&void 0!==g?g:\"\",pf_vn:null!==(y=null==z?void 0:z.platformVersionName)&&void 0!==y?y:\"\",pf_vc:null!==(I=\"\"+(null==z?void 0:z.platformVersionCode))&&void 0!==I?I:\"\",screen:lt,network_type:ct,mcc:\"1\",mnc:\"1\",language:null!==(b=null==z?void 0:z.language)&&void 0!==b?b:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(Ba),nw_ver:\"\",gp_ver:\"\",ua:W||\"\",upid:rt,channel:j||\"\",sub_channel:B||\"\",orient:1,os_fw:8,data:gt,first_init_time:1*ut,days_from_first_init:1*pt,abtest_id:null!==(k=null==vt||null===(w=vt.data)||void 0===w?void 0:w.abtest_id)&&void 0!==k?k:\"\"},It={android_id:null!==(x=null==Z?void 0:Z.user)&&void 0!==x?x:\"\",mac:null!==(T=null==Z?void 0:Z.mac)&&void 0!==T?T:\"\",imei:\"\",oaid:tt,gaid:null!==(A=null==Z?void 0:Z.advertising)&&void 0!==A?A:\"\",is_cn_sdk:\"1\"},bt=C(D(yt)),kt=C(D(It)),wt=E(P,[{key:\"api_ver\",value:it},{key:\"p\",value:bt},{key:\"p2\",value:kt}]),t.abrupt(\"return\",{p:bt,p2:kt,api_ver:it,sign:wt});case 91:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Va(t){return Ha.apply(this,arguments)}function Ha(){return(Ha=o(i().mark((function t(e){var n;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,qa.call(this,e);case 3:return n=t.sent,t.abrupt(\"return\",Na(\"\".concat(Fa,\"/v2/da\"),n));case 7:t.prev=7,t.t0=t.catch(0);case 9:case\"end\":return t.stop()}}),t,this,[[0,7]])})))).apply(this,arguments)}function Ga(t){return Ya.apply(this,arguments)}function Ya(){return(Ya=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,E,C,D,L,O,P,U,$,N,j,F,B,W,q,M,V,Y,z,X,Q,J,Z,tt,et,it,rt,at,ot,dt,st;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(x=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,T=(null==x?void 0:x.topon_sdk)||{},A=T.appId,E=T.store,C=T.channelId,D=void 0===C?\"\":C,L=T.subChannelId,O=void 0===L?\"\":L,P=e.key,U=e.msg,$=e.msg1,N=e.msg2,j=e.msg3,F=R(),B=S(),W=B.app,q=B.network,v(null==E||null===(a=E.device)||void 0===a?void 0:a.info)){t.next=9;break}t.t0=null==E||null===(o=E.device)||void 0===o?void 0:o.info,t.next=15;break;case 9:return t.next=11,H.getInfo();case 11:if(t.t1=t.sent,t.t1){t.next=14;break}t.t1={};case 14:t.t0=t.t1;case 15:return M=t.t0,V=W.getInfo()||{},t.next=19,q.getType();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:if(Y=t.t2,t.t4=null==E||null===(d=E.device)||void 0===d?void 0:d.ids,t.t4){t.next=28;break}return t.next=27,H.getDeviceIds();case 27:t.t4=t.sent;case 28:if(t.t3=t.t4,t.t3){t.next=31;break}t.t3={};case 31:if(z=t.t3,t.t6=null==E||null===(s=E.device)||void 0===s?void 0:s.oaid,t.t6){t.next=37;break}return t.next=36,H.getOaId();case 36:t.t6=t.sent;case 37:if(t.t5=t.t6,t.t5){t.next=40;break}t.t5=\"\";case 40:if(X=t.t5,Q=Wa[P],t.t7=null==E?void 0:E.upid,t.t7){t.next=47;break}return t.next=46,G();case 46:t.t7=t.sent;case 47:return J=t.t7,t.next=50,K();case 50:return Z=t.sent,tt=null!==(l=null==V?void 0:V.packageName)&&void 0!==l?l:\"\",et=null!==(c=\"\"+(null==V?void 0:V.versionCode))&&void 0!==c?c:\"\",it=null!==(u=\"\"+(null==V?void 0:V.versionName))&&void 0!==u?u:\"\",rt=\"\".concat(null==M?void 0:M.screenWidth,\"*\").concat(null==M?void 0:M.screenHeight),at=nt[null==Y||null===(h=Y.data)||void 0===h?void 0:h.type]||\"-1\",ot={key:Q,psid:Z,timestamp:String(Date.now()),upid:J,sdk_time:Date.now(),msg:U,msg1:$,msg2:N,msg3:j},dt={app_id:A,system:1,platform:1,os_vn:null!==(p=\"\"+(null==M?void 0:M.osVersionName))&&void 0!==p?p:\"\",os_vc:null!==(f=\"\"+(null==M?void 0:M.osVersionCode))&&void 0!==f?f:\"\",package_name:tt,app_vn:it,app_vc:et,brand:null!==(m=null==M?void 0:M.brand)&&void 0!==m?m:\"\",model:null!==(_=null==M?void 0:M.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==M?void 0:M.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==M?void 0:M.platformVersionCode))&&void 0!==y?y:\"\",screen:rt,network_type:at,mcc:\"1\",mnc:\"1\",language:null!==(I=null==M?void 0:M.language)&&void 0!==I?I:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(Ba),nw_ver:\"\",gp_ver:\"\",ua:F||\"\",upid:J,channel:D||\"\",sub_channel:O||\"\",orient:1,os_fw:8},st={android_id:null!==(b=null==z?void 0:z.user)&&void 0!==b?b:\"\",mac:null!==(k=null==z?void 0:z.mac)&&void 0!==k?k:\"\",imei:\"\",oaid:X,gaid:null!==(w=null==z?void 0:z.advertising)&&void 0!==w?w:\"\",is_cn_sdk:\"1\"},t.abrupt(\"return\",{pParams:dt,p2Params:st,data:ot});case 60:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Ka(t,e){var i,n,r=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:this.$def,a=((null==r?void 0:r.topon_sdk)||{}).appKey,o=C(D(t)),d=C(D(e));return{p:o,p2:d,api_ver:\"1.0\",sign:E(a,[{key:\"api_ver\",value:\"1.0\"},{key:\"p\",value:o},{key:\"p2\",value:d}])}}function za(t){try{var i,n=(null==this||null===(i=this.$def)||void 0===i||null===(i=i.topon_sdk)||void 0===i?void 0:i.destroyParams)||{},r=n.pParams,a=n.p2Params,o=function(t,i){var n=Wa[i.key];return e(e(e({},t),i),{},{key:n,timestamp:String(Date.now())})}(n.data,t),d=e(e({},r),{},{data:[o]}),s=Ka.call(this,d,a);return Na(\"\".concat(Fa,\"/v2/da\"),s)}catch(t){}}var Xa=\"4.2.11\",Qa=\"http://api.anythinktech.com\";function Ja(t){return Za.apply(this,arguments)}function Za(){return(Za=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt,xt,St,Tt,At;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(U=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,$=(null==U?void 0:U.topon_sdk)||{},N=$.appKey,j=$.appId,F=$.channelId,B=void 0===F?\"\":F,W=$.subChannelId,q=void 0===W?\"\":W,V=$.customParam,Y=void 0===V?{}:V,z=$.placementCustomParam,Q=void 0===z?{}:z,J=$.store,Z=e.placementId,tt=O(Y,Q),et=R(),it=S(),rt=it.app,at=it.network,ot=it.device,v(null==J||null===(a=J.device)||void 0===a?void 0:a.info)){t.next=10;break}t.t0=null==J||null===(o=J.device)||void 0===o?void 0:o.info,t.next=16;break;case 10:return t.next=12,H.getInfo();case 12:if(t.t1=t.sent,t.t1){t.next=15;break}t.t1={};case 15:t.t0=t.t1;case 16:return dt=t.t0,st=rt.getInfo()||{},t.next=20,at.getType();case 20:if(t.t2=t.sent,t.t2){t.next=23;break}t.t2={};case 23:if(lt=t.t2,t.t4=null==J||null===(d=J.device)||void 0===d?void 0:d.ids,t.t4){t.next=29;break}return t.next=28,H.getDeviceIds();case 28:t.t4=t.sent;case 29:if(t.t3=t.t4,t.t3){t.next=32;break}t.t3={};case 32:if(ct=t.t3,t.t6=null==J||null===(s=J.device)||void 0===s?void 0:s.oaid,t.t6){t.next=38;break}return t.next=37,H.getOaId();case 37:t.t6=t.sent;case 38:if(t.t5=t.t6,t.t5){t.next=41;break}t.t5=\"\";case 41:if(ut=t.t5,ht=\"\".concat(null==dt?void 0:dt.screenWidth,\"*\").concat(null==dt?void 0:dt.screenHeight),pt=nt[null==lt||null===(l=lt.data)||void 0===l?void 0:l.type]||\"-1\",ft=\"1.0\",t.t7=null==J?void 0:J.upid,t.t7){t.next=50;break}return t.next=49,G();case 49:t.t7=t.sent;case 50:return vt=t.t7,t.next=53,K();case 53:return mt=t.sent,t.next=56,X(Z);case 56:return _t=t.sent,t.next=59,M.getItem(\"firstInitTime\");case 59:if(t.t8=t.sent,t.t8){t.next=62;break}t.t8=0;case 62:return gt=t.t8,t.next=65,M.getItem(\"currentInitTime\");case 65:if(t.t9=t.sent,t.t9){t.next=68;break}t.t9=0;case 68:return yt=t.t9,It=Math.ceil((yt-gt+1)/864e5),bt=\"TOPON_AD_CACHE_APP_\"+j,t.next=73,M.getItem(bt,!1);case 73:if(t.t10=t.sent,t.t10){t.next=76;break}t.t10={};case 76:return kt=t.t10,wt={system:1,os_fw:8,mcc:\"1\",mnc:\"1\",timezone:\"\",nw_ver:\"\",orient:1,ua:et||\"\",os_vn:null!==(c=null==dt?void 0:dt.osVersionName)&&void 0!==c?c:\"\",os_vc:null!==(u=\"\"+(null==dt?void 0:dt.osVersionCode))&&void 0!==u?u:\"\",package_name:null!==(h=null==st?void 0:st.packageName)&&void 0!==h?h:\"\",app_vn:null!==(p=null==st?void 0:st.versionName)&&void 0!==p?p:\"\",app_vc:null!==(f=\"\"+(null==st?void 0:st.versionCode))&&void 0!==f?f:\"\",brand:null!==(m=null==dt?void 0:dt.brand)&&void 0!==m?m:\"\",model:null!==(_=null==dt?void 0:dt.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==dt?void 0:dt.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==dt?void 0:dt.platformVersionCode))&&void 0!==y?y:\"\",network_type:pt,screen:ht,upid:vt,app_id:j,sdk_ver:\"UA_\".concat(Xa),platform:1,pl_id:Z,channel:B||\"\",sub_channel:q||\"\",custom:tt,ps_id:mt,session_id:_t,first_init_time:1*gt,days_from_first_init:It,deny:String(dt.screenDensity),api_ver:\"1.0\",host_vn:null!==(I=null==ot||null===(b=ot.host)||void 0===b?void 0:b.versionName)&&void 0!==I?I:\"\",host_vc:null!==(k=\"\"+(null==ot||null===(w=ot.host)||void 0===w?void 0:w.versionCode))&&void 0!==k?k:\"\",abtest_id:null!==(x=null==kt||null===(T=kt.data)||void 0===T?void 0:T.abtest_id)&&void 0!==x?x:\"\"},xt={android_id:null!==(A=null==ct?void 0:ct.user)&&void 0!==A?A:\"\",mac:null!==(L=null==ct?void 0:ct.mac)&&void 0!==L?L:\"\",imei:\"\",oaid:ut,gaid:null!==(P=null==ct?void 0:ct.advertising)&&void 0!==P?P:\"\",is_cn_sdk:\"1\"},St=C(D(wt)),Tt=C(D(xt)),At=E(N,[{key:\"api_ver\",value:ft},{key:\"p\",value:St},{key:\"p2\",value:Tt}]),t.abrupt(\"return\",{p:St,p2:Tt,api_ver:ft,sign:At});case 84:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function to(t){return eo.apply(this,arguments)}function eo(){return eo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p=arguments;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=p.length>1&&void 0!==p[1]?p[1]:{},r=e.placementId,t.prev=2,a=Date.now(),t.next=6,Ja.call(this,e);case 6:return o=t.sent,t.next=9,Na(\"\".concat(Qa,\"/v2/open/placement\"),o,{rawResponse:!0});case 9:return d=t.sent,s=_(null==d?void 0:d.data)?JSON.parse(null==d?void 0:d.data):(null==d?void 0:d.data)||{},l=Date.now(),c={key:\"STRATEGY_REQUEST_TIME\",msg:\"placement\",unitid:r,msg1:String(a),msg2:String(l),msg3:String(l-a),msg4:null!=n&&n.isPreload?\"1\":\"\"},Va.call(this,c),s.code>0&&(u={key:\"API_ERROR\",msg:\"placement\",unitid:r,msg1:String(s.code),msg2:s.msg,msg3:Qa.replace(/^https?:\\/\\//,\"\")},Va.call(this,u)),t.abrupt(\"return\",d);case 18:return t.prev=18,t.t0=t.catch(2),h={key:\"API_ERROR\",msg:\"placement\",msg1:\"unknow\",msg2:\"request error\",unitid:r,msg3:Qa.replace(/^https?:\\/\\//,\"\")},Va.call(this,h),t.abrupt(\"return\",{});case 23:case\"end\":return t.stop()}}),t,this,[[2,18]])}))),eo.apply(this,arguments)}var io=\"http://tk.anythinktech.com\",no=\"4.2.11\",ro={AD_LOAD:10,AD_LOAD_FILLED:12,AD_REQUEST:1,AD_REQUEST_FILLED:2,AD_BIDDING:11,AD_SHOW:13,AD_CLICK:6,AD_IMPRESSION:4,APP_STARTUP:21};function ao(t){return oo.apply(this,arguments)}function oo(){return(oo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt,It,bt,kt,wt,xt,St,Tt,At,Et,Ct,Dt,Lt,Ot,Rt,Pt,Ut,$t,Nt,jt,Ft,Bt,Wt,qt,Mt,Vt,Ht,Gt,Yt,Kt,zt,Xt,Qt,Jt,Zt,te,ee,ie,ne,re,ae,oe,de,se,le,ce;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if($=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,N=(null==$?void 0:$.topon_sdk)||{},j=N.appKey,F=N.appId,B=N.channelId,W=void 0===B?\"\":B,q=N.subChannelId,V=void 0===q?\"\":q,Y=N.customParam,z=void 0===Y?{}:Y,Q=N.placementCustomParam,J=void 0===Q?{}:Q,Z=N.store,tt=e.placementId,et=e.requestId,it=e.logType,rt=e.trafficGroupId,at=e.segmentId,ot=e.adSourceId,dt=e.nwFirmId,st=e.asId,lt=e.format,ct=e.ecpm,ut=e.sPty,ht=e.placementLoadTime,pt=e.unitFilledTime,ft=e.reqUgNum,vt=e.pC,mt=e.bidTk,_t=void 0===mt?{}:mt,gt=e.wfType,yt=e.psIdVirtual,It=void 0===yt?\"\":yt,bt=O(z,J),kt=S(),wt=kt.app,xt=kt.network,St=kt.device,Tt=R(),v(null==Z||null===(a=Z.device)||void 0===a?void 0:a.info)){t.next=10;break}t.t0=null==Z||null===(o=Z.device)||void 0===o?void 0:o.info,t.next=16;break;case 10:return t.next=12,H.getInfo();case 12:if(t.t1=t.sent,t.t1){t.next=15;break}t.t1={};case 15:t.t0=t.t1;case 16:return At=t.t0,Et=wt.getInfo()||{},t.next=20,xt.getType();case 20:if(t.t2=t.sent,t.t2){t.next=23;break}t.t2={};case 23:if(Ct=t.t2,t.t4=null==Z||null===(d=Z.device)||void 0===d?void 0:d.ids,t.t4){t.next=29;break}return t.next=28,H.getDeviceIds();case 28:t.t4=t.sent;case 29:if(t.t3=t.t4,t.t3){t.next=32;break}t.t3={};case 32:if(Dt=t.t3,t.t6=null==Z||null===(s=Z.device)||void 0===s?void 0:s.oaid,t.t6){t.next=38;break}return t.next=37,H.getOaId();case 37:t.t6=t.sent;case 38:if(t.t5=t.t6,t.t5){t.next=41;break}t.t5=\"\";case 41:if(Lt=t.t5,Ot=\"1.0\",t.t7=null==Z?void 0:Z.upid,t.t7){t.next=48;break}return t.next=47,G();case 47:t.t7=t.sent;case 48:return Rt=t.t7,t.next=51,K();case 51:return Pt=t.sent,It&&(Pt=Pt+\"/\"+It),t.next=55,X(tt);case 55:return Ut=t.sent,t.next=58,M.getItem(\"firstInitTime\");case 58:if(t.t8=t.sent,t.t8){t.next=61;break}t.t8=0;case 61:return $t=t.t8,t.next=64,M.getItem(\"currentInitTime\");case 64:if(t.t9=t.sent,t.t9){t.next=67;break}t.t9=0;case 67:return Nt=t.t9,jt=Math.ceil((Nt-$t+1)/864e5),Ft=\"\".concat(null==At?void 0:At.screenWidth,\"*\").concat(null==At?void 0:At.screenHeight),Bt=nt[null==Ct||null===(l=Ct.data)||void 0===l?void 0:l.type]||\"-1\",Wt=\"TOPON_AD_CACHE_APP_\"+F,t.next=74,M.getItem(Wt,!1);case 74:if(t.t10=t.sent,t.t10){t.next=77;break}t.t10={};case 77:return qt=t.t10,Mt={app_id:F,system:1,platform:1,os_vn:null!==(c=null==At?void 0:At.osVersionName)&&void 0!==c?c:\"\",os_vc:null!==(u=\"\"+(null==At?void 0:At.osVersionCode))&&void 0!==u?u:\"\",package_name:null!==(h=null==Et?void 0:Et.packageName)&&void 0!==h?h:\"\",app_vn:null!==(p=null==Et?void 0:Et.versionName)&&void 0!==p?p:\"\",app_vc:null!==(f=\"\"+(null==Et?void 0:Et.versionCode))&&void 0!==f?f:\"\",brand:null!==(m=null==At?void 0:At.brand)&&void 0!==m?m:\"\",model:null!==(_=null==At?void 0:At.model)&&void 0!==_?_:\"\",pf_vn:null!==(g=null==At?void 0:At.platformVersionName)&&void 0!==g?g:\"\",pf_vc:null!==(y=\"\"+(null==At?void 0:At.platformVersionCode))&&void 0!==y?y:\"\",screen:Ft,network_type:Bt,mcc:\"1\",mnc:\"1\",language:null!==(I=null==At?void 0:At.language)&&void 0!==I?I:\"\",timezone:\"\",sdk_ver:\"UA_\".concat(no),gp_ver:\"\",ua:Tt||\"\",orient:1,upid:Rt,channel:W,sub_channel:V,android_id:null!==(b=null==Dt?void 0:Dt.user)&&void 0!==b?b:\"\",oaid:Lt,mac:null!==(k=null==Dt?void 0:Dt.mac)&&void 0!==k?k:\"\",imei:\"\",is_cn_sdk:\"1\",gaid:null!==(w=null==Dt?void 0:Dt.advertising)&&void 0!==w?w:\"\",idfa:\"\",idfv:\"\",custom:bt,os_fw:8,first_init_time:1*$t,days_from_first_init:jt,host_vn:null!==(x=null==St||null===(T=St.host)||void 0===T?void 0:T.versionName)&&void 0!==x?x:\"\",host_vc:null!==(A=\"\"+(null==St||null===(L=St.host)||void 0===L?void 0:L.versionCode))&&void 0!==A?A:\"\",abtest_id:null!==(P=null==qt||null===(U=qt.data)||void 0===U?void 0:U.abtest_id)&&void 0!==P?P:\"\"},Vt=(new Date).getTime(),1===(Ht={traffic_group_id:rt,sdk_time:Vt,req_id:et,req_par:1,req_par_num:ft,pl_id:tt,type:ro[it],unit_id:ot,nw_firm_id:dt,gro_id:at,format:lt,ps_id:Pt,sessionid:Ut,asid:st,bidtype:[\"1\",\"2\"].includes(gt)?1:0,bidprice:ct,s_pty:ut,p_c:vt,cl_imp:0,isload:\"\"}).bidtype&&(Gt=_t.bidId,Yt=void 0===Gt?\"\":Gt,Kt=_t.tpBidId,zt=void 0===Kt?\"\":Kt,Xt=_t.bidRequestTime,Qt=_t.bidResponseTime,Jt=_t.bidFilledTime,Zt=_t.bidResult,te=_t.errorMsg,ee=void 0===te?\"\":te,ie=_t.rlBidStatus,ne=_t.sortType,re=_t.sortPriority,ae={bid_id:Yt,tp_bid_id:zt},oe={},\"AD_BIDDING\"===it&&(oe={bidrequesttime:Xt,bidresponsetime:Qt,bid_filledtime:Jt,bidresponselist:[{sortpriority:re,sorttype:ne,unit_id:ot,bidresult:Zt,bidprice:ct,errormsg:ee,tp_bid_id:zt,nw_firm_id:dt,rl_bid_status:ie,s_pty:ut}]}),Ht=Object.assign({},Ht,ae,oe)),\"AD_LOAD_FILLED\"===it&&(Ht.loadtime=ht),\"AD_REQUEST_FILLED\"===it&&(Ht.filledtime=pt),de=[Ht],se=C(D(Mt)),le=C(D(de)),ce=E(j,[{key:\"api_ver\",value:Ot},{key:\"common\",value:se},{key:\"data\",value:le}]),t.abrupt(\"return\",{common:se,data:le,api_ver:Ot,sign:ce});case 90:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function so(t){return lo.apply(this,arguments)}function lo(){return(lo=o(i().mark((function t(n){var r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,ao.call(this,n);case 3:return r=t.sent,t.next=6,Na(\"\".concat(io,\"/v2/tk\"),r);case 6:(a=t.sent).code>0&&(o=e(e({},n),{},{key:\"API_ERROR\",msg:\"tk_2\",msg1:String(a.code),msg2:a.msg,msg3:io.replace(/^https?:\\/\\//,\"\")}),Va.call(this,o)),t.next=14;break;case 10:t.prev=10,t.t0=t.catch(0),d=e(e({},n),{},{key:\"API_ERROR\",msg:\"tk_2\",msg1:\"unknow\",msg2:\"request error\",msg3:io.replace(/^https?:\\/\\//,\"\")}),Va.call(this,d);case 14:case\"end\":return t.stop()}}),t,this,[[0,10]])})))).apply(this,arguments)}var co=\"4.2.11\",uo=\"http://adx-cn.anythinktech.com\",ho={BROWSER:2,WEBVIEW:3},po=[\"{__VIDEO_TIME__}\",\"{__BEGIN_TIME__}\",\"{__END_TIME__}\",\"{__PLAY_FIRST_FRAME__}\",\"{__PLAY_LAST_FRAME__}\",\"{__SCENE__}\",\"{__TYPE__}\",\"{__BEHAVIOR__}\",\"{__STATUS__}\",\"{__REQ_WIDTH__}\",\"{__REQ_HEIGHT__}\",\"{__WIDTH__}\",\"{__HEIGHT__}\",\"{__DOWN_X__}\",\"{__DOWN_Y__}\",\"{__UP_X__}\",\"{__UP_Y__}\",\"{__CLICK_ID__}\",\"{__RE_DOWN_X__}\",\"{__RE_DOWN_Y__}\",\"{__RE_UP_X__}\",\"{__RE_UP_Y__}\",\"{__TS__}\",\"{__TS_MSEC__}\",\"{__END_TS__}\",\"{__END_TS_MSEC__}\",\"{__PLAY_SEC__}\",\"{__PLAY_SEC__}\",\"{__PLAY_MSEC__}\",\"{__DPLINK_TYPE__}\",\"{ABSOLUTE_COORD}\",\"{RELATIVE_COORD}\"];function fo(t){return vo.apply(this,arguments)}function vo(){return(vo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,T,A,E,L,O,P,U,$,N,j,F,B,W,q,M,V,Y,z,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut,ht,pt,ft,vt,mt,_t,gt,yt;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(x=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,T=(null==x?void 0:x.topon_sdk)||{},A=T.appId,E=T.channelId,L=void 0===E?\"\":E,O=T.subChannelId,P=void 0===O?\"\":O,U=T.store,$=T.isTest,N=void 0!==$&&$,j=e.placementId,F=e.unitId,B=e.requestId,W=e.adxExt,q=void 0===W?\"\":W,M=e.adWidth,V=void 0===M?0:M,Y=e.adHeight,z=void 0===Y?0:Y,Q=e.format,J=void 0===Q?\"0\":Q,Z=R(),tt=S(),et=tt.app,it=tt.network,v(null==U||null===(a=U.device)||void 0===a?void 0:a.info)){t.next=9;break}t.t0=null==U||null===(o=U.device)||void 0===o?void 0:o.info,t.next=15;break;case 9:return t.next=11,H.getInfo();case 11:if(t.t1=t.sent,t.t1){t.next=14;break}t.t1={};case 14:t.t0=t.t1;case 15:return rt=t.t0,at=et.getInfo()||{},t.next=19,it.getType();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:if(ot=t.t2,t.t4=null==U||null===(d=U.device)||void 0===d?void 0:d.ids,t.t4){t.next=28;break}return t.next=27,H.getDeviceIds();case 27:t.t4=t.sent;case 28:if(t.t3=t.t4,t.t3){t.next=31;break}t.t3={};case 31:if(dt=t.t3,t.t6=null==U||null===(s=U.device)||void 0===s?void 0:s.oaid,t.t6){t.next=37;break}return t.next=36,H.getOaId();case 36:t.t6=t.sent;case 37:if(t.t5=t.t6,t.t5){t.next=40;break}t.t5=\"\";case 40:if(st=t.t5,lt=\"\".concat(null==rt?void 0:rt.screenWidth,\"*\").concat(null==rt?void 0:rt.screenHeight),ct=nt[null==ot||null===(l=ot.data)||void 0===l?void 0:l.type]||\"-1\",t.t7=null==U?void 0:U.upid,t.t7){t.next=48;break}return t.next=47,G();case 47:t.t7=t.sent;case 48:return ut=t.t7,t.next=51,K();case 51:return ht=t.sent,t.next=54,X(j);case 54:return pt=t.sent,ft={system:1,platform:1,brand:null!==(c=null==rt?void 0:rt.brand)&&void 0!==c?c:\"\",model:null!==(u=null==rt?void 0:rt.model)&&void 0!==u?u:\"\",os_vn:null!==(h=null==rt?void 0:rt.osVersionName)&&void 0!==h?h:\"\",os_vc:null!==(p=\"\"+(null==rt?void 0:rt.osVersionCode))&&void 0!==p?p:\"\",os_fw:8,pf_vn:null!==(f=null==rt?void 0:rt.platformVersionName)&&void 0!==f?f:\"\",pf_vc:null!==(m=\"\"+(null==rt?void 0:rt.platformVersionCode))&&void 0!==m?m:\"\",sdk_ver:\"UA_\".concat(co),app_id:A,app_vn:null!==(_=null==at?void 0:at.versionName)&&void 0!==_?_:\"\",app_vc:null!==(g=\"\"+(null==at?void 0:at.versionCode))&&void 0!==g?g:\"\",package_name:null!==(y=null==at?void 0:at.packageName)&&void 0!==y?y:\"\",pl_id:j,mcc:\"1\",mnc:\"1\",language:null!==(I=null==rt?void 0:rt.language)&&void 0!==I?I:\"\",timezone:\"\",nw_ver:\"\",orient:1,ua:Z||\"\",network_type:ct,screen:lt,upid:ut,channel:L||\"\",sub_channel:P||\"\",ps_id:ht,session_id:pt,deny:String(rt.screenDensity)},vt={android_id:null!==(b=null==dt?void 0:dt.user)&&void 0!==b?b:\"\",mac:null!==(k=null==dt?void 0:dt.mac)&&void 0!==k?k:\"\",imei:\"\",oaid:st,gaid:null!==(w=null==dt?void 0:dt.advertising)&&void 0!==w?w:\"\",is_cn_sdk:\"1\"},mt=[{ad_width:V,ad_height:z,nw_firm_id:66,unit_id:String(F),ad_source_id:String(F),get_offer:2,ad_format:J}],N&&(mt[0].test=1),_t=C(D(ft)),gt=C(D(vt)),yt=C(D(mt)),t.abrupt(\"return\",{p:_t,p2:gt,request_id:B,adx_ext:q,hb_list:yt});case 63:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function mo(t,e){return _o.apply(this,arguments)}function _o(){return(_o=o(i().mark((function t(e,n){var r;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fo.call(this,e);case 3:return r=t.sent,t.abrupt(\"return\",Na(\"\".concat(uo,\"/bid\"),r,{timeout:n}));case 7:t.prev=7,t.t0=t.catch(0);case 9:return t.abrupt(\"return\",{code:1,msg:\"请求API异常\"});case 10:case\"end\":return t.stop()}}),t,this,[[0,7]])})))).apply(this,arguments)}function go(t,e,i,n){return yo.apply(this,arguments)}function yo(){return(yo=o(i().mark((function t(n,r,a,o){var d,s,l,c,u,h,p,f,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D,L,O,R,P,U,$,N,j,F,B,W,q,M,V;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=n.placementId,u=n.exchR,h=a.hbBidTimeout,p=a.requestId,f=a.segmentId,m=a.trafficGroupId,_=a.asId,g=Date.now(),t.next=5,mo.call(this,n,h);case 5:if(y=t.sent,I=Date.now(),b=null!==(d=null==y?void 0:y.data)&&void 0!==d?d:[],k=b[0]||{},w=this.placementLoadStart,x=this.placementLoadEnd,S=this.format,T=this.reqUgNum,A=this.apiData,E=A.t_g_id,C=A.gro_id,D=A.asid,L=A.p_c,O=void 0===L?{}:L,R=x-w,P=o.getStatusList(),U=P.length,1,$=P.findIndex((function(t){return t.ecpmSort<k.s_pty})),N={bidRequestTime:g,bidResponseTime:I,bidFilledTime:I-g,bidResult:0,rlBidStatus:0,sortType:-1,sortPriority:$>-1?$+1:U+1},j={placementId:c,requestId:p,logType:\"AD_BIDDING\",trafficGroupId:E,segmentId:C,asId:D,adSourceId:r.unit_id||0,nwFirmId:r.nw_firm_id||0,ecpm:k.price,sPty:k.s_pty||0,format:S,placementLoadTime:R,unitFilledTime:I-g,reqUgNum:T,pC:O,wfType:\"1\"},F=e(e({},j),{},{bidTk:N}),r.bidTk={bidFilledTime:I-g},!(y.code>0||(null==y||null===(s=y.data)||void 0===s?void 0:s.length)<=0)){t.next=25;break}return F.bidTk.errorMsg=\"bid error, code = \".concat(y.code,\", msg = \").concat(y.msg),so.call(this,F),t.abrupt(\"return\",r);case 25:if(!(1!==k.is_success||k.err_code>0)){t.next=29;break}return F.bidTk.errorMsg=\"bid error, code = \".concat(k.err_code,\", msg = \").concat(k.err_msg),so.call(this,F),t.abrupt(\"return\",r);case 29:if(!(v(k)||v(k.offer_data)||k.offer_data.seatbid&&k.offer_data.seatbid.length<=0)){t.next=32;break}return so.call(this,F),t.abrupt(\"return\",r);case 32:if(B=k.offer_data.seatbid[0],r.bidTk.bidId=k.bid_id,r.bidTk.tpBidId=k.tp_bid_id,F.bidTk.bidId=k.bid_id,F.bidTk.tpBidId=k.tp_bid_id,B.tk.lurl||(B.tk.lurl=[]),B.tk.nurl||(B.tk.nurl=[]),B.tk.burl||(B.tk.burl=[]),k.lurl&&B.tk.lurl.push(k.lurl),k.nurl&&B.tk.nurl.push(k.nurl),k.burl&&B.tk.burl.push(k.burl),Object.values(ho).includes((null==B?void 0:B.link_type)||0)){t.next=46;break}return so.call(this,F),t.abrupt(\"return\",r);case 46:if(F.bidTk.bidResult=1,F.bidTk.rlBidStatus=2,W=Io.call(this,c),q=null!==(l=null==W?void 0:W._expirationTime)&&void 0!==l?l:0,!v(W)&&W.price>k.price&&q>Date.now()&&(F.bidTk.bidResult=0,F.bidTk.rlBidStatus=1,ko.call(this,B.tk.lurl),M={key:\"BID_LOSS\",unitid:c,requestid:p,groupid:f,traffic_group_id:m,asid:_,msg:\"66\",msg1:\"\"+k.unit_id,msg2:\"\"+k.price,msg3:\"\"},k=W,Va.call(this,M)),F.bidTk.bidResult&&(F.bidTk.sortType=0),so.call(this,F),!(o.selecter().ecpm>k.price)){t.next=59;break}return ko.call(this,B.tk.lurl),V={key:\"BID_LOSS\",unitid:c,requestid:p,groupid:f,traffic_group_id:m,asid:_,msg:\"66\",msg1:\"\"+k.unit_id,msg2:\"\"+k.price,msg3:\"\"},Va.call(this,V),t.abrupt(\"return\",Promise.reject(\"ADX BID_LOSS\"));case 59:return r.ecpm=k.price,r.cy_ecpm=k.price*u,r.s_pty=k.s_pty,r.nw_cache_time=k.expire,k.bidTk=r.bidTk,k._expirationTime=Date.now()+k.expire,bo.call(this,c,k),t.abrupt(\"return\",r);case 67:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Io(t){var e,i,n,r,a,o=null!==(e=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:null==this?void 0:this.$def)&&void 0!==e?e:null;return o&&null!=o&&o.topon_sdk&&null!==(r=null===(a=o.topon_sdk)||void 0===a||null===(a=a.cache)||void 0===a||null===(a=a.adxOffer)||void 0===a?void 0:a[t])&&void 0!==r?r:{}}function bo(t,e){var i,n,r,a=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:null==this?void 0:this.$def)&&void 0!==i?i:null;a&&null!=a&&a.topon_sdk&&(a.topon_sdk.cache.adxOffer||(a.topon_sdk.cache.adxOffer=Object.create(null)),a.topon_sdk.cache.adxOffer[t]=e)}function ko(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=new RegExp(po.join(\"|\"),\"gi\"),n=[];return t.forEach((function(t){var r=t.replace(i,(function(t){return e[t]}));n.push(ja(\"\".concat(r),{}))})),Promise.all(n)}function wo(t,e){var i=e.getStatusList()||[],n=i.length,r=i.findIndex((function(e){return e.ecpmSort<t.s_pty}));return r>-1?r+1:n+1}function xo(t,i,n,r,a,o){var d=o.placementId,s=o.format,l=this.placementLoadStart,c=this.placementLoadEnd,u=this.reqUgNum,h=this.apiData,p=h.t_g_id,f=h.gro_id,v=h.asid,m=h.p_c,_=void 0===m?{}:m,g=c-l,y={bidRequestTime:n,bidResponseTime:i,bidFilledTime:i-n,bidResult:0,rlBidStatus:0,sortType:-1,sortPriority:r};return e(e({},{placementId:d,requestId:a.requestId,logType:\"AD_BIDDING\",trafficGroupId:p,segmentId:f,asId:v,adSourceId:t.unit_id||0,nwFirmId:t.nw_firm_id||0,ecpm:t.price,sPty:t.s_pty||0,format:s,placementLoadTime:g,unitFilledTime:i-n,reqUgNum:u,pC:_,wfType:\"2\"}),{},{bidTk:y})}function So(t,e,i,n,r){var a,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,d=n.placementId,s=n.exchRateC2u,l=n.accountCurrency,c=e.unit_id,u=d+\"/\"+c,h=j.call(this,\"unit\",u),p=null!==(a=null==h?void 0:h._expirationTime)&&void 0!==a?a:0;if(!v(h)&&h.offer.ecpm>t.ecpm&&p>Date.now()){var f;i.bidTk.bidResult=0,i.bidTk.rlBidStatus=1,o=null!==(f=null==h?void 0:h.ad)&&void 0!==f?f:null;var m=t.adId?{adid:t.adId}:{};Ao.call(this,{condition:n,strategy:r,unit:e,notifyOptions:m,notifyInstance:o});var _=(t=h.offer).ecpm/100;e.ecpm=_*s,e.price=_*s,e.cy_ecpm=\"USD\"===l?_*s:_,e.s_pty=_*s}return{offer:t,adInstance:o}}function To(t,e,i,n,r){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=r.selecter();if(o&&o.ecpm>e.ecpm){var d=t.adId?{adid:t.adId}:{};return Ao.call(this,{condition:i,strategy:n,unit:e,notifyOptions:d,notifyInstance:a}),o.unit}return null}function Ao(t){var i=t.condition,n=t.strategy,r=t.unit,a=t.daOptions,o=void 0===a?{}:a,d=t.notifyOptions,s=void 0===d?{}:d,l=t.notifyInstance,c=void 0===l?null:l,u=i.placementId,h=n.requestId,p=n.segmentId,f=n.trafficGroupId,v=n.asId;55===r.nw_firm_id&&Eo.call(this,s,c);var m=e({key:\"BID_LOSS\",unitid:u,requestid:h,groupid:p,traffic_group_id:f,asid:v,msg:r.nw_firm_id,msg1:\"\"+r.unit_id,msg2:\"\"+r.ecpm,msg3:\"\"},o);Va.call(this,m)}function Eo(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=S(),r=n.ad,a=i||r,o=e({winPrice:0,code:1,channel:\"mob\"},t);a.notifyRankLoss(o)}function Co(t){var i=S().ad;return new Promise((function(n,r){i.preloadAd(e(e({},t),{},{success:function(t){n(t)},fail:function(t,e){n(t)}}))}))}function Do(t){var e=S().ad,i=null;try{i=e.createRewardedVideoAd(t)}catch(t){}return i}function Lo(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if((null==t?void 0:t.length)<=1)return t;var e=JSON.parse(JSON.stringify(t));return e.sort((function(t,e){return e.price-t.price})),e}function Oo(t,e,i,n){return Ro.apply(this,arguments)}function Ro(){return(Ro=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c=e.unit_id,u=e.content,h=JSON.parse(u),p=h.unit_id,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+c,g={},y={adUnitId:p,ecpm:!0,type:\"native\",adCount:1},I=Date.now(),t.next=10,Co.call(this,y);case 10:if(b=t.sent,k=Date.now(),g=null!==(o=null==b||null===(d=b.adList)||void 0===d?void 0:d[0])&&void 0!==o?o:{},w=null!==(s=null===(l=g)||void 0===l?void 0:l.ecpm)&&void 0!==s?s:0,x=w/100,e.ecpm=x*v,e.price=x*v,e.cy_ecpm=\"USD\"===m?x*v:x,e.s_pty=x*v,e.bidTk={bidFilledTime:k-I},S=wo.call(this,e,a),(T=xo.call(this,e,k,I,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,g,e,T,n,r),E=A.offer,g=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),g.ecpm||(T.bidTk.sortType=-12,T.bidTk.errorMsg=\"0 bid price\"),so.call(this,T),g.ecpm){t.next=34;break}return C={msg2:\"0\"},D={adid:g.adId},Ao.call(this,{condition:n,strategy:r,unit:e,notifyOptions:D,daOptions:C}),t.abrupt(\"return\",Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\")));case 34:if(!To.call(this,g,e,n,r,a)){t.next=37;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 37:return N.call(this,\"unit\",_,{ad:null,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 39:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Po(t,e,i,n){var r=this,a=t.unit_id,o=t.content,d=JSON.parse(o).unit_id,s=e.placementId,l=e.exchRateC2u,c=e.accountCurrency,u=s+\"/\"+a,h={ecpm:0},p={adUnitId:d},f=Date.now(),v=Do.call(this,p);return v?(v.load(),new Promise((function(a,o){v.onLoad((function(){var d,s;h=v.getECPM();var p=Date.now(),m=(null!==(d=null===(s=h)||void 0===s?void 0:s.ecpm)&&void 0!==d?d:0)/100;t.ecpm=m*l,t.price=m*l,t.cy_ecpm=\"USD\"===c?m*l:m,t.s_pty=m*l,t.bidTk={bidFilledTime:p-f};var _=wo.call(r,t,n),g=xo.call(r,t,p,f,_,i,e);g.bidTk.bidResult=1,g.bidTk.rlBidStatus=2;var y=So.call(r,h,t,g,e,i,v),I=y.offer,b=y.adInstance;if(h=I,v=b,g.bidTk.bidResult&&(g.bidTk.sortType=0),h.ecpm||(g.bidTk.sortType=-12,g.bidTk.errorMsg=\"0 bid price\"),so.call(r,g),!h.ecpm){return Ao.call(r,{condition:e,strategy:i,unit:t,daOptions:{msg2:\"0\"},notifyInstance:v}),Promise.reject(\"offer.ecpm: \".concat(h.ecpm,\"不符合bid场景，reject掉\"))}var k=To.call(r,h,t,e,i,n,v);k&&o(k),N.call(r,\"unit\",u,{ad:v,offer:h,_expirationTime:Date.now()+t.nw_cache_time}),a(t)})),v.onError((function(n){var a=Date.now(),d=xo.call(r,t,a,f,-1,i,e);d.bidTk.bidResult=0,d.bidTk.rlBidStatus=0,d.bidTk.sortType=-12,d.bidTk.errorMsg=\"\".concat(JSON.stringify(n)),so.call(r,d),o({msg:\"激励视频 c2s 失败: \".concat(JSON.stringify(n))})}))}))):t}function Uo(t,e,i,n){return $o.apply(this,arguments)}function $o(){return($o=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C,D;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return l=null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.topon_sdk)||void 0===o?void 0:o.channelId,c=e.unit_id,u=e.content,h=e.nw_req_num,p=JSON.parse(u),f=p.unit_id,v=n.placementId,m=n.exchRateC2u,_=n.accountCurrency,g=v+\"/\"+c,y={},I={adUnitId:f,type:\"native\",adCount:h&&h<=3?h:1},l&&(I.channel=l),b=Date.now(),t.next=12,Co.call(this,I);case 12:if(k=t.sent,w=Date.now(),x=k.adList||[],S=Lo(x),(y=S[0]||{}).ecpm=null!==(d=null===(s=y)||void 0===s?void 0:s.price)&&void 0!==d?d:0,T=y.ecpm/100,e.ecpm=T*m,e.price=T*m,e.cy_ecpm=\"USD\"===_?T*m:T,e.s_pty=T*m,e.bidTk={bidFilledTime:w-b},A=wo.call(this,e,a),(E=xo.call(this,e,w,b,A,r,n)).bidTk.bidResult=1,E.bidTk.rlBidStatus=2,C=So.call(this,y,e,E,n,r),D=C.offer,y=D,E.bidTk.bidResult&&(E.bidTk.sortType=0),so.call(this,E),!To.call(this,y,e,n,r,a)){t.next=35;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 35:return N.call(this,\"unit\",g,{ad:null,offer:y,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 37:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function No(t,e,i,n){return jo.apply(this,arguments)}function jo(){return(jo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E,C;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return d=null===(o=this.$app)||void 0===o||null===(o=o.$def)||void 0===o||null===(o=o.topon_sdk)||void 0===o?void 0:o.channelId,s=e.unit_id,l=e.content,c=e.nw_req_num,u=JSON.parse(l),h=u.unit_id,p=n.placementId,f=n.exchRateC2u,v=n.accountCurrency,m=p+\"/\"+s,_={},g={adUnitId:h,type:\"rewardedVideoAd\",adCount:c&&c<=3?c:1},d&&(g.channel=d),y=Date.now(),t.next=12,Co.call(this,g);case 12:if(I=t.sent,b=Date.now(),!I.adList){t.next=20;break}k=I.adList||[],w=Lo(k),_=w[0]||{},t.next=25;break;case 20:if(!I.adid){t.next=24;break}_=I,t.next=25;break;case 24:return t.abrupt(\"return\",Promise.reject(\"bid无结果\"));case 25:if(_.ecpm=_.price||0,x=_.ecpm/100,e.ecpm=x*f,e.price=x*f,e.cy_ecpm=\"USD\"===v?x*f:x,e.s_pty=x*f,e.bidTk={bidFilledTime:b-y},S=wo.call(this,e,a),(T=xo.call(this,e,b,y,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,_,e,T,n,r),E=A.offer,_=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),so.call(this,T),!To.call(this,_,e,n,r,a)){t.next=43;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 43:if(C=Do.call(this,{multiton:!0})){t.next=46;break}return t.abrupt(\"return\",e);case 46:return N.call(this,\"unit\",m,{ad:C,offer:_,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 48:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Fo(t){var i,n,r=null!==(i=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==i?i:this.$def,a=(null==r?void 0:r.ylh_sdk)||{};return new Promise((function(i,n){v(a)&&i({code:2e3,msg:\"找不到优量汇SDK\"}),a.onYlhReady((function(){var n=e({},t);a.loadFeedAd(n).then((function(t){var e={adList:t||[]};t.code&&t.code>0&&(e.code=at[t.code]||2e3,e.msg=\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\"),e.adList=[]),i(e)})).catch((function(t){i({code:2e3,msg:\"\".concat(null==t?void 0:t.message)})}))}))}))}function Bo(t,e,i,n){return Wo.apply(this,arguments)}function Wo(){return(Wo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,S,T,A,E;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=u.allow_recommend,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+l,g={},y={count:1,placementId:h,recommendation:\"1\"===p?2:1},I=Date.now(),t.next=10,Fo.call(this,y);case 10:if(b=t.sent,k=Date.now(),g=null!==(o=null==b||null===(d=b.adList)||void 0===d?void 0:d[0])&&void 0!==o?o:{},w=(null===(s=g)||void 0===s?void 0:s.getECPM())>0?g.getECPM():0,g.ecpm=w,x=w/100,e.ecpm=x*v,e.price=x*v,e.cy_ecpm=\"USD\"===m?x*v:x,e.s_pty=x*v,e.bidTk={bidFilledTime:k-I},S=wo.call(this,e,a),(T=xo.call(this,e,k,I,S,r,n)).bidTk.bidResult=1,T.bidTk.rlBidStatus=2,A=So.call(this,g,e,T,n,r),E=A.offer,g=E,T.bidTk.bidResult&&(T.bidTk.sortType=0),g.ecpm||(T.bidTk.sortType=-12,T.bidTk.errorMsg=\"0 bid price\"),so.call(this,T),g.ecpm){t.next=32;break}return t.abrupt(\"return\",Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\")));case 32:if(!To.call(this,g,e,n,r,a)){t.next=35;break}return t.abrupt(\"return\",Promise.reject(\"HB BID_LOSS\"));case 35:return N.call(this,\"unit\",_,{ad:null,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),t.abrupt(\"return\",e);case 37:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function qo(t,e,i,n){return Mo.apply(this,arguments)}function Mo(){return(Mo=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=null!==(o=null===(d=this.$app)||void 0===d?void 0:d.$def)&&void 0!==o?o:this.$def,l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=u.video_muted,f=n.placementId,v=n.exchRateC2u,m=n.accountCurrency,_=f+\"/\"+l,g={ecpm:0},y={placementId:h,muted:\"1\"===p},I=Date.now(),t.abrupt(\"return\",new Promise((function(t,i){try{var o=s.ylh_sdk.createRewardVideoAd(y);o.onLoad((function(){var i,d;g.ecpm=o.getECPM();var s=Date.now(),l=(null!==(i=null===(d=g)||void 0===d?void 0:d.ecpm)&&void 0!==i?i:0)/100;e.ecpm=l*v,e.price=l*v,e.cy_ecpm=\"USD\"===m?l*v:l,e.s_pty=l*v,e.bidTk={bidFilledTime:s-I};var c=wo.call(b,e,a),u=xo.call(b,e,s,I,c,r,n);u.bidTk.bidResult=1,u.bidTk.rlBidStatus=2;var h=So.call(b,g,e,u,n,r).offer;return g=h,u.bidTk.bidResult&&(u.bidTk.sortType=0),g.ecpm||(u.bidTk.sortType=-12,u.bidTk.errorMsg=\"0 bid price\"),so.call(b,u),g.ecpm?To.call(b,g,e,n,r,a)?Promise.reject(\"HB BID_LOSS\"):(N.call(b,\"unit\",_,{ad:o,offer:g,_expirationTime:Date.now()+e.nw_cache_time}),void t(e)):Promise.reject(\"offer.ecpm: \".concat(g.ecpm,\"不符合bid场景，reject掉\"))})),o.onError((function(t){if(t.errorCode){var a=Date.now(),o=xo.call(b,e,a,I,-1,r,n),d=at[t.errorCode]||2e3,s=\"\".concat(null==t?void 0:t.errorMsg,\" real code [\").concat(t.errorCode,\"]\");o.bidTk.bidResult=0,o.bidTk.rlBidStatus=0,o.bidTk.sortType=-12,o.bidTk.errorMsg=s,so.call(b,o),i({code:d,msg:s})}})),o.load()}catch(t){i({code:2e3,msg:\"激励视频 c2s 失败: \".concat(JSON.stringify(t))})}})));case 10:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Vo(t,e,i,n){return Ho.apply(this,arguments)}function Ho(){return(Ho=o(i().mark((function t(e,n,r,a){var o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=null!==(o=null===(d=this.$app)||void 0===d?void 0:d.$def)&&void 0!==o?o:this.$def,l=e.unit_id,c=e.content,u=JSON.parse(c),h=u.unit_id,p=n.placementId,f=n.exchRateC2u,v=n.accountCurrency,m=n.placementConfig,_=(void 0===m?{}:m).entry,g=p+\"/\"+l,y={ecpm:0},I={placementId:h,entry:void 0===_?\"\":_},b=Date.now(),t.abrupt(\"return\",new Promise((function(t,i){try{s.ylh_sdk.onYlhReady((function(){var o=s.ylh_sdk.createSplashAd(I);o.onLoad((function(){var i,d;y.ecpm=o.getECPM();var s=Date.now(),l=(null!==(i=null===(d=y)||void 0===d?void 0:d.ecpm)&&void 0!==i?i:0)/100;e.ecpm=l*f,e.price=l*f,e.cy_ecpm=\"USD\"===v?l*f:l,e.s_pty=l*f,e.bidTk={bidFilledTime:s-b};var c=wo.call(k,e,a),u=xo.call(k,e,s,b,c,r,n);u.bidTk.bidResult=1,u.bidTk.rlBidStatus=2;var h=So.call(k,y,e,u,n,r).offer;return y=h,u.bidTk.bidResult&&(u.bidTk.sortType=0),y.ecpm||(u.bidTk.sortType=-12,u.bidTk.errorMsg=\"0 bid price\"),so.call(k,u),y.ecpm?To.call(k,y,e,n,r,a)?Promise.reject(\"HB BID_LOSS\"):(N.call(k,\"unit\",g,{ad:o,offer:y,_expirationTime:Date.now()+e.nw_cache_time}),void t(e)):Promise.reject(\"offer.ecpm: \".concat(y.ecpm,\"不符合bid场景，reject掉\"))})),o.onError((function(t){if(t.errorCode){var a=Date.now(),o=xo.call(k,e,a,b,-1,r,n),d=at[t.errorCode]||2e3,s=\"\".concat(null==t?void 0:t.errorMsg,\" real code [\").concat(t.errorCode,\"]\");o.bidTk.bidResult=0,o.bidTk.rlBidStatus=0,o.bidTk.sortType=-12,o.bidTk.errorMsg=s,so.call(k,o),i({code:d,msg:s})}})),o.load()}))}catch(t){i({code:2e3,msg:\"开屏广告 c2s 失败: \".concat(JSON.stringify(t))})}})));case 11:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}var Go=c(c(c({},tt.OPPO,{bid:function(t,e,i,n){var r=e.format,a={0:Oo,1:Po};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"oppo\"}),tt.VIVO,{bid:function(t,e,i,n){var r=e.format,a={0:Uo,1:No};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"vivo\"}),tt.YLH,{bid:function(t,e,i,n){var r=e.format,a={0:Bo,1:qo,4:Vo};return a[r]?a[r].call(this,t,e,i,n):Promise.reject(\"不支持该广告类型\")},brand:\"ylh\"});function Yo(t,e){var i=S().ad.getProvider().toLowerCase();return!!Go[t]&&(\"ylh\"===Go[t].brand?!((null==e?void 0:e.platformVersionCode)<1100):Go[t].brand===i&&!(\"oppo\"===i&&(null==e?void 0:e.platformVersionCode)<1119))}function Ko(t){return zo.apply(this,arguments)}function zo(){return(zo=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,m,_;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(d=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(a=l.device)||void 0===a?void 0:a.info)){t.next=6;break}t.t0=null==l||null===(o=l.device)||void 0===o?void 0:o.info,t.next=12;break;case 6:return t.next=8,H.getInfo();case 8:if(t.t1=t.sent,t.t1){t.next=11;break}t.t1={};case 11:t.t0=t.t1;case 12:if(c=t.t0,u=e.hbUnit,h=e.condition,p=e.strategy,f=e.scheduler,m=[],_=u,Yo.call(this,_.nw_firm_id,c)){t.next=18;break}return t.abrupt(\"return\");case 18:if(Go[_.nw_firm_id]&&m.push(Go[_.nw_firm_id].bid.call(this,_,h,p,f)),m.length){t.next=21;break}return t.abrupt(\"return\",[]);case 21:return t.abrupt(\"return\",Promise.allSettled(m));case 22:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}var Xo,Qo,Jo,Zo,td={adProxyEvent:{onInit:function(){var t;if(!this.placementId)throw new Error(\"请传入广告位ID\");var e=\"\".concat(this.$page.name,\"/\").concat(this.placementId,\"/\").concat(null==this||null===(t=this._page)||void 0===t?void 0:t.id);if(j.call(this,\"global\",e)){var i=\"当前页面: \".concat(this.$page.name,\" 已存在广告位: \").concat(this.placementId,\"，同一页面中请勿使用相同广告位ID\");throw new Error(i)}N.call(this,\"global\",e,this.placementId),this.$watch(\"wfUnitIdsNeedRender\",\"checkWfCache\"),this.$on(\"proxyTkReport\",this.tkReportWatcher),this.$on(\"proxyAdLoad\",this.adLoadWatcher),this.$on(\"proxyAdShow\",this.adShowWatcher),this.$on(\"proxyAdClick\",this.adClickWatcher),this.$on(\"proxyAdClose\",this.adCloseWatcher),this.$on(\"proxyAdReward\",this.adRewardWatcher),this.$on(\"proxyAdError\",this.adErrorWatcher),this.handleAdInit()},onDestroy:function(){var t,e,i=\"\".concat(null===(t=this.$page)||void 0===t?void 0:t.name,\"/\").concat(this.placementId,\"/\").concat(null==this||null===(e=this._page)||void 0===e?void 0:e.id);N.call(this,\"global\",i,null);try{this.$off(\"proxyTkReport\",this.tkReportWatcher),this.$off(\"proxyAdLoad\",this.adLoadWatcher),this.$off(\"proxyAdShow\",this.adShowWatcher),this.$off(\"proxyAdClick\",this.adClickWatcher),this.$off(\"proxyAdClose\",this.adCloseWatcher),this.$off(\"proxyAdReward\",this.adRewardWatcher),this.$off(\"proxyAdError\",this.adErrorWatcher)}catch(t){}}},handleAdInit:(Jo=o(i().mark((function t(){var e;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e=\"lockLoad\",this.lock.load!==e){t.next=3;break}return t.abrupt(\"return\");case 3:return this.lock.load=e,this.wfAdapter=null,this.adxBidding=!1,this.hitUnitId=null,this.wfScheduler||(this.wfScheduler=new La),t.next=10,this.beforeLoad();case 10:return t.next=12,this.handleCreateAd();case 12:this.reportTkData(\"AD_LOAD\"),this.wfScheduler.load(this.unitList,{reqUgNum:this.reqUgNum}),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),[0,1].includes(this.format)&&this.initAdx(),[0,1,4].includes(this.format)&&this.initHb();case 17:case\"end\":return t.stop()}}),t,this)}))),function(){return Jo.apply(this,arguments)}),initAdx:function(){var t,e,i=this;if(null!==(t=this.adxList)&&void 0!==t&&t.length){var n=this.adxList[0],r={placementId:this.placementId,requestId:this.requestId,adxExt:this.apiData.adx_ext,exchR:(null===(e=this.apiData)||void 0===e||null===(e=e.callback)||void 0===e?void 0:e.exch_r)||1,unitId:n.unit_id,format:\"\"+this.format},a=this.apiData||{},o=a.t_g_id,d=a.gro_id,s=a.asid,l=a.hb_bid_timeout,c=void 0===l?6e4:l,u={hbBidTimeout:c,requestId:this.requestId,segmentId:d,trafficGroupId:o,asId:s};this.adxBidding=!0;var h=P(this.mergeConfig.filter,tt.ADX,n.unit_id);if(h){this.adxBidding=!1;var p=\"0\";9006===h?p=\"5\":9007===h&&(p=\"9\");var f={key:\"REQUEST_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:d,traffic_group_id:o,asid:s,msg:String(tt.ADX),msg1:String(n.unit_id),msg2:\"\",msg3:p,msg4:p,msg5:\"ADX广告源被过滤\",msg8:\"0\"};Va.call(this,f)}else this.adxBiddingTimeId=setTimeout((function(){i.adxBidding=!1}),c),this.emitWfUnitEvent(\"adUnitBiddingAttempt\",{unit:n}),go.call(this,r,n,u,this.wfScheduler).then((function(t){if(t.ecpm<=0)return i.emitWfUnitEvent(\"adUnitBiddingFail\",{unit:t,error:{code:22e3,msg:\"\"}}),!i.hbBidding&&i.wfScheduler.isFailed()&&i.adErrorWfEmpty(\"ADX无填充\"),i.adxBidding=!1,void(i.adxBiddingTimeId&&clearTimeout(i.adxBiddingTimeId));i.wfScheduler.merge([t]),i.wfUnitIdsNeedRender=i.wfScheduler.scheduler(),i.adxBidding=!1,i.adxBiddingTimeId&&clearTimeout(i.adxBiddingTimeId);var e={key:\"BID_MERGE_TO_WF\",unitid:i.placementId,requestid:i.requestId,groupid:d,traffic_group_id:o,asid:s,msg:\"66\",msg1:\"\"+t.unit_id,msg2:\"\"+t.ecpm,msg3:i.wfScheduler.isFailed()?\"3\":i.wfScheduler.isLoaded()?\"2\":\"1\",msg4:\"2\"};Va.call(i,e),i.emitWfUnitEvent(\"adUnitBiddingFilled\",{unit:t,unitIndex:i.wfScheduler.getIndex(t.unit_id)})}))}},initHb:function(){var t,e,i,n,r=this;if(null!==(t=this.hbList)&&void 0!==t&&t.length){this.hbBidding=!0;var a=this.apiData||{},o=a.t_g_id,d=a.gro_id,s=a.asid,l=a.hb_bid_timeout,c=void 0===l?6e4:l,u={hbBidTimeout:c,requestId:this.requestId,segmentId:d,trafficGroupId:o,asId:s},p={condition:{placementId:this.placementId,requestId:this.requestId,format:\"\"+this.format,exchRateC2u:(null===(e=this.apiData)||void 0===e?void 0:e.exch_rate_c2u)||1,accountCurrency:null!==(i=null===(n=this.apiData)||void 0===n||null===(n=n.callback)||void 0===n?void 0:n.acct_cy)&&void 0!==i?i:\"\",placementConfig:this.mergeConfig},strategy:u,scheduler:this.wfScheduler};this.hbBiddingTimeId=setTimeout((function(){r.hbBidding=!1}),c),this.hbList.forEach((function(t){p.hbUnit=t,r.emitWfUnitEvent(\"adUnitBiddingAttempt\",{unit:t});var e={};Ko.call(r,p).then((function(i){var n=[];if(i.map((function(t){\"fulfilled\"===t.status?n.push(t.value):t.reason&&(e={code:22e3,msg:h(t.reason)?t.reason:JSON.stringify(t.reason)})})),n.length<=0)return r.emitWfUnitEvent(\"adUnitBiddingFail\",{unit:t,error:e}),!r.adxBidding&&r.wfScheduler.isFailed()&&r.adErrorWfEmpty(\"HB无填充\"),r.hbBidding=!1,void(r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId));r.wfScheduler.merge(n),r.wfUnitIdsNeedRender=r.wfScheduler.scheduler(),r.hbBidding=!1,r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId),n.forEach((function(t){var e={key:\"BID_MERGE_TO_WF\",unitid:r.placementId,requestid:r.requestId,groupid:d,traffic_group_id:o,asid:s,msg:\"\"+t.nw_firm_id,msg1:\"\"+t.unit_id,msg2:\"\"+t.ecpm,msg3:r.wfScheduler.isFailed()?\"3\":r.wfScheduler.isLoaded()?\"2\":\"1\",msg4:\"2\"};Va.call(r,e),r.emitWfUnitEvent(\"adUnitBiddingFilled\",{unit:t,unitIndex:r.wfScheduler.getIndex(t.unit_id)})}))})).catch((function(){!r.adxBidding&&r.wfScheduler.isFailed()&&r.adErrorWfEmpty(\"HB无填充\"),r.hbBidding=!1,r.hbBiddingTimeId&&clearTimeout(r.hbBiddingTimeId)}))}))}},beforeLoad:(Qo=o(i().mark((function t(){var e,n,r=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,e=Date.now(),this.unitLoadStart=e,this.placementLoadStart=e,t.t0=String,t.next=7,J();case 7:t.t1=t.sent,this.requestId=(0,t.t0)(t.t1),this.requestIdCount++,n=4===this.format?5e3:3e5,this.timerId&&clearTimeout(this.timerId),this.timerId=setTimeout((function(){r.checkTimeout()}),this.mergeConfig.timeout>0?this.mergeConfig.timeout:n),t.next=17;break;case 15:t.prev=15,t.t2=t.catch(0);case 17:case\"end\":return t.stop()}}),t,this,[[0,15]])}))),function(){return Qo.apply(this,arguments)}),checkTimeout:function(){var t=this;if(this.wfScheduler){var e=this.wfScheduler.getStatusList(),i=[];e.forEach((function(t){[\"loading\",\"timeout\"].includes(t.status)&&i.push(t)}));var n=this.apiData||{},r=n.t_g_id,a=n.gro_id,o=n.asid;i.forEach((function(e){var i={key:\"REQUEST_FAILED\",unitid:t.placementId,requestid:t.requestId,groupid:a,traffic_group_id:r,asid:o,msg:String(e.nwFirmId),msg1:String(e.unitId),msg2:String(e.index),msg3:\"1\",msg4:\"19002\",msg5:\"\",msg8:\"\"};Va.call(t,i)}));this.adError({},{detail:{code:9002,msg:\"Load Timeout\"}})}},handleCreateAd:(Xo=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,_,g,y,I,b,k,w,x=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.isApiSuccess=!1,o=\"TOPON_AD_CACHE_PLACEMENT_\"+this.placementId,t.next=4,M.getItem(o,!1);case 4:if(t.t0=t.sent,t.t0){t.next=7;break}t.t0={};case 7:if(!v(d=t.t0)){t.next=10;break}return t.abrupt(\"return\",this.handleApiRequest());case 10:if(s=null!==(e=null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n?void 0:n.topon_sdk)&&void 0!==e?e:{},l=s.channelId,c=void 0===l?\"\":l,u=s.subChannelId,h=void 0===u?\"\":u,p=s.customParam,f=void 0===p?{}:p,_=s.placementCustomParam,g=c+\"/\"+h,y=O(f,void 0===_?{}:_),I=(new Date).getTime(),b=(null==d||null===(r=d.data)||void 0===r?void 0:r.ps_ct_max)||6048e5,k=(null==d||null===(a=d.data)||void 0===a?void 0:a.ps_ct_out)||0,(w=(null==d?void 0:d._request_timestamp)||0)<=0&&(w=d._ps_ct_timestamp-d.data.ps_ct),!(d._ps_ct_timestamp>I&&d._channel===g&&m(d._custom_param,y))){t.next=22;break}this.handleApiResponse(d),t.next=28;break;case 22:if(!(w+b<I)){t.next=26;break}return t.abrupt(\"return\",this.handleApiRequest());case 26:return setTimeout((function(){x.handleApiResponse(d)}),k),t.abrupt(\"return\",this.handleApiRequest());case 28:case\"end\":return t.stop()}}),t,this)}))),function(){return Xo.apply(this,arguments)}),handleApiRequest:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,m,g,y,I,b,k;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,a=null!==(e=null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n?void 0:n.topon_sdk)&&void 0!==e?e:{},o=a.channelId,d=void 0===o?\"\":o,s=a.subChannelId,l=void 0===s?\"\":s,c=a.customParam,u=void 0===c?{}:c,h=a.placementCustomParam,p=O(u,void 0===h?{}:h),f={placementId:this.placementId},t.next=6,to.call(this,f);case 6:if(m=t.sent,g=_(null==m?void 0:m.data)?JSON.parse(null==m?void 0:m.data):(null==m?void 0:m.data)||{},699===m.code&&(g={code:0,data:{ad_delivery_sw:0,ps_ct:864e5,ps_ct_out:0}}),!((null===(r=g)||void 0===r?void 0:r.code)>0||v(g))&&g){t.next=15;break}if(!this.isApiSuccess){t.next=12;break}return t.abrupt(\"return\");case 12:return y={detail:{code:9004,msg:\"接口服务错误\"}},this.adError({},y),t.abrupt(\"return\");case 15:I=(new Date).getTime(),b=d+\"/\"+l,g._ps_ct_timestamp=I+g.data.ps_ct,g._channel=b,g._custom_param=p,g._request_timestamp=I,this.handleApiResponse(g),k=\"TOPON_AD_CACHE_PLACEMENT_\"+this.placementId,M.setItem(k,g,!1),t.next=28;break;case 26:t.prev=26,t.t0=t.catch(0);case 28:case\"end\":return t.stop()}}),t,this,[[0,26]])})));return function(){return t.apply(this,arguments)}}(),handleApiResponse:function(t){var e;if(!this.isApiSuccess){this.isApiSuccess=!0,this.apiData=t.data;var i=function(t){if(!t)return[];var e=t.data,i=e.adx_list,n=void 0===i?[]:i,r=e.hb_list,a=void 0===r?[]:r,o=e.ug_list,d=void 0===o?[]:o,s=b(),l=b(\"hb\"),c=d.filter((function(t){return s.includes(t.nw_firm_id)}))||[];return{adxList:n,hbList:a.filter((function(t){return l.includes(t.nw_firm_id)}))||[],ugList:c}}(t);if(1!==(null===(e=this.apiData)||void 0===e?void 0:e.ad_delivery_sw)&&(i={}),this.adxList=i.adxList||[],this.hbList=i.hbList||[],this.unitList=i.ugList||[],this.adxList.length||this.unitList.length||this.hbList.length)return i;this.adErrorWfEmpty()}},checkWfCache:function(){if(this.wfScheduler){var t=this.wfScheduler.selecter();if(!v(t)){var e=t.unit,i=this.requestId;if(this.lock.adLoad!==i){this.lock.adLoad=i,this.timerId&&clearTimeout(this.timerId);try{this.$emit(\"adLoad\",{})}catch(t){console.error(\"error\",t.message);var n={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:e.unit_id,msg1:\"1\",msg2:\"adLoad回调错误\",msg3:this.handleGetErrMsg(t.message)};Va.call(this,n)}this.reportTkData(\"AD_LOAD_FILLED\",e)}}}},load:function(){this.wfScheduler.isExpired()&&(this.lock.load=\"\"),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(!0),this.adErrorList=[],this.handleAdInit()},isReady:function(){var t=this.apiData||{},e=t.t_g_id,i=t.gro_id,n=t.asid,r={key:\"IS_READY\",unitid:this.placementId,requestid:this.requestId,groupid:i,traffic_group_id:e,asid:n},a=this.wfScheduler.selecter();return v(a)?(console.error(\"wfAdapterInstance not exist\"),r.msg=\"0\",r.msg1=\"1\",r.msg2=\"\",r.msg3=\"\",r.msg4=\"\",r.msg5=\"\",Va.call(this,r),!1):(r.msg=\"1\",r.msg1=\"\",r.msg2=String(a.index),r.msg3=String(a.unitId),r.msg4=String(a.nwFirmId),r.msg5=\"\",Va.call(this,r),!0)},getAd:function(){var t;if(!this.isReady())return this.wfAdapter=null,null;if(!this.wfScheduler)return null;this.wfAdapter=this.wfScheduler.selecter();var i=this.wfAdapter,n=this.getWfAdapterInstance(i.itemId);if(v(n))return console.error(\"wfAdapterInstance not exist\"),{};this.wfScheduler.setShowed(i.unitId),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.lock.load=\"\",this.hitUnitId=i.unitId;var r={},a=null;n.getAd&&(r=n.getAd()||{}),n.getInstance&&(a=n.getInstance());var o=e(e({},i.context.emit),{},{ad:r,instance:a});if(null!==(t=this.$app)&&void 0!==t&&null!==(t=t.$def)&&void 0!==t&&null!==(t=t.topon_sdk)&&void 0!==t&&t.enhancedLoggingMode){var d=this.apiData||{},s=d.t_g_id,l=d.gro_id,c=d.asid,u={key:\"GET_AD\",unitid:this.placementId,requestid:this.requestId,groupid:l,traffic_group_id:s,asid:c,msg:String((null==o?void 0:o.nwFirmId)||0),msg1:String((null==o?void 0:o.unitId)||0),msg2:String((null==o?void 0:o.ecpm)||0)};Va.call(this,u)}return o},show:function(){try{var t=this.apiData||{},e=t.t_g_id,i=t.gro_id,n=t.asid,r={key:\"SHOW_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:i,traffic_group_id:e,asid:n,msg:\"1\"};if(v(this.wfAdapter))return console.error(\"wfAdapterInstance not exist\"),void Va.call(this,r);var a=this.wfAdapter,o=this.getWfAdapterInstance(a.itemId);if(v(o)){return this.adError({},{detail:{code:9005,msg:\"广告缓存已过期\"}}),void Va.call(this,r)}var d={unit_id:a.unitId,nw_firm_id:a.nwFirmId,ecpm:a.ecpm,bidTk:a.unit.bidTk};this.reportTkData(\"AD_SHOW\",d),null==o||o.show()}catch(t){console.error(\"call show error\",t)}},adLoad:function(t,i){var n,r,a,o=t.nw_cache_time,d=t.wfAdOption,s=void 0===d?{}:d,l=Date.now();this.placementLoadEnd=l;var c=this.getWfAdEmit(t);null!=i&&null!==(n=i.detail)&&void 0!==n&&n.nwUnitVersion&&(c.nwUnitVersion=i.detail.nwUnitVersion);var u=0;[\"1\",\"2\"].includes(null==s?void 0:s._type)&&(u=1),c.isHeaderBidding=u;var h={adapter:i,emit:e({isSelfRendering:null!==(r=null===(a=i.detail)||void 0===a?void 0:a.isSelfRendering)&&void 0!==r&&r},c)},p=l+o;this.wfScheduler.setCaching(t.unit_id,h,{expirationTime:p}),this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.emitWfUnitEvent(\"adUnitLoadFilled\",{unit:t})},adShow:function(t,e){this.wfScheduler.setShowed(t.unit_id),this.hitUnitId=t.unit_id,this.wfUnitIdsNeedRender=this.wfScheduler.scheduler(),this.lock.load=\"\";try{this.$emit(\"adShow\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"2\",msg2:\"adShow回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adClick:function(t,e){try{this.$emit(\"adClick\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"4\",msg2:\"adClick回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adClose:function(t,e){try{this.$emit(\"adClose\",e),this.hitUnitId=null}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"3\",msg2:\"adClose回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adReward:function(t,e){try{this.$emit(\"adReward\",e)}catch(e){console.error(\"error\",e.message);var i={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:t.unit_id,msg1:\"5\",msg2:\"adReward回调错误\",msg3:this.handleGetErrMsg(e.message)};Va.call(this,i)}},adError:function(t,e){var i,n,r,a,o=t.nw_firm_id,d=void 0===o?\"\":o,s=t.unit_id,l=t.wfIndex,c=null!==(i=null===(n=e.detail)||void 0===n?void 0:n.code)&&void 0!==i?i:void 0,u=rt.codeToEvent(d,c)||\"unknown\";9001===c?d===tt.BAIDU&&[1,3,4].includes(this.format)||d===tt.OPPO&&2===this.format?this.wfScheduler.setFailed(t.unit_id):this.wfScheduler.setTimeout(t.unit_id):\"loading\"!==u&&this.wfScheduler.setFailed(t.unit_id);var h=22e3,p=1*c;if(h=1e3<=p&&p<9e3?p+2e4:9e3<=p&&p<9999?p+1e4:22e3,\"loading\"!==u&&![9e3,9001,9003].includes(c)){var f,v,m=this.apiData||{},_=m.t_g_id,g=m.gro_id,y=m.asid,I=\"0\";9006===c?I=\"5\":9007===c?I=\"9\":9008===c&&(I=\"11\");var b={key:\"REQUEST_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:g,traffic_group_id:_,asid:y,msg:String(d),msg1:String(s),msg2:String(l),msg3:I,msg4:String(h),msg5:String(null!==(f=null==e||null===(v=e.detail)||void 0===v?void 0:v.msg)&&void 0!==f?f:e.msg),msg8:String(Date.now()-this.unitLoadStart)};Va.call(this,b)}if(this.isNeedEmitError(u)||this.isBusinessErrorCode(c)){var k,w,x=e.type?e:{};if(e.type){var S,T;x.detail=null!==(S=null==e?void 0:e.detail)&&void 0!==S?S:{},x.detail.code=h;var A={code:h,msg:null==e||null===(T=e.detail)||void 0===T?void 0:T.msg,unitId:s,nwFirmId:d};this.adErrorList.push(A),x.detail.errors=this.adErrorList}else{var E,C,D,L;x.msg=null!==(E=null==e||null===(C=e.detail)||void 0===C?void 0:C.msg)&&void 0!==E?E:e.msg,x.code=h;var O={code:h,msg:null!==(D=null==e||null===(L=e.detail)||void 0===L?void 0:L.msg)&&void 0!==D?D:e.msg,unitId:s,nwFirmId:d};this.adErrorList.push(O),x.errors=this.adErrorList}var R=this.requestId;if(this.lock.adError===R)return;this.lock.adError=R;try{this.$emit(\"adError\",x)}catch(t){console.error(\"error\",t.message);var P={key:\"CALLBACK_ERROR\",unitid:this.placementId,requestid:this.requestId,msg:s,msg1:\"6\",msg2:\"adError回调错误\",msg3:this.handleGetErrMsg(t.message)};Va.call(this,P)}this.lock.load=\"\",this.timerId&&clearTimeout(this.timerId);var U=this.apiData||{},$=U.t_g_id,N=U.gro_id,j=U.asid,F={key:\"LOAD_FAILED\",unitid:this.placementId,requestid:this.requestId,groupid:N,traffic_group_id:$,asid:j,msg:String(null!==(k=null==e||null===(w=e.detail)||void 0===w?void 0:w.msg)&&void 0!==k?k:e.msg),msg1:String(h)};Va.call(this,F)}else if(\"loading\"!==u){this.wfUnitIdsNeedRender=this.wfScheduler.scheduler();var B=(null==e?void 0:e.detail)||{};B.code=h,B.unitId=s,B.nwFirmId=d,this.adErrorList.push(B)}var W={code:h,msg:null!==(r=null==e||null===(a=e.detail)||void 0===a?void 0:a.msg)&&void 0!==r?r:e.msg};this.emitWfUnitEvent(\"adUnitLoadFail\",{unit:t,error:W})},adErrorWfEmpty:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"无广告源数据/广告位已关闭\",e={detail:{code:9003,msg:t}};this.adError({},e)},isNeedEmitError:function(t){return\"loading\"!==t&&(!this.adxBidding&&!this.hbBidding&&(\"show\"===t||this.wfScheduler.isFailed()))},isBusinessErrorCode:function(t){return[9002,19002,9003,19003,9004,19004,9005,19005].includes(t)},emitWfUnitEvent:function(t,e){var i=this||{},n=i.format,r=i.requestId,a=e.unit,o=void 0===a?{}:a,d=e.unitIndex,s=void 0===d?-1:d,l=e.isHeaderBidding,c=void 0===l?0:l,u=e.error,h=void 0===u?{}:u,p=o.wfAdOption,f=void 0===p?{}:p,v=this.getWfAdEmit(o)||{},m=v.ecpm,_=v.cyEcpm,g=v.unitId,y=v.unitLevel,I=v.nwFirmId,b=v.nwUnitId,k={format:n,requestId:r,abTestId:v.abTestId,segmentId:v.segmentId,unitId:g,nwFirmId:I,nwUnitId:b,ecpm:m,cyEcpm:_,isHeaderBidding:c,unitLevel:y,unitIndex:s,error:h};[19e3,19006,19007].includes(null==h?void 0:h.code)||this.isBusinessErrorCode(null==h?void 0:h.code)||([\"adUnitBiddingAttempt\",\"adUnitBiddingFail\"].includes(t)&&(k.ecpm=0,k.cyEcpm=0),([\"adUnitBiddingAttempt\",\"adUnitBiddingFilled\",\"adUnitBiddingFail\"].includes(t)||[\"1\",\"2\"].includes(null==f?void 0:f._type))&&(k.isHeaderBidding=1),this.$emit(t,k))},reportShow:function(){if(v(this.wfAdapter))console.error(\"wfAdapterInstance not exist\");else{var t=this.getWfAdapterInstance(this.wfAdapter.itemId);v(t)?console.error(\"wfAdapterInstance not exist\"):void 0!==t.reportShow&&t.reportShow()}},reportClick:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{reportToProvider:!0};if(v(this.wfAdapter))console.error(\"wfAdapterInstance not exist\");else{var e=this.getWfAdapterInstance(this.wfAdapter.itemId);v(e)?console.error(\"wfAdapterInstance not exist\"):void 0!==e.reportClick&&e.reportClick(t)}},getWfAdapterInstance:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return t<=0&&(t=this.wfScheduler.itemIdSeleter()),this.$child(this.placementId+\"/\"+t)},getWfAdOption:function(t){var e,i={};return null!=t&&t.content&&(i=JSON.parse(t.content)),i._unit_id=null==t?void 0:t.unit_id,i._nw_req_num=null==t?void 0:t.nw_req_num,i._nw_timeout=null!==(e=null==t?void 0:t.nw_timeout)&&void 0!==e?e:5e4,i._request_id=this.requestId,i},getWfAdExtra:function(t){var e,i,n,r,a;return{unit:{unit_id:t.unit_id,nw_firm_id:t.nw_firm_id,ecpm:t.ecpm,nw_cache_time:t.nw_cache_time,cy_ecpm:t.cy_ecpm,content:t.content,bidTk:t.bidTk||{}},trafficGroupId:null===(e=this.apiData)||void 0===e?void 0:e.t_g_id,segmentId:null===(i=this.apiData)||void 0===i?void 0:i.gro_id,format:null===(n=this.apiData)||void 0===n?void 0:n.format,asId:null===(r=this.apiData)||void 0===r?void 0:r.asid,adSourceId:t.unit_id,nwFirmId:t.nw_firm_id,ecpm:t.ecpm,channelId:null===(a=this.$app)||void 0===a||null===(a=a.$def)||void 0===a||null===(a=a.topon_sdk)||void 0===a?void 0:a.channelId,placementId:this.placementId,bidTk:t.bidTk||{}}},getWfAdEmit:function(t){var e=t.ecpm,i=t.cy_ecpm,n=t.ecpm_level,r=t.unit_id,a=t.nw_firm_id,o=t.content,d=void 0===o?\"{}\":o,s=this.apiData||{},l=s.t_g_id,c=s.gro_id,u=r,h=a,p=JSON.parse(d),f=this.format;return{ecpm:e,cyEcpm:i,unitId:u,unitLevel:n,nwFirmId:h,nwUnitId:p[it[h]]||\"\",customExt:p.custom_ext||null,format:f,abTestId:l,segmentId:c}},handleReportTk:function(t,e){var i,n,r=e.detail.type,a=null!==(i=null===(n=e.detail)||void 0===n?void 0:n.ad)&&void 0!==i?i:null;\"AD_REQUEST\"===r&&(this.emitWfUnitEvent(\"adUnitLoadAttempt\",{unit:t}),this.unitLoadStart=Date.now()),\"AD_REQUEST_FILLED\"===r&&(this.unitLoadEnd=Date.now()),this.reportTkData(r,t,a)},reportTkData:function(t){var e,i,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=this||{},d=o.placementLoadStart,s=o.placementLoadEnd,l=o.unitLoadStart,c=o.unitLoadEnd,u=o.placementId,h=o.requestId,p=o.format,f=o.reqUgNum,v=o.apiData,m=void 0===v?{}:v,_=m.t_g_id,g=m.gro_id,y=m.asid,I=m.p_c,b=void 0===I?{}:I,k=s-d,w=c-l,x={placementId:u,requestId:h,logType:t,trafficGroupId:_,segmentId:g,asId:y,adSourceId:r.unit_id||0,nwFirmId:r.nw_firm_id||0,ecpm:r.ecpm||0,sPty:r.s_pty||0,format:p,placementLoadTime:k,unitFilledTime:w,adId:null!==(e=null==a?void 0:a.adId)&&void 0!==e?e:\"\",reqUgNum:f,pC:b,bidTk:r.bidTk||{},wfType:null==r||null===(i=r.wfAdOption)||void 0===i?void 0:i._type},S=Object.values(et);[].concat(S,[tt.ADX]).includes(r.nw_firm_id)&&null!==(n=r.bidTk)&&void 0!==n&&n.bidFilledTime&&(x.unitFilledTime=r.bidTk.bidFilledTime),so.call(this,x)},handleGetErrMsg:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;return\"unlimited\"===e||isNaN(e)?t:t.slice(0,e)},hide:function(){var t=this.wfScheduler.selecter(\"STATUS_SHOWED\");if(t){var e=this.getWfAdapterInstance(t.itemId);null!=e&&e.hide&&(e.hide(),this.hitUnitId=null)}else console.error(\"hide error, wfAdapterInstance not exist\")},tkReportWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.handleReportTk(i,n)},adLoadWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adLoad(i,n)},adShowWatcher:function(t){var e=t.detail.unit;this.adShow(e,{})},adClickWatcher:function(t){var e=t.detail.unit;this.adClick(e,{})},adCloseWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adClose(i,n)},adRewardWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adReward(i,n)},adErrorWatcher:function(t){var e=t.detail,i=e.unit,n=e.adapter;this.adError(i,n)},getDownloadStatus:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(v(e))console.error(\"wfAdapterInstance not exist\");else if(e.getDownloadStatus)return e.getDownloadStatus()}},getDownloadProgress:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(v(i))console.error(\"wfAdapterInstance not exist\");else if(i.getDownloadProgress)return i.getDownloadProgress()}},subscribeDownloadStatus:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(!v(i)&&i.subscribeDownloadStatus)return i.subscribeDownloadStatus(t)}},unsubscribeDownloadStatus:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.unsubscribeDownloadStatus)return e.unsubscribeDownloadStatus()}},subscribeDownloadProgress:function(t){if(this.wfAdapter){var e=this.wfAdapter,i=this.getWfAdapterInstance(e.itemId);if(!v(i)&&i.subscribeDownloadProgress)return i.subscribeDownloadProgress(t)}},unsubscribeDownloadProgress:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.unsubscribeDownloadProgress)return e.unsubscribeDownloadProgress()}},showAppDetailPage:function(){if(this.wfAdapter){var t=this.wfAdapter,e=this.getWfAdapterInstance(t.itemId);if(!v(e)&&e.showAppDetailPage)return e.showAppDetailPage()}}},ed={landingContainer:{marginTop:\"0\",flex:1,flexDirection:\"column\"},landingWeb:{flex:1},loadingContainer:{flex:1,flexDirection:\"column\",alignItems:\"center\"},loadingText:{fontSize:\"30px\",color:\"#787878\",textAlign:\"center\"},landingBar:{width:\"100%\",height:\"100px\",backgroundColor:\"#f7f6f6\",justifyContent:\"center\",alignItems:\"center\"},landingBtn:{height:\"50px\",width:\"50px\",padding:\"5px\",marginLeft:\"20px\",fontSize:\"32px\",fontWeight:\"bolder\"},landingTitle:{textAlign:\"center\",fontSize:\"40px\",fontWeight:\"bolder\",width:\"100%\",color:\"#333\"}},id={adProxyEvent:{onInit:function(){this.adStyle=ed;var t=this.$app.$def.manifest.display.pages;t&&t[\"TopOn/AdLanding\"]&&t[\"TopOn/AdLanding\"].fullScreen&&!t[\"TopOn/AdLanding\"].titleBar&&(this.isFullScreen=!0)},onPageStart:function(t){},onPageFinish:function(t){},onTitleReceive:function(t){var e=this;this.$page.setTitleBar({text:t.title}),this.title=t.title,setTimeout((function(){e.isLoading=!1}),10)},onError:function(t){},onProgress:function(t){},onBack:function(t){S().router.back()}}},nd=[{name:\"onSubmit\",type:\"submit\",label:\"提交\"}],rd=[{label:\"异常广告\",parentId:\"1\",groups:[{id:\"11\",children:[{label:\"广告卡顿\",value:\"1\"},{label:\"黑白屏\",value:\"2\"},{label:\"无法关闭\",value:\"3\"}]}]},{label:\"举报广告\",parentId:\"2\",groups:[{id:\"22\",children:[{label:\"诱导点击\",value:\"4\"},{label:\"违法违规\",value:\"5\"},{label:\"虚假欺诈\",value:\"6\"}]},{id:\"23\",children:[{label:\"内容抄袭\",value:\"7\"},{label:\"内容低俗\",value:\"8\"},{label:\"不感兴趣\",value:\"9\"}]}]}],ad={adProxyEvent:{onInit:function(){var t=this.$app.$def.manifest.display.pages;t&&t[\"TopOn/AdReward\"]&&t[\"TopOn/AdReward\"].fullScreen&&!t[\"TopOn/AdReward\"].titleBar&&(this.isFullScreen=!0),this.setInitialData(),this.getAdDataCache()},onCheck:function(t){var e={msg3:t.detail.data.value,msg4:\"0\"};this.feedbackSubmitError=!1,this.submitFeedback(e),this.hideDialog()},onInput:function(t){this.feedbackInputValue=t.detail.data||\"\",t.detail.data&&(this.feedbackSubmitError=!1)},onSubmit:function(){var t=this.feedbackInputValue;if(t){var e={msg3:\"0\",msg4:t};this.submitFeedback(e),this.hideDialog()}else this.feedbackSubmitError=!0},onShowDialog:function(){this.showDialog()},onHideDialog:function(){this.hideDialog()},onTouchStart:function(t){var i=t.timestamp||Date.now(),n=e(e({},t.detail.detail.touches[0]||{}),{},{timestamp:i});this.dispatchRewardedVideoEvent(\"adTouch\",{type:\"start\",data:n})},onTouchMove:function(t){},onTouchEnd:function(t){var i=t.timestamp||Date.now(),n=e(e({},t.detail.detail.changedTouches[0]||{}),{},{timestamp:i});this.dispatchRewardedVideoEvent(\"adTouch\",{type:\"end\",data:n})},onAdClick:function(t){this.dispatchRewardedVideoEvent(\"adClick\",t)},onAdClose:function(t){if(this.onVideoPause(),this.currentCountdown){var e=S().prompt,i=this;e.showDialog({message:\"观看视频满\".concat(this.countdownInitial,\"秒即可获得激励，确定要离开吗？\"),buttons:[{text:\"继续观看视频\"},{text:\"放弃激励离开\"}],success:function(t){\"1\"==t.index?(i.dispatchRewardedVideoEvent(\"adClose\",{reward:!1}),i.onBack()):i.onVideoContinue()},cancel:function(){i.onVideoContinue()},fail:function(){i.onVideoContinue()}})}else this.dispatchRewardedVideoEvent(\"adClose\",{reward:!0}),this.onBack()},onAdShow:(Zo=o(i().mark((function t(e){var n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=this.option._request_id+\"/\"+this.adUnitId,this.lockAdAppear!==n){t.next=3;break}return t.abrupt(\"return\");case 3:return this.lockAdAppear=n,r=Date.now(),t.next=7,this.getBoundingClientRect();case 7:a=t.sent,o=Date.now(),d=o-r,this.dispatchRewardedVideoEvent(\"adImpression\",{clientRect:a,diff:d});case 11:case\"end\":return t.stop()}}),t,this)}))),function(t){return Zo.apply(this,arguments)}),onPause:function(){this.onVideoPause()},onContinue:function(){this.onVideoContinue()}},submitFeedback:function(t){this.dispatchRewardedVideoEvent(\"adFeedback\",t),this.feedbackSubmited=!0},showDialog:function(){this.feedbackDialogVisible=!0,this.onVideoPause()},hideDialog:function(){this.feedbackDialogVisible=!1,this.onVideoContinue()},setInitialData:function(){this.feedbackDialogButtons=nd,this.feedbackSelectOptions=rd},getAdDataCache:function(){var t,e,i,n=\"\".concat(this.plId,\"/\").concat(this.adUnitId),r=j.call(this,\"adxRewardedVideo\",n);this.adData=null!==(t=null==r?void 0:r.adData)&&void 0!==t?t:{},this.adStyle=null!==(e=null==r?void 0:r.adStyle)&&void 0!==e?e:{},this.option=null!==(i=null==r?void 0:r.option)&&void 0!==i?i:{};var a=Number(this.option._countdown);this.countdownInitial=a,this.currentCountdown=a,this.onCountdown(this.currentCountdown)},onCountdown:function(t){var e=this;if(t){var i=t;this.currentCountdown=i,this.countdownTimerId&&clearInterval(this.countdownTimerId),this.countdownTimerId=setInterval((function(){i--,e.currentCountdown=i,i<1&&e.onVideoFinish()}),1e3)}},onVideoFinish:function(){this.onVideoPause()},onVideoPause:function(){this.countdownTimerId&&clearInterval(this.countdownTimerId)},onVideoContinue:function(){this.onCountdown(this.currentCountdown)},onBack:function(){var t=S().router;this.lockAdAppear=\"\",t.back()},getBoundingClientRect:function(){var t=this.$element(\"top-on-adx-container-\".concat(this.adUnitId));return t?new Promise((function(e){t.getBoundingClientRect({success:function(t){return e(t)},fail:function(){return e({})}})})):{}},dispatchRewardedVideoEvent:function(t){var e,i=\"\".concat(this.plId,\"/\").concat(this.adUnitId);if(null!==(e=this.$app.$def.topon_sdk)&&void 0!==e&&e.rewardedVideo[i]){for(var n,r,a=arguments.length,o=new Array(a>1?a-1:0),d=1;d<a;d++)o[d-1]=arguments[d];null===(n=this.$app.$def.topon_sdk)||void 0===n||(r=n.rewardedVideo[i])[t].apply(r,o)}}},od={containerStyle:{flexDirection:\"column\",width:\"100%\",paddingTop:\"10px\",paddingRight:\"10px\",paddingBottom:\"10px\",paddingLeft:\"10px\"},contentStyle:{flexDirection:\"column\",width:\"100%\"},mainStyle:{flex:1,flexDirection:\"column\"},headerStyle:{flex:1,flexDirection:\"column\"},footerStyle:{flexDirection:\"row\"},imgStyle:{width:\"100%\",overflow:\"hidden\",borderRadius:\"10px\",justifyContent:\"flex-end\",position:\"relative\"},imgPropertiesStyle:{width:\"100%\",objectFit:\"fill\"},titleStyle:{padding:\"10px\",lineHeight:\"40px\",fontSize:\"36px\",fontWeight:700,color:\"rgb(44, 62, 88)\",textOverflow:\"ellipsis\",lines:\"1\"},descStyle:{marginRight:\"20px\",marginTop:\"12px\",fontSize:\"24px\",color:\"rgb(44, 62, 88)\",textOverflow:\"ellipsis\",lines:\"1\",display:\"none\"},buttonStyle:{width:\"100%\",paddingTop:\"20px\",paddingRight:\"20px\",paddingBottom:\"20px\",paddingLeft:\"20px\",borderRadius:\"20px\",backgroundColor:\"#ff9e2b\",textAlign:\"center\",fontSize:\"24px\",color:\"#FFFFFF\"},closeStyle:{closeContainer:{position:\"absolute\",right:\"15px\",top:\"15px\",zIndex:\"100\",alignItems:\"center\",justifyContent:\"center\",transform:\"translateY(0px)\"},closeClickArea:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"transparent\"},closeBtn:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"rgba(0, 0, 0, .4)\"}},logoStyle:{logoContainer:{height:\"30px\",alignItems:\"center\",alignSelf:\"flex-end\",justifyContent:\"flex-end\",marginBottom:\"4px\",marginRight:\"4px\",backgroundColor:\"rgba(153, 153, 153, 0.8)\"},logoImg:{width:\"70px\",marginRight:\"2px\",display:\"flex\"}}},dd={2:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row-reverse\"},headerStyle:{justifyContent:\"space-between\"},footerStyle:{justifyContent:\"flex-end\",alignItems:\"center\"},imgStyle:{width:\"175px\",height:\"100px\",marginLeft:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\",lineHeight:\"36px\"},descStyle:{width:\"100%\",marginRight:\"0\",marginTop:\"0px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\",backgroundColor:\"transparent\",borderWidth:\"1px\",borderColor:\"rgb(44, 62, 88)\",borderStyle:\"solid\",color:\"rgb(44, 62, 88)\"},closeStyle:{closeBtn:{width:\"32px\",height:\"32px\",color:\"rgb(44, 62, 88)\",borderRadius:\"0\",backgroundColor:\"transparent\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}},3:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row\"},imgStyle:{width:\"175px\",height:\"100px\",marginRight:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\",lineHeight:\"36px\"},descStyle:{marginRight:\"0px\",marginTop:\"12px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\"},mainStyle:{flexDirection:\"row\",justifyContent:\"flex-start\",alignItems:\"center\"},footerStyle:{alignSelf:\"center\",justifyContent:\"flex-end\"},closeStyle:{closeContainer:{top:\"0px\",right:\"0px\"},closeBtn:{width:\"32px\",height:\"32px\",backgroundColor:\"rgba(0, 0, 0, .4)\",borderRadius:\"0\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}},4:{containerStyle:{paddingTop:\"0px\",paddingBottom:\"0px\"},contentStyle:{flexDirection:\"row\"},imgStyle:{width:\"315px\",height:\"180px\",marginRight:\"20px\"},imgPropertiesStyle:{height:\"100%\"},titleStyle:{padding:\"0px\",fontSize:\"30px\"},descStyle:{marginRight:\"0px\",display:\"flex\"},buttonStyle:{width:\"auto\",paddingTop:\"8px\",paddingBottom:\"8px\"},footerStyle:{justifyContent:\"flex-end\"},closeStyle:{closeContainer:{top:\"0px\",right:\"0px\"},closeBtn:{width:\"32px\",height:\"32px\",backgroundColor:\"rgba(0, 0, 0, .4)\",borderRadius:\"0\"},closeClickArea:{width:\"32px\",height:\"32px\",borderRadius:\"0\"}}}};function sd(t){var i,n=t.name,a=t.proxyName,o=void 0===a?null:a,d=t.params,s=void 0===d?{}:d,l=t.proxyParams,c=void 0===l?{}:l;try{if(null==this||!this.$dispatch||null==this||!this.adExtra)return;var u=o||\"proxy\".concat((i=n).charAt(0).toUpperCase()+i.slice(1)),h=JSON.parse(function(t){var e={};for(var i in t)t.hasOwnProperty(i)&&\"object\"!=r(t[i])&&\"function\"!=typeof t[i]&&(e[i]=t[i]);return JSON.stringify(e)}(this.adExtra.unit));this.$dispatch(u,e({unit:h,adapter:{detail:e({},s)}},c))}catch(t){}}function ld(){var t=this;if(null!=this&&this.adOption){var e=this.adOption,i=e._nw_timeout,n=e._unit_id;cd.call(this),this.timerId=setTimeout((function(){t.adError({code:9001,msg:\"unitId: \".concat(n,\" 超时\")})}),i)}}function cd(t){var e=t||(null==this?void 0:this.timerId)||null;e&&clearTimeout(e)}function ud(t,e){if(!t)return e;if(!dd[t])return e;var i=$.call(this,e,dd[t],!1);return\"2\"===t&&delete i.closeStyle.closeContainer,i}var hd,pd,fd,vd={adProxyEvent:{onInit:(fd=o(i().mark((function t(){var e,n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(a=P(this.adConfig.filter,tt.ADX,this.adOption._unit_id))){t.next=4;break}return this.adError({code:a,msg:\"该广告源被过滤\"}),t.abrupt(\"return\");case 4:if(ld.call(this),this.handleAdInit(),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\"),v(null==this||null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.store)||void 0===n||null===(n=n.device)||void 0===n?void 0:n.info)){t.next=11;break}t.t0=null==this||null===(r=this.$app)||void 0===r||null===(r=r.$def)||void 0===r||null===(r=r.topon_sdk)||void 0===r||null===(r=r.store)||void 0===r||null===(r=r.device)||void 0===r?void 0:r.info,t.next=17;break;case 11:return t.next=13,H.getInfo();case 13:if(t.t1=t.sent,t.t1){t.next=16;break}t.t1={};case 16:t.t0=t.t1;case 17:o=t.t0,this.deviceInfoCache=o;case 19:case\"end\":return t.stop()}}),t,this)}))),function(){return fd.apply(this,arguments)}),onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t;this.lockAdAppear=\"\";var e=Io.call(this,this.adExtra.placementId),i=null!==(t=null==e?void 0:e.offer_data)&&void 0!==t?t:{};sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.adLoad(i)},show:function(){if(this.ready){var t=(this.adExtra||{}).placementId,e=void 0===t?\"\":t,i=Io.call(this,e);if(Date.now()>i._expirationTime)return this.adError({code:1101,msg:\"广告已过期，请重新获取广告或刷新广告\"}),void bo.call(this,e,{});this.displayed=!0}},adLoad:function(t){var e,i;if(null!=t&&t.seatbid&&null!=t&&null!==(e=t.seatbid)&&void 0!==e&&e.length){this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(i=null==t?void 0:t.seatbid)&&void 0!==i?i:[],sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this);var n=ud.call(this,this.templateId,od),r=U.call(this,this.adConfig.style),a=U.call(this,n),o=$.call(this,a,r);this.adStyle=o,this.updateCloseStyle()}else{this.adError({code:2e3,msg:\"TopOn Adx广告服务无数据返回\"})}},updateCloseStyle:function(){var t,e,i=null!==(t=null===(e=this.currentAd)||void 0===e||null===(e=e.ctrl)||void 0===e?void 0:e.ft_cl_sz)&&void 0!==t?t:1;if(1!==i){var n={1:1,2:1.5,3:.75,4:.5},r=this.adStyle.closeStyle.closeBtn.width.match(/\\d+/g)[0];if(this.adStyle.closeStyle.closeClickArea.width=r*n[i]+\"px\",this.adStyle.closeStyle.closeClickArea.height=r*n[i]+\"px\",n[i]>1){var a=r*n[i]/2-r/2+\"px\";this.adStyle.closeStyle.closeContainer.transform=\"translateY(-\".concat(a,\")\")}}},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){var e=this;sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}),this.handleNotice(\"click\"),this.noticeSucceed=!1,this.noticeFailed=!1;var i=S(),n=i.router,r=i.pkg,a=this||{},o=a.adExtra,d=void 0===o?{}:o,s=a.currentAd,l=void 0===s?{}:s,c=a.adOption,u=void 0===c?{}:c,h=d.placementId,p=void 0===h?\"\":h,f=l.deeplink,v=void 0===f?\"\":f,m=l.oid,_=l.click_u,g=void 0===_?\"\":_,y=l.link_type,I=l.pkg,b=void 0===I?\"\":I;if(v)return this.handleNotice(\"dp_start\"),void r.hasInstalled({package:b,success:function(t){if(t.result){var i,r,a;e.handleNotice(\"app_install\"),n.push({uri:v}),e.onHideCallback=e.subscribeAppHideCallback.bind(e),e.onShowCallback=e.handleDeepLinkFailed.bind(e);var o={once:!0};null==e||null===(i=e.$app)||void 0===i||null===(i=i.$def)||void 0===i||null===(i=i.topon_sdk)||void 0===i||null===(i=i.event)||void 0===i||null===(i=i.deeplink)||void 0===i||i.subscribe(\"app-on-hide\",e.onHideCallback,o),null==e||null===(r=e.$app)||void 0===r||null===(r=r.$def)||void 0===r||null===(r=r.topon_sdk)||void 0===r||null===(r=r.event)||void 0===r||null===(r=r.deeplink)||void 0===r||r.subscribe(\"app-on-show\",e.onShowCallback,o),\"vivo\"==(null==e||null===(a=e.deviceInfoCache)||void 0===a||null===(a=a.brand)||void 0===a?void 0:a.toLowerCase())&&(e.failTimeId&&clearTimeout(e.failTimeId),e.failTimeId=setTimeout((function(){e.noticeSucceed||e.handleDeepLinkFailed()}),3e3))}else{e.handleNotice(\"app_uninstall\"),e.handleNotice(\"dp_uninst_fail\");var d={key:\"DEEPLINK_RESULT\",unitid:p,requestid:u._request_id,msg:\"\"+m,msg1:\"2\",msg2:\"\"+g,msg3:\"0\",msg4:\"1\",msg7:\"0\"};Va.call(e,d),n.push({uri:\"TopOn/AdLanding\",params:{url:g}})}},fail:function(t,i){e.handleNotice(\"dp_uninst_fail\");var r={key:\"DEEPLINK_RESULT\",unitid:p,requestid:u._request_id,msg:\"\"+m,msg1:\"2\",msg2:\"\"+g,msg3:\"0\",msg4:\"1\",msg7:\"0\"};Va.call(e,r),n.push({uri:\"TopOn/AdLanding\",params:{url:g}})}});2===y&&n.push({uri:g}),3===y&&n.push({uri:\"TopOn/AdLanding\",params:{url:g}})},adClose:function(t){this.displayed=!1,this.adDestroy=!0,sd.call(this,{name:\"adClose\"}),this.validityTimeId&&clearTimeout(this.validityTimeId)},adError:function(t){var i=(this||{}).adOption,n=void 0===i?{}:i,r=n._request_id+\"/\"+n._unit_id;if(this.lockAdError!==r){this.lockAdError=r,this.ready=!1;var a=e(e({},t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code});delete a.errCode,delete a.errMsg,sd.call(this,{name:\"adError\",params:a}),cd.call(this)}},adAppear:(pd=o(i().mark((function t(){var e,n,r,a,o,d;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=(e=this||{}).adOption,r=void 0===n?{}:n,a=e.adExtra,o=void 0===a?{}:a,d=r._request_id+\"/\"+r._unit_id,this.lockAdAppear!==d){t.next=4;break}return t.abrupt(\"return\");case 4:this.lockAdAppear=d,bo.call(this,o.placementId,{}),this.isAdExposureValid(),this.reportBidWinDa();case 8:case\"end\":return t.stop()}}),t,this)}))),function(){return pd.apply(this,arguments)}),reportBidWinDa:function(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=void 0===n?{}:n,a=t.currentAd,o=void 0===a?{}:a,d=r.placementId,s=r.trafficGroupId,l=r.segmentId,c=r.asId,u=r.nwFirmId,h=r.ecpm,p=r.bidTk,f={key:\"BID_WIN\",unitid:d,requestid:i._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(i._unit_id),msg2:\"\",msg3:\"\",msg4:\"\"+o.dsp_id,msg5:\"\"+o.oid,msg6:\"1\",msg7:p.tpBidId,msg8:\"\"+h,msg9:\"\"};Va.call(this,f)},isAdExposureValid:(hd=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=(n=this||{}).adExtra,a=void 0===r?{}:r,o=n.currentAd,d=void 0===o?{}:o,s=Date.now(),t.next=4,this.getBoundingClientRect();case 4:if(l=t.sent,this.clientRect=l,c=[1,3].includes(a.format)?0:100,null!=d&&null!==(e=d.ctrl)&&void 0!==e&&e.shm_t&&(c=d.ctrl.shm_t),u=c,h=F.call(this,l,this.deviceInfoCache),p=Date.now(),c>(f=p-s)&&(u=c-f),c<f&&(u=0),h>.02){t.next=20;break}return console.error(\"ADX广告无效展示\"),_={ratio:h,clientRect:l,deviceInfo:{screenWidth:null===(v=this.deviceInfoCache)||void 0===v?void 0:v.screenWidth,screenHeight:null===(m=this.deviceInfoCache)||void 0===m?void 0:m.screenHeight}},this.reportInvalidImpressionDa(_),t.abrupt(\"return\");case 20:this.validityTimeId&&clearTimeout(this.validityTimeId),this.validityTimeId=setTimeout((function(){g.adDestroy?console.error(\"ADX广告无效展示\"):(g.adShow(),g.handleNotice(\"nurl\"),sd.call(g,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}}),g.handleNotice(\"imp\"),g.handleNotice(\"burl\"))}),u);case 22:case\"end\":return t.stop()}}),t,this)}))),function(){return hd.apply(this,arguments)}),handleNotice:function(t){var e,i=(this.currentAd||{}).tk,n=void 0===i?{}:i;if(n[t]&&null!==(e=n[t])&&void 0!==e&&e.length){var r=this.getMacroData();ko.call(this,n[t],r)}},adTouchStart:function(t){var i=t.timestamp||Date.now(),n=t.detail.touches[0]||{};this.startPoint=e(e({},n),{},{timestamp:i})},adTouchMove:function(t){},adTouchEnd:function(t){var i=t.timestamp||Date.now(),n=t.detail.changedTouches[0]||{};this.endPoint=e(e({},n),{},{timestamp:i})},getBoundingClientRect:function(){var t=this.$element(\"top-on-adx-container-\".concat(this.adOption._unit_id));return t?new Promise((function(e,i){t.getBoundingClientRect({success:function(t){return e(t)},fail:function(){return e({})}})})):{}},getMacroData:function(){var t,e,i,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this.clientRect,y=this.startPoint,I=void 0===y?{}:y,b=this.endPoint,k=void 0===b?{}:b,w=this.currentAd,x=void 0===w?{}:w,S={down_x:null!==(t=null==I?void 0:I.clientX)&&void 0!==t?t:\"-999\",down_y:null!==(e=null==I?void 0:I.clientY)&&void 0!==e?e:\"-999\",up_x:null!==(i=null==k?void 0:k.clientX)&&void 0!==i?i:\"-999\",up_y:null!==(n=null==k?void 0:k.clientY)&&void 0!==n?n:\"-999\"},T={down_x:null!==(r=null==I?void 0:I.offsetX)&&void 0!==r?r:\"-999\",down_y:null!==(a=null==I?void 0:I.offsetY)&&void 0!==a?a:\"-999\",up_x:null!==(o=null==k?void 0:k.offsetX)&&void 0!==o?o:\"-999\",up_y:null!==(d=null==k?void 0:k.offsetY)&&void 0!==d?d:\"-999\"};return{\"{__WIDTH__}\":null!==(s=null==g?void 0:g.width)&&void 0!==s?s:\"\",\"{__HEIGHT__}\":null!==(l=null==g?void 0:g.height)&&void 0!==l?l:\"\",\"{__DOWN_X__}\":null!==(c=null==I?void 0:I.clientX)&&void 0!==c?c:\"\",\"{__DOWN_Y__}\":null!==(u=null==I?void 0:I.clientY)&&void 0!==u?u:\"\",\"{__UP_X__}\":null!==(h=null==k?void 0:k.clientX)&&void 0!==h?h:\"\",\"{__UP_Y__}\":null!==(p=null==k?void 0:k.clientY)&&void 0!==p?p:\"\",\"{__RE_DOWN_X__}\":null!==(f=null==I?void 0:I.offsetX)&&void 0!==f?f:\"-999\",\"{__RE_DOWN_Y__}\":null!==(v=null==I?void 0:I.offsetY)&&void 0!==v?v:\"-999\",\"{__RE_UP_X__}\":null!==(m=null==k?void 0:k.offsetX)&&void 0!==m?m:\"-999\",\"{__RE_UP_Y__}\":null!==(_=null==k?void 0:k.offsetY)&&void 0!==_?_:\"-999\",\"{__TS__}\":I.timestamp/1e3,\"{__TS_MSEC__}\":I.timestamp,\"{__END_TS__}\":k.timestamp/1e3,\"{__END_TS_MSEC__}\":k.timestamp,\"{ABSOLUTE_COORD}\":S,\"{RELATIVE_COORD}\":T,\"{__DPLINK_TYPE__}\":x.deeplink?1:2}},handleDeepLinkSucceed:function(t){var e;this.handleNotice(\"dp_succ\"),this.noticeSucceed=!0,this.failTimeId&&clearTimeout(this.failTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"1\",msg4:\"0\",msg7:\"0\"};Va.call(this,p)},handleDeepLinkFailed:function(t){var e;this.handleNotice(\"dp_inst_fail\"),this.noticeFailed=!0,this.succeedTimeId&&clearTimeout(this.succeedTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-hide\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"0\",msg4:\"0\",msg7:\"0\"};Va.call(this,p)},subscribeAppHideCallback:function(){var t,e=this,i=null==this||null===(t=this.deviceInfoCache)||void 0===t||null===(t=t.brand)||void 0===t?void 0:t.toLowerCase();[\"oppo\",\"xiaomi\",\"redmi\"].includes(i)?(this.succeedTimeId&&clearTimeout(this.succeedTimeId),this.succeedTimeId=setTimeout((function(){e.noticeFailed||e.handleDeepLinkSucceed()}),1e3)):this.handleDeepLinkSucceed()},reportInvalidImpressionDa:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=this||{},n=i.adOption,r=void 0===n?{}:n,a=i.adExtra,o=void 0===a?{}:a,d=i.currentAd,s=void 0===d?{}:d,l=o.placementId,c=o.trafficGroupId,u=o.segmentId,h=o.asId;o.nwFirmId,o.ecpm,o.bidTk;var p={key:\"ADX_IMP_INVALID\",unitid:l,requestid:r._request_id,groupid:u,traffic_group_id:c,asid:h,msg:s.dsp_id,msg1:String(r._unit_id),msg2:\"\"+s.oid,msg3:\"2\",msg4:null!==(t=null==e?void 0:e.msg4)&&void 0!==t?t:\"2\",msg5:JSON.stringify(e)};Va.call(this,p)}},md={containerStyle:{flexDirection:\"column\",width:\"100%\",height:\"100%\"},contentStyle:{flexDirection:\"column\",width:\"100%\",height:\"100%\",position:\"relative\",justifyContent:\"flex-end\"},imgStyle:{justifyContent:\"center\",width:\"100%\",height:\"100%\",alignItems:\"center\"},imgPropertiesStyle:{width:\"100%\",objectFit:\"fill\"},iconStyle:{width:\"80px\",height:\"80px\",marginRight:\"20px\"},iconPropertiesStyle:{width:\"100%\",borderRadius:\"10px\",height:\"100%\"},videoStyle:{justifyContent:\"center\",width:\"100%\",height:\"100%\",alignItems:\"center\"},videoPropertiesStyle:{width:\"100%\",objectFit:\"cover\",height:\"100%\"},downloadStyle:{container:{width:\"100%\"},panel:{width:\"100%\",flexDirection:\"column\",padding:\"20px\",filter:\"blur(180px)\",background:{values:[{type:\"linearGradient\",directions:[\"180deg\"],values:[\"rgba(0,0,0,0)\",\"rgba(0,0,0,0.8)\"]}]}},title:{flexDirection:\"column\"},titleText:{lineHeight:\"38px\",fontSize:\"36px\",fontWeight:700,color:\"rgba(255, 255, 255, 1)\"},desc:{fontSize:\"24px\",lineHeight:\"26px\",marginTop:\"4px\",color:\"rgba(255, 255, 255, 1)\"}},buttonStyle:{width:\"100%\",paddingTop:\"20px\",paddingRight:\"20px\",paddingBottom:\"20px\",paddingLeft:\"20px\",borderRadius:\"24px\",backgroundColor:\"#1D6AFF\",textAlign:\"center\",fontSize:\"28px\",color:\"#FFFFFF\",marginTop:\"30px\"},closeStyle:{closeContainer:{position:\"absolute\",right:\"30px\",top:\"60px\",zIndex:\"100\",alignItems:\"center\",justifyContent:\"center\",transform:\"translateY(0px)\"},closeClickArea:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"transparent\"},closeBtn:{width:\"48px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"50%\",color:\"#FFFFFF\",fontSize:\"24px\",backgroundColor:\"rgba(0, 0, 0, .4)\"}},logoStyle:{logoContainer:{height:\"30px\",alignItems:\"center\",alignSelf:\"flex-end\",justifyContent:\"flex-end\",marginBottom:\"4px\",backgroundColor:\"rgba(153, 153, 153, 0.8)\"},logoImg:{width:\"70px\",marginRight:\"2px\",display:\"flex\"}},factorStyle:{factorContainer:{justifyContent:\"space-between\",marginTop:\"20px\"},infoText:{fontSize:\"22px\",color:\"#A0A0A0\",marginRight:\"10px\"}},countdownStyle:{position:\"absolute\",left:\"30px\",top:\"60px\",width:\"160px\",height:\"48px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"24px\",zIndex:\"100\",color:\"#FFFFFF\",backgroundColor:\"rgba(0, 0, 0, .4)\",fontSize:\"20px\"},feedbackStyle:{containerStyle:{position:\"absolute\",right:\"100px\",top:\"60px\",height:\"48px\",paddingLeft:\"16px\",paddingRight:\"16px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"24px\",zIndex:\"100\",color:\"#FFFFFF\",backgroundColor:\"rgba(0, 0, 0, .4)\",fontSize:\"20px\"},iconStyle:{fontSize:\"20px\",color:\"#000000\",width:\"24px\",height:\"24px\",marginRight:\"4px\",borderRadius:\"50%\",alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"rgba(255, 255, 255, 1)\"}}},_d={adProxyEvent:{onInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(r=P(this.adConfig.filter,tt.ADX,this.adOption._unit_id))){t.next=4;break}return this.adError({code:r,msg:\"该广告源被过滤\"}),t.abrupt(\"return\");case 4:if(a=U.call(this,this.adConfig.style),o=U.call(this,md),d=$.call(this,o,a),this.adStyle=d,ld.call(this),this.handleAdInit(),v(null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.store)||void 0===e||null===(e=e.device)||void 0===e?void 0:e.info)){t.next=14;break}t.t0=null==this||null===(n=this.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.store)||void 0===n||null===(n=n.device)||void 0===n?void 0:n.info,t.next=20;break;case 14:return t.next=16,H.getInfo();case 16:if(t.t1=t.sent,t.t1){t.next=19;break}t.t1={};case 19:t.t0=t.t1;case 20:s=t.t0,this.deviceInfoCache=s;case 22:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e=Io.call(this,this.adExtra.placementId),i=null!==(t=null==e?void 0:e.offer_data)&&void 0!==t?t:{};sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.adLoad(i)},show:function(){var t;if(this.ready){var e=this||{},i=e.currentAd,n=void 0===i?{}:i,r=e.adStyle,a=void 0===r?{}:r,o=e.adExtra,d=void 0===o?{}:o,s=e.adOption,l=void 0===s?{}:s,c=d.placementId,u=void 0===c?\"\":c,h=S().router,p=Io.call(this,u);if(Date.now()>p._expirationTime)return this.adError({code:1101,msg:\"广告已过期，请重新获取广告或刷新广告\"}),void bo.call(this,u,{});var f=\"\".concat(u,\"/\").concat(l._unit_id),v={adData:n,adStyle:a,option:{_request_id:l._request_id,_countdown:(null==n||null===(t=n.ctrl)||void 0===t?void 0:t.or_img_t)/1e3||0}};N.call(this,\"adxRewardedVideo\",f,v),h.push({uri:\"TopOn/AdReward\",params:{adUnitId:l._unit_id,plId:d.placementId}}),this.adShow()}},adLoad:function(t){var e,i,n;if(null!=t&&t.seatbid&&null!=t&&null!==(e=t.seatbid)&&void 0!==e&&e.length)if(null!=t&&null!==(i=t.seatbid[this.adListIndexInUse])&&void 0!==i&&i.full_u)this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(n=null==t?void 0:t.seatbid)&&void 0!==n?n:[],sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this),this.createRewardedVideo(),this.updateCloseStyle();else{this.adError({code:9008,msg:\"ADX广告无填充[素材缺失]\"})}else{this.adError({code:2e3,msg:\"ADX广告无填充\"})}},updateCloseStyle:function(){var t,e,i=null!==(t=null===(e=this.currentAd)||void 0===e||null===(e=e.ctrl)||void 0===e?void 0:e.ft_cl_sz)&&void 0!==t?t:1;if(1!==i){var n={1:1,2:1.5,3:.75,4:.5},r=this.adStyle.closeStyle.closeBtn.width.match(/\\d+/g)[0];if(this.adStyle.closeStyle.closeClickArea.width=r*n[i]+\"px\",this.adStyle.closeStyle.closeClickArea.height=r*n[i]+\"px\",n[i]>1){var a=r*n[i]/2-r/2+\"px\";this.adStyle.closeStyle.closeContainer.transform=\"translateY(-\".concat(a,\")\")}}},createRewardedVideo:function(){this.$app.$def.topon_sdk.rewardedVideo||(this.$app.$def.topon_sdk.rewardedVideo=Object.create(null));var t=this.adExtra,e=this.adOption,i=\"\".concat(t.placementId,\"/\").concat(e._unit_id);this.$app.$def.topon_sdk.rewardedVideo[i]||(this.$app.$def.topon_sdk.rewardedVideo[i]=Object.create(null));var n=this;this.$app.$def.topon_sdk.rewardedVideo[i].adClick=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adClick).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adClose=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adClose).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adError=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adError).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adImpression=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adImpression).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adTouch=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adTouch).call.apply(t,[n].concat(i))},this.$app.$def.topon_sdk.rewardedVideo[i].adFeedback=function(){for(var t,e=arguments.length,i=new Array(e),r=0;r<e;r++)i[r]=arguments[r];return(t=n.adFeedback).call.apply(t,[n].concat(i))}},destroyRewardedVideo:function(){var t;if(this.$app&&null!==(t=this.$app)&&void 0!==t&&t.$def){var e=this||{},i=e.adExtra,n=void 0===i?{}:i,r=e.adOption,a=void 0===r?{}:r,o=\"\".concat(n.placementId,\"/\").concat(a._unit_id);this.$app.$def.topon_sdk.rewardedVideo[o]=null,delete this.$app.$def.topon_sdk.rewardedVideo[o]}},adShow:function(t){var e;sd.call(this,{name:\"adShow\"}),bo.call(this,null===(e=this.adExtra)||void 0===e?void 0:e.placementId,{})},adClick:function(t,e){var i=this;sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}),this.handleNotice(\"click\"),this.noticeSucceed=!1,this.noticeFailed=!1,e&&e();var n=S(),r=n.router,a=n.pkg,o=this||{},d=o.adExtra,s=void 0===d?{}:d,l=o.currentAd,c=void 0===l?{}:l,u=o.adOption,h=void 0===u?{}:u,p=s.placementId,f=void 0===p?\"\":p,v=c.deeplink,m=void 0===v?\"\":v,_=c.oid,g=c.click_u,y=void 0===g?\"\":g,I=c.link_type,b=c.pkg,k=void 0===b?\"\":b;if(m)return this.handleNotice(\"dp_start\"),void a.hasInstalled({package:k,success:function(t){if(t.result){var e,n,a;i.handleNotice(\"app_install\"),r.push({uri:m}),i.onHideCallback=i.subscribeAppHideCallback.bind(i),i.onShowCallback=i.handleDeepLinkFailed.bind(i);var o={once:!0};null==i||null===(e=i.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.subscribe(\"app-on-hide\",i.onHideCallback,o),null==i||null===(n=i.$app)||void 0===n||null===(n=n.$def)||void 0===n||null===(n=n.topon_sdk)||void 0===n||null===(n=n.event)||void 0===n||null===(n=n.deeplink)||void 0===n||n.subscribe(\"app-on-show\",i.onShowCallback,o),\"vivo\"==(null==i||null===(a=i.deviceInfoCache)||void 0===a||null===(a=a.brand)||void 0===a?void 0:a.toLowerCase())&&(i.failTimeId&&clearTimeout(i.failTimeId),i.failTimeId=setTimeout((function(){i.noticeSucceed||i.handleDeepLinkFailed()}),3e3))}else{i.handleNotice(\"app_uninstall\"),i.handleNotice(\"dp_uninst_fail\");var d={key:\"DEEPLINK_RESULT\",unitid:f,requestid:h._request_id,msg:\"\"+_,msg1:\"2\",msg2:\"\"+y,msg3:\"0\",msg4:\"1\",msg7:\"1\"};Va.call(i,d),r.push({uri:\"TopOn/AdLanding\",params:{url:y}})}},fail:function(t,e){i.handleNotice(\"dp_uninst_fail\");var n={key:\"DEEPLINK_RESULT\",unitid:f,requestid:h._request_id,msg:\"\"+_,msg1:\"2\",msg2:\"\"+y,msg3:\"0\",msg4:\"1\",msg7:\"1\"};Va.call(i,n),r.push({uri:\"TopOn/AdLanding\",params:{url:y}})}});2===I&&r.push({uri:y}),3===I&&r.push({uri:\"TopOn/AdLanding\",params:{url:y}})},adClose:function(t){var e;this.adDestroy=!0;var i=null!==(e=null==t?void 0:t.reward)&&void 0!==e&&e;sd.call(this,{name:\"adClose\",params:{reward:i}}),i&&sd.call(this,{name:\"adReward\",params:{reward:i}}),this.validityTimeId&&clearTimeout(this.validityTimeId),this.destroyRewardedVideo()},adError:function(t){var i=(this||{}).adOption,n=void 0===i?{}:i,r=n._request_id+\"/\"+n._unit_id;if(this.lockAdError!==r){this.lockAdError=r,this.ready=!1;var a=e(e({},t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code});delete a.errCode,delete a.errMsg,sd.call(this,{name:\"adError\",params:a}),cd.call(this)}},adImpression:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.clientRect,i=t.diff,n=void 0===i?0:i;this.clientRect=e,this.isAdExposureValid(e,n),this.reportBidWinDa()},reportBidWinDa:function(){var t=this||{},e=t.adExtra,i=void 0===e?{}:e,n=t.currentAd,r=void 0===n?{}:n,a=t.adOption,o=void 0===a?{}:a,d=i.placementId,s=i.trafficGroupId,l=i.segmentId,c=i.asId,u=i.nwFirmId,h=i.ecpm,p=i.bidTk,f={key:\"BID_WIN\",unitid:d,requestid:o._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(o._unit_id),msg2:\"\",msg3:\"\",msg4:\"\"+r.dsp_id,msg5:\"\"+r.oid,msg6:\"1\",msg7:p.tpBidId,msg8:\"\"+h,msg9:\"\"};Va.call(this,f)},isAdExposureValid:function(t,e){var i,n=this,r=this||{},a=r.adExtra,o=void 0===a?{}:a,d=r.currentAd,s=void 0===d?{}:d,l=Date.now(),c=[1,3].includes(o.format)?0:100;null!=s&&null!==(i=s.ctrl)&&void 0!==i&&i.shm_t&&(c=s.ctrl.shm_t);var u=c,h=F.call(this,t,this.deviceInfoCache),p=Date.now()-l+e;if(c>p&&(u=c-p),c<p&&(u=0),h>.02)this.validityTimeId&&clearTimeout(this.validityTimeId),this.validityTimeId=setTimeout((function(){n.adDestroy?console.error(\"ADX广告无效展示\"):(n.handleNotice(\"nurl\"),sd.call(n,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}}),n.handleNotice(\"imp\"),n.handleNotice(\"burl\"))}),u);else{var f,v;console.error(\"ADX广告无效展示\");var m={ratio:h,clientRect:t,deviceInfo:{screenWidth:null===(f=this.deviceInfoCache)||void 0===f?void 0:f.screenWidth,screenHeight:null===(v=this.deviceInfoCache)||void 0===v?void 0:v.screenHeight}};this.reportInvalidImpressionDa(m)}},handleNotice:function(t){var e,i=(this.currentAd||{}).tk,n=void 0===i?{}:i;if(n[t]&&null!==(e=n[t])&&void 0!==e&&e.length){var r=this.getMacroData();ko.call(this,n[t],r)}},getMacroData:function(){var t,e,i,n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g=this.clientRect,y=this.startPoint,I=void 0===y?{}:y,b=this.endPoint,k=void 0===b?{}:b,w=this.currentAd,x=void 0===w?{}:w,S={down_x:null!==(t=null==I?void 0:I.clientX)&&void 0!==t?t:\"-999\",down_y:null!==(e=null==I?void 0:I.clientY)&&void 0!==e?e:\"-999\",up_x:null!==(i=null==k?void 0:k.clientX)&&void 0!==i?i:\"-999\",up_y:null!==(n=null==k?void 0:k.clientY)&&void 0!==n?n:\"-999\"},T={down_x:null!==(r=null==I?void 0:I.offsetX)&&void 0!==r?r:\"-999\",down_y:null!==(a=null==I?void 0:I.offsetY)&&void 0!==a?a:\"-999\",up_x:null!==(o=null==k?void 0:k.offsetX)&&void 0!==o?o:\"-999\",up_y:null!==(d=null==k?void 0:k.offsetY)&&void 0!==d?d:\"-999\"};return{\"{__WIDTH__}\":null!==(s=null==g?void 0:g.width)&&void 0!==s?s:\"\",\"{__HEIGHT__}\":null!==(l=null==g?void 0:g.height)&&void 0!==l?l:\"\",\"{__DOWN_X__}\":null!==(c=null==I?void 0:I.clientX)&&void 0!==c?c:\"\",\"{__DOWN_Y__}\":null!==(u=null==I?void 0:I.clientY)&&void 0!==u?u:\"\",\"{__UP_X__}\":null!==(h=null==k?void 0:k.clientX)&&void 0!==h?h:\"\",\"{__UP_Y__}\":null!==(p=null==k?void 0:k.clientY)&&void 0!==p?p:\"\",\"{__RE_DOWN_X__}\":null!==(f=null==I?void 0:I.offsetX)&&void 0!==f?f:\"-999\",\"{__RE_DOWN_Y__}\":null!==(v=null==I?void 0:I.offsetY)&&void 0!==v?v:\"-999\",\"{__RE_UP_X__}\":null!==(m=null==k?void 0:k.offsetX)&&void 0!==m?m:\"-999\",\"{__RE_UP_Y__}\":null!==(_=null==k?void 0:k.offsetY)&&void 0!==_?_:\"-999\",\"{__TS__}\":I.timestamp/1e3,\"{__TS_MSEC__}\":I.timestamp,\"{__END_TS__}\":k.timestamp/1e3,\"{__END_TS_MSEC__}\":k.timestamp,\"{ABSOLUTE_COORD}\":S,\"{RELATIVE_COORD}\":T,\"{__DPLINK_TYPE__}\":x.deeplink?1:2}},handleDeepLinkSucceed:function(t){var e;this.handleNotice(\"dp_succ\"),this.noticeSucceed=!0,this.failTimeId&&clearTimeout(this.failTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-show\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"1\",msg4:\"0\",msg7:\"1\"};Va.call(this,p)},handleDeepLinkFailed:function(t){var e;this.handleNotice(\"dp_inst_fail\"),this.noticeFailed=!0,this.succeedTimeId&&clearTimeout(this.succeedTimeId),null==this||null===(e=this.$app)||void 0===e||null===(e=e.$def)||void 0===e||null===(e=e.topon_sdk)||void 0===e||null===(e=e.event)||void 0===e||null===(e=e.deeplink)||void 0===e||e.unsubscribe(\"app-on-hide\");var i=this||{},n=i.adExtra,r=void 0===n?{}:n,a=i.currentAd,o=void 0===a?{}:a,d=i.adOption,s=void 0===d?{}:d,l=r.placementId,c=o.deeplink,u=void 0===c?\"\":c,h=o.oid,p={key:\"DEEPLINK_RESULT\",unitid:l,requestid:s._request_id,msg:\"\"+h,msg1:\"2\",msg2:\"\"+u,msg3:\"0\",msg4:\"0\",msg7:\"1\"};Va.call(this,p)},adTouch:function(t){var e=t.type,i=t.data;this[\"\".concat(e,\"Point\")]=i},adFeedback:function(t){var i,n,r,a,o,d,s,l,c=this||{},u=c.adExtra,h=void 0===u?{}:u,p=c.adOption,f=void 0===p?{}:p,v=c.currentAd,m=void 0===v?{}:v,_=e(e({key:\"AD_FEEDBACK\",unitid:h.placementId,requestid:f._request_id,msg:\"66\",msg1:\"\"+f._unit_id,msg2:\"2\"},t),{},{msg5:null!==(i=null==m?void 0:m.oid)&&void 0!==i?i:\"\",msg6:null!==(n=null==m?void 0:m.c_id)&&void 0!==n?n:\"\",msg7:null!==(r=null==m?void 0:m.pkg)&&void 0!==r?r:\"\",msg8:null!==(a=null==m?void 0:m.title)&&void 0!==a?a:\"\",msg9:null!==(o=null==m?void 0:m.desc)&&void 0!==o?o:\"\",msg10:null!==(d=null==m?void 0:m.icon_u)&&void 0!==d?d:\"\",msg11:null!==(s=null==m?void 0:m.full_u)&&void 0!==s?s:\"\",msg12:null!==(l=null==m?void 0:m.video_u)&&void 0!==l?l:\"\",msg13:JSON.stringify(null==m?void 0:m.img_list)});Va.call(this,_)},subscribeAppHideCallback:function(){var t,e=this,i=null==this||null===(t=this.deviceInfoCache)||void 0===t||null===(t=t.brand)||void 0===t?void 0:t.toLowerCase();[\"oppo\",\"xiaomi\",\"redmi\"].includes(i)?(this.succeedTimeId&&clearTimeout(this.succeedTimeId),this.succeedTimeId=setTimeout((function(){e.noticeFailed||e.handleDeepLinkSucceed()}),1e3)):this.handleDeepLinkSucceed()},reportInvalidImpressionDa:function(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=this||{},n=i.adOption,r=void 0===n?{}:n,a=i.adExtra,o=void 0===a?{}:a,d=i.currentAd,s=void 0===d?{}:d,l=o.placementId,c=o.trafficGroupId,u=o.segmentId,h=o.asId;o.nwFirmId,o.ecpm,o.bidTk;var p={key:\"ADX_IMP_INVALID\",unitid:l,requestid:r._request_id,groupid:u,traffic_group_id:c,asid:h,msg:s.dsp_id,msg1:String(r._unit_id),msg2:\"\"+s.oid,msg3:\"2\",msg4:null!==(t=null==e?void 0:e.msg4)&&void 0!==t?t:\"2\",msg5:JSON.stringify(e)};Va.call(this,p)}},gd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.isShow=!0,this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},show:function(){this.ready&&(this.displayed=!0)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){this.lockAdClicked=!0,sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adDownloadClick:function(t){this.lockAdClicked||(sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}}))},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},yd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e=this;try{this.ad=this.$app.$def.union_quick_app_sdk.createRewardedVideoAd({apid:this.adOption.placement_id,appid:this.adOption.app_id}),this.ad.onLoad((function(t){e.adLoad(t)})),this.ad.onClose((function(t){e.adClose(t)})),this.ad.onClick&&this.ad.onClick((function(t){e.adClick(t)})),this.ad.onError((function(t){e.ready=!1,e.adError(t)}))}catch(t){this.adError({code:2e3,msg:\"createRewardedVideoAd广告服务错误\"})}sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,null===(t=this.ad)||void 0===t||t.load()},show:function(){this.ad&&this.ready&&(this.ad.show(),this.adShow(),this.ready=!1)},adLoad:function(t){this.lockAdLoad||(this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this))},adShow:function(t){this.lockAdLoad=!0,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){var e,i,n=null!==(e=null==t||null===(i=t.data)||void 0===i?void 0:i.reward)&&void 0!==e&&e;sd.call(this,{name:\"adClose\",params:{reward:n}}),n&&sd.call(this,{name:\"adReward\",params:t})},adError:function(t){if(!this.lockAdLoad){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}}},Id={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){this.isShow=(new Date).getTime(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},bd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.BAIDU,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.isShow=!0,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}})},adLoad:function(t){this.ready=!0,this.lockAdClose=!1,this.showClassName=\"union-ad-wraper--show\",sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){this.lockAdClose||sd.call(this,{name:\"adClose\"})},adError:function(t){this.lockAdClose=!0,this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}};function kd(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=void 0===n?{}:n,a=r.placementId,o=r.trafficGroupId,d=r.segmentId,s=r.asId,l=r.nwFirmId,c=r.ecpm,u={key:\"BID_WIN\",unitid:a,requestid:i._request_id,groupid:d,traffic_group_id:o,asid:s,msg:String(l),msg1:String(i._unit_id),msg2:\"\",msg3:\"\",msg4:\"\",msg5:\"\",msg6:\"2\",msg7:\"\",msg8:\"\"+c,msg9:\"\"};Va.call(this,u)}function wd(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=\"\".concat((void 0===n?{}:n).placementId,\"/\").concat(i._unit_id);N.call(this,\"unit\",r,{})}function xd(){var t;null!=this&&this.adOption&&null!=this&&this.adExtra&&\"1\"===(null==this||null===(t=this.adOption)||void 0===t?void 0:t._type)&&(kd.call(this),wd.call(this))}var Sd={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.loadFeedAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t=this||{},e=t.adOption,i=void 0===e?{}:e,n=t.adExtra,r=\"\".concat((void 0===n?{}:n).placementId,\"/\").concat(i._unit_id),a=j.call(this,\"unit\",r)||{},o={adList:a.offer?[a.offer]:[]};this.adLoad(o)},loadFeedAd:function(){var t,e=this,i=this.adOption,n=i._nw_req_num,r=i.unit_id,a=i.allow_recommend,o=null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk;v(o)?this.adError({code:2e3,msg:\"找不到优量汇SDK\"}):o.onYlhReady((function(){var t={count:n&&n<=10?n:1,placementId:r,recommendation:\"1\"===a?2:1};o.loadFeedAd(t).then((function(t){var i={adList:t||[]};t.code&&t.code>0?e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")}):e.adLoad(i)})).catch((function(t){e.adError({code:2e3,msg:(null==t?void 0:t.message)||\"\"})}))}))},getAd:function(){if(!this.ready)return null;var t=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,t||(this.ready=!1),xd.call(this),t},adLoad:function(t){var e,i;this.ready=!0,this.adListIndexInUse=0,this.adList=null!==(e=null==t?void 0:t.adList)&&void 0!==e?e:[],\"1\"!==(null==this||null===(i=this.adOption)||void 0===i?void 0:i._type)&&(this.adList=this.sortByPrice(this.adList)),sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!0}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)},reportShow:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},reportClick:function(){sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},sortByPrice:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return(null==t?void 0:t.length)<=1||t.sort((function(t,e){return e.getECPM()-t.getECPM()})),t}},Td={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.createRewardVideoAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t,e,i=this,n=this||{},r=n.adOption,a=void 0===r?{}:r,o=n.adExtra,d=\"\".concat((void 0===o?{}:o).placementId,\"/\").concat(a._unit_id),s=j.call(this,\"unit\",d)||{},l=null!==(t=null==s?void 0:s.ad)&&void 0!==t?t:null,c=null!==(e=null==s?void 0:s.offer)&&void 0!==e?e:{};l&&(this.adLoad(c),this.bidOffer=c,this.ad=l,this.ad.onExpose((function(t){i.adShow()})),this.ad.onClick((function(){i.adClick()})),this.ad.onVideoFinish((function(){i.adVideoFinish()})),this.ad.onReward((function(){i.adReward()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})))},createRewardVideoAd:function(){var t,e=this,i=this.adOption,n=i.unit_id,r=i.video_muted;if(v(null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk))this.adError({code:2e3,msg:\"找不到优量汇SDK\"});else try{var a={placementId:n,muted:\"1\"===r};this.ad=this.$app.$def.ylh_sdk.createRewardVideoAd(a),this.ad.onLoad((function(){e.adLoad()})),this.ad.onExpose((function(t){e.adShow()})),this.ad.onClick((function(){e.adClick()})),this.ad.onReward((function(){e.adReward()})),this.ad.onVideoFinish((function(){e.adVideoFinish()})),this.ad.onClose((function(){e.adClose()})),this.ad.onError((function(t){e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")})})),this.ad.load()}catch(t){this.adError({code:2e3,msg:t||\"\"})}},show:function(){this.ready&&(xd.call(this),this.ad.show(),this.ready=!1)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adVideoFinish:function(t){this.isVideoEnded=!0},adClose:function(t){sd.call(this,{name:\"adClose\"})},adReward:function(t){sd.call(this,{name:\"adReward\",params:{reward:!0}})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},Ad={adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.YLH,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(this.lockAdClicked=!1,ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),d=null!==(e=null===(n=this.$app)||void 0===n?void 0:n.$def)&&void 0!==e?e:this.$def,s=(null==d?void 0:d.topon_sdk)||{},v(null==(l=s.store)||null===(r=l.device)||void 0===r?void 0:r.info)){t.next=7;break}t.t0=null==l||null===(a=l.device)||void 0===a?void 0:a.info,t.next=13;break;case 7:return t.next=9,H.getInfo();case 9:if(t.t1=t.sent,t.t1){t.next=12;break}t.t1={};case 12:t.t0=t.t1;case 13:if(!((null==(c=t.t0)?void 0:c.platformVersionCode)<1100)){t.next=17;break}return this.adError({code:9e3,msg:\"不支持该平台版本\"}),t.abrupt(\"return\");case 17:\"1\"===(null==this||null===(o=this.adOption)||void 0===o?void 0:o._type)?this.bid():this.createSplashAd();case 18:case\"end\":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),bid:function(){var t,e,i=this,n=this||{},r=n.adOption,a=void 0===r?{}:r,o=n.adExtra,d=\"\".concat((void 0===o?{}:o).placementId,\"/\").concat(a._unit_id),s=j.call(this,\"unit\",d)||{},l=null!==(t=null==s?void 0:s.ad)&&void 0!==t?t:null,c=null!==(e=null==s?void 0:s.offer)&&void 0!==e?e:{};l&&(this.adLoad(c),this.bidOffer=c,this.ad=l,this.ad.onExpose((function(t){i.adShow()})),this.ad.onClick((function(){i.adClick()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})))},createSplashAd:function(){var t,e=this,i=this.adOption.unit_id,n=this.adConfig.entry,r=void 0===n?\"\":n;v(null===(t=this.$app)||void 0===t||null===(t=t.$def)||void 0===t?void 0:t.ylh_sdk)?this.adError({code:2e3,msg:\"找不到优量汇SDK\"}):this.$app.$def.ylh_sdk.onYlhReady((function(){try{e.ad=e.$app.$def.ylh_sdk.createSplashAd({placementId:i,entry:r}),e.ad.onLoad((function(){e.adLoad()})),e.ad.onExpose((function(t){e.adShow()})),e.ad.onClick((function(){e.adClick()})),e.ad.onClose((function(){e.adClose()})),e.ad.onError((function(t){e.adError({code:at[t.code]||2e3,msg:\"\".concat(null==t?void 0:t.message,\" real code [\").concat(t.code,\"]\")})})),e.ad.load()}catch(t){e.adError({code:2e3,msg:t||\"\"})}}))},show:function(){this.ready&&(xd.call(this),this.ad.show(),this.ready=!1)},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var i=e(e({},t.stop?t.detail:t),{},{msg:t.errMsg||t.msg,code:t.errCode||t.code||t.type});delete i.errCode,delete i.errMsg,sd.call(this,{name:\"adError\",params:i}),cd.call(this)}},Ed={main:{entry:td},web:{entry:id},views:{rewarde:ad},66:{native:vd,rewardedVideo:_d},56:{native:gd,rewardedVideo:yd,interstitial:Id,splash:bd},64:{native:Sd,rewardedVideo:Td,splash:Ad},60:{native:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=this,n=S().ad;this.provider=n.getProvider(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var r={adUnitId:this.adOption.ad_id},a=this.adExtra.channelId;a&&(r.channel=a),this.ad=n.createNativeAd(r),this.ad.onLoad((function(t){i.adLoad(t)})),this.ad.onError((function(t){i.adError(t)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createNativeAd广告服务错误\"})}if(!(Date.now()>new Date(\"2023/05/01\").getTime())){var o=this.adExtra,d=o.placementId,s=o.trafficGroupId,l=o.segmentId,c=o.asId,u=o.nwFirmId,h=this.$app.$def.topon_sdk.store,p=void 0===h?{}:h,f={key:\"AD_PROVIDER\",unitid:d,requestid:this.adOption._request_id,groupid:l,traffic_group_id:s,asid:c,msg:String(u),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==p||null===(t=p.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==p||null===(e=p.device)||void 0===e?void 0:e.info.model)};Va.call(this,f)}},getAd:function(){if(!this.ready)return null;var t=this.adListIndexInUse,e=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,this.currentIndexUse=t,e||(this.ready=!1),e},adLoad:function(t){this.ready=!0,this.adListIndexInUse=0,this.adList=t.adList,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!0}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\",ad:this.adList[this.currentIndexUse]||{}}}),cd.call(this)},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){sd.call(this,{name:\"adClick\"})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},reportShow:function(){var t;null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\",ad:this.adList[this.currentIndexUse]||{}}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\",ad:this.adList[this.currentIndexUse]||{}}}),this.ad.reportAdShow({adId:this.adList[this.currentIndexUse].adId}))},reportClick:function(t){var e;null!==(e=this.adList[this.currentIndexUse])&&void 0!==e&&e.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\",ad:this.adList[this.currentIndexUse]||{}}}),null!=t&&t.reportToProvider&&this.ad.reportAdClick({adId:this.adList[this.currentIndexUse].adId}))},getDownloadStatus:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getAppStatus({adId:this.adList[this.currentIndexUse].adId})},getDownloadProgress:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getDownloadProgress({adId:this.adList[this.currentIndexUse].adId})},subscribeDownloadStatus:function(t){this.ad.onStatusChanged(t)},unsubscribeDownloadStatus:function(){this.ad&&this.ready&&this.ad.offStatusChanged()},subscribeDownloadProgress:function(t){this.ad.onDownloadProgress(t)},unsubscribeDownloadProgress:function(){this.ad&&this.ready&&this.ad.offDownloadProgress()},showAppDetailPage:function(){var t;this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&this.ad.showAppDetailPage({adId:this.adList[this.currentIndexUse].adId})},getInstance:function(){return this.ad||null}},rewardedVideo:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=this,n=S().ad;this.provider=n.getProvider(),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,this.showCalled=!1;try{var r={adUnitId:this.adOption.ad_id};this.ad=n.createRewardedVideoAd(r),this.ad.onLoad((function(t){i.adLoad()})),this.ad.onClose((function(t){i.adClose(t)})),this.ad.onError((function(t){i.adError(t)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createRewardedVideoAd广告服务错误\"})}if(!(Date.now()>new Date(\"2023/05/01\").getTime())){var a=this.adExtra,o=a.placementId,d=a.trafficGroupId,s=a.segmentId,l=a.asId,c=a.nwFirmId,u=this.$app.$def.topon_sdk.store,h=void 0===u?{}:u,p={key:\"AD_PROVIDER\",unitid:o,requestid:this.adOption._request_id,groupid:s,traffic_group_id:d,asid:l,msg:String(c),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==h||null===(t=h.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==h||null===(e=h.device)||void 0===e?void 0:e.info.model)};Va.call(this,p)}},show:function(){var t=this;this.ready&&(this.showCalled=!0,this.ad.show().then((function(e){t.adShow(e)})).catch((function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败\"};sd.call(t,{name:\"adError\",params:r})})),this.ready=!1)},adLoad:function(t){this.lockAdLoad||(this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this))},adShow:function(t){this.lockAdLoad=!0,this.ready=!1,sd.call(this,{name:\"adShow\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\"}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){var e=t.isEnded;sd.call(this,{name:\"adClose\",params:{reward:e}}),e&&sd.call(this,{name:\"adReward\",params:t})},adError:function(t){this.ready=!1;var e=t.errMsg||t.msg,i=t.errCode||t.code,n={msg:e,code:i};this.showCalled&&(n.code=1101,n.msg=\"展示失败 real code: [\".concat(i,\"] real msg: [\").concat(e,\"]\")),delete n.errCode,delete n.errMsg,sd.call(this,{name:\"adError\",params:n}),cd.call(this)},getInstance:function(){return this.ad||null}},banner:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){var t;cd.call(this),this.removeAdEventListener(),null==this||null===(t=this.ad)||void 0===t||t.destroy()}},removeAdEventListener:function(){var t,e,i,n,r,a,o,d;null==this||null===(t=this.ad)||void 0===t||null===(e=t.offLoad)||void 0===e||e.call(t),null==this||null===(i=this.ad)||void 0===i||null===(n=i.offClose)||void 0===n||n.call(i),null==this||null===(r=this.ad)||void 0===r||null===(a=r.offError)||void 0===a||a.call(r),null==this||null===(o=this.ad)||void 0===o||null===(d=o.offResize)||void 0===d||d.call(o)},handleAdInit:function(){var t,e,i=this,n=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}}),this.lockAdLoad=!1,this.ready=!1;try{var r,a={adUnitId:this.adOption.ad_id,style:{width:-1,height:-2,left:0,top:0}};t=a.style,(e=null===(r=this.adConfig)||void 0===r?void 0:r.style)&&!v(e)&&f(e)&&Object.assign(t,e),this.ad=n.createBannerAd(a),this.ad.onLoad((function(t){i.adLoad()})),this.ad.onClose((function(t){var e;i.adClose(t),i.removeAdEventListener(),null===(e=i.ad)||void 0===e||e.destroy()})),this.ad.onError((function(t){console.error(\"onError\",t),i.adError(t)}))}catch(t){this.adError({code:2e3,msg:\"createBannerAd广告服务失败\"})}this._show()},_show:function(){var t=this;this.ad&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\"}}),this.ad.show().then((function(){}),(function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败: \".concat(JSON.stringify(e))};sd.call(t,{name:\"adError\",params:r})})))},adLoad:function(t){this.lockAdLoad||(this.ready=!0,this.lockAdLoad=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this),B.call(this,this.adShow))},adShow:function(t){sd.call(this,{name:\"adShow\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\",params:t})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,delete e.subErrCode,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},hide:function(){this.ad&&this.ad.hide&&this.ad.hide()}},interstitial:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){var t;cd.call(this),this.removeAdEventListener(),null==this||null===(t=this.ad)||void 0===t||t.destroy()}},removeAdEventListener:function(){var t,e,i,n,r,a,o,d,s,l;null==this||null===(t=this.ad)||void 0===t||null===(e=t.offLoad)||void 0===e||e.call(t),null==this||null===(i=this.ad)||void 0===i||null===(n=i.offClose)||void 0===n||n.call(i),null==this||null===(r=this.ad)||void 0===r||null===(a=r.offError)||void 0===a||a.call(r),null==this||null===(o=this.ad)||void 0===o||null===(d=o.offResize)||void 0===d||d.call(o),null==this||null===(s=this.ad)||void 0===s||null===(l=s.offClick)||void 0===l||l.call(s)},handleAdInit:function(){var t=this,e=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var i,n={adUnitId:this.adOption.ad_id};this.ad=e.createInterstitialAd(n),this.ad.onLoad((function(e){t.adLoad()})),this.ad.onClose((function(e){var i;t.adClose(e),t.removeAdEventListener(),null===(i=t.ad)||void 0===i||i.destroy()})),this.ad.onError((function(e){t.adError(e)})),null!=this&&null!==(i=this.ad)&&void 0!==i&&i.onClick&&this.ad.onClick((function(e){t.adClick(e)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createInterstitialAd广告服务失败\"})}},show:function(){var t=this;this.ad&&this.ready&&this.ad.show().then((function(){t.adShow()}),(function(e){var i,n,r={code:1101,msg:null!==(i=null!==(n=null==e?void 0:e.msg)&&void 0!==n?n:null==e?void 0:e.data)&&void 0!==i?i:\"展示失败: \".concat(JSON.stringify(e))};sd.call(t,{name:\"adError\",params:r})}))},adLoad:function(t){this.ready=!0,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!1}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\"}}),cd.call(this)},adShow:function(t){this.ready=!1,sd.call(this,{name:\"adShow\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\"}})},adClick:function(t){sd.call(this,{name:\"adClick\",params:t}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\"}})},adClose:function(t){sd.call(this,{name:\"adClose\",params:t})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,delete e.subErrCode,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},getInstance:function(){return this.ad||null}}},62:{native:{adProxyEvent:{onInit:function(){var t=P(this.adConfig.filter,tt.HUAWEI_AGD_PRO,this.adOption._unit_id);t?this.adError({code:t,msg:\"该广告源被过滤\"}):(ld.call(this),this.handleAdInit())},onDestroy:function(){cd.call(this)}},handleAdInit:function(){var t,e,i=S().ad;if(this.provider=i.getProvider(),this.createNativeAd(),!(Date.now()>new Date(\"2023/05/01\").getTime())){var n=this.adExtra,r=n.placementId,a=n.trafficGroupId,o=n.segmentId,d=n.asId,s=n.nwFirmId,l=this.$app.$def.topon_sdk.store,c=void 0===l?{}:l,u={key:\"AD_PROVIDER\",unitid:r,requestid:this.adOption._request_id,groupid:o,traffic_group_id:a,asid:d,msg:String(s),msg1:String(this.adOption._unit_id),msg2:this.provider,msg3:null==c||null===(t=c.device)||void 0===t?void 0:t.info.brand,msg4:\"\"+(null==c||null===(e=c.device)||void 0===e?void 0:e.info.model)};Va.call(this,u)}},createNativeAd:function(){var t=this,e=S().ad;sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST\"}});try{var i={adUnitId:this.adOption.ad_id},n=this.adExtra.channelId;n&&(i.channel=n),this.ad=e.createNativeAd(i),this.ad.onLoad((function(e){t.adLoad(e)})),this.ad.onError((function(e){t.adError(e)})),this.ad.load()}catch(t){this.adError({code:2e3,msg:\"createNativeAd广告服务错误\"})}},createTemplateAd:function(){var t=this,e=S().ad;try{this.ad=e.createTemplateAd({adUnitId:this.adOption.ad_id,type:this.templateAdType}),this.ad.load({success:function(e){t.adLoad(e)},fail:function(e,i){t.adError({code:2e3,msg:\"createTemplateAd广告服务错误\"})}})}catch(t){this.adError({code:2e3,msg:\"createTemplateAd广告服务错误\"})}},getAd:function(){if(!this.ready)return null;var t=this.adListIndexInUse,e=this.adList[this.adListIndexInUse]||{};return this.adListIndexInUse++,this.currentIndexUse=t,e||(this.ready=!1),e},adLoad:function(t){this.ready=!0,this.adListIndexInUse=0,this.adList=t.adList,sd.call(this,{name:\"adLoad\",params:{isSelfRendering:!this.isTemplateAd}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_REQUEST_FILLED\",ad:this.adList[this.currentIndexUse]||{}}}),cd.call(this)},adShow:function(t){sd.call(this,{name:\"adShow\"})},adClick:function(t){sd.call(this,{name:\"adClick\"})},adClose:function(t){sd.call(this,{name:\"adClose\"})},adError:function(t){this.ready=!1;var e={msg:t.errMsg||t.msg,code:t.errCode||t.code};delete e.errCode,delete e.errMsg,sd.call(this,{name:\"adError\",params:e}),cd.call(this)},reportShow:function(){var t;null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_SHOW\",ad:this.adList[this.currentIndexUse]||{}}}),sd.call(this,{name:\"tkReport\",params:{type:\"AD_IMPRESSION\",ad:this.adList[this.currentIndexUse]||{}}}),this.ad.reportAdShow({adId:this.adList[this.currentIndexUse].adId}))},reportClick:function(t){var e;null!==(e=this.adList[this.currentIndexUse])&&void 0!==e&&e.adId&&(sd.call(this,{name:\"tkReport\",params:{type:\"AD_CLICK\",ad:this.adList[this.currentIndexUse]||{}}}),null!=t&&t.reportToProvider&&this.ad.reportAdClick({adId:this.adList[this.currentIndexUse].adId}))},getDownloadStatus:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getAppStatus({adId:this.adList[this.currentIndexUse].adId})},getDownloadProgress:function(){var t;if(this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId)return this.ad.getDownloadProgress({adId:this.adList[this.currentIndexUse].adId})},subscribeDownloadStatus:function(t){this.ad.onStatusChanged(t)},unsubscribeDownloadStatus:function(){this.ad&&this.ready&&this.ad.offStatusChanged()},subscribeDownloadProgress:function(t){this.ad.onDownloadProgress(t)},unsubscribeDownloadProgress:function(){this.ad&&this.ready&&this.ad.offDownloadProgress()},showAppDetailPage:function(){var t;this.ad&&this.ready&&null!==(t=this.adList[this.currentIndexUse])&&void 0!==t&&t.adId&&this.ad.showAppDetailPage({adId:this.adList[this.currentIndexUse].adId})},getInstance:function(){return this.ad||null}}}},Cd=new(function(){function t(){d(this,t)}return l(t,[{key:\"dispatch\",value:function(t,e){t.$def.topon_sdk.store=Object.create(null),this._options=e,this.device(t),this.upId(t)}},{key:\"device\",value:function(t){t.$def.topon_sdk.store.device={};var e=[H.getInfo(),H.getOaId(),H.getDeviceIds()];Promise.all(e).then((function(e){t.$def.topon_sdk.store.device.info=e[0]||{},t.$def.topon_sdk.store.device.oaid=e[1]||\"\",t.$def.topon_sdk.store.device.ids=e[2]||{}}))}},{key:\"upId\",value:function(t){G().then((function(e){t.$def.topon_sdk.store.upid=e||\"\"}))}}]),t}()),Dd=function(){function t(e){d(this,t),this.name=e,this.eventMap={}}return l(t,[{key:\"subscribe\",value:function(t,e,i){var n=this;if(i&&i.once){return this.subscribe(t,(function i(r){e(r),n.unsubscribe(t,i)}))}if(this.eventMap[t]=this.eventMap[t]||[],\"function\"==typeof e){var r=this.eventMap[t];-1===r.indexOf(e)&&r.push(e)}}},{key:\"publish\",value:function(t,e){for(var i=null,n=this.eventMap[t]||[],r=0,a=n.length;r<a;r++)i=n[r]&&n[r](e,i);return i}},{key:\"unsubscribe\",value:function(t,e){if(this.eventMap[t]){var i=this.eventMap[t];if(e){var n=i.indexOf(e);n>-1&&i.splice(n,1)}else this.eventMap[t]=[]}}}]),t}(),Ld={};function Od(t){return Ld[t]||(Ld[t]=new Dd(t)),Ld[t]}function Rd(t,e){return Pd.apply(this,arguments)}function Pd(){return(Pd=o(i().mark((function t(e,n){var r,a,o,d,s,l,c,u,h,p,f,m,g,y,I;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,a=n.channelId,o=void 0===a?\"\":a,d=n.subChannelId,s=void 0===d?\"\":d,l=n.customParam,c=void 0===l?{}:l,u=n.placementCustomParam,h=O(c,void 0===u?{}:u),p={placementId:e},t.next=6,to.call(this,p,{isPreload:!0});case 6:if(f=t.sent,m=_(null==f?void 0:f.data)?JSON.parse(null==f?void 0:f.data):(null==f?void 0:f.data)||{},699===f.code&&(m={code:0,data:{ad_delivery_sw:0,ps_ct:864e5,ps_ct_out:0}}),!((null===(r=m)||void 0===r?void 0:r.code)>0||v(m))&&m){t.next=11;break}return t.abrupt(\"return\");case 11:g=(new Date).getTime(),y=o+\"/\"+s,m._ps_ct_timestamp=g+m.data.ps_ct,m._channel=y,m._custom_param=h,m._request_timestamp=g,I=\"TOPON_AD_CACHE_PLACEMENT_\"+e,M.setItem(I,m,!1),t.next=23;break;case 21:t.prev=21,t.t0=t.catch(0);case 23:case\"end\":return t.stop()}}),t,this,[[0,21]])})))).apply(this,arguments)}function Ud(t,e){return $d.apply(this,arguments)}function $d(){return($d=o(i().mark((function t(e,n){var r,a,o,d,s,l;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=\"TOPON_AD_CACHE_PLACEMENT_\"+e,t.next=3,M.getItem(a,!1);case 3:if(t.t0=t.sent,t.t0){t.next=6;break}t.t0={};case 6:if(!v(o=t.t0)){t.next=9;break}return t.abrupt(\"return\",Rd.call(this,e,n));case 9:if(d=(new Date).getTime(),s=(null==o||null===(r=o.data)||void 0===r?void 0:r.ps_ct_max)||6048e5,(l=(null==o?void 0:o._request_timestamp)||0)<=0&&(l=o._ps_ct_timestamp-o.data.ps_ct),!(l+s<d)){t.next=15;break}return t.abrupt(\"return\",Rd.call(this,e,n));case 15:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Nd(t){var e=this,i=t.placementStrategy,n=void 0===i?[]:i;if(n.length){var r=JSON.parse(JSON.stringify(t));delete r.options;var a=n.slice(0,10),o=[];return a.forEach((function(t){o.push(Ud.call(e,t,r))})),Promise.all(o)}}var jd=\"4.2.11\",Fd=\"http://api.anythinktech.com\";function Bd(t){return Wd.apply(this,arguments)}function Wd(){return(Wd=o(i().mark((function t(e){var n,r,a,o,d,s,l,c,u,h,p,f,v,m,_,g,y,I,b,k,w,x,T,A,L,P,U,$,N,j,F,B,W,q,V,Y,z,X,Q,J,Z,tt,et,it,rt,at,ot,dt,st,lt,ct,ut;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return I=e.appId,b=e.appKey,k=e.channelId,w=void 0===k?\"\":k,x=e.subChannelId,T=void 0===x?\"\":x,A=e.abtest_id,L=void 0===A?\"\":A,P=e.customParam,U=void 0===P?{}:P,$=e.placementCustomParam,N=O(U,void 0===$?{}:$),j=R(),F=S(),B=F.app,W=F.network,q=F.device,t.next=6,H.getInfo();case 6:if(t.t0=t.sent,t.t0){t.next=9;break}t.t0={};case 9:return V=t.t0,Y=B.getInfo()||{},t.next=13,W.getType();case 13:if(t.t1=t.sent,t.t1){t.next=16;break}t.t1={};case 16:return z=t.t1,t.next=19,H.getDeviceIds();case 19:if(t.t2=t.sent,t.t2){t.next=22;break}t.t2={};case 22:return X=t.t2,t.next=25,H.getOaId();case 25:if(t.t3=t.sent,t.t3){t.next=28;break}t.t3=\"\";case 28:return Q=t.t3,J=\"\".concat(null==V?void 0:V.screenWidth,\"*\").concat(null==V?void 0:V.screenHeight),Z=nt[null==z||null===(n=z.data)||void 0===n?void 0:n.type]||\"-1\",tt=\"1.0\",t.next=34,G();case 34:return et=t.sent,t.next=37,K();case 37:return it=t.sent,t.next=40,M.getItem(\"firstInitTime\");case 40:if(t.t4=t.sent,t.t4){t.next=43;break}t.t4=0;case 43:return rt=t.t4,t.next=46,M.getItem(\"currentInitTime\");case 46:if(t.t5=t.sent,t.t5){t.next=49;break}t.t5=0;case 49:return at=t.t5,ot=Math.ceil((at-rt+1)/864e5),dt={system:1,os_fw:8,mcc:\"1\",mnc:\"1\",timezone:\"\",nw_ver:\"\",orient:1,ua:j||\"\",os_vn:null!==(r=null==V?void 0:V.osVersionName)&&void 0!==r?r:\"\",os_vc:null!==(a=\"\"+(null==V?void 0:V.osVersionCode))&&void 0!==a?a:\"\",package_name:null!==(o=null==Y?void 0:Y.packageName)&&void 0!==o?o:\"\",app_vn:null!==(d=null==Y?void 0:Y.versionName)&&void 0!==d?d:\"\",app_vc:null!==(s=\"\"+(null==Y?void 0:Y.versionCode))&&void 0!==s?s:\"\",brand:null!==(l=null==V?void 0:V.brand)&&void 0!==l?l:\"\",model:null!==(c=null==V?void 0:V.model)&&void 0!==c?c:\"\",pf_vn:null!==(u=null==V?void 0:V.platformVersionName)&&void 0!==u?u:\"\",pf_vc:null!==(h=\"\"+(null==V?void 0:V.platformVersionCode))&&void 0!==h?h:\"\",network_type:Z,screen:J,upid:et,app_id:I,sdk_ver:\"UA_\".concat(jd),platform:1,channel:w||\"\",sub_channel:T||\"\",custom:N,ps_id:it,first_init_time:1*rt,days_from_first_init:ot,deny:String(V.screenDensity),api_ver:\"1.0\",host_vn:null!==(p=null==q||null===(f=q.host)||void 0===f?void 0:f.versionName)&&void 0!==p?p:\"\",host_vc:null!==(v=\"\"+(null==q||null===(m=q.host)||void 0===m?void 0:m.versionCode))&&void 0!==v?v:\"\",abtest_id:L},st={android_id:null!==(_=null==X?void 0:X.user)&&void 0!==_?_:\"\",mac:null!==(g=null==X?void 0:X.mac)&&void 0!==g?g:\"\",imei:\"\",oaid:Q,gaid:null!==(y=null==X?void 0:X.advertising)&&void 0!==y?y:\"\",is_cn_sdk:\"1\"},lt=C(D(dt)),ct=C(D(st)),ut=E(b,[{key:\"api_ver\",value:tt},{key:\"p\",value:lt},{key:\"p2\",value:ct}]),t.abrupt(\"return\",{p:lt,p2:ct,api_ver:tt,sign:ut});case 58:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function qd(t){return Md.apply(this,arguments)}function Md(){return(Md=o(i().mark((function t(e){var n,r,a,o;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.appId,t.prev=1,t.next=4,Bd.call(this,e);case 4:return r=t.sent,t.next=7,Na(\"\".concat(Fd,\"/v2/open/app\"),r);case 7:return a=t.sent,o=Date.now(),a._scet_timestamp=o+a.data.scet,a._request_timestamp=o,Vd.call(this,n,a),t.abrupt(\"return\",a);case 15:return t.prev=15,t.t0=t.catch(1),t.abrupt(\"return\",{});case 18:case\"end\":return t.stop()}}),t,this,[[1,15]])})))).apply(this,arguments)}function Vd(t,e){var i=\"TOPON_AD_CACHE_APP_\"+t;return M.setItem(i,e,!1),Yd.call(this,t,e.data.logger),e}function Hd(t){return Gd.apply(this,arguments)}function Gd(){return(Gd=o(i().mark((function t(n){var r,a,o,d,s,l,c,u,h,p=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=n.appId,a=\"TOPON_AD_CACHE_APP_\"+r,t.next=4,M.getItem(a,!1);case 4:if(t.t0=t.sent,t.t0){t.next=7;break}t.t0={};case 7:if(!v(o=t.t0)){t.next=10;break}return t.abrupt(\"return\",qd.call(this,n));case 10:if(d=Date.now(),s=(null==o?void 0:o._request_timestamp)||0,!(o._scet_timestamp>d)){t.next=16;break}return t.abrupt(\"return\",Vd.call(this,r,o));case 16:if(!(s+6048e5<d)){t.next=20;break}return t.abrupt(\"return\",qd.call(this,e(e({},n),{},{abtest_id:null!==(l=null==o||null===(c=o.data)||void 0===c?void 0:c.abtest_id)&&void 0!==l?l:\"\"})));case 20:return setTimeout((function(){Vd.call(p,r,o)}),100),t.abrupt(\"return\",qd.call(this,e(e({},n),{},{abtest_id:null!==(u=null==o||null===(h=o.data)||void 0===h?void 0:h.abtest_id)&&void 0!==u?u:\"\"})));case 22:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function Yd(t,e){var i,n,r,a=null!==(i=null!==(n=null===(r=this.$app)||void 0===r?void 0:r.$def)&&void 0!==n?n:this.$def)&&void 0!==i?i:null;a&&null!=a&&a.topon_sdk&&(a.topon_sdk.cache.logger||(a.topon_sdk.cache.logger=Object.create(null)),a.topon_sdk.cache.logger[t]=e)}function Kd(t){return/^([.A-Za-z0-9_-]){1,128}$/.test(t)}function zd(t){return _(t)?JSON.parse(t):t}function Xd(t){var e=[],i=zd(t);return f(i)?(Object.keys(i).forEach((function(t){h(i[t])||e.push(\"\".concat(t,\"必须为字符串\"))})),e):(e.push(\"setCustomParam参数必须是JSON Object\"),e)}x&&(x.$topon_sdk=function(t,n){function r(){return r=o(i().mark((function t(e){var n,r,o,d,l,u,h,p,f,v,m,_,g=this;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this&&this.$def&&!this.$def.topon_sdk&&(this.$def.topon_sdk=Object.create(null),this.$def.topon_sdk.components=Ed,this.$def.topon_sdk.appId=e.appId,this.$def.topon_sdk.appKey=e.appKey,this.$def.topon_sdk.isTest=e.isTest||!1,this.$def.topon_sdk.event=Object.create(null),this.$def.topon_sdk.event.deeplink=Od(\"deeplink\"),this.$def.topon_sdk.cache=Object.create(null),this.$def.topon_sdk.channelId=Kd(e.channelId)?e.channelId:\"\",this.$def.topon_sdk.subChannelId=Kd(e.subChannelId)?e.subChannelId:\"\",this.$def.topon_sdk.customParam={},this.$def.topon_sdk.placementCustomParam={},this.$def.topon_sdk.onInitTimestamp=Date.now(),this.$def.topon_sdk.onShowTimestamp=0,this.$def.topon_sdk.onHideTimestamp=0,this.$def.topon_sdk.onDestroyTimestamp=0,this.$def.topon_sdk.onHideCounter=0,this.$def.topon_sdk.destroyParams={},h=(null==e||null===(n=e.config)||void 0===n?void 0:n.device)||\"0\",p=(null==e||null===(r=e.config)||void 0===r?void 0:r.startup)||\"0\",f=(null==e||null===(o=e.config)||void 0===o?void 0:o.startupUnlock)||\"0\",v=(null==e||null===(d=e.config)||void 0===d?void 0:d.enhancedLoggingMode)&&Date.now()<17119008e5,this.$def.topon_sdk.startup=p,this.$def.topon_sdk.startupUnlock=f,this.$def.topon_sdk.startupReported=!1,this.$def.topon_sdk.enhancedLoggingMode=v,m={appId:e.appId,appKey:e.appKey,channelId:Kd(e.channelId)?e.channelId:\"\",subChannelId:Kd(e.subChannelId)?e.subChannelId:\"\",customParam:{},placementCustomParam:{}},Hd.call(this,m),M.setItem(\"needDevice\",h),M.setItem(\"appId\",e.appId),Cd.dispatch(this,e),c.call(this),a.call(this).then((function(){\"1\"!==p&&s.call(g)})),_={placementStrategy:null!==(l=null===(u=e.config)||void 0===u||null===(u=u.preload)||void 0===u?void 0:u.placementStrategy)&&void 0!==l?l:[],channelId:Kd(e.channelId)?e.channelId:\"\",subChannelId:Kd(e.subChannelId)?e.subChannelId:\"\",customParam:{},placementCustomParam:{}},Nd.call(this,_));case 1:case\"end\":return t.stop()}}),t,this)}))),r.apply(this,arguments)}function a(){return d.apply(this,arguments)}function d(){return(d=o(i().mark((function t(){var e,n;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,M.getItem(\"firstInitTime\");case 2:return(!(e=t.sent)||v(e)||1*e<16409664e5)&&(e=Date.now()),n=Date.now(),t.abrupt(\"return\",M.batch({firstInitTime:e,currentInitTime:n}));case 6:case\"end\":return t.stop()}}),t)})))).apply(this,arguments)}function s(t){var i=e({logType:\"APP_STARTUP\"},t);so.call(this,i)}function l(){if(\"1\"===this.$def.topon_sdk.startup){if(this.$def.topon_sdk.startupReported&&\"1\"===this.$def.topon_sdk.startupUnlock){var t=\"\"+Date.now();return void s.call(this,{psIdVirtual:t})}this.$def.topon_sdk.startupReported||(this.$def.topon_sdk.startupReported=!0,s.call(this))}}function c(){var t=this,e={setChannel:u,setSubChannel:h,setCustomParam:p,setPlacementCustomParam:f,onShow:m,onHide:_,onDestroy:y};Object.keys(e).forEach((function(i){t.$def.topon_sdk[i]=e[i]}))}function u(t){if(!Kd(t))return console.error(\"渠道格式错误，仅支持：“数字“、”字母“、”_-.“\"),void l.call(this);this.$def.topon_sdk.channelId=t,l.call(this)}function h(t){Kd(t)?this.$def.topon_sdk.subChannelId=t:console.error(\"渠道格式错误，仅支持：“数字“、”字母“、”_-.“\")}function p(t){if(t&&!v(t)){var e=Xd(t);if(null!=e&&e.length)for(var i=0;i<e.length;i++)console.error(e[i]);else{var n=zd(t);this.$def.topon_sdk.customParam=n}}else console.error(\"setCustomParam参数错误\")}function f(t,e){if(t&&e&&!v(e)){var i=Xd(e);if(null!=i&&i.length)for(var n=0;n<i.length;n++)console.error(i[n]);else{var r=zd(e);this.$def.topon_sdk.placementCustomParam[t]=r}}else console.error(\"setPlacementCustomParam参数错误\")}function m(){if(this.$def.topon_sdk.onShowTimestamp=Date.now(),this.$def.topon_sdk.onHideTimestamp>0){var t=this.$def.topon_sdk.onShowTimestamp-this.$def.topon_sdk.onHideTimestamp,e={key:\"HOT_START_INTERVAL_TIME\",msg:String(t)};Va.call(this,e),this.$def.topon_sdk.onHideTimestamp=0}}function _(){return g.apply(this,arguments)}function g(){return(g=o(i().mark((function t(){var e,n,r,a,o,d,s,l,c;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.$def.topon_sdk.onHideTimestamp=Date.now(),e=this.$def.topon_sdk.onHideTimestamp-this.$def.topon_sdk.onInitTimestamp,n=this.$def.topon_sdk.onHideTimestamp-this.$def.topon_sdk.onShowTimestamp,o=String(this.$def.topon_sdk.onHideTimestamp),e>n&&this.$def.topon_sdk.onHideCounter>0?(r=\"3\",a=String(this.$def.topon_sdk.onShowTimestamp),d=String(n)):(r=\"1\",a=String(this.$def.topon_sdk.onInitTimestamp),d=String(e)),t.next=7,G();case 7:return s=t.sent,l={key:\"STAY_TIME\",sdk_time:Date.now(),upid:s,msg:r,msg1:a,msg2:o,msg3:d},Va.call(this,l),this.$def.topon_sdk.onHideCounter++,t.next=13,Ga.call(this,l);case 13:c=t.sent,this.$def.topon_sdk.destroyParams=c;case 15:case\"end\":return t.stop()}}),t,this)})))).apply(this,arguments)}function y(){this.$def.topon_sdk.onDestroyTimestamp=Date.now();var t,e,i,n,r=this.$def.topon_sdk.onDestroyTimestamp-this.$def.topon_sdk.onInitTimestamp,a=this.$def.topon_sdk.onDestroyTimestamp-this.$def.topon_sdk.onShowTimestamp;i=String(this.$def.topon_sdk.onDestroyTimestamp),r>a&&this.$def.topon_sdk.onHideCounter>1?(t=\"4\",e=String(this.$def.topon_sdk.onShowTimestamp),n=String(a)):(t=\"2\",e=String(this.$def.topon_sdk.onInitTimestamp),n=String(r));var o={key:\"STAY_TIME\",sdk_time:Date.now(),msg:t,msg1:e,msg2:i,msg3:n};za.call(this,o)}return function(t){return r.apply(this,arguments)}.call(t,n)})}();\n";
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ "./node_modules/axios/lib/defaults/transitional.js");
var AxiosError = __webpack_require__(/*! ../core/AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");
var CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ "./node_modules/axios/lib/cancel/CanceledError.js");
var parseProtocol = __webpack_require__(/*! ../helpers/parseProtocol */ "./node_modules/axios/lib/helpers/parseProtocol.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;
    var onCanceled;
    function done() {
      if (config.cancelToken) {
        config.cancelToken.unsubscribe(onCanceled);
      }

      if (config.signal) {
        config.signal.removeEventListener('abort', onCanceled);
      }
    }

    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);

    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';
      var transitional = config.transitional || transitionalDefaults;
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(new AxiosError(
        timeoutErrorMessage,
        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,
        config,
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken || config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = function(cancel) {
        if (!request) {
          return;
        }
        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);
        request.abort();
        request = null;
      };

      config.cancelToken && config.cancelToken.subscribe(onCanceled);
      if (config.signal) {
        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);
      }
    }

    if (!requestData) {
      requestData = null;
    }

    var protocol = parseProtocol(fullPath);

    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {
      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));
      return;
    }


    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults/index.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Expose Cancel & CancelToken
axios.CanceledError = __webpack_require__(/*! ./cancel/CanceledError */ "./node_modules/axios/lib/cancel/CanceledError.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
axios.VERSION = (__webpack_require__(/*! ./env/data */ "./node_modules/axios/lib/env/data.js").version);
axios.toFormData = __webpack_require__(/*! ./helpers/toFormData */ "./node_modules/axios/lib/helpers/toFormData.js");

// Expose AxiosError class
axios.AxiosError = __webpack_require__(/*! ../lib/core/AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports["default"] = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var CanceledError = __webpack_require__(/*! ./CanceledError */ "./node_modules/axios/lib/cancel/CanceledError.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;

  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;

  // eslint-disable-next-line func-names
  this.promise.then(function(cancel) {
    if (!token._listeners) return;

    var i;
    var l = token._listeners.length;

    for (i = 0; i < l; i++) {
      token._listeners[i](cancel);
    }
    token._listeners = null;
  });

  // eslint-disable-next-line func-names
  this.promise.then = function(onfulfilled) {
    var _resolve;
    // eslint-disable-next-line func-names
    var promise = new Promise(function(resolve) {
      token.subscribe(resolve);
      _resolve = resolve;
    }).then(onfulfilled);

    promise.cancel = function reject() {
      token.unsubscribe(_resolve);
    };

    return promise;
  };

  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new CanceledError(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `CanceledError` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Subscribe to the cancel signal
 */

CancelToken.prototype.subscribe = function subscribe(listener) {
  if (this.reason) {
    listener(this.reason);
    return;
  }

  if (this._listeners) {
    this._listeners.push(listener);
  } else {
    this._listeners = [listener];
  }
};

/**
 * Unsubscribe from the cancel signal
 */

CancelToken.prototype.unsubscribe = function unsubscribe(listener) {
  if (!this._listeners) {
    return;
  }
  var index = this._listeners.indexOf(listener);
  if (index !== -1) {
    this._listeners.splice(index, 1);
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var AxiosError = __webpack_require__(/*! ../core/AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");
var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function CanceledError(message) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);
  this.name = 'CanceledError';
}

utils.inherits(CanceledError, AxiosError, {
  __CANCEL__: true
});

module.exports = CanceledError;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var buildFullPath = __webpack_require__(/*! ./buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var validator = __webpack_require__(/*! ../helpers/validator */ "./node_modules/axios/lib/helpers/validator.js");

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(configOrUrl, config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof configOrUrl === 'string') {
    config = config || {};
    config.url = configOrUrl;
  } else {
    config = configOrUrl || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean),
      forcedJSONParsing: validators.transitional(validators.boolean),
      clarifyTimeoutError: validators.transitional(validators.boolean)
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  var fullPath = buildFullPath(config.baseURL, config.url);
  return buildURL(fullPath, config.params, config.paramsSerializer);
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method: method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url: url,
        data: data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();

  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);
  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  response && (this.response = response);
}

utils.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});

var prototype = AxiosError.prototype;
var descriptors = {};

[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED'
// eslint-disable-next-line func-names
].forEach(function(code) {
  descriptors[code] = {value: code};
});

Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {value: true});

// eslint-disable-next-line func-names
AxiosError.from = function(error, code, config, request, response, customProps) {
  var axiosError = Object.create(prototype);

  utils.toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  });

  AxiosError.call(axiosError, error.message, code, config, request, response);

  axiosError.name = error.name;

  customProps && Object.assign(axiosError, customProps);

  return axiosError;
};

module.exports = AxiosError;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults/index.js");
var CanceledError = __webpack_require__(/*! ../cancel/CanceledError */ "./node_modules/axios/lib/cancel/CanceledError.js");

/**
 * Throws a `CanceledError` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new CanceledError();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      return getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(prop) {
    if (prop in config2) {
      return getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      return getMergedValue(undefined, config1[prop]);
    }
  }

  var mergeMap = {
    'url': valueFromConfig2,
    'method': valueFromConfig2,
    'data': valueFromConfig2,
    'baseURL': defaultToConfig2,
    'transformRequest': defaultToConfig2,
    'transformResponse': defaultToConfig2,
    'paramsSerializer': defaultToConfig2,
    'timeout': defaultToConfig2,
    'timeoutMessage': defaultToConfig2,
    'withCredentials': defaultToConfig2,
    'adapter': defaultToConfig2,
    'responseType': defaultToConfig2,
    'xsrfCookieName': defaultToConfig2,
    'xsrfHeaderName': defaultToConfig2,
    'onUploadProgress': defaultToConfig2,
    'onDownloadProgress': defaultToConfig2,
    'decompress': defaultToConfig2,
    'maxContentLength': defaultToConfig2,
    'maxBodyLength': defaultToConfig2,
    'beforeRedirect': defaultToConfig2,
    'transport': defaultToConfig2,
    'httpAgent': defaultToConfig2,
    'httpsAgent': defaultToConfig2,
    'cancelToken': defaultToConfig2,
    'socketPath': defaultToConfig2,
    'responseEncoding': defaultToConfig2,
    'validateStatus': mergeDirectKeys
  };

  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {
    var merge = mergeMap[prop] || mergeDeepProperties;
    var configValue = merge(prop);
    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var AxiosError = __webpack_require__(/*! ./AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError(
      'Request failed with status code ' + response.status,
      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults/index.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ../helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");
var AxiosError = __webpack_require__(/*! ../core/AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");
var transitionalDefaults = __webpack_require__(/*! ./transitional */ "./node_modules/axios/lib/defaults/transitional.js");
var toFormData = __webpack_require__(/*! ../helpers/toFormData */ "./node_modules/axios/lib/helpers/toFormData.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ../adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ../adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: transitionalDefaults,

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }

    var isObjectPayload = utils.isObject(data);
    var contentType = headers && headers['Content-Type'];

    var isFileList;

    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {
      var _FormData = this.env && this.env.FormData;
      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());
    } else if (isObjectPayload || contentType === 'application/json') {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }

    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional || defaults.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  env: {
    FormData: __webpack_require__(/*! ./env/FormData */ "./node_modules/axios/lib/helpers/null.js")
  },

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


module.exports = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};


/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ ((module) => {

module.exports = {
  "version": "0.27.2"
};

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return utils.isObject(payload) && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ ((module) => {

// eslint-disable-next-line strict
module.exports = null;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function parseProtocol(url) {
  var match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Convert a data object to FormData
 * @param {Object} obj
 * @param {?Object} [formData]
 * @returns {Object}
 **/

function toFormData(obj, formData) {
  // eslint-disable-next-line no-param-reassign
  formData = formData || new FormData();

  var stack = [];

  function convertValue(value) {
    if (value === null) return '';

    if (utils.isDate(value)) {
      return value.toISOString();
    }

    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {
      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  function build(data, parentKey) {
    if (utils.isPlainObject(data) || utils.isArray(data)) {
      if (stack.indexOf(data) !== -1) {
        throw Error('Circular reference detected in ' + parentKey);
      }

      stack.push(data);

      utils.forEach(data, function each(value, key) {
        if (utils.isUndefined(value)) return;
        var fullKey = parentKey ? parentKey + '.' + key : key;
        var arr;

        if (value && !parentKey && typeof value === 'object') {
          if (utils.endsWith(key, '{}')) {
            // eslint-disable-next-line no-param-reassign
            value = JSON.stringify(value);
          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {
            // eslint-disable-next-line func-names
            arr.forEach(function(el) {
              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));
            });
            return;
          }
        }

        build(value, fullKey);
      });

      stack.pop();
    } else {
      formData.append(parentKey, convertValue(data));
    }
  }

  build(obj);

  return formData;
}

module.exports = toFormData;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var VERSION = (__webpack_require__(/*! ../env/data */ "./node_modules/axios/lib/env/data.js").version);
var AxiosError = __webpack_require__(/*! ../core/AxiosError */ "./node_modules/axios/lib/core/AxiosError.js");

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};

/**
 * Transitional option validator
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new AxiosError(
        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),
        AxiosError.ERR_DEPRECATED
      );
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);
    }
  }
}

module.exports = {
  assertOptions: assertOptions,
  validators: validators
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

// eslint-disable-next-line func-names
var kindOf = (function(cache) {
  // eslint-disable-next-line func-names
  return function(thing) {
    var str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  };
})(Object.create(null));

function kindOfTest(type) {
  type = type.toLowerCase();
  return function isKindOf(thing) {
    return kindOf(thing) === type;
  };
}

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return Array.isArray(val);
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
var isArrayBuffer = kindOfTest('ArrayBuffer');


/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (kindOf(val) !== 'object') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
var isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
var isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
var isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} thing The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(thing) {
  var pattern = '[object FormData]';
  return thing && (
    (typeof FormData === 'function' && thing instanceof FormData) ||
    toString.call(thing) === pattern ||
    (isFunction(thing.toString) && thing.toString() === pattern)
  );
}

/**
 * Determine if a value is a URLSearchParams object
 * @function
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
var isURLSearchParams = kindOfTest('URLSearchParams');

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 */

function inherits(constructor, superConstructor, props, descriptors) {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  props && Object.assign(constructor.prototype, props);
}

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function} [filter]
 * @returns {Object}
 */

function toFlatObject(sourceObj, destObj, filter) {
  var props;
  var i;
  var prop;
  var merged = {};

  destObj = destObj || {};

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if (!merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = Object.getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
}

/*
 * determines whether a string ends with the characters of a specified string
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 * @returns {boolean}
 */
function endsWith(str, searchString, position) {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  var lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}


/**
 * Returns new array from array like object
 * @param {*} [thing]
 * @returns {Array}
 */
function toArray(thing) {
  if (!thing) return null;
  var i = thing.length;
  if (isUndefined(i)) return null;
  var arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
}

// eslint-disable-next-line func-names
var isTypedArray = (function(TypedArray) {
  // eslint-disable-next-line func-names
  return function(thing) {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM,
  inherits: inherits,
  toFlatObject: toFlatObject,
  kindOf: kindOf,
  kindOfTest: kindOfTest,
  endsWith: endsWith,
  toArray: toArray,
  isTypedArray: isTypedArray,
  isFileList: isFileList
};


/***/ }),

/***/ "./src/Common/helper/ajax.js":
/*!***********************************!*\
  !*** ./src/Common/helper/ajax.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.fetch"));
var _system2 = _interopRequireDefault($app_require$("@app-module/system.storage"));
var _system3 = _interopRequireDefault($app_require$("@app-module/system.device"));
var _system4 = _interopRequireDefault($app_require$("@app-module/system.prompt"));
var _system5 = _interopRequireDefault($app_require$("@app-module/system.router"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
const getUserId = async () => {
  let userId = await _system3.default.getUserId();
  return userId.data.userId;
};
const quit = () => {
  _system4.default.showDialog({
    title: '警告',
    message: "您已注销账号,请退出。",
    buttons: [{
      text: '退出',
      color: '#333333'
    }],
    success: function (data) {
      _system5.default.push({
        uri: "Page_login"
      });
    },
    cancel: function () {
      console.log("cancel");
    }
  });
};
const getTokenData = () => {
  return new Promise(async (resolve, reject) => {
    const example = (__webpack_require__(/*! ./apis/example.js */ "./src/Common/helper/apis/example.js")["default"]);
    const deviceNum = await getUserId();
    // console.log(`getTokenData()---->deviceNum=${deviceNum}`);
    // console.log('是否触发的这里');
    example.toLogin({
      loginType: "DEVICE",
      appId: 'SC_0001',
      deviceNum,
      loginAccount: deviceNum
    }).then(data => {
      console.log('走的成功回调');
      resolve(data);
    }).catch(err => {
      console.log(err, '失败回调');
      try {
        if (JSON.parse(err).code === '310001') {
          console.log('进来了');
          quit();
        }
      } catch (error) {
        console.log(error, '查看获取报错');
      }
      reject(err);
    });
  });
};
let isRefreshing = false; // 是否正在请求刷新token的接口
const refreshSubscribers = []; // 存储请求的数组
const subscribeTokenRefresh = cb => {
  // 将所有的请求都push到数组中,其实数组是[function(token){}, function(token){},...]
  refreshSubscribers.push(cb);
};
const onRrefreshed = token => {
  // 数组中的请求得到新的token之后自执行，用新的token去请求数据
  refreshSubscribers.map(cb => cb(token));
};
const isAccessTokenExpired = authData => {
  // 判断当前token是否过期
  if (new Date().getTime() - authData.expireAt > 10000 * 60) {
    return true;
  }
  return false;
};
const request = options => {
  return new Promise(async (resolve, reject) => {
    const {
      method,
      url,
      data,
      headers = {}
    } = options;
    const authData = (await _system2.default.get({
      key: 'AUTH_TOKEN_DATA'
    })) || {};
    const accessToken = authData.data ? JSON.parse(authData.data).accessToken : '';
    if (isAccessTokenExpired(authData) || !accessToken) {
      if (!options.url.includes("qa/mini/basic/user/login")) {
        if (!isRefreshing) {
          isRefreshing = true;
          getTokenData().then(async res => {
            res = JSON.parse(res);
            isRefreshing = false;
            if (res.code === "000000") {
              headers.Authorization = res.data.accessToken;
              await _system2.default.set({
                key: "AUTH_TOKEN_DATA",
                value: JSON.stringify(res.data)
              });
              console.log('res.data.accessToken', res.data.accessToken);
              onRrefreshed(res.data.accessToken);
            }
          }).catch(err => {
            isRefreshing = false;
          });
        }
        let retry = new Promise(() => {
          subscribeTokenRefresh(token => {
            headers.Authorization = token; // 用最新token请求数据
            return request(options).then(resolve).catch(reject);
          });
        });
        return retry;
      }
    }
    headers.Authorization = accessToken || '';
    _system.default.fetch({
      // url: 'https://test.ipandata.com' + url,
      url: 'https://api.ihaituo.cn' + url,
      method,
      data,
      header: _objectSpread({
        "content-type": "application/json"
      }, headers),
      // success: function (res) {
      //   const data = res.data
      //   if (data.code === "000000" || JSON.parse(data).code === "000000") {
      //     resolve(url.includes("qa/mini/basic/user/login") ? res.data : JSON.parse(res.data));
      //   } else {
      //     if (data.code === "300002") {
      //       $storage.delete({
      //         key: 'AUTH_TOKEN_DATA'
      //       })
      //       request(options)
      //         .then(resolve)
      //         .catch(reject);
      //     } else {
      //       reject(res.data);
      //     }
      //   }
      // },

      success: function (res) {
        try {
          const data = res.data;

          // 尝试解析 JSON 数据，如果解析失败，则会抛出错误
          const parsedData = typeof data === 'string' ? JSON.parse(data) : data;
          if (parsedData.code === "000000") {
            resolve(url.includes("qa/mini/basic/user/login") ? data : parsedData);
          } else {
            if (parsedData.code === "300002") {
              _system2.default.delete({
                key: 'AUTH_TOKEN_DATA'
              });
              request(options).then(resolve).catch(reject);
            } else {
              reject(data);
            }
          }
        } catch (e) {
          console.error("Error parsing JSON or handling code: ", e);

          // 检查是否返回的是 HTML，而不是 JSON
          if (typeof res.data === 'string' && res.data.startsWith('<html>')) {
            reject("Server returned an HTML page instead of JSON. Possible incorrect URL or server error.");
          } else {
            reject("Error parsing JSON or handling code: " + e.message);
          }
        }
      },
      fail: function (err) {
        reject(err);
      },
      complete: function (res) {}
    });
  });
};
var _default = exports["default"] = request;

/***/ }),

/***/ "./src/Common/helper/apis/example.js":
/*!*******************************************!*\
  !*** ./src/Common/helper/apis/example.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ajax = _interopRequireDefault(__webpack_require__(/*! ../ajax.js */ "./src/Common/helper/ajax.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 登录 
const toLogin = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/user/login`,
    data
  });
};

// 上传步数
const uploadsteps = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/sc/upload`,
    data
  });
};
// 获取步数
const getsteps = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/sc`,
    data
  });
};

// 获取最近30天记录
const getstepslist = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/sc/list`
  });
};

//提现
const withdraw = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/user/withdraw`,
    data
  });
};

//用户余额记录
const record = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/cash/record`,
    data
  });
};

//获取广告完成次数
const getAdCount = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/complete/count`,
    data
  });
};

//广告完成
const completeAd = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/complete`,
    data
  });
};

//广告完成-加密
const completeAdRSA = async data => {
  let timestamp = +new Date();
  data.timestamp = timestamp;
  let _data = await $utils.dataEncryption(data);
  let param = {
    data: _data
  };
  console.log('任务加密', param);
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/finish`,
    data: JSON.stringify(param)
  });
};

//广告转化上传   type:广告渠道类型: jh(鲸鸿), ks(快手), jl(巨量), ,可用值:jh,ks,jl
const convertUpload = data => {
  console.log('data= ', data, `url= /qa/mini/basic/ad/convert/upload/${data.type}`);
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/ad/convert/upload/${data.type}`,
    data
  });
};

//获取手势返回配置信息
const bolckReturn = () => {
  let brand = getApp().$def.dataApp.brand;
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/clickControl/return/info/${brand}`
  });
};

/**
 * 获取页面透明层配置信息  
 *
 */

const showTclayer = data => {
  let brand = getApp().$def.dataApp.brand;
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/clickControl/transparentLayer/info/${brand}`,
    data
  });
};

/**
 * 获取是否自动弹窗  
 *
 */

const popUps = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/auto/popUps`
  });
};

/**
 * 转化点击次数
 *
 */
const clickCount = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/convert/clickCount/${data.type}`,
    data
  });
};

//单个埋点数据
const capture = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/track/capture`,
    data
  });
};
var _default = exports["default"] = {
  toLogin,
  uploadsteps,
  getsteps,
  getstepslist,
  withdraw,
  record,
  getAdCount,
  completeAd,
  completeAdRSA,
  convertUpload,
  bolckReturn,
  showTclayer,
  popUps,
  clickCount,
  capture
};

/***/ }),

/***/ "./src/Common/helper/apis/index.js":
/*!*****************************************!*\
  !*** ./src/Common/helper/apis/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
/**
 * 导出 apis 下目录的所有接口
 */
const files = __webpack_require__("./src/Common/helper/apis sync recursive \\.js");
const modules = {};
files.keys().forEach(key => {
  if (key === './index.js') {
    return;
  }
  modules[key.replace(/(^\.\/|\.js$)/g, '')] = files(key).default;
});
var _default = exports["default"] = modules;

/***/ }),

/***/ "./src/Common/helper/apis/task.js":
/*!****************************************!*\
  !*** ./src/Common/helper/apis/task.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ajax = _interopRequireDefault(__webpack_require__(/*! ../ajax.js */ "./src/Common/helper/ajax.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 获取广告完成情况
const getCompleteCount = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/ad/complete/count`,
    data
  });
};

// 完成广告
const postCompleteAd = data => {
  return (0, _ajax.default)({
    method: 'POST',
    url: `/qa/mini/basic/ad/complete`,
    data
  });
};
// 完成广告(加密)
const postFinishCompleteAd = async (data, headers) => {
  let timestamp = +new Date();
  data.timestamp = timestamp;
  let _data = await $utils.dataEncryption(data);
  let param = {
    data: _data
  };
  console.log('任务加密', param);
  return (0, _ajax.default)({
    method: 'POST',
    url: `/qa/mini/basic/ad/finish`,
    data: JSON.stringify(param),
    headers
  });
};

// 获取是否自动弹窗
const getAutoPopUps = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/ad/auto/popUps`,
    data
  });
};

// 转换上报
const postConvertUpload = data => {
  return (0, _ajax.default)({
    method: 'POST',
    url: `/qa/mini/basic/ad/convert/upload/${data.type}`,
    data
  });
};

// 获取手势返回配置信息
const getClickControlReyurn = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/clickControl/return/info/${data.brand}`,
    data
  });
};

// 获取页面透明层配置信息
const getTransparentLayer = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/clickControl/transparentLayer/info/${data.brand}`,
    data
  });
};

// 获取福利入口信息
const getUserwealEntry = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/user/weal/entry`,
    data
  });
};

// 获取跳转链接
const getAdJumpLink = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/ad/jumpLink/${data.brand}`,
    data
  });
};

// 获取是否开启广告页入口
const getAdPageEntrance = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/ad/adPage/entrance`,
    data
  });
};

// 转化点击次数

const getConversionlicks = data => {
  return (0, _ajax.default)({
    method: 'GET',
    url: `/qa/mini/basic/ad/convert/clickCount/${data.type || 'jh'}`,
    data
  });
};

// 埋点捕获
const postTrackCapture = data => {
  return (0, _ajax.default)({
    method: 'POST',
    url: `/qa/track/capture`,
    data
  });
};
let task = {
  getCompleteCount,
  postCompleteAd,
  getAutoPopUps,
  postFinishCompleteAd,
  getClickControlReyurn,
  getTransparentLayer,
  postConvertUpload,
  getUserwealEntry,
  getAdJumpLink,
  getAdPageEntrance,
  getConversionlicks,
  postTrackCapture
};
var _default = exports["default"] = task;

/***/ }),

/***/ "./src/Common/helper/apis/user.js":
/*!****************************************!*\
  !*** ./src/Common/helper/apis/user.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ajax = _interopRequireDefault(__webpack_require__(/*! ../ajax.js */ "./src/Common/helper/ajax.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 登录 
const getUserInfo = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/info`
  });
};

// 金币
const getDailySignDay = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/goldExchangeRule/daily/sign/day`,
    data
  });
};
//签到
const goSianIn = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/goldExchangeRule/daily/sign`,
    data
  });
};

// 反馈
const postUserFeedback = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/user/feedback`,
    data
  });
};
//注销用户
const putForeverLogout = data => {
  return (0, _ajax.default)({
    method: "PUT",
    url: `/qa/mini/user/forever/logout`
  });
};

// 用户余额记录
const getUserCashRecord = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/cash/record`,
    data
  });
};

// 用户金币记录
const getUserGoldRecord = data => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/gold/record`,
    data
  });
};
//设置支付宝账户
const putAlipayAccount = data => {
  return (0, _ajax.default)({
    method: "PUT",
    url: `/qa/mini/user/alipay/account`,
    data
  });
};

//发送验证码
const postSendCode = data => {
  return (0, _ajax.default)({
    method: "POST",
    url: `/qa/mini/basic/user/sendCode/${data.phone}`
  });
};

//获取福利入口信息
const wealentry = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/user/weal/entry`
  });
};

//获取是否开启广告页入口
const entrance = () => {
  return (0, _ajax.default)({
    method: "GET",
    url: `/qa/mini/basic/ad/adPage/entrance`
  });
};
let user = {
  getUserInfo,
  getDailySignDay,
  goSianIn,
  postUserFeedback,
  getUserCashRecord,
  getUserGoldRecord,
  putForeverLogout,
  putAlipayAccount,
  postSendCode,
  wealentry,
  entrance
};
var _default = exports["default"] = user;

/***/ }),

/***/ "./src/Common/helper/processData.js":
/*!******************************************!*\
  !*** ./src/Common/helper/processData.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.clearStorage = clearStorage;
exports["default"] = void 0;
exports.deleteStorage = deleteStorage;
exports.getStorage = getStorage;
exports.incrementTodayClicks = incrementTodayClicks;
exports.localStorage = localStorage;
exports.resetTodayClicksIfNeeded = resetTodayClicksIfNeeded;
exports.setStorage = setStorage;
var _system = _interopRequireDefault($app_require$("@app-module/system.storage"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// 优化本地存储get方法
function localStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.get({
      key,
      success: function (data) {
        resolve(data);
      },
      fail: function (data, code) {
        reject(data);
      }
    });
  });
}
function setStorage(key, value = "") {
  return new Promise((resolve, reject) => {
    _system.default.set({
      key,
      value: JSON.stringify(value),
      success: function (data) {
        resolve(`setStorage success`);
      },
      fail: function (data, code) {
        reject(`setStorage fail, code = ${code}`);
      }
    });
  });
}
function getStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.get({
      key,
      success: function (data) {
        if (data) {
          const res = JSON.parse(data);
          return resolve(res);
        }
        resolve(data);
      },
      fail: function (data, code) {
        reject(`getStorage fail, code = ${code}`);
      }
    });
  });
}
function deleteStorage(key) {
  return new Promise((resolve, reject) => {
    _system.default.delete({
      key,
      success: function (data) {
        resolve(`deleteStorage success`);
      },
      fail: function (data, code) {
        reject(`deleteStorage fail, code = ${code}`);
      }
    });
  });
}
function clearStorage() {
  return new Promise((resolve, reject) => {
    _system.default.clear({
      success: function (data) {
        resolve(`clearStorage success`);
      },
      fail: function (data, code) {
        reject(`clearStorage fail, code = ${code}`);
      }
    });
  });
}

//检查是否需要重置广告点击次数
function resetTodayClicksIfNeeded() {
  const currentDate = new Date().toLocaleDateString(); //当天日期

  _system.default.get({
    key: 'lastResetDate',
    default: '-1',
    success: function (data) {
      console.log('本次检查日期：', currentDate, '--- 最后进入广告页日期：', data);
      if (data !== currentDate) {
        //日期不相同
        // 重置广告点击次数
        _system.default.set({
          key: 'todayClicks',
          value: '0'
        });
      }
    }
  });
}

//进入广告页时执行
function incrementTodayClicks() {
  _system.default.get({
    key: 'todayClicks',
    default: '0',
    //默认0次
    success: function (data) {
      console.log('点击次数+1,当前次数', data);
      let todayClicks = parseInt(data) || 0;
      todayClicks = todayClicks + 1;
      _system.default.set({
        key: 'todayClicks',
        value: todayClicks.toString()
      });
      _system.default.set({
        key: 'lastResetDate',
        value: new Date().toLocaleDateString()
      });
    }
  });
}
var _default = exports["default"] = {
  getStorage,
  setStorage,
  incrementTodayClicks,
  resetTodayClicksIfNeeded
};

/***/ }),

/***/ "./src/Common/helper/utils.js":
/*!************************************!*\
  !*** ./src/Common/helper/utils.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.device"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * 您可以将常用的方法、或系统 API，统一封装，暴露全局，以便各页面、组件调用，而无需 require / import.
 */
// 节流阀
const throttle = (fn, gapTime = 1500) => {
  let _lastTime = null;
  // 返回新的函数
  return function () {
    let _nowTime = +new Date();
    if (_nowTime - _lastTime > gapTime || !_lastTime) {
      fn.apply(this, arguments); //将this和参数传给原函数
      _lastTime = _nowTime;
    }
  };
};
const {
  JSEncrypt
} = __webpack_require__(/*! ../libs/jsencrypt/lib/index */ "./src/Common/libs/jsencrypt/lib/index.js");
const config = {
  publicKey: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqaj0Y3k54jCyTq47t73ScBX9uBsSScDo7/uZ+PhHYh9eQqHNW1bBjKGV4t3Y8Wokhv783krxhIqzkPf9nHeZ2yWqoQlPa3qOUc7Wf/HpX2+eHGRjF1/RLARJmMcEgQYB3WGbdRedu0FjQSGd+OfSS/W7Heh2ZGlF/aSHj2NYhYE4p7x4jjQIi+ueKZvVJNZpu0vhQaF45jpqQDULPL+MkkQePmupjp/PR4Ra8BVg4DwJuI6K8jL77YWaxeQRbMrEiQ0ZbTKRQ4o8N73iIM97E/h8PbDl5FbuNn0k8urkYnmv56AMdkVEyIOUwNEa8oU9QKz37o5Z2L7+yqx2zmLpVwIDAQAB'
};
const dataEncryption = (data, action = "encrypt") => {
  try {
    let keyMap = {
      encrypt: config.publicKey,
      decrypt: config.privateKey
    };
    let key = keyMap[action];
    let _data = action === "encrypt" ? JSON.stringify(data) : data;
    return new Promise((resolve, reject) => {
      if (action === "encrypt") {
        const encryptor = new JSEncrypt();
        encryptor.setPublicKey(key);
        let result = encryptor.encrypt(_data);
        console.log(result, '查看有什么');
        resolve(result);
        return resolve(result);
      }
    });
  } catch (error) {
    console.log(error, '转换报错？');
  }
};
const getUserId = async () => {
  let userId = await _system.default.getUserId();
  return userId.data.userId;
};
const getOAID = async () => {
  let oaid = await _system.default.getOAID();
  return oaid;
};

/**
 * 转化上传
 * @param {*} that 所在this 
 */
function getConvertUpload() {
  let param = _objectSpread({}, getApp().$def.dataApp.actiParam);
  console.log('getConvertUpload() 转化参数param= ', param);
  for (const key in param) {
    param[key] = param[key].replace(/\/$/, "");
  }
  const convertedParam = convertKeysToCamelCase(param);
  if (!convertedParam.callback) {
    return;
  }
  console.log('getConvertUpload() 格式化转化参数convertedParam= ', convertedParam);
  $apis.example.convertUpload(_objectSpread(_objectSpread({}, convertedParam), {}, {
    deviceId: convertedParam.oaid,
    type: convertedParam.type || 'jh'
  })).then(res => {
    console.log(res, '转换成功');
  }).catch(err => {
    console.log(err, '转换失败');
  });
}
function toCamelCase(str) {
  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
}
function convertKeysToCamelCase(obj) {
  if (Array.isArray(obj)) {
    return obj.map(v => convertKeysToCamelCase(v));
  } else if (obj !== null && obj.constructor === Object) {
    return Object.keys(obj).reduce((result, key) => {
      const camelCaseKey = toCamelCase(key);
      result[camelCaseKey] = convertKeysToCamelCase(obj[key]);
      return result;
    }, {});
  }
  return obj;
}

/**
* 保存广告回传参数   router.push(OBJECT)  例：@param {Object} e='hap://app/com.company.app/index?param1=value1'
*/
const saveHapUri = e => {
  // //处理华为平台的跳转链接最一个字符为/的问题
  if (e.channelValue) {
    let channelValue = e.channelValue;
    if (channelValue.charAt(channelValue.length - 1) === '/') {
      // 去掉最后一个字符
      e.channelValue = channelValue.slice(0, -1);
    }
  }
  console.log('saveHapUri() 转化参数e= ', e);
  const {
    callback = '',
    oaid = '',
    type = '',
    channelValue = '',
    corp_id = ''
  } = e;
  getApp().$def.dataApp.actiParam = _objectSpread({}, e);
};

/**
 * 转化上传
 * @param {*} that 所在this  小说广告页面的转化方法
 */
function conversionUpload(that) {
  let param = _objectSpread({}, that.$app.$def.dataApp.actiParam);
  param.type = judgingAd(that); //转换类型
  if (Object.keys(param).length <= 0 || !param.type) {
    //无值的情况直接删除
    return;
  }
  console.log('进入了回传上报');
  let conversionlicks = that.$app.$def.dataApp.conversionlicks; //第几次回传上报
  let clicksOnAdsNow = that.$app.$def.dataApp.clicksOnAdsNow + 1; //现在是第几次任务
  console.log(conversionlicks, 'conversionlicks');
  console.log(clicksOnAdsNow, 'clicksOnAdsNow');
  that.$app.$def.dataApp.clicksOnAdsNow = clicksOnAdsNow;
  if (conversionlicks <= 0 || clicksOnAdsNow !== conversionlicks) {
    console.log('取消转换上传');
    return;
  }
  if (param.type === 'jh') {
    for (const key in param) {
      param[key] = param[key].replace(/\/$/, '');
    }
    param = convertKeysToCamelCase(param);
  }
  console.log(param, '查看上传的参数');
  $apis.task.postConvertUpload(_objectSpread(_objectSpread({}, param), {}, {
    deviceId: param.oaid || '',
    type: param.type
  })).then(res => {
    console.log(res, '转换成功');
  }).catch(err => {
    console.log(err, '转换失败');
  });
}

/**
* 插屏广告 
*/

const tablePlaque = async (onCloseCallback, onCatchCallback) => {
  let Provider = $ad.getProvider();
  if (!Provider) {
    console.log('没有广告商');
    return;
  }
  let interstitialAd = $ad.createInterstitialAd({
    adUnitId: getApp().$def.dataApp.interstitialAdUnitId
  });
  interstitialAd.load().then(res => {
    console.log(res, '查屏加载成功');
    interstitialAd.show().then(() => {
      console.log('插屏广告show成功');
    }, () => {
      console.log('插屏广告show失败');
    });
  })
  // .catch((err) => {
  //   console.log(err, '插屏加载失败');
  // })
  .catch(onCatchCallback);
  interstitialAd.onClick(() => {
    console.log('插屏广告点击了');
    //转化上传
    getConvertUpload();
  });
  interstitialAd.onClose(onCloseCallback);
};

/**
* banner广告  margin_bot底部缩进  
*/

let bannerAd;
const showBannerAd = async margin_bot => {
  // const storageFlag = await $processData.getStorage("_PRIVAC");
  // if (!storageFlag) {
  //   //未授权，弹出授权询问
  //   console.log('用户授权= ', storageFlag);
  //   console.log('未授权,不加载banner广告');
  //   return
  // }

  let Provider = $ad.getProvider();
  if (!Provider) {
    console.log('没有广告返回');
    return;
  }
  var d = _system.default.getInfoSync();
  // console.info("banner广告-设备信息 " + JSON.stringify(d));

  let height = 57; //两种高度  57与144
  //获取页面内可见窗口的高度和宽度，此值不包括标题栏和状态栏高度
  let windowWidth = d.screenWidth;
  let windowHeight = d.screenHeight - 153 - margin_bot;
  //logicWidth对应manifest.json文件设置的designWidth值，默认是750
  let logicWidth = 750;
  //广告自身大小单位是dp，需要转换成px单位
  let realAdHeighPX = height * d.screenDensity;
  //标题栏高度一般是42dp左右，此处也需要转换成px单位
  let titleBarHeight = 42 * d.screenDensity;
  //此处计算很关键，需要将状态栏高度、标题栏高度加上
  let realToppx = windowHeight - realAdHeighPX + d.statusBarHeight + titleBarHeight;

  // console.info("calBannerPostion1 realToppx=" + realToppx + ", logicWidth= " + logicWidth, "windowWidth= " + windowWidth);
  //转换成页面基准值下的逻辑单位
  let logicWebTop = realToppx * logicWidth / windowWidth;

  //此对象请自己在data下定义
  let top = logicWebTop === 0 ? 1230 : logicWebTop;
  // console.info("calBannerPostion1 top=" + top + ", logicWebTop= " + logicWebTop);

  const style = {
    left: 0,
    top: top,
    width: 360,
    height: height
  };
  let adid = getApp().$def.dataApp.bannerAdUnitId;
  // let adid = 'z1v6jykvy9'
  // console.info("banner广告位=" + adid);
  bannerAd = $ad.createBannerAd({
    adUnitId: adid,
    //banner广告位
    style: style,
    adIntervals: 60 //刷新时间，秒
  });
  // console.info("annerAd.style=" + JSON.stringify(bannerAd.style));
  bannerAd.onLoad(e => {
    console.info("load bannerAd  onload success e=" + JSON.stringify(e));
  });
  bannerAd.onError(e => {
    // console.error("load bannerAd  onError " + JSON.stringify(e));
  });
  bannerAd.onClose(e => {
    // console.info("load bannerAd  onClose");
  });
  bannerAd.show();
};
const hideBanerAd = () => {
  if (bannerAd) {
    bannerAd.hide();
  }
};
const viewBanner = () => {
  if (bannerAd) {
    bannerAd.show();
  }
};
const destroyBanner = () => {
  if (bannerAd) {
    bannerAd.destroy();
  }
};

//打开拆福袋页面
const openAd = () => {
  //友盟事件打点
  $umeng_stat.trackEvent('wd_xyfddhj', '点击');
  var r = 'Page_cfd';
  // r = 'hap://app/com.haituo.setpplanet/pages/advertisingCampaigns?callback=45079911&oaid=30ac1840-06aa-461f-9594-7f7b365f0dfe&channelValue=KYY'
  r = 'hap://app/com.haituo.setpplanet/Page_cfd?channelValue=jzxgj11/';
  $router.push({
    uri: r
  });
};

/**
 * 分秒倒计时
 * @param {Object} countDownData 相关参数：totalSeconds倒计时秒数、name属性名称、isFormat格式化
 * @param {*} that 当前组件this
 */
const startCountDown = (countDownData, that) => {
  let {
    totalSeconds = 3,
    name,
    isFormat = false
  } = countDownData;
  let _this = that;
  return new Promise((resolve, reject) => {
    let timer = setInterval(() => {
      if (totalSeconds > 1) {
        totalSeconds--;
        const minutes = isFormat ? (void 0).formatTime(Math.floor(totalSeconds / 60)) : Math.floor(totalSeconds / 60);
        const seconds = isFormat ? (void 0).formatTime(Math.floor(totalSeconds % 60)) : Math.floor(totalSeconds % 60);
        _this[name] = {
          minutes,
          seconds
        };
      } else {
        clearInterval(_this.timer);
        resolve();
      }
    }, 1000);
    _this.timer = timer;
  });
};

/**
 * 判断广告商
 */
function judgingAd(context) {
  let param = _objectSpread({}, context.$app.$def.dataApp.actiParam);
  let type = param.type || '';
  if (type) {
    return type;
  }
  if (param.adgroup_id && param.content_id && param.campaign_id && param.callback) {
    type = 'jh';
  } else if (param.btn_name && param.backurl) {
    type = 'vivo';
  }
  return type ? type : false;
}

/**
 * 判断广告主id
 * @param {*} context
 */

function analyzeAdvertiserId(context) {
  const {
    backurl = '',
    corp_id = '',
    callback = ''
  } = context.$app.$def.dataApp.actiParam;
  if (backurl) {
    return backurl;
  } else if (callback) {
    return corp_id ? corp_id : callback;
  }
}

/**
 * 获取哪一次上报回传  context  指向
 */
function getConversionlicks(context) {
  const {
    type = '',
    corp_id = '',
    channelValue = ''
  } = context.$app.$def.dataApp.actiParam;
  let adType = type ? type : judgingAd(context); //有类型直接获取类型 没有则进行判断；
  let corpId = corp_id ? corp_id : analyzeAdvertiserId(context);
  $apis.task.getConversionlicks({
    type: adType,
    corpId,
    channelValue
  }).then(res => {
    console.log(res, '查看点击回传');
    if (res.data === 0) {
      $utils.conversionUpload(context);
    }
    context.$app.$def.dataApp.conversionlicks = res.data;
  }).catch(err => {
    console.log(err, '查看点击回传失败');
  });
}

// 埋点上报
async function buriedPointReport(these, event = 'AppLaunch', adId = '') {
  try {
    let checkPaem = _objectSpread({}, these.$app.$def.dataApp.actiParam);
    console.log(these.$app.$def.dataApp, 'these.$app.$def.dataApp-');
    console.log(checkPaem, '查看是否有参数');
    if (Object.keys(checkPaem).length <= 0) {
      //无值的情况直接删除
      return;
    }

    // //处理华为平台的跳转链接最一个字符为/的问题
    // if (checkPaem.channelValue) {
    //   let channelValue = checkPaem.channelValue;
    //   if (channelValue.charAt(channelValue.length - 1) === '/') {
    //     // 去掉最后一个字符
    //     checkPaem.channelValue = channelValue.slice(0, -1);
    //   }
    // }

    let token = await $storage.get({
      key: 'AUTH_TOKEN_DATA'
    });
    token = JSON.parse(token.data);
    console.log('查看这个token', token);
    let adBrand = $ad.getProvider();
    let param = _objectSpread(_objectSpread({}, checkPaem), {}, {
      cid: checkPaem.channelValue,
      event: event === 'click' ? '$AdClick' : '$AppLaunch',
      pid: adBrand.toLowerCase(),
      appId: token.appId,
      userId: token.userId
    });
    let urlQuery = convertToQueryString(checkPaem);
    _system.default.getInfo({
      success: function (res) {
        const phoninfo = res;
        let param2 = _objectSpread(_objectSpread({}, param), {}, {
          properties: _objectSpread(_objectSpread({}, res), {}, {
            manufacturer: phoninfo.manufacturer,
            model: phoninfo.model,
            os: phoninfo.osType,
            product: phoninfo.product,
            analysis: {
              adId: adId,
              title: adId
            },
            urlQuery: urlQuery
          })
        });
        console.log('查看上报参数', param2);
        $apis.task.postTrackCapture(_objectSpread({}, param2)).then(res => {
          console.log('上报成功', res);
        }).catch(err => {
          console.log(err, '上传失败');
        });
      }
    });
  } catch (error) {
    console.log(error, '上传错误');
  }
}
function convertToQueryString(objects) {
  // 初始化一个空字符串来存储结果
  let queryString = '';

  // 遍历对象数组
  Object.keys(objects).forEach((key, index) => {
    // 如果不是第一个键值对，则添加 '&'
    if (index > 0 || queryString !== '') {
      queryString += '&';
    }
    // 将键值对添加到查询字符串中
    queryString += `${key}=${objects[key]}`;
  });
  return queryString;
}
var _default = exports["default"] = {
  throttle,
  getUserId,
  getConvertUpload,
  startCountDown,
  dataEncryption,
  tablePlaque,
  showBannerAd,
  hideBanerAd,
  viewBanner,
  destroyBanner,
  saveHapUri,
  getOAID,
  openAd,
  buriedPointReport,
  //埋点
  getConversionlicks,
  conversionUpload
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/JSEncrypt.js":
/*!****************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/JSEncrypt.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.JSEncrypt = void 0;
var _base = __webpack_require__(/*! ./lib/jsbn/base64 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js");
var _JSEncryptRSAKey = __webpack_require__(/*! ./JSEncryptRSAKey */ "./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js");
var _a;
var version = typeof process !== 'undefined' ? (_a = process.env) === null || _a === void 0 ? void 0 : _a.npm_package_version : undefined;
/**
 *
 * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour
 * possible parameters are:
 * - default_key_size        {number}  default: 1024 the key size in bit
 * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent
 * - log                     {boolean} default: false whether log warn/error or not
 * @constructor
 */
var JSEncrypt = exports.JSEncrypt = /** @class */function () {
  function JSEncrypt(options) {
    if (options === void 0) {
      options = {};
    }
    options = options || {};
    this.default_key_size = options.default_key_size ? parseInt(options.default_key_size, 10) : 1024;
    this.default_public_exponent = options.default_public_exponent || "010001"; // 65537 default openssl public exponent for rsa key type
    this.log = options.log || false;
    // The private and public key.
    this.key = null;
  }
  /**
   * Method to set the rsa key parameter (one method is enough to set both the public
   * and the private key, since the private key contains the public key paramenters)
   * Log a warning if logs are enabled
   * @param {Object|string} key the pem encoded string or an object (with or without header/footer)
   * @public
   */
  JSEncrypt.prototype.setKey = function (key) {
    if (this.log && this.key) {
      console.warn("A key was already set, overriding existing.");
    }
    this.key = new _JSEncryptRSAKey.JSEncryptRSAKey(key);
  };
  /**
   * Proxy method for setKey, for api compatibility
   * @see setKey
   * @public
   */
  JSEncrypt.prototype.setPrivateKey = function (privkey) {
    // Create the key.
    this.setKey(privkey);
  };
  /**
   * Proxy method for setKey, for api compatibility
   * @see setKey
   * @public
   */
  JSEncrypt.prototype.setPublicKey = function (pubkey) {
    // Sets the public key.
    this.setKey(pubkey);
  };
  /**
   * Proxy method for RSAKey object's decrypt, decrypt the string using the private
   * components of the rsa key object. Note that if the object was not set will be created
   * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
   * @param {string} str base64 encoded crypted string to decrypt
   * @return {string} the decrypted string
   * @public
   */
  JSEncrypt.prototype.decrypt = function (str) {
    // Return the decrypted string.
    try {
      return this.getKey().decrypt((0, _base.b64tohex)(str));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's encrypt, encrypt the string using the public
   * components of the rsa key object. Note that if the object was not set will be created
   * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
   * @param {string} str the string to encrypt
   * @return {string} the encrypted string encoded in base64
   * @public
   */
  JSEncrypt.prototype.encrypt = function (str) {
    // Return the encrypted string.
    try {
      return (0, _base.hex2b64)(this.getKey().encrypt(str));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's sign.
   * @param {string} str the string to sign
   * @param {function} digestMethod hash method
   * @param {string} digestName the name of the hash algorithm
   * @return {string} the signature encoded in base64
   * @public
   */
  JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {
    // return the RSA signature of 'str' in 'hex' format.
    try {
      return (0, _base.hex2b64)(this.getKey().sign(str, digestMethod, digestName));
    } catch (ex) {
      return false;
    }
  };
  /**
   * Proxy method for RSAKey object's verify.
   * @param {string} str the string to verify
   * @param {string} signature the signature encoded in base64 to compare the string to
   * @param {function} digestMethod hash method
   * @return {boolean} whether the data and signature match
   * @public
   */
  JSEncrypt.prototype.verify = function (str, signature, digestMethod) {
    // Return the decrypted 'digest' of the signature.
    try {
      return this.getKey().verify(str, (0, _base.b64tohex)(signature), digestMethod);
    } catch (ex) {
      return false;
    }
  };
  /**
   * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object
   * will be created and returned
   * @param {callback} [cb] the callback to be called if we want the key to be generated
   * in an async fashion
   * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object
   * @public
   */
  JSEncrypt.prototype.getKey = function (cb) {
    // Only create new if it does not exist.
    if (!this.key) {
      // Get a new private key.
      this.key = new _JSEncryptRSAKey.JSEncryptRSAKey();
      if (cb && {}.toString.call(cb) === "[object Function]") {
        this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);
        return;
      }
      // Generate the key.
      this.key.generate(this.default_key_size, this.default_public_exponent);
    }
    return this.key;
  };
  /**
   * Returns the pem encoded representation of the private key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the private key WITH header and footer
   * @public
   */
  JSEncrypt.prototype.getPrivateKey = function () {
    // Return the private representation of this key.
    return this.getKey().getPrivateKey();
  };
  /**
   * Returns the pem encoded representation of the private key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the private key WITHOUT header and footer
   * @public
   */
  JSEncrypt.prototype.getPrivateKeyB64 = function () {
    // Return the private representation of this key.
    return this.getKey().getPrivateBaseKeyB64();
  };
  /**
   * Returns the pem encoded representation of the public key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the public key WITH header and footer
   * @public
   */
  JSEncrypt.prototype.getPublicKey = function () {
    // Return the private representation of this key.
    return this.getKey().getPublicKey();
  };
  /**
   * Returns the pem encoded representation of the public key
   * If the key doesn't exists a new key will be created
   * @returns {string} pem encoded representation of the public key WITHOUT header and footer
   * @public
   */
  JSEncrypt.prototype.getPublicKeyB64 = function () {
    // Return the private representation of this key.
    return this.getKey().getPublicBaseKeyB64();
  };
  JSEncrypt.version = version;
  return JSEncrypt;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/JSEncryptRSAKey.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.JSEncryptRSAKey = void 0;
var _base = __webpack_require__(/*! ./lib/jsbn/base64 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js");
var _hex = __webpack_require__(/*! ./lib/asn1js/hex */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js");
var _base2 = __webpack_require__(/*! ./lib/asn1js/base64 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js");
var _asn = __webpack_require__(/*! ./lib/asn1js/asn1 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js");
var _rsa = __webpack_require__(/*! ./lib/jsbn/rsa */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js");
var _jsbn = __webpack_require__(/*! ./lib/jsbn/jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _asn2 = __webpack_require__(/*! ./lib/jsrsasign/asn1-1.0 */ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js");
var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
  };
  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
/**
 * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.
 * This object is just a decorator for parsing the key parameter
 * @param {string|Object} key - The key in string format, or an object containing
 * the parameters needed to build a RSAKey object.
 * @constructor
 */
var JSEncryptRSAKey = exports.JSEncryptRSAKey = /** @class */function (_super) {
  __extends(JSEncryptRSAKey, _super);
  function JSEncryptRSAKey(key) {
    var _this = _super.call(this) || this;
    // Call the super constructor.
    //  RSAKey.call(this);
    // If a key key was provided.
    if (key) {
      // If this is a string...
      if (typeof key === "string") {
        _this.parseKey(key);
      } else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) || JSEncryptRSAKey.hasPublicKeyProperty(key)) {
        // Set the values for the key.
        _this.parsePropertiesFrom(key);
      }
    }
    return _this;
  }
  /**
   * Method to parse a pem encoded string containing both a public or private key.
   * The method will translate the pem encoded string in a der encoded string and
   * will parse private key and public key parameters. This method accepts public key
   * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).
   *
   * @todo Check how many rsa formats use the same format of pkcs #1.
   *
   * The format is defined as:
   * PublicKeyInfo ::= SEQUENCE {
   *   algorithm       AlgorithmIdentifier,
   *   PublicKey       BIT STRING
   * }
   * Where AlgorithmIdentifier is:
   * AlgorithmIdentifier ::= SEQUENCE {
   *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
   *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
   * }
   * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
   * RSAPublicKey ::= SEQUENCE {
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER   -- e
   * }
   * it's possible to examine the structure of the keys obtained from openssl using
   * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/
   * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer
   * @private
   */
  JSEncryptRSAKey.prototype.parseKey = function (pem) {
    try {
      var modulus = 0;
      var public_exponent = 0;
      var reHex = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/;
      var der = reHex.test(pem) ? _hex.Hex.decode(pem) : _base2.Base64.unarmor(pem);
      var asn1 = _asn.ASN1.decode(der);
      // Fixes a bug with OpenSSL 1.0+ private keys
      if (asn1.sub.length === 3) {
        asn1 = asn1.sub[2].sub[0];
      }
      if (asn1.sub.length === 9) {
        // Parse the private key.
        modulus = asn1.sub[1].getHexStringValue(); // bigint
        this.n = (0, _jsbn.parseBigInt)(modulus, 16);
        public_exponent = asn1.sub[2].getHexStringValue(); // int
        this.e = parseInt(public_exponent, 16);
        var private_exponent = asn1.sub[3].getHexStringValue(); // bigint
        this.d = (0, _jsbn.parseBigInt)(private_exponent, 16);
        var prime1 = asn1.sub[4].getHexStringValue(); // bigint
        this.p = (0, _jsbn.parseBigInt)(prime1, 16);
        var prime2 = asn1.sub[5].getHexStringValue(); // bigint
        this.q = (0, _jsbn.parseBigInt)(prime2, 16);
        var exponent1 = asn1.sub[6].getHexStringValue(); // bigint
        this.dmp1 = (0, _jsbn.parseBigInt)(exponent1, 16);
        var exponent2 = asn1.sub[7].getHexStringValue(); // bigint
        this.dmq1 = (0, _jsbn.parseBigInt)(exponent2, 16);
        var coefficient = asn1.sub[8].getHexStringValue(); // bigint
        this.coeff = (0, _jsbn.parseBigInt)(coefficient, 16);
      } else if (asn1.sub.length === 2) {
        if (asn1.sub[0].sub) {
          // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509
          var bit_string = asn1.sub[1];
          var sequence = bit_string.sub[0];
          modulus = sequence.sub[0].getHexStringValue();
          this.n = (0, _jsbn.parseBigInt)(modulus, 16);
          public_exponent = sequence.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        } else {
          // Parse ASN.1 RSAPublicKey type as defined by PKCS #1
          modulus = asn1.sub[0].getHexStringValue();
          this.n = (0, _jsbn.parseBigInt)(modulus, 16);
          public_exponent = asn1.sub[1].getHexStringValue();
          this.e = parseInt(public_exponent, 16);
        }
      } else {
        return false;
      }
      return true;
    } catch (ex) {
      return false;
    }
  };
  /**
   * Translate rsa parameters in a hex encoded string representing the rsa key.
   *
   * The translation follow the ASN.1 notation :
   * RSAPrivateKey ::= SEQUENCE {
   *   version           Version,
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER,  -- e
   *   privateExponent   INTEGER,  -- d
   *   prime1            INTEGER,  -- p
   *   prime2            INTEGER,  -- q
   *   exponent1         INTEGER,  -- d mod (p1)
   *   exponent2         INTEGER,  -- d mod (q-1)
   *   coefficient       INTEGER,  -- (inverse of q) mod p
   * }
   * @returns {string}  DER Encoded String representing the rsa private key
   * @private
   */
  JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {
    var options = {
      array: [new _asn2.KJUR.asn1.DERInteger({
        int: 0
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.n
      }), new _asn2.KJUR.asn1.DERInteger({
        int: this.e
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.d
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.p
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.q
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.dmp1
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.dmq1
      }), new _asn2.KJUR.asn1.DERInteger({
        bigint: this.coeff
      })]
    };
    var seq = new _asn2.KJUR.asn1.DERSequence(options);
    return seq.getEncodedHex();
  };
  /**
   * base64 (pem) encoded version of the DER encoded representation
   * @returns {string} pem encoded representation without header and footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {
    return (0, _base.hex2b64)(this.getPrivateBaseKey());
  };
  /**
   * Translate rsa parameters in a hex encoded string representing the rsa public key.
   * The representation follow the ASN.1 notation :
   * PublicKeyInfo ::= SEQUENCE {
   *   algorithm       AlgorithmIdentifier,
   *   PublicKey       BIT STRING
   * }
   * Where AlgorithmIdentifier is:
   * AlgorithmIdentifier ::= SEQUENCE {
   *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
   *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
   * }
   * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
   * RSAPublicKey ::= SEQUENCE {
   *   modulus           INTEGER,  -- n
   *   publicExponent    INTEGER   -- e
   * }
   * @returns {string} DER Encoded String representing the rsa public key
   * @private
   */
  JSEncryptRSAKey.prototype.getPublicBaseKey = function () {
    var first_sequence = new _asn2.KJUR.asn1.DERSequence({
      array: [new _asn2.KJUR.asn1.DERObjectIdentifier({
        oid: "1.2.840.113549.1.1.1"
      }), new _asn2.KJUR.asn1.DERNull()]
    });
    var second_sequence = new _asn2.KJUR.asn1.DERSequence({
      array: [new _asn2.KJUR.asn1.DERInteger({
        bigint: this.n
      }), new _asn2.KJUR.asn1.DERInteger({
        int: this.e
      })]
    });
    var bit_string = new _asn2.KJUR.asn1.DERBitString({
      hex: "00" + second_sequence.getEncodedHex()
    });
    var seq = new _asn2.KJUR.asn1.DERSequence({
      array: [first_sequence, bit_string]
    });
    return seq.getEncodedHex();
  };
  /**
   * base64 (pem) encoded version of the DER encoded representation
   * @returns {string} pem encoded representation without header and footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {
    return (0, _base.hex2b64)(this.getPublicBaseKey());
  };
  /**
   * wrap the string in block of width chars. The default value for rsa keys is 64
   * characters.
   * @param {string} str the pem encoded string without header and footer
   * @param {Number} [width=64] - the length the string has to be wrapped at
   * @returns {string}
   * @private
   */
  JSEncryptRSAKey.wordwrap = function (str, width) {
    width = width || 64;
    if (!str) {
      return str;
    }
    var regex = "(.{1," + width + "})( +|$\n?)|(.{1," + width + "})";
    return str.match(RegExp(regex, "g")).join("\n");
  };
  /**
   * Retrieve the pem encoded private key
   * @returns {string} the pem encoded private key with header/footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPrivateKey = function () {
    var key = "-----BEGIN RSA PRIVATE KEY-----\n";
    key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + "\n";
    key += "-----END RSA PRIVATE KEY-----";
    return key;
  };
  /**
   * Retrieve the pem encoded public key
   * @returns {string} the pem encoded public key with header/footer
   * @public
   */
  JSEncryptRSAKey.prototype.getPublicKey = function () {
    var key = "-----BEGIN PUBLIC KEY-----\n";
    key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + "\n";
    key += "-----END PUBLIC KEY-----";
    return key;
  };
  /**
   * Check if the object contains the necessary parameters to populate the rsa modulus
   * and public exponent parameters.
   * @param {Object} [obj={}] - An object that may contain the two public key
   * parameters
   * @returns {boolean} true if the object contains both the modulus and the public exponent
   * properties (n and e)
   * @todo check for types of n and e. N should be a parseable bigInt object, E should
   * be a parseable integer number
   * @private
   */
  JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {
    obj = obj || {};
    return obj.hasOwnProperty("n") && obj.hasOwnProperty("e");
  };
  /**
   * Check if the object contains ALL the parameters of an RSA key.
   * @param {Object} [obj={}] - An object that may contain nine rsa key
   * parameters
   * @returns {boolean} true if the object contains all the parameters needed
   * @todo check for types of the parameters all the parameters but the public exponent
   * should be parseable bigint objects, the public exponent should be a parseable integer number
   * @private
   */
  JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {
    obj = obj || {};
    return obj.hasOwnProperty("n") && obj.hasOwnProperty("e") && obj.hasOwnProperty("d") && obj.hasOwnProperty("p") && obj.hasOwnProperty("q") && obj.hasOwnProperty("dmp1") && obj.hasOwnProperty("dmq1") && obj.hasOwnProperty("coeff");
  };
  /**
   * Parse the properties of obj in the current rsa object. Obj should AT LEAST
   * include the modulus and public exponent (n, e) parameters.
   * @param {Object} obj - the object containing rsa parameters
   * @private
   */
  JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {
    this.n = obj.n;
    this.e = obj.e;
    if (obj.hasOwnProperty("d")) {
      this.d = obj.d;
      this.p = obj.p;
      this.q = obj.q;
      this.dmp1 = obj.dmp1;
      this.dmq1 = obj.dmq1;
      this.coeff = obj.coeff;
    }
  };
  return JSEncryptRSAKey;
}(_rsa.RSAKey);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/index.js":
/*!************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "JSEncrypt", ({
  enumerable: true,
  get: function () {
    return _JSEncrypt.JSEncrypt;
  }
}));
exports["default"] = void 0;
var _JSEncrypt = __webpack_require__(/*! ./JSEncrypt */ "./src/Common/libs/jsencrypt/lib/JSEncrypt.js");
var _default = exports["default"] = _JSEncrypt.JSEncrypt;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/asn1.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Stream = exports.ASN1Tag = exports.ASN1 = void 0;
var _int = __webpack_require__(/*! ./int10 */ "./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js");
// ASN.1 JavaScript decoder
// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
/*global oids */

var ellipsis = "\u2026";
var reTimeS = /^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
var reTimeL = /^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
function stringCut(str, len) {
  if (str.length > len) {
    str = str.substring(0, len) + ellipsis;
  }
  return str;
}
var Stream = exports.Stream = /** @class */function () {
  function Stream(enc, pos) {
    this.hexDigits = "0123456789ABCDEF";
    if (enc instanceof Stream) {
      this.enc = enc.enc;
      this.pos = enc.pos;
    } else {
      // enc should be an array or a binary string
      this.enc = enc;
      this.pos = pos;
    }
  }
  Stream.prototype.get = function (pos) {
    if (pos === undefined) {
      pos = this.pos++;
    }
    if (pos >= this.enc.length) {
      throw new Error("Requesting byte offset ".concat(pos, " on a stream of length ").concat(this.enc.length));
    }
    return "string" === typeof this.enc ? this.enc.charCodeAt(pos) : this.enc[pos];
  };
  Stream.prototype.hexByte = function (b) {
    return this.hexDigits.charAt(b >> 4 & 0xF) + this.hexDigits.charAt(b & 0xF);
  };
  Stream.prototype.hexDump = function (start, end, raw) {
    var s = "";
    for (var i = start; i < end; ++i) {
      s += this.hexByte(this.get(i));
      if (raw !== true) {
        switch (i & 0xF) {
          case 0x7:
            s += "  ";
            break;
          case 0xF:
            s += "\n";
            break;
          default:
            s += " ";
        }
      }
    }
    return s;
  };
  Stream.prototype.isASCII = function (start, end) {
    for (var i = start; i < end; ++i) {
      var c = this.get(i);
      if (c < 32 || c > 176) {
        return false;
      }
    }
    return true;
  };
  Stream.prototype.parseStringISO = function (start, end) {
    var s = "";
    for (var i = start; i < end; ++i) {
      s += String.fromCharCode(this.get(i));
    }
    return s;
  };
  Stream.prototype.parseStringUTF = function (start, end) {
    var s = "";
    for (var i = start; i < end;) {
      var c = this.get(i++);
      if (c < 128) {
        s += String.fromCharCode(c);
      } else if (c > 191 && c < 224) {
        s += String.fromCharCode((c & 0x1F) << 6 | this.get(i++) & 0x3F);
      } else {
        s += String.fromCharCode((c & 0x0F) << 12 | (this.get(i++) & 0x3F) << 6 | this.get(i++) & 0x3F);
      }
    }
    return s;
  };
  Stream.prototype.parseStringBMP = function (start, end) {
    var str = "";
    var hi;
    var lo;
    for (var i = start; i < end;) {
      hi = this.get(i++);
      lo = this.get(i++);
      str += String.fromCharCode(hi << 8 | lo);
    }
    return str;
  };
  Stream.prototype.parseTime = function (start, end, shortYear) {
    var s = this.parseStringISO(start, end);
    var m = (shortYear ? reTimeS : reTimeL).exec(s);
    if (!m) {
      return "Unrecognized time: " + s;
    }
    if (shortYear) {
      // to avoid querying the timer, use the fixed range [1970, 2069]
      // it will conform with ITU X.400 [-10, +40] sliding window until 2030
      m[1] = +m[1];
      m[1] += +m[1] < 70 ? 2000 : 1900;
    }
    s = m[1] + "-" + m[2] + "-" + m[3] + " " + m[4];
    if (m[5]) {
      s += ":" + m[5];
      if (m[6]) {
        s += ":" + m[6];
        if (m[7]) {
          s += "." + m[7];
        }
      }
    }
    if (m[8]) {
      s += " UTC";
      if (m[8] != "Z") {
        s += m[8];
        if (m[9]) {
          s += ":" + m[9];
        }
      }
    }
    return s;
  };
  Stream.prototype.parseInteger = function (start, end) {
    var v = this.get(start);
    var neg = v > 127;
    var pad = neg ? 255 : 0;
    var len;
    var s = "";
    // skip unuseful bits (not allowed in DER)
    while (v == pad && ++start < end) {
      v = this.get(start);
    }
    len = end - start;
    if (len === 0) {
      return neg ? -1 : 0;
    }
    // show bit length of huge integers
    if (len > 4) {
      s = v;
      len <<= 3;
      while (((+s ^ pad) & 0x80) == 0) {
        s = +s << 1;
        --len;
      }
      s = "(" + len + " bit)\n";
    }
    // decode the integer
    if (neg) {
      v = v - 256;
    }
    var n = new _int.Int10(v);
    for (var i = start + 1; i < end; ++i) {
      n.mulAdd(256, this.get(i));
    }
    return s + n.toString();
  };
  Stream.prototype.parseBitString = function (start, end, maxLength) {
    var unusedBit = this.get(start);
    var lenBit = (end - start - 1 << 3) - unusedBit;
    var intro = "(" + lenBit + " bit)\n";
    var s = "";
    for (var i = start + 1; i < end; ++i) {
      var b = this.get(i);
      var skip = i == end - 1 ? unusedBit : 0;
      for (var j = 7; j >= skip; --j) {
        s += b >> j & 1 ? "1" : "0";
      }
      if (s.length > maxLength) {
        return intro + stringCut(s, maxLength);
      }
    }
    return intro + s;
  };
  Stream.prototype.parseOctetString = function (start, end, maxLength) {
    if (this.isASCII(start, end)) {
      return stringCut(this.parseStringISO(start, end), maxLength);
    }
    var len = end - start;
    var s = "(" + len + " byte)\n";
    maxLength /= 2; // we work in bytes
    if (len > maxLength) {
      end = start + maxLength;
    }
    for (var i = start; i < end; ++i) {
      s += this.hexByte(this.get(i));
    }
    if (len > maxLength) {
      s += ellipsis;
    }
    return s;
  };
  Stream.prototype.parseOID = function (start, end, maxLength) {
    var s = "";
    var n = new _int.Int10();
    var bits = 0;
    for (var i = start; i < end; ++i) {
      var v = this.get(i);
      n.mulAdd(128, v & 0x7F);
      bits += 7;
      if (!(v & 0x80)) {
        // finished
        if (s === "") {
          n = n.simplify();
          if (n instanceof _int.Int10) {
            n.sub(80);
            s = "2." + n.toString();
          } else {
            var m = n < 80 ? n < 40 ? 0 : 1 : 2;
            s = m + "." + (n - m * 40);
          }
        } else {
          s += "." + n.toString();
        }
        if (s.length > maxLength) {
          return stringCut(s, maxLength);
        }
        n = new _int.Int10();
        bits = 0;
      }
    }
    if (bits > 0) {
      s += ".incomplete";
    }
    return s;
  };
  return Stream;
}();
var ASN1 = exports.ASN1 = /** @class */function () {
  function ASN1(stream, header, length, tag, sub) {
    if (!(tag instanceof ASN1Tag)) {
      throw new Error("Invalid tag value.");
    }
    this.stream = stream;
    this.header = header;
    this.length = length;
    this.tag = tag;
    this.sub = sub;
  }
  ASN1.prototype.typeName = function () {
    switch (this.tag.tagClass) {
      case 0:
        // universal
        switch (this.tag.tagNumber) {
          case 0x00:
            return "EOC";
          case 0x01:
            return "BOOLEAN";
          case 0x02:
            return "INTEGER";
          case 0x03:
            return "BIT_STRING";
          case 0x04:
            return "OCTET_STRING";
          case 0x05:
            return "NULL";
          case 0x06:
            return "OBJECT_IDENTIFIER";
          case 0x07:
            return "ObjectDescriptor";
          case 0x08:
            return "EXTERNAL";
          case 0x09:
            return "REAL";
          case 0x0A:
            return "ENUMERATED";
          case 0x0B:
            return "EMBEDDED_PDV";
          case 0x0C:
            return "UTF8String";
          case 0x10:
            return "SEQUENCE";
          case 0x11:
            return "SET";
          case 0x12:
            return "NumericString";
          case 0x13:
            return "PrintableString";
          // ASCII subset
          case 0x14:
            return "TeletexString";
          // aka T61String
          case 0x15:
            return "VideotexString";
          case 0x16:
            return "IA5String";
          // ASCII
          case 0x17:
            return "UTCTime";
          case 0x18:
            return "GeneralizedTime";
          case 0x19:
            return "GraphicString";
          case 0x1A:
            return "VisibleString";
          // ASCII subset
          case 0x1B:
            return "GeneralString";
          case 0x1C:
            return "UniversalString";
          case 0x1E:
            return "BMPString";
        }
        return "Universal_" + this.tag.tagNumber.toString();
      case 1:
        return "Application_" + this.tag.tagNumber.toString();
      case 2:
        return "[" + this.tag.tagNumber.toString() + "]";
      // Context
      case 3:
        return "Private_" + this.tag.tagNumber.toString();
    }
  };
  ASN1.prototype.content = function (maxLength) {
    if (this.tag === undefined) {
      return null;
    }
    if (maxLength === undefined) {
      maxLength = Infinity;
    }
    var content = this.posContent();
    var len = Math.abs(this.length);
    if (!this.tag.isUniversal()) {
      if (this.sub !== null) {
        return "(" + this.sub.length + " elem)";
      }
      return this.stream.parseOctetString(content, content + len, maxLength);
    }
    switch (this.tag.tagNumber) {
      case 0x01:
        // BOOLEAN
        return this.stream.get(content) === 0 ? "false" : "true";
      case 0x02:
        // INTEGER
        return this.stream.parseInteger(content, content + len);
      case 0x03:
        // BIT_STRING
        return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseBitString(content, content + len, maxLength);
      case 0x04:
        // OCTET_STRING
        return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseOctetString(content, content + len, maxLength);
      // case 0x05: // NULL
      case 0x06:
        // OBJECT_IDENTIFIER
        return this.stream.parseOID(content, content + len, maxLength);
      // case 0x07: // ObjectDescriptor
      // case 0x08: // EXTERNAL
      // case 0x09: // REAL
      // case 0x0A: // ENUMERATED
      // case 0x0B: // EMBEDDED_PDV
      case 0x10: // SEQUENCE
      case 0x11:
        // SET
        if (this.sub !== null) {
          return "(" + this.sub.length + " elem)";
        } else {
          return "(no elem)";
        }
      case 0x0C:
        // UTF8String
        return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);
      case 0x12: // NumericString
      case 0x13: // PrintableString
      case 0x14: // TeletexString
      case 0x15: // VideotexString
      case 0x16: // IA5String
      // case 0x19: // GraphicString
      case 0x1A:
        // VisibleString
        // case 0x1B: // GeneralString
        // case 0x1C: // UniversalString
        return stringCut(this.stream.parseStringISO(content, content + len), maxLength);
      case 0x1E:
        // BMPString
        return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);
      case 0x17: // UTCTime
      case 0x18:
        // GeneralizedTime
        return this.stream.parseTime(content, content + len, this.tag.tagNumber == 0x17);
    }
    return null;
  };
  ASN1.prototype.toString = function () {
    return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (this.sub === null ? "null" : this.sub.length) + "]";
  };
  ASN1.prototype.toPrettyString = function (indent) {
    if (indent === undefined) {
      indent = "";
    }
    var s = indent + this.typeName() + " @" + this.stream.pos;
    if (this.length >= 0) {
      s += "+";
    }
    s += this.length;
    if (this.tag.tagConstructed) {
      s += " (constructed)";
    } else if (this.tag.isUniversal() && (this.tag.tagNumber == 0x03 || this.tag.tagNumber == 0x04) && this.sub !== null) {
      s += " (encapsulates)";
    }
    s += "\n";
    if (this.sub !== null) {
      indent += "  ";
      for (var i = 0, max = this.sub.length; i < max; ++i) {
        s += this.sub[i].toPrettyString(indent);
      }
    }
    return s;
  };
  ASN1.prototype.posStart = function () {
    return this.stream.pos;
  };
  ASN1.prototype.posContent = function () {
    return this.stream.pos + this.header;
  };
  ASN1.prototype.posEnd = function () {
    return this.stream.pos + this.header + Math.abs(this.length);
  };
  ASN1.prototype.toHexString = function () {
    return this.stream.hexDump(this.posStart(), this.posEnd(), true);
  };
  ASN1.decodeLength = function (stream) {
    var buf = stream.get();
    var len = buf & 0x7F;
    if (len == buf) {
      return len;
    }
    // no reason to use Int10, as it would be a huge buffer anyways
    if (len > 6) {
      throw new Error("Length over 48 bits not supported at position " + (stream.pos - 1));
    }
    if (len === 0) {
      return null;
    } // undefined
    buf = 0;
    for (var i = 0; i < len; ++i) {
      buf = buf * 256 + stream.get();
    }
    return buf;
  };
  /**
   * Retrieve the hexadecimal value (as a string) of the current ASN.1 element
   * @returns {string}
   * @public
   */
  ASN1.prototype.getHexStringValue = function () {
    var hexString = this.toHexString();
    var offset = this.header * 2;
    var length = this.length * 2;
    return hexString.substr(offset, length);
  };
  ASN1.decode = function (str) {
    var stream;
    if (!(str instanceof Stream)) {
      stream = new Stream(str, 0);
    } else {
      stream = str;
    }
    var streamStart = new Stream(stream);
    var tag = new ASN1Tag(stream);
    var len = ASN1.decodeLength(stream);
    var start = stream.pos;
    var header = start - streamStart.pos;
    var sub = null;
    var getSub = function () {
      var ret = [];
      if (len !== null) {
        // definite length
        var end = start + len;
        while (stream.pos < end) {
          ret[ret.length] = ASN1.decode(stream);
        }
        if (stream.pos != end) {
          throw new Error("Content size is not correct for container starting at offset " + start);
        }
      } else {
        // undefined length
        try {
          for (;;) {
            var s = ASN1.decode(stream);
            if (s.tag.isEOC()) {
              break;
            }
            ret[ret.length] = s;
          }
          len = start - stream.pos; // undefined lengths are represented as negative values
        } catch (e) {
          throw new Error("Exception while decoding undefined length content: " + e);
        }
      }
      return ret;
    };
    if (tag.tagConstructed) {
      // must have valid content
      sub = getSub();
    } else if (tag.isUniversal() && (tag.tagNumber == 0x03 || tag.tagNumber == 0x04)) {
      // sometimes BitString and OctetString are used to encapsulate ASN.1
      try {
        if (tag.tagNumber == 0x03) {
          if (stream.get() != 0) {
            throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
          }
        }
        sub = getSub();
        for (var i = 0; i < sub.length; ++i) {
          if (sub[i].tag.isEOC()) {
            throw new Error("EOC is not supposed to be actual content.");
          }
        }
      } catch (e) {
        // but silently ignore when they don't
        sub = null;
      }
    }
    if (sub === null) {
      if (len === null) {
        throw new Error("We can't skip over an invalid tag with undefined length at offset " + start);
      }
      stream.pos = start + Math.abs(len);
    }
    return new ASN1(streamStart, header, len, tag, sub);
  };
  return ASN1;
}();
var ASN1Tag = exports.ASN1Tag = /** @class */function () {
  function ASN1Tag(stream) {
    var buf = stream.get();
    this.tagClass = buf >> 6;
    this.tagConstructed = (buf & 0x20) !== 0;
    this.tagNumber = buf & 0x1F;
    if (this.tagNumber == 0x1F) {
      // long tag
      var n = new _int.Int10();
      do {
        buf = stream.get();
        n.mulAdd(128, buf & 0x7F);
      } while (buf & 0x80);
      this.tagNumber = n.simplify();
    }
  }
  ASN1Tag.prototype.isUniversal = function () {
    return this.tagClass === 0x00;
  };
  ASN1Tag.prototype.isEOC = function () {
    return this.tagClass === 0x00 && this.tagNumber === 0x00;
  };
  return ASN1Tag;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js":
/*!************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Base64 = void 0;
// Base64 JavaScript decoder
// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var decoder;
var Base64 = exports.Base64 = {
  decode: function (a) {
    var i;
    if (decoder === undefined) {
      var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var ignore = "= \f\n\r\t\u00A0\u2028\u2029";
      decoder = Object.create(null);
      for (i = 0; i < 64; ++i) {
        decoder[b64.charAt(i)] = i;
      }
      decoder['-'] = 62; //+
      decoder['_'] = 63; //-
      for (i = 0; i < ignore.length; ++i) {
        decoder[ignore.charAt(i)] = -1;
      }
    }
    var out = [];
    var bits = 0;
    var char_count = 0;
    for (i = 0; i < a.length; ++i) {
      var c = a.charAt(i);
      if (c == "=") {
        break;
      }
      c = decoder[c];
      if (c == -1) {
        continue;
      }
      if (c === undefined) {
        throw new Error("Illegal character at offset " + i);
      }
      bits |= c;
      if (++char_count >= 4) {
        out[out.length] = bits >> 16;
        out[out.length] = bits >> 8 & 0xFF;
        out[out.length] = bits & 0xFF;
        bits = 0;
        char_count = 0;
      } else {
        bits <<= 6;
      }
    }
    switch (char_count) {
      case 1:
        throw new Error("Base64 encoding incomplete: at least 2 bits missing");
      case 2:
        out[out.length] = bits >> 10;
        break;
      case 3:
        out[out.length] = bits >> 16;
        out[out.length] = bits >> 8 & 0xFF;
        break;
    }
    return out;
  },
  re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
  unarmor: function (a) {
    var m = Base64.re.exec(a);
    if (m) {
      if (m[1]) {
        a = m[1];
      } else if (m[2]) {
        a = m[2];
      } else {
        throw new Error("RegExp out of sync");
      }
    }
    return Base64.decode(a);
  }
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js":
/*!*********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/hex.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Hex = void 0;
// Hex JavaScript decoder
// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var decoder;
var Hex = exports.Hex = {
  decode: function (a) {
    var i;
    if (decoder === undefined) {
      var hex = "0123456789ABCDEF";
      var ignore = " \f\n\r\t\u00A0\u2028\u2029";
      decoder = {};
      for (i = 0; i < 16; ++i) {
        decoder[hex.charAt(i)] = i;
      }
      hex = hex.toLowerCase();
      for (i = 10; i < 16; ++i) {
        decoder[hex.charAt(i)] = i;
      }
      for (i = 0; i < ignore.length; ++i) {
        decoder[ignore.charAt(i)] = -1;
      }
    }
    var out = [];
    var bits = 0;
    var char_count = 0;
    for (i = 0; i < a.length; ++i) {
      var c = a.charAt(i);
      if (c == "=") {
        break;
      }
      c = decoder[c];
      if (c == -1) {
        continue;
      }
      if (c === undefined) {
        throw new Error("Illegal character at offset " + i);
      }
      bits |= c;
      if (++char_count >= 2) {
        out[out.length] = bits;
        bits = 0;
        char_count = 0;
      } else {
        bits <<= 4;
      }
    }
    if (char_count) {
      throw new Error("Hex encoding incomplete: 4 bits missing");
    }
    return out;
  }
};

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js":
/*!***********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/asn1js/int10.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Int10 = void 0;
// Big integer base-10 printing library
// Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
var max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256
var Int10 = exports.Int10 = /** @class */function () {
  function Int10(value) {
    this.buf = [+value || 0];
  }
  Int10.prototype.mulAdd = function (m, c) {
    // assert(m <= 256)
    var b = this.buf;
    var l = b.length;
    var i;
    var t;
    for (i = 0; i < l; ++i) {
      t = b[i] * m + c;
      if (t < max) {
        c = 0;
      } else {
        c = 0 | t / max;
        t -= c * max;
      }
      b[i] = t;
    }
    if (c > 0) {
      b[i] = c;
    }
  };
  Int10.prototype.sub = function (c) {
    // assert(m <= 256)
    var b = this.buf;
    var l = b.length;
    var i;
    var t;
    for (i = 0; i < l; ++i) {
      t = b[i] - c;
      if (t < 0) {
        t += max;
        c = 1;
      } else {
        c = 0;
      }
      b[i] = t;
    }
    while (b[b.length - 1] === 0) {
      b.pop();
    }
  };
  Int10.prototype.toString = function (base) {
    if ((base || 10) != 10) {
      throw new Error("only base 10 is supported");
    }
    var b = this.buf;
    var s = b[b.length - 1].toString();
    for (var i = b.length - 2; i >= 0; --i) {
      s += (max + b[i]).toString().substring(1);
    }
    return s;
  };
  Int10.prototype.valueOf = function () {
    var b = this.buf;
    var v = 0;
    for (var i = b.length - 1; i >= 0; --i) {
      v = v * max + b[i];
    }
    return v;
  };
  Int10.prototype.simplify = function () {
    var b = this.buf;
    return b.length == 1 ? b[0] : this;
  };
  return Int10;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js":
/*!**********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/base64.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.b64toBA = b64toBA;
exports.b64tohex = b64tohex;
exports.hex2b64 = hex2b64;
var _util = __webpack_require__(/*! ./util */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js");
var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var b64pad = "=";
function hex2b64(h) {
  var i;
  var c;
  var ret = "";
  for (i = 0; i + 3 <= h.length; i += 3) {
    c = parseInt(h.substring(i, i + 3), 16);
    ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
  }
  if (i + 1 == h.length) {
    c = parseInt(h.substring(i, i + 1), 16);
    ret += b64map.charAt(c << 2);
  } else if (i + 2 == h.length) {
    c = parseInt(h.substring(i, i + 2), 16);
    ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
  }
  while ((ret.length & 3) > 0) {
    ret += b64pad;
  }
  return ret;
}
// convert a base64 string to hex
function b64tohex(s) {
  var ret = "";
  var i;
  var k = 0; // b64 state, 0-3
  var slop = 0;
  for (i = 0; i < s.length; ++i) {
    if (s.charAt(i) == b64pad) {
      break;
    }
    var v = b64map.indexOf(s.charAt(i));
    if (v < 0) {
      continue;
    }
    if (k == 0) {
      ret += (0, _util.int2char)(v >> 2);
      slop = v & 3;
      k = 1;
    } else if (k == 1) {
      ret += (0, _util.int2char)(slop << 2 | v >> 4);
      slop = v & 0xf;
      k = 2;
    } else if (k == 2) {
      ret += (0, _util.int2char)(slop);
      ret += (0, _util.int2char)(v >> 2);
      slop = v & 3;
      k = 3;
    } else {
      ret += (0, _util.int2char)(slop << 2 | v >> 4);
      ret += (0, _util.int2char)(v & 0xf);
      k = 0;
    }
  }
  if (k == 1) {
    ret += (0, _util.int2char)(slop << 2);
  }
  return ret;
}
// convert a base64 string to a byte/number array
function b64toBA(s) {
  // piggyback on b64tohex for now, optimize later
  var h = b64tohex(s);
  var i;
  var a = [];
  for (i = 0; 2 * i < h.length; ++i) {
    a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);
  }
  return a;
}

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js":
/*!********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.BigInteger = void 0;
exports.intAt = intAt;
exports.nbi = nbi;
exports.nbits = nbits;
exports.nbv = nbv;
exports.parseBigInt = parseBigInt;
var _util = __webpack_require__(/*! ./util */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js");
// Copyright (c) 2005  Tom Wu
// All Rights Reserved.
// See "LICENSE" for details.
// Basic JavaScript BN library - subset useful for RSA encryption.

// Bits per digit
var dbits;
// JavaScript engine analysis
var canary = 0xdeadbeefcafe;
var j_lm = (canary & 0xffffff) == 0xefcafe;
//#region
var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
//#endregion
// (public) Constructor
var BigInteger = exports.BigInteger = /** @class */function () {
  function BigInteger(a, b, c) {
    if (a != null) {
      if ("number" == typeof a) {
        this.fromNumber(a, b, c);
      } else if (b == null && "string" != typeof a) {
        this.fromString(a, 256);
      } else {
        this.fromString(a, b);
      }
    }
  }
  //#region PUBLIC
  // BigInteger.prototype.toString = bnToString;
  // (public) return string representation in given radix
  BigInteger.prototype.toString = function (b) {
    if (this.s < 0) {
      return "-" + this.negate().toString(b);
    }
    var k;
    if (b == 16) {
      k = 4;
    } else if (b == 8) {
      k = 3;
    } else if (b == 2) {
      k = 1;
    } else if (b == 32) {
      k = 5;
    } else if (b == 4) {
      k = 2;
    } else {
      return this.toRadix(b);
    }
    var km = (1 << k) - 1;
    var d;
    var m = false;
    var r = "";
    var i = this.t;
    var p = this.DB - i * this.DB % k;
    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) > 0) {
        m = true;
        r = (0, _util.int2char)(d);
      }
      while (i >= 0) {
        if (p < k) {
          d = (this[i] & (1 << p) - 1) << k - p;
          d |= this[--i] >> (p += this.DB - k);
        } else {
          d = this[i] >> (p -= k) & km;
          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }
        if (d > 0) {
          m = true;
        }
        if (m) {
          r += (0, _util.int2char)(d);
        }
      }
    }
    return m ? r : "0";
  };
  // BigInteger.prototype.negate = bnNegate;
  // (public) -this
  BigInteger.prototype.negate = function () {
    var r = nbi();
    BigInteger.ZERO.subTo(this, r);
    return r;
  };
  // BigInteger.prototype.abs = bnAbs;
  // (public) |this|
  BigInteger.prototype.abs = function () {
    return this.s < 0 ? this.negate() : this;
  };
  // BigInteger.prototype.compareTo = bnCompareTo;
  // (public) return + if this > a, - if this < a, 0 if equal
  BigInteger.prototype.compareTo = function (a) {
    var r = this.s - a.s;
    if (r != 0) {
      return r;
    }
    var i = this.t;
    r = i - a.t;
    if (r != 0) {
      return this.s < 0 ? -r : r;
    }
    while (--i >= 0) {
      if ((r = this[i] - a[i]) != 0) {
        return r;
      }
    }
    return 0;
  };
  // BigInteger.prototype.bitLength = bnBitLength;
  // (public) return the number of bits in "this"
  BigInteger.prototype.bitLength = function () {
    if (this.t <= 0) {
      return 0;
    }
    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
  };
  // BigInteger.prototype.mod = bnMod;
  // (public) this mod a
  BigInteger.prototype.mod = function (a) {
    var r = nbi();
    this.abs().divRemTo(a, null, r);
    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
      a.subTo(r, r);
    }
    return r;
  };
  // BigInteger.prototype.modPowInt = bnModPowInt;
  // (public) this^e % m, 0 <= e < 2^32
  BigInteger.prototype.modPowInt = function (e, m) {
    var z;
    if (e < 256 || m.isEven()) {
      z = new Classic(m);
    } else {
      z = new Montgomery(m);
    }
    return this.exp(e, z);
  };
  // BigInteger.prototype.clone = bnClone;
  // (public)
  BigInteger.prototype.clone = function () {
    var r = nbi();
    this.copyTo(r);
    return r;
  };
  // BigInteger.prototype.intValue = bnIntValue;
  // (public) return value as integer
  BigInteger.prototype.intValue = function () {
    if (this.s < 0) {
      if (this.t == 1) {
        return this[0] - this.DV;
      } else if (this.t == 0) {
        return -1;
      }
    } else if (this.t == 1) {
      return this[0];
    } else if (this.t == 0) {
      return 0;
    }
    // assumes 16 < DB < 32
    return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
  };
  // BigInteger.prototype.byteValue = bnByteValue;
  // (public) return value as byte
  BigInteger.prototype.byteValue = function () {
    return this.t == 0 ? this.s : this[0] << 24 >> 24;
  };
  // BigInteger.prototype.shortValue = bnShortValue;
  // (public) return value as short (assumes DB>=16)
  BigInteger.prototype.shortValue = function () {
    return this.t == 0 ? this.s : this[0] << 16 >> 16;
  };
  // BigInteger.prototype.signum = bnSigNum;
  // (public) 0 if this == 0, 1 if this > 0
  BigInteger.prototype.signum = function () {
    if (this.s < 0) {
      return -1;
    } else if (this.t <= 0 || this.t == 1 && this[0] <= 0) {
      return 0;
    } else {
      return 1;
    }
  };
  // BigInteger.prototype.toByteArray = bnToByteArray;
  // (public) convert to bigendian byte array
  BigInteger.prototype.toByteArray = function () {
    var i = this.t;
    var r = [];
    r[0] = this.s;
    var p = this.DB - i * this.DB % 8;
    var d;
    var k = 0;
    if (i-- > 0) {
      if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {
        r[k++] = d | this.s << this.DB - p;
      }
      while (i >= 0) {
        if (p < 8) {
          d = (this[i] & (1 << p) - 1) << 8 - p;
          d |= this[--i] >> (p += this.DB - 8);
        } else {
          d = this[i] >> (p -= 8) & 0xff;
          if (p <= 0) {
            p += this.DB;
            --i;
          }
        }
        if ((d & 0x80) != 0) {
          d |= -256;
        }
        if (k == 0 && (this.s & 0x80) != (d & 0x80)) {
          ++k;
        }
        if (k > 0 || d != this.s) {
          r[k++] = d;
        }
      }
    }
    return r;
  };
  // BigInteger.prototype.equals = bnEquals;
  BigInteger.prototype.equals = function (a) {
    return this.compareTo(a) == 0;
  };
  // BigInteger.prototype.min = bnMin;
  BigInteger.prototype.min = function (a) {
    return this.compareTo(a) < 0 ? this : a;
  };
  // BigInteger.prototype.max = bnMax;
  BigInteger.prototype.max = function (a) {
    return this.compareTo(a) > 0 ? this : a;
  };
  // BigInteger.prototype.and = bnAnd;
  BigInteger.prototype.and = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_and, r);
    return r;
  };
  // BigInteger.prototype.or = bnOr;
  BigInteger.prototype.or = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_or, r);
    return r;
  };
  // BigInteger.prototype.xor = bnXor;
  BigInteger.prototype.xor = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_xor, r);
    return r;
  };
  // BigInteger.prototype.andNot = bnAndNot;
  BigInteger.prototype.andNot = function (a) {
    var r = nbi();
    this.bitwiseTo(a, _util.op_andnot, r);
    return r;
  };
  // BigInteger.prototype.not = bnNot;
  // (public) ~this
  BigInteger.prototype.not = function () {
    var r = nbi();
    for (var i = 0; i < this.t; ++i) {
      r[i] = this.DM & ~this[i];
    }
    r.t = this.t;
    r.s = ~this.s;
    return r;
  };
  // BigInteger.prototype.shiftLeft = bnShiftLeft;
  // (public) this << n
  BigInteger.prototype.shiftLeft = function (n) {
    var r = nbi();
    if (n < 0) {
      this.rShiftTo(-n, r);
    } else {
      this.lShiftTo(n, r);
    }
    return r;
  };
  // BigInteger.prototype.shiftRight = bnShiftRight;
  // (public) this >> n
  BigInteger.prototype.shiftRight = function (n) {
    var r = nbi();
    if (n < 0) {
      this.lShiftTo(-n, r);
    } else {
      this.rShiftTo(n, r);
    }
    return r;
  };
  // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
  // (public) returns index of lowest 1-bit (or -1 if none)
  BigInteger.prototype.getLowestSetBit = function () {
    for (var i = 0; i < this.t; ++i) {
      if (this[i] != 0) {
        return i * this.DB + (0, _util.lbit)(this[i]);
      }
    }
    if (this.s < 0) {
      return this.t * this.DB;
    }
    return -1;
  };
  // BigInteger.prototype.bitCount = bnBitCount;
  // (public) return number of set bits
  BigInteger.prototype.bitCount = function () {
    var r = 0;
    var x = this.s & this.DM;
    for (var i = 0; i < this.t; ++i) {
      r += (0, _util.cbit)(this[i] ^ x);
    }
    return r;
  };
  // BigInteger.prototype.testBit = bnTestBit;
  // (public) true iff nth bit is set
  BigInteger.prototype.testBit = function (n) {
    var j = Math.floor(n / this.DB);
    if (j >= this.t) {
      return this.s != 0;
    }
    return (this[j] & 1 << n % this.DB) != 0;
  };
  // BigInteger.prototype.setBit = bnSetBit;
  // (public) this | (1<<n)
  BigInteger.prototype.setBit = function (n) {
    return this.changeBit(n, _util.op_or);
  };
  // BigInteger.prototype.clearBit = bnClearBit;
  // (public) this & ~(1<<n)
  BigInteger.prototype.clearBit = function (n) {
    return this.changeBit(n, _util.op_andnot);
  };
  // BigInteger.prototype.flipBit = bnFlipBit;
  // (public) this ^ (1<<n)
  BigInteger.prototype.flipBit = function (n) {
    return this.changeBit(n, _util.op_xor);
  };
  // BigInteger.prototype.add = bnAdd;
  // (public) this + a
  BigInteger.prototype.add = function (a) {
    var r = nbi();
    this.addTo(a, r);
    return r;
  };
  // BigInteger.prototype.subtract = bnSubtract;
  // (public) this - a
  BigInteger.prototype.subtract = function (a) {
    var r = nbi();
    this.subTo(a, r);
    return r;
  };
  // BigInteger.prototype.multiply = bnMultiply;
  // (public) this * a
  BigInteger.prototype.multiply = function (a) {
    var r = nbi();
    this.multiplyTo(a, r);
    return r;
  };
  // BigInteger.prototype.divide = bnDivide;
  // (public) this / a
  BigInteger.prototype.divide = function (a) {
    var r = nbi();
    this.divRemTo(a, r, null);
    return r;
  };
  // BigInteger.prototype.remainder = bnRemainder;
  // (public) this % a
  BigInteger.prototype.remainder = function (a) {
    var r = nbi();
    this.divRemTo(a, null, r);
    return r;
  };
  // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
  // (public) [this/a,this%a]
  BigInteger.prototype.divideAndRemainder = function (a) {
    var q = nbi();
    var r = nbi();
    this.divRemTo(a, q, r);
    return [q, r];
  };
  // BigInteger.prototype.modPow = bnModPow;
  // (public) this^e % m (HAC 14.85)
  BigInteger.prototype.modPow = function (e, m) {
    var i = e.bitLength();
    var k;
    var r = nbv(1);
    var z;
    if (i <= 0) {
      return r;
    } else if (i < 18) {
      k = 1;
    } else if (i < 48) {
      k = 3;
    } else if (i < 144) {
      k = 4;
    } else if (i < 768) {
      k = 5;
    } else {
      k = 6;
    }
    if (i < 8) {
      z = new Classic(m);
    } else if (m.isEven()) {
      z = new Barrett(m);
    } else {
      z = new Montgomery(m);
    }
    // precomputation
    var g = [];
    var n = 3;
    var k1 = k - 1;
    var km = (1 << k) - 1;
    g[1] = z.convert(this);
    if (k > 1) {
      var g2 = nbi();
      z.sqrTo(g[1], g2);
      while (n <= km) {
        g[n] = nbi();
        z.mulTo(g2, g[n - 2], g[n]);
        n += 2;
      }
    }
    var j = e.t - 1;
    var w;
    var is1 = true;
    var r2 = nbi();
    var t;
    i = nbits(e[j]) - 1;
    while (j >= 0) {
      if (i >= k1) {
        w = e[j] >> i - k1 & km;
      } else {
        w = (e[j] & (1 << i + 1) - 1) << k1 - i;
        if (j > 0) {
          w |= e[j - 1] >> this.DB + i - k1;
        }
      }
      n = k;
      while ((w & 1) == 0) {
        w >>= 1;
        --n;
      }
      if ((i -= n) < 0) {
        i += this.DB;
        --j;
      }
      if (is1) {
        // ret == 1, don't bother squaring or multiplying it
        g[w].copyTo(r);
        is1 = false;
      } else {
        while (n > 1) {
          z.sqrTo(r, r2);
          z.sqrTo(r2, r);
          n -= 2;
        }
        if (n > 0) {
          z.sqrTo(r, r2);
        } else {
          t = r;
          r = r2;
          r2 = t;
        }
        z.mulTo(r2, g[w], r);
      }
      while (j >= 0 && (e[j] & 1 << i) == 0) {
        z.sqrTo(r, r2);
        t = r;
        r = r2;
        r2 = t;
        if (--i < 0) {
          i = this.DB - 1;
          --j;
        }
      }
    }
    return z.revert(r);
  };
  // BigInteger.prototype.modInverse = bnModInverse;
  // (public) 1/this % m (HAC 14.61)
  BigInteger.prototype.modInverse = function (m) {
    var ac = m.isEven();
    if (this.isEven() && ac || m.signum() == 0) {
      return BigInteger.ZERO;
    }
    var u = m.clone();
    var v = this.clone();
    var a = nbv(1);
    var b = nbv(0);
    var c = nbv(0);
    var d = nbv(1);
    while (u.signum() != 0) {
      while (u.isEven()) {
        u.rShiftTo(1, u);
        if (ac) {
          if (!a.isEven() || !b.isEven()) {
            a.addTo(this, a);
            b.subTo(m, b);
          }
          a.rShiftTo(1, a);
        } else if (!b.isEven()) {
          b.subTo(m, b);
        }
        b.rShiftTo(1, b);
      }
      while (v.isEven()) {
        v.rShiftTo(1, v);
        if (ac) {
          if (!c.isEven() || !d.isEven()) {
            c.addTo(this, c);
            d.subTo(m, d);
          }
          c.rShiftTo(1, c);
        } else if (!d.isEven()) {
          d.subTo(m, d);
        }
        d.rShiftTo(1, d);
      }
      if (u.compareTo(v) >= 0) {
        u.subTo(v, u);
        if (ac) {
          a.subTo(c, a);
        }
        b.subTo(d, b);
      } else {
        v.subTo(u, v);
        if (ac) {
          c.subTo(a, c);
        }
        d.subTo(b, d);
      }
    }
    if (v.compareTo(BigInteger.ONE) != 0) {
      return BigInteger.ZERO;
    }
    if (d.compareTo(m) >= 0) {
      return d.subtract(m);
    }
    if (d.signum() < 0) {
      d.addTo(m, d);
    } else {
      return d;
    }
    if (d.signum() < 0) {
      return d.add(m);
    } else {
      return d;
    }
  };
  // BigInteger.prototype.pow = bnPow;
  // (public) this^e
  BigInteger.prototype.pow = function (e) {
    return this.exp(e, new NullExp());
  };
  // BigInteger.prototype.gcd = bnGCD;
  // (public) gcd(this,a) (HAC 14.54)
  BigInteger.prototype.gcd = function (a) {
    var x = this.s < 0 ? this.negate() : this.clone();
    var y = a.s < 0 ? a.negate() : a.clone();
    if (x.compareTo(y) < 0) {
      var t = x;
      x = y;
      y = t;
    }
    var i = x.getLowestSetBit();
    var g = y.getLowestSetBit();
    if (g < 0) {
      return x;
    }
    if (i < g) {
      g = i;
    }
    if (g > 0) {
      x.rShiftTo(g, x);
      y.rShiftTo(g, y);
    }
    while (x.signum() > 0) {
      if ((i = x.getLowestSetBit()) > 0) {
        x.rShiftTo(i, x);
      }
      if ((i = y.getLowestSetBit()) > 0) {
        y.rShiftTo(i, y);
      }
      if (x.compareTo(y) >= 0) {
        x.subTo(y, x);
        x.rShiftTo(1, x);
      } else {
        y.subTo(x, y);
        y.rShiftTo(1, y);
      }
    }
    if (g > 0) {
      y.lShiftTo(g, y);
    }
    return y;
  };
  // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;
  // (public) test primality with certainty >= 1-.5^t
  BigInteger.prototype.isProbablePrime = function (t) {
    var i;
    var x = this.abs();
    if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
      for (i = 0; i < lowprimes.length; ++i) {
        if (x[0] == lowprimes[i]) {
          return true;
        }
      }
      return false;
    }
    if (x.isEven()) {
      return false;
    }
    i = 1;
    while (i < lowprimes.length) {
      var m = lowprimes[i];
      var j = i + 1;
      while (j < lowprimes.length && m < lplim) {
        m *= lowprimes[j++];
      }
      m = x.modInt(m);
      while (i < j) {
        if (m % lowprimes[i++] == 0) {
          return false;
        }
      }
    }
    return x.millerRabin(t);
  };
  //#endregion PUBLIC
  //#region PROTECTED
  // BigInteger.prototype.copyTo = bnpCopyTo;
  // (protected) copy this to r
  BigInteger.prototype.copyTo = function (r) {
    for (var i = this.t - 1; i >= 0; --i) {
      r[i] = this[i];
    }
    r.t = this.t;
    r.s = this.s;
  };
  // BigInteger.prototype.fromInt = bnpFromInt;
  // (protected) set from integer value x, -DV <= x < DV
  BigInteger.prototype.fromInt = function (x) {
    this.t = 1;
    this.s = x < 0 ? -1 : 0;
    if (x > 0) {
      this[0] = x;
    } else if (x < -1) {
      this[0] = x + this.DV;
    } else {
      this.t = 0;
    }
  };
  // BigInteger.prototype.fromString = bnpFromString;
  // (protected) set from string and radix
  BigInteger.prototype.fromString = function (s, b) {
    var k;
    if (b == 16) {
      k = 4;
    } else if (b == 8) {
      k = 3;
    } else if (b == 256) {
      k = 8;
      /* byte array */
    } else if (b == 2) {
      k = 1;
    } else if (b == 32) {
      k = 5;
    } else if (b == 4) {
      k = 2;
    } else {
      this.fromRadix(s, b);
      return;
    }
    this.t = 0;
    this.s = 0;
    var i = s.length;
    var mi = false;
    var sh = 0;
    while (--i >= 0) {
      var x = k == 8 ? +s[i] & 0xff : intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) == "-") {
          mi = true;
        }
        continue;
      }
      mi = false;
      if (sh == 0) {
        this[this.t++] = x;
      } else if (sh + k > this.DB) {
        this[this.t - 1] |= (x & (1 << this.DB - sh) - 1) << sh;
        this[this.t++] = x >> this.DB - sh;
      } else {
        this[this.t - 1] |= x << sh;
      }
      sh += k;
      if (sh >= this.DB) {
        sh -= this.DB;
      }
    }
    if (k == 8 && (+s[0] & 0x80) != 0) {
      this.s = -1;
      if (sh > 0) {
        this[this.t - 1] |= (1 << this.DB - sh) - 1 << sh;
      }
    }
    this.clamp();
    if (mi) {
      BigInteger.ZERO.subTo(this, this);
    }
  };
  // BigInteger.prototype.clamp = bnpClamp;
  // (protected) clamp off excess high words
  BigInteger.prototype.clamp = function () {
    var c = this.s & this.DM;
    while (this.t > 0 && this[this.t - 1] == c) {
      --this.t;
    }
  };
  // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  // (protected) r = this << n*DB
  BigInteger.prototype.dlShiftTo = function (n, r) {
    var i;
    for (i = this.t - 1; i >= 0; --i) {
      r[i + n] = this[i];
    }
    for (i = n - 1; i >= 0; --i) {
      r[i] = 0;
    }
    r.t = this.t + n;
    r.s = this.s;
  };
  // BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  // (protected) r = this >> n*DB
  BigInteger.prototype.drShiftTo = function (n, r) {
    for (var i = n; i < this.t; ++i) {
      r[i - n] = this[i];
    }
    r.t = Math.max(this.t - n, 0);
    r.s = this.s;
  };
  // BigInteger.prototype.lShiftTo = bnpLShiftTo;
  // (protected) r = this << n
  BigInteger.prototype.lShiftTo = function (n, r) {
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << cbs) - 1;
    var ds = Math.floor(n / this.DB);
    var c = this.s << bs & this.DM;
    for (var i = this.t - 1; i >= 0; --i) {
      r[i + ds + 1] = this[i] >> cbs | c;
      c = (this[i] & bm) << bs;
    }
    for (var i = ds - 1; i >= 0; --i) {
      r[i] = 0;
    }
    r[ds] = c;
    r.t = this.t + ds + 1;
    r.s = this.s;
    r.clamp();
  };
  // BigInteger.prototype.rShiftTo = bnpRShiftTo;
  // (protected) r = this >> n
  BigInteger.prototype.rShiftTo = function (n, r) {
    r.s = this.s;
    var ds = Math.floor(n / this.DB);
    if (ds >= this.t) {
      r.t = 0;
      return;
    }
    var bs = n % this.DB;
    var cbs = this.DB - bs;
    var bm = (1 << bs) - 1;
    r[0] = this[ds] >> bs;
    for (var i = ds + 1; i < this.t; ++i) {
      r[i - ds - 1] |= (this[i] & bm) << cbs;
      r[i - ds] = this[i] >> bs;
    }
    if (bs > 0) {
      r[this.t - ds - 1] |= (this.s & bm) << cbs;
    }
    r.t = this.t - ds;
    r.clamp();
  };
  // BigInteger.prototype.subTo = bnpSubTo;
  // (protected) r = this - a
  BigInteger.prototype.subTo = function (a, r) {
    var i = 0;
    var c = 0;
    var m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] - a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c -= a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c -= a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c < -1) {
      r[i++] = this.DV + c;
    } else if (c > 0) {
      r[i++] = c;
    }
    r.t = i;
    r.clamp();
  };
  // BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyTo = function (a, r) {
    var x = this.abs();
    var y = a.abs();
    var i = x.t;
    r.t = i + y.t;
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = 0; i < y.t; ++i) {
      r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
    }
    r.s = 0;
    r.clamp();
    if (this.s != a.s) {
      BigInteger.ZERO.subTo(r, r);
    }
  };
  // BigInteger.prototype.squareTo = bnpSquareTo;
  // (protected) r = this^2, r != this (HAC 14.16)
  BigInteger.prototype.squareTo = function (r) {
    var x = this.abs();
    var i = r.t = 2 * x.t;
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = 0; i < x.t - 1; ++i) {
      var c = x.am(i, x[i], r, 2 * i, 0, 1);
      if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
        r[i + x.t] -= x.DV;
        r[i + x.t + 1] = 1;
      }
    }
    if (r.t > 0) {
      r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
    }
    r.s = 0;
    r.clamp();
  };
  // BigInteger.prototype.divRemTo = bnpDivRemTo;
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  BigInteger.prototype.divRemTo = function (m, q, r) {
    var pm = m.abs();
    if (pm.t <= 0) {
      return;
    }
    var pt = this.abs();
    if (pt.t < pm.t) {
      if (q != null) {
        q.fromInt(0);
      }
      if (r != null) {
        this.copyTo(r);
      }
      return;
    }
    if (r == null) {
      r = nbi();
    }
    var y = nbi();
    var ts = this.s;
    var ms = m.s;
    var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
    if (nsh > 0) {
      pm.lShiftTo(nsh, y);
      pt.lShiftTo(nsh, r);
    } else {
      pm.copyTo(y);
      pt.copyTo(r);
    }
    var ys = y.t;
    var y0 = y[ys - 1];
    if (y0 == 0) {
      return;
    }
    var yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);
    var d1 = this.FV / yt;
    var d2 = (1 << this.F1) / yt;
    var e = 1 << this.F2;
    var i = r.t;
    var j = i - ys;
    var t = q == null ? nbi() : q;
    y.dlShiftTo(j, t);
    if (r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t, r);
    }
    BigInteger.ONE.dlShiftTo(ys, t);
    t.subTo(y, y); // "negative" y so we can replace sub with am later
    while (y.t < ys) {
      y[y.t++] = 0;
    }
    while (--j >= 0) {
      // Estimate quotient digit
      var qd = r[--i] == y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
      if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {
        // Try it out
        y.dlShiftTo(j, t);
        r.subTo(t, r);
        while (r[i] < --qd) {
          r.subTo(t, r);
        }
      }
    }
    if (q != null) {
      r.drShiftTo(ys, q);
      if (ts != ms) {
        BigInteger.ZERO.subTo(q, q);
      }
    }
    r.t = ys;
    r.clamp();
    if (nsh > 0) {
      r.rShiftTo(nsh, r);
    } // Denormalize remainder
    if (ts < 0) {
      BigInteger.ZERO.subTo(r, r);
    }
  };
  // BigInteger.prototype.invDigit = bnpInvDigit;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  BigInteger.prototype.invDigit = function () {
    if (this.t < 1) {
      return 0;
    }
    var x = this[0];
    if ((x & 1) == 0) {
      return 0;
    }
    var y = x & 3; // y == 1/x mod 2^2
    y = y * (2 - (x & 0xf) * y) & 0xf; // y == 1/x mod 2^4
    y = y * (2 - (x & 0xff) * y) & 0xff; // y == 1/x mod 2^8
    y = y * (2 - ((x & 0xffff) * y & 0xffff)) & 0xffff; // y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = y * (2 - x * y % this.DV) % this.DV; // y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return y > 0 ? this.DV - y : -y;
  };
  // BigInteger.prototype.isEven = bnpIsEven;
  // (protected) true iff this is even
  BigInteger.prototype.isEven = function () {
    return (this.t > 0 ? this[0] & 1 : this.s) == 0;
  };
  // BigInteger.prototype.exp = bnpExp;
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  BigInteger.prototype.exp = function (e, z) {
    if (e > 0xffffffff || e < 1) {
      return BigInteger.ONE;
    }
    var r = nbi();
    var r2 = nbi();
    var g = z.convert(this);
    var i = nbits(e) - 1;
    g.copyTo(r);
    while (--i >= 0) {
      z.sqrTo(r, r2);
      if ((e & 1 << i) > 0) {
        z.mulTo(r2, g, r);
      } else {
        var t = r;
        r = r2;
        r2 = t;
      }
    }
    return z.revert(r);
  };
  // BigInteger.prototype.chunkSize = bnpChunkSize;
  // (protected) return x s.t. r^x < DV
  BigInteger.prototype.chunkSize = function (r) {
    return Math.floor(Math.LN2 * this.DB / Math.log(r));
  };
  // BigInteger.prototype.toRadix = bnpToRadix;
  // (protected) convert to radix string
  BigInteger.prototype.toRadix = function (b) {
    if (b == null) {
      b = 10;
    }
    if (this.signum() == 0 || b < 2 || b > 36) {
      return "0";
    }
    var cs = this.chunkSize(b);
    var a = Math.pow(b, cs);
    var d = nbv(a);
    var y = nbi();
    var z = nbi();
    var r = "";
    this.divRemTo(d, y, z);
    while (y.signum() > 0) {
      r = (a + z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d, y, z);
    }
    return z.intValue().toString(b) + r;
  };
  // BigInteger.prototype.fromRadix = bnpFromRadix;
  // (protected) convert from radix string
  BigInteger.prototype.fromRadix = function (s, b) {
    this.fromInt(0);
    if (b == null) {
      b = 10;
    }
    var cs = this.chunkSize(b);
    var d = Math.pow(b, cs);
    var mi = false;
    var j = 0;
    var w = 0;
    for (var i = 0; i < s.length; ++i) {
      var x = intAt(s, i);
      if (x < 0) {
        if (s.charAt(i) == "-" && this.signum() == 0) {
          mi = true;
        }
        continue;
      }
      w = b * w + x;
      if (++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w, 0);
        j = 0;
        w = 0;
      }
    }
    if (j > 0) {
      this.dMultiply(Math.pow(b, j));
      this.dAddOffset(w, 0);
    }
    if (mi) {
      BigInteger.ZERO.subTo(this, this);
    }
  };
  // BigInteger.prototype.fromNumber = bnpFromNumber;
  // (protected) alternate constructor
  BigInteger.prototype.fromNumber = function (a, b, c) {
    if ("number" == typeof b) {
      // new BigInteger(int,int,RNG)
      if (a < 2) {
        this.fromInt(1);
      } else {
        this.fromNumber(a, c);
        if (!this.testBit(a - 1)) {
          // force MSB set
          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util.op_or, this);
        }
        if (this.isEven()) {
          this.dAddOffset(1, 0);
        } // force odd
        while (!this.isProbablePrime(b)) {
          this.dAddOffset(2, 0);
          if (this.bitLength() > a) {
            this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
          }
        }
      }
    } else {
      // new BigInteger(int,RNG)
      var x = [];
      var t = a & 7;
      x.length = (a >> 3) + 1;
      b.nextBytes(x);
      if (t > 0) {
        x[0] &= (1 << t) - 1;
      } else {
        x[0] = 0;
      }
      this.fromString(x, 256);
    }
  };
  // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
  // (protected) r = this op a (bitwise)
  BigInteger.prototype.bitwiseTo = function (a, op, r) {
    var i;
    var f;
    var m = Math.min(a.t, this.t);
    for (i = 0; i < m; ++i) {
      r[i] = op(this[i], a[i]);
    }
    if (a.t < this.t) {
      f = a.s & this.DM;
      for (i = m; i < this.t; ++i) {
        r[i] = op(this[i], f);
      }
      r.t = this.t;
    } else {
      f = this.s & this.DM;
      for (i = m; i < a.t; ++i) {
        r[i] = op(f, a[i]);
      }
      r.t = a.t;
    }
    r.s = op(this.s, a.s);
    r.clamp();
  };
  // BigInteger.prototype.changeBit = bnpChangeBit;
  // (protected) this op (1<<n)
  BigInteger.prototype.changeBit = function (n, op) {
    var r = BigInteger.ONE.shiftLeft(n);
    this.bitwiseTo(r, op, r);
    return r;
  };
  // BigInteger.prototype.addTo = bnpAddTo;
  // (protected) r = this + a
  BigInteger.prototype.addTo = function (a, r) {
    var i = 0;
    var c = 0;
    var m = Math.min(a.t, this.t);
    while (i < m) {
      c += this[i] + a[i];
      r[i++] = c & this.DM;
      c >>= this.DB;
    }
    if (a.t < this.t) {
      c += a.s;
      while (i < this.t) {
        c += this[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += this.s;
    } else {
      c += this.s;
      while (i < a.t) {
        c += a[i];
        r[i++] = c & this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = c < 0 ? -1 : 0;
    if (c > 0) {
      r[i++] = c;
    } else if (c < -1) {
      r[i++] = this.DV + c;
    }
    r.t = i;
    r.clamp();
  };
  // BigInteger.prototype.dMultiply = bnpDMultiply;
  // (protected) this *= n, this >= 0, 1 < n < DV
  BigInteger.prototype.dMultiply = function (n) {
    this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
    ++this.t;
    this.clamp();
  };
  // BigInteger.prototype.dAddOffset = bnpDAddOffset;
  // (protected) this += n << w words, this >= 0
  BigInteger.prototype.dAddOffset = function (n, w) {
    if (n == 0) {
      return;
    }
    while (this.t <= w) {
      this[this.t++] = 0;
    }
    this[w] += n;
    while (this[w] >= this.DV) {
      this[w] -= this.DV;
      if (++w >= this.t) {
        this[this.t++] = 0;
      }
      ++this[w];
    }
  };
  // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
  // (protected) r = lower n words of "this * a", a.t <= n
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyLowerTo = function (a, n, r) {
    var i = Math.min(this.t + a.t, n);
    r.s = 0; // assumes a,this >= 0
    r.t = i;
    while (i > 0) {
      r[--i] = 0;
    }
    for (var j = r.t - this.t; i < j; ++i) {
      r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
    }
    for (var j = Math.min(a.t, n); i < j; ++i) {
      this.am(0, a[i], r, i, 0, n - i);
    }
    r.clamp();
  };
  // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
  // (protected) r = "this * a" without lower n words, n > 0
  // "this" should be the larger one if appropriate.
  BigInteger.prototype.multiplyUpperTo = function (a, n, r) {
    --n;
    var i = r.t = this.t + a.t - n;
    r.s = 0; // assumes a,this >= 0
    while (--i >= 0) {
      r[i] = 0;
    }
    for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
      r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
    }
    r.clamp();
    r.drShiftTo(1, r);
  };
  // BigInteger.prototype.modInt = bnpModInt;
  // (protected) this % n, n < 2^26
  BigInteger.prototype.modInt = function (n) {
    if (n <= 0) {
      return 0;
    }
    var d = this.DV % n;
    var r = this.s < 0 ? n - 1 : 0;
    if (this.t > 0) {
      if (d == 0) {
        r = this[0] % n;
      } else {
        for (var i = this.t - 1; i >= 0; --i) {
          r = (d * r + this[i]) % n;
        }
      }
    }
    return r;
  };
  // BigInteger.prototype.millerRabin = bnpMillerRabin;
  // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
  BigInteger.prototype.millerRabin = function (t) {
    var n1 = this.subtract(BigInteger.ONE);
    var k = n1.getLowestSetBit();
    if (k <= 0) {
      return false;
    }
    var r = n1.shiftRight(k);
    t = t + 1 >> 1;
    if (t > lowprimes.length) {
      t = lowprimes.length;
    }
    var a = nbi();
    for (var i = 0; i < t; ++i) {
      // Pick bases at random, instead of starting at 2
      a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
      var y = a.modPow(r, this);
      if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
        var j = 1;
        while (j++ < k && y.compareTo(n1) != 0) {
          y = y.modPowInt(2, this);
          if (y.compareTo(BigInteger.ONE) == 0) {
            return false;
          }
        }
        if (y.compareTo(n1) != 0) {
          return false;
        }
      }
    }
    return true;
  };
  // BigInteger.prototype.square = bnSquare;
  // (public) this^2
  BigInteger.prototype.square = function () {
    var r = nbi();
    this.squareTo(r);
    return r;
  };
  //#region ASYNC
  // Public API method
  BigInteger.prototype.gcda = function (a, callback) {
    var x = this.s < 0 ? this.negate() : this.clone();
    var y = a.s < 0 ? a.negate() : a.clone();
    if (x.compareTo(y) < 0) {
      var t = x;
      x = y;
      y = t;
    }
    var i = x.getLowestSetBit();
    var g = y.getLowestSetBit();
    if (g < 0) {
      callback(x);
      return;
    }
    if (i < g) {
      g = i;
    }
    if (g > 0) {
      x.rShiftTo(g, x);
      y.rShiftTo(g, y);
    }
    // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.
    var gcda1 = function () {
      if ((i = x.getLowestSetBit()) > 0) {
        x.rShiftTo(i, x);
      }
      if ((i = y.getLowestSetBit()) > 0) {
        y.rShiftTo(i, y);
      }
      if (x.compareTo(y) >= 0) {
        x.subTo(y, x);
        x.rShiftTo(1, x);
      } else {
        y.subTo(x, y);
        y.rShiftTo(1, y);
      }
      if (!(x.signum() > 0)) {
        if (g > 0) {
          y.lShiftTo(g, y);
        }
        setTimeout(function () {
          callback(y);
        }, 0); // escape
      } else {
        setTimeout(gcda1, 0);
      }
    };
    setTimeout(gcda1, 10);
  };
  // (protected) alternate constructor
  BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {
    if ("number" == typeof b) {
      if (a < 2) {
        this.fromInt(1);
      } else {
        this.fromNumber(a, c);
        if (!this.testBit(a - 1)) {
          this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util.op_or, this);
        }
        if (this.isEven()) {
          this.dAddOffset(1, 0);
        }
        var bnp_1 = this;
        var bnpfn1_1 = function () {
          bnp_1.dAddOffset(2, 0);
          if (bnp_1.bitLength() > a) {
            bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);
          }
          if (bnp_1.isProbablePrime(b)) {
            setTimeout(function () {
              callback();
            }, 0); // escape
          } else {
            setTimeout(bnpfn1_1, 0);
          }
        };
        setTimeout(bnpfn1_1, 0);
      }
    } else {
      var x = [];
      var t = a & 7;
      x.length = (a >> 3) + 1;
      b.nextBytes(x);
      if (t > 0) {
        x[0] &= (1 << t) - 1;
      } else {
        x[0] = 0;
      }
      this.fromString(x, 256);
    }
  };
  return BigInteger;
}();
//#region REDUCERS
//#region NullExp
var NullExp = /** @class */function () {
  function NullExp() {}
  // NullExp.prototype.convert = nNop;
  NullExp.prototype.convert = function (x) {
    return x;
  };
  // NullExp.prototype.revert = nNop;
  NullExp.prototype.revert = function (x) {
    return x;
  };
  // NullExp.prototype.mulTo = nMulTo;
  NullExp.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
  };
  // NullExp.prototype.sqrTo = nSqrTo;
  NullExp.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
  };
  return NullExp;
}();
// Modular reduction using "classic" algorithm
var Classic = /** @class */function () {
  function Classic(m) {
    this.m = m;
  }
  // Classic.prototype.convert = cConvert;
  Classic.prototype.convert = function (x) {
    if (x.s < 0 || x.compareTo(this.m) >= 0) {
      return x.mod(this.m);
    } else {
      return x;
    }
  };
  // Classic.prototype.revert = cRevert;
  Classic.prototype.revert = function (x) {
    return x;
  };
  // Classic.prototype.reduce = cReduce;
  Classic.prototype.reduce = function (x) {
    x.divRemTo(this.m, null, x);
  };
  // Classic.prototype.mulTo = cMulTo;
  Classic.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Classic.prototype.sqrTo = cSqrTo;
  Classic.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Classic;
}();
//#endregion
//#region Montgomery
// Montgomery reduction
var Montgomery = /** @class */function () {
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp & 0x7fff;
    this.mph = this.mp >> 15;
    this.um = (1 << m.DB - 15) - 1;
    this.mt2 = 2 * m.t;
  }
  // Montgomery.prototype.convert = montConvert;
  // xR mod m
  Montgomery.prototype.convert = function (x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t, r);
    r.divRemTo(this.m, null, r);
    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
      this.m.subTo(r, r);
    }
    return r;
  };
  // Montgomery.prototype.revert = montRevert;
  // x/R mod m
  Montgomery.prototype.revert = function (x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  };
  // Montgomery.prototype.reduce = montReduce;
  // x = x/R mod m (HAC 14.32)
  Montgomery.prototype.reduce = function (x) {
    while (x.t <= this.mt2) {
      // pad x so am has enough room later
      x[x.t++] = 0;
    }
    for (var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i] & 0x7fff;
      var u0 = j * this.mpl + ((j * this.mph + (x[i] >> 15) * this.mpl & this.um) << 15) & x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i + this.m.t;
      x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
      // propagate carry
      while (x[j] >= x.DV) {
        x[j] -= x.DV;
        x[++j]++;
      }
    }
    x.clamp();
    x.drShiftTo(this.m.t, x);
    if (x.compareTo(this.m) >= 0) {
      x.subTo(this.m, x);
    }
  };
  // Montgomery.prototype.mulTo = montMulTo;
  // r = "xy/R mod m"; x,y != r
  Montgomery.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Montgomery.prototype.sqrTo = montSqrTo;
  // r = "x^2/R mod m"; x != r
  Montgomery.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Montgomery;
}();
//#endregion Montgomery
//#region Barrett
// Barrett modular reduction
var Barrett = /** @class */function () {
  function Barrett(m) {
    this.m = m;
    // setup Barrett
    this.r2 = nbi();
    this.q3 = nbi();
    BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
    this.mu = this.r2.divide(m);
  }
  // Barrett.prototype.convert = barrettConvert;
  Barrett.prototype.convert = function (x) {
    if (x.s < 0 || x.t > 2 * this.m.t) {
      return x.mod(this.m);
    } else if (x.compareTo(this.m) < 0) {
      return x;
    } else {
      var r = nbi();
      x.copyTo(r);
      this.reduce(r);
      return r;
    }
  };
  // Barrett.prototype.revert = barrettRevert;
  Barrett.prototype.revert = function (x) {
    return x;
  };
  // Barrett.prototype.reduce = barrettReduce;
  // x = x mod m (HAC 14.42)
  Barrett.prototype.reduce = function (x) {
    x.drShiftTo(this.m.t - 1, this.r2);
    if (x.t > this.m.t + 1) {
      x.t = this.m.t + 1;
      x.clamp();
    }
    this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
    this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
    while (x.compareTo(this.r2) < 0) {
      x.dAddOffset(1, this.m.t + 1);
    }
    x.subTo(this.r2, x);
    while (x.compareTo(this.m) >= 0) {
      x.subTo(this.m, x);
    }
  };
  // Barrett.prototype.mulTo = barrettMulTo;
  // r = x*y mod m; x,y != r
  Barrett.prototype.mulTo = function (x, y, r) {
    x.multiplyTo(y, r);
    this.reduce(r);
  };
  // Barrett.prototype.sqrTo = barrettSqrTo;
  // r = x^2 mod m; x != r
  Barrett.prototype.sqrTo = function (x, r) {
    x.squareTo(r);
    this.reduce(r);
  };
  return Barrett;
}();
//#endregion
//#endregion REDUCERS
// return new, unset BigInteger
function nbi() {
  return new BigInteger(null);
}
function parseBigInt(str, r) {
  return new BigInteger(str, r);
}
// am: Compute w_j += (x*this_i), propagate carries,
// c is initial carry, returns final carry.
// c < 3*dvalue, x < 2*dvalue, this_i < dvalue
// We need to select the fastest one that works in this environment.
var inBrowser = typeof navigator !== "undefined";
if (inBrowser && j_lm && navigator.appName == "Microsoft Internet Explorer") {
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  BigInteger.prototype.am = function am2(i, x, w, j, c, n) {
    var xl = x & 0x7fff;
    var xh = x >> 15;
    while (--n >= 0) {
      var l = this[i] & 0x7fff;
      var h = this[i++] >> 15;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
      c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
      w[j++] = l & 0x3fffffff;
    }
    return c;
  };
  dbits = 30;
} else if (inBrowser && j_lm && navigator.appName != "Netscape") {
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  BigInteger.prototype.am = function am1(i, x, w, j, c, n) {
    while (--n >= 0) {
      var v = x * this[i++] + w[j] + c;
      c = Math.floor(v / 0x4000000);
      w[j++] = v & 0x3ffffff;
    }
    return c;
  };
  dbits = 26;
} else {
  // Mozilla/Netscape seems to prefer am3
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  BigInteger.prototype.am = function am3(i, x, w, j, c, n) {
    var xl = x & 0x3fff;
    var xh = x >> 14;
    while (--n >= 0) {
      var l = this[i] & 0x3fff;
      var h = this[i++] >> 14;
      var m = xh * l + h * xl;
      l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
      c = (l >> 28) + (m >> 14) + xh * h;
      w[j++] = l & 0xfffffff;
    }
    return c;
  };
  dbits = 28;
}
BigInteger.prototype.DB = dbits;
BigInteger.prototype.DM = (1 << dbits) - 1;
BigInteger.prototype.DV = 1 << dbits;
var BI_FP = 52;
BigInteger.prototype.FV = Math.pow(2, BI_FP);
BigInteger.prototype.F1 = BI_FP - dbits;
BigInteger.prototype.F2 = 2 * dbits - BI_FP;
// Digit conversions
var BI_RC = [];
var rr;
var vv;
rr = "0".charCodeAt(0);
for (vv = 0; vv <= 9; ++vv) {
  BI_RC[rr++] = vv;
}
rr = "a".charCodeAt(0);
for (vv = 10; vv < 36; ++vv) {
  BI_RC[rr++] = vv;
}
rr = "A".charCodeAt(0);
for (vv = 10; vv < 36; ++vv) {
  BI_RC[rr++] = vv;
}
function intAt(s, i) {
  var c = BI_RC[s.charCodeAt(i)];
  return c == null ? -1 : c;
}
// return bigint initialized to value
function nbv(i) {
  var r = nbi();
  r.fromInt(i);
  return r;
}
// returns bit length of the integer x
function nbits(x) {
  var r = 1;
  var t;
  if ((t = x >>> 16) != 0) {
    x = t;
    r += 16;
  }
  if ((t = x >> 8) != 0) {
    x = t;
    r += 8;
  }
  if ((t = x >> 4) != 0) {
    x = t;
    r += 4;
  }
  if ((t = x >> 2) != 0) {
    x = t;
    r += 2;
  }
  if ((t = x >> 1) != 0) {
    x = t;
    r += 1;
  }
  return r;
}
// "constants"
BigInteger.ZERO = nbv(0);
BigInteger.ONE = nbv(1);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js":
/*!*********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Arcfour = void 0;
exports.prng_newstate = prng_newstate;
exports.rng_psize = void 0;
// prng4.js - uses Arcfour as a PRNG
var Arcfour = exports.Arcfour = /** @class */function () {
  function Arcfour() {
    this.i = 0;
    this.j = 0;
    this.S = [];
  }
  // Arcfour.prototype.init = ARC4init;
  // Initialize arcfour context from key, an array of ints, each from [0..255]
  Arcfour.prototype.init = function (key) {
    var i;
    var j;
    var t;
    for (i = 0; i < 256; ++i) {
      this.S[i] = i;
    }
    j = 0;
    for (i = 0; i < 256; ++i) {
      j = j + this.S[i] + key[i % key.length] & 255;
      t = this.S[i];
      this.S[i] = this.S[j];
      this.S[j] = t;
    }
    this.i = 0;
    this.j = 0;
  };
  // Arcfour.prototype.next = ARC4next;
  Arcfour.prototype.next = function () {
    var t;
    this.i = this.i + 1 & 255;
    this.j = this.j + this.S[this.i] & 255;
    t = this.S[this.i];
    this.S[this.i] = this.S[this.j];
    this.S[this.j] = t;
    return this.S[t + this.S[this.i] & 255];
  };
  return Arcfour;
}();
// Plug in your RNG constructor here
function prng_newstate() {
  return new Arcfour();
}
// Pool size must be a multiple of 4 and greater than 32.
// An array of bytes the size of the pool will be passed to init()
var rng_psize = exports.rng_psize = 256;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.SecureRandom = void 0;
var _prng = __webpack_require__(/*! ./prng4 */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/prng4.js");
// Random number generator - requires a PRNG backend, e.g. prng4.js

var rng_state;
var rng_pool = null;
var rng_pptr;
// Initialize the pool with junk if needed.
if (rng_pool == null) {
  rng_pool = [];
  rng_pptr = 0;
  var t = void 0;
  if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {
    // Extract entropy (2048 bits) from RNG if available
    var z = new Uint32Array(256);
    window.crypto.getRandomValues(z);
    for (t = 0; t < z.length; ++t) {
      rng_pool[rng_pptr++] = z[t] & 255;
    }
  }
  // Use mouse events for entropy, if we do not have enough entropy by the time
  // we need it, entropy will be generated by Math.random.
  var count = 0;
  var onMouseMoveListener_1 = function (ev) {
    count = count || 0;
    if (count >= 256 || rng_pptr >= _prng.rng_psize) {
      if (window.removeEventListener) {
        window.removeEventListener("mousemove", onMouseMoveListener_1, false);
      } else if (window.detachEvent) {
        window.detachEvent("onmousemove", onMouseMoveListener_1);
      }
      return;
    }
    try {
      var mouseCoordinates = ev.x + ev.y;
      rng_pool[rng_pptr++] = mouseCoordinates & 255;
      count += 1;
    } catch (e) {
      // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.
    }
  };
  if (typeof window !== 'undefined') {
    if (window.addEventListener) {
      window.addEventListener("mousemove", onMouseMoveListener_1, false);
    } else if (window.attachEvent) {
      window.attachEvent("onmousemove", onMouseMoveListener_1);
    }
  }
}
function rng_get_byte() {
  if (rng_state == null) {
    rng_state = (0, _prng.prng_newstate)();
    // At this point, we may not have collected enough entropy.  If not, fall back to Math.random
    while (rng_pptr < _prng.rng_psize) {
      var random = Math.floor(65536 * Math.random());
      rng_pool[rng_pptr++] = random & 255;
    }
    rng_state.init(rng_pool);
    for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
      rng_pool[rng_pptr] = 0;
    }
    rng_pptr = 0;
  }
  // TODO: allow reseeding after first request
  return rng_state.next();
}
var SecureRandom = exports.SecureRandom = /** @class */function () {
  function SecureRandom() {}
  SecureRandom.prototype.nextBytes = function (ba) {
    for (var i = 0; i < ba.length; ++i) {
      ba[i] = rng_get_byte();
    }
  };
  return SecureRandom;
}();

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/rsa.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.RSAKey = void 0;
var _jsbn = __webpack_require__(/*! ./jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _rng = __webpack_require__(/*! ./rng */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/rng.js");
// Depends on jsbn.js and rng.js
// Version 1.1: support utf-8 encoding in pkcs1pad2
// convert a (hex) string to a bignum object

// function linebrk(s,n) {
//   var ret = "";
//   var i = 0;
//   while(i + n < s.length) {
//     ret += s.substring(i,i+n) + "\n";
//     i += n;
//   }
//   return ret + s.substring(i,s.length);
// }
// function byte2Hex(b) {
//   if(b < 0x10)
//     return "0" + b.toString(16);
//   else
//     return b.toString(16);
// }
function pkcs1pad1(s, n) {
  if (n < s.length + 22) {
    console.error("Message too long for RSA");
    return null;
  }
  var len = n - s.length - 6;
  var filler = "";
  for (var f = 0; f < len; f += 2) {
    filler += "ff";
  }
  var m = "0001" + filler + "00" + s;
  return (0, _jsbn.parseBigInt)(m, 16);
}
// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
function pkcs1pad2(s, n) {
  if (n < s.length + 11) {
    // TODO: fix for utf-8
    console.error("Message too long for RSA");
    return null;
  }
  var ba = [];
  var i = s.length - 1;
  while (i >= 0 && n > 0) {
    var c = s.charCodeAt(i--);
    if (c < 128) {
      // encode using utf-8
      ba[--n] = c;
    } else if (c > 127 && c < 2048) {
      ba[--n] = c & 63 | 128;
      ba[--n] = c >> 6 | 192;
    } else {
      ba[--n] = c & 63 | 128;
      ba[--n] = c >> 6 & 63 | 128;
      ba[--n] = c >> 12 | 224;
    }
  }
  ba[--n] = 0;
  var rng = new _rng.SecureRandom();
  var x = [];
  while (n > 2) {
    // random non-zero pad
    x[0] = 0;
    while (x[0] == 0) {
      rng.nextBytes(x);
    }
    ba[--n] = x[0];
  }
  ba[--n] = 2;
  ba[--n] = 0;
  return new _jsbn.BigInteger(ba);
}
// "empty" RSA key constructor
var RSAKey = exports.RSAKey = /** @class */function () {
  function RSAKey() {
    this.n = null;
    this.e = 0;
    this.d = null;
    this.p = null;
    this.q = null;
    this.dmp1 = null;
    this.dmq1 = null;
    this.coeff = null;
  }
  //#region PROTECTED
  // protected
  // RSAKey.prototype.doPublic = RSADoPublic;
  // Perform raw public operation on "x": return x^e (mod n)
  RSAKey.prototype.doPublic = function (x) {
    return x.modPowInt(this.e, this.n);
  };
  // RSAKey.prototype.doPrivate = RSADoPrivate;
  // Perform raw private operation on "x": return x^d (mod n)
  RSAKey.prototype.doPrivate = function (x) {
    if (this.p == null || this.q == null) {
      return x.modPow(this.d, this.n);
    }
    // TODO: re-calculate any missing CRT params
    var xp = x.mod(this.p).modPow(this.dmp1, this.p);
    var xq = x.mod(this.q).modPow(this.dmq1, this.q);
    while (xp.compareTo(xq) < 0) {
      xp = xp.add(this.p);
    }
    return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
  };
  //#endregion PROTECTED
  //#region PUBLIC
  // RSAKey.prototype.setPublic = RSASetPublic;
  // Set the public key fields N and e from hex strings
  RSAKey.prototype.setPublic = function (N, E) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
    } else {
      console.error("Invalid RSA public key");
    }
  };
  // RSAKey.prototype.encrypt = RSAEncrypt;
  // Return the PKCS#1 RSA encryption of "text" as an even-length hex string
  RSAKey.prototype.encrypt = function (text) {
    var maxLength = this.n.bitLength() + 7 >> 3;
    var m = pkcs1pad2(text, maxLength);
    if (m == null) {
      return null;
    }
    var c = this.doPublic(m);
    if (c == null) {
      return null;
    }
    var h = c.toString(16);
    var length = h.length;
    // fix zero before result
    for (var i = 0; i < maxLength * 2 - length; i++) {
      h = "0" + h;
    }
    return h;
  };
  // RSAKey.prototype.setPrivate = RSASetPrivate;
  // Set the private key fields N, e, and d from hex strings
  RSAKey.prototype.setPrivate = function (N, E, D) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
      this.d = (0, _jsbn.parseBigInt)(D, 16);
    } else {
      console.error("Invalid RSA private key");
    }
  };
  // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
  // Set the private key fields N, e, d and CRT params from hex strings
  RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {
    if (N != null && E != null && N.length > 0 && E.length > 0) {
      this.n = (0, _jsbn.parseBigInt)(N, 16);
      this.e = parseInt(E, 16);
      this.d = (0, _jsbn.parseBigInt)(D, 16);
      this.p = (0, _jsbn.parseBigInt)(P, 16);
      this.q = (0, _jsbn.parseBigInt)(Q, 16);
      this.dmp1 = (0, _jsbn.parseBigInt)(DP, 16);
      this.dmq1 = (0, _jsbn.parseBigInt)(DQ, 16);
      this.coeff = (0, _jsbn.parseBigInt)(C, 16);
    } else {
      console.error("Invalid RSA private key");
    }
  };
  // RSAKey.prototype.generate = RSAGenerate;
  // Generate a new random private key B bits long, using public expt E
  RSAKey.prototype.generate = function (B, E) {
    var rng = new _rng.SecureRandom();
    var qs = B >> 1;
    this.e = parseInt(E, 16);
    var ee = new _jsbn.BigInteger(E, 16);
    for (;;) {
      for (;;) {
        this.p = new _jsbn.BigInteger(B - qs, 1, rng);
        if (this.p.subtract(_jsbn.BigInteger.ONE).gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {
          break;
        }
      }
      for (;;) {
        this.q = new _jsbn.BigInteger(qs, 1, rng);
        if (this.q.subtract(_jsbn.BigInteger.ONE).gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {
          break;
        }
      }
      if (this.p.compareTo(this.q) <= 0) {
        var t = this.p;
        this.p = this.q;
        this.q = t;
      }
      var p1 = this.p.subtract(_jsbn.BigInteger.ONE);
      var q1 = this.q.subtract(_jsbn.BigInteger.ONE);
      var phi = p1.multiply(q1);
      if (phi.gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0) {
        this.n = this.p.multiply(this.q);
        this.d = ee.modInverse(phi);
        this.dmp1 = this.d.mod(p1);
        this.dmq1 = this.d.mod(q1);
        this.coeff = this.q.modInverse(this.p);
        break;
      }
    }
  };
  // RSAKey.prototype.decrypt = RSADecrypt;
  // Return the PKCS#1 RSA decryption of "ctext".
  // "ctext" is an even-length hex string and the output is a plain string.
  RSAKey.prototype.decrypt = function (ctext) {
    var c = (0, _jsbn.parseBigInt)(ctext, 16);
    var m = this.doPrivate(c);
    if (m == null) {
      return null;
    }
    return pkcs1unpad2(m, this.n.bitLength() + 7 >> 3);
  };
  // Generate a new random private key B bits long, using public expt E
  RSAKey.prototype.generateAsync = function (B, E, callback) {
    var rng = new _rng.SecureRandom();
    var qs = B >> 1;
    this.e = parseInt(E, 16);
    var ee = new _jsbn.BigInteger(E, 16);
    var rsa = this;
    // These functions have non-descript names because they were originally for(;;) loops.
    // I don't know about cryptography to give them better names than loop1-4.
    var loop1 = function () {
      var loop4 = function () {
        if (rsa.p.compareTo(rsa.q) <= 0) {
          var t = rsa.p;
          rsa.p = rsa.q;
          rsa.q = t;
        }
        var p1 = rsa.p.subtract(_jsbn.BigInteger.ONE);
        var q1 = rsa.q.subtract(_jsbn.BigInteger.ONE);
        var phi = p1.multiply(q1);
        if (phi.gcd(ee).compareTo(_jsbn.BigInteger.ONE) == 0) {
          rsa.n = rsa.p.multiply(rsa.q);
          rsa.d = ee.modInverse(phi);
          rsa.dmp1 = rsa.d.mod(p1);
          rsa.dmq1 = rsa.d.mod(q1);
          rsa.coeff = rsa.q.modInverse(rsa.p);
          setTimeout(function () {
            callback();
          }, 0); // escape
        } else {
          setTimeout(loop1, 0);
        }
      };
      var loop3 = function () {
        rsa.q = (0, _jsbn.nbi)();
        rsa.q.fromNumberAsync(qs, 1, rng, function () {
          rsa.q.subtract(_jsbn.BigInteger.ONE).gcda(ee, function (r) {
            if (r.compareTo(_jsbn.BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {
              setTimeout(loop4, 0);
            } else {
              setTimeout(loop3, 0);
            }
          });
        });
      };
      var loop2 = function () {
        rsa.p = (0, _jsbn.nbi)();
        rsa.p.fromNumberAsync(B - qs, 1, rng, function () {
          rsa.p.subtract(_jsbn.BigInteger.ONE).gcda(ee, function (r) {
            if (r.compareTo(_jsbn.BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {
              setTimeout(loop3, 0);
            } else {
              setTimeout(loop2, 0);
            }
          });
        });
      };
      setTimeout(loop2, 0);
    };
    setTimeout(loop1, 0);
  };
  RSAKey.prototype.sign = function (text, digestMethod, digestName) {
    var header = getDigestHeader(digestName);
    var digest = header + digestMethod(text).toString();
    var m = pkcs1pad1(digest, this.n.bitLength() / 4);
    if (m == null) {
      return null;
    }
    var c = this.doPrivate(m);
    if (c == null) {
      return null;
    }
    var h = c.toString(16);
    if ((h.length & 1) == 0) {
      return h;
    } else {
      return "0" + h;
    }
  };
  RSAKey.prototype.verify = function (text, signature, digestMethod) {
    var c = (0, _jsbn.parseBigInt)(signature, 16);
    var m = this.doPublic(c);
    if (m == null) {
      return null;
    }
    var unpadded = m.toString(16).replace(/^1f+00/, "");
    var digest = removeDigestHeader(unpadded);
    return digest == digestMethod(text).toString();
  };
  return RSAKey;
}();
// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext
function pkcs1unpad2(d, n) {
  var b = d.toByteArray();
  var i = 0;
  while (i < b.length && b[i] == 0) {
    ++i;
  }
  if (b.length - i != n - 1 || b[i] != 2) {
    return null;
  }
  ++i;
  while (b[i] != 0) {
    if (++i >= b.length) {
      return null;
    }
  }
  var ret = "";
  while (++i < b.length) {
    var c = b[i] & 255;
    if (c < 128) {
      // utf-8 decode
      ret += String.fromCharCode(c);
    } else if (c > 191 && c < 224) {
      ret += String.fromCharCode((c & 31) << 6 | b[i + 1] & 63);
      ++i;
    } else {
      ret += String.fromCharCode((c & 15) << 12 | (b[i + 1] & 63) << 6 | b[i + 2] & 63);
      i += 2;
    }
  }
  return ret;
}
// https://tools.ietf.org/html/rfc3447#page-43
var DIGEST_HEADERS = {
  md2: "3020300c06082a864886f70d020205000410",
  md5: "3020300c06082a864886f70d020505000410",
  sha1: "3021300906052b0e03021a05000414",
  sha224: "302d300d06096086480165030402040500041c",
  sha256: "3031300d060960864801650304020105000420",
  sha384: "3041300d060960864801650304020205000430",
  sha512: "3051300d060960864801650304020305000440",
  ripemd160: "3021300906052b2403020105000414"
};
function getDigestHeader(name) {
  return DIGEST_HEADERS[name] || "";
}
function removeDigestHeader(str) {
  for (var name_1 in DIGEST_HEADERS) {
    if (DIGEST_HEADERS.hasOwnProperty(name_1)) {
      var header = DIGEST_HEADERS[name_1];
      var len = header.length;
      if (str.substr(0, len) == header) {
        return str.substr(len);
      }
    }
  }
  return str;
}
// Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
// function RSAEncryptB64(text) {
//  var h = this.encrypt(text);
//  if(h) return hex2b64(h); else return null;
// }
// public
// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js":
/*!********************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsbn/util.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.cbit = cbit;
exports.int2char = int2char;
exports.lbit = lbit;
exports.op_and = op_and;
exports.op_andnot = op_andnot;
exports.op_or = op_or;
exports.op_xor = op_xor;
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
function int2char(n) {
  return BI_RM.charAt(n);
}
//#region BIT_OPERATIONS
// (public) this & a
function op_and(x, y) {
  return x & y;
}
// (public) this | a
function op_or(x, y) {
  return x | y;
}
// (public) this ^ a
function op_xor(x, y) {
  return x ^ y;
}
// (public) this & ~a
function op_andnot(x, y) {
  return x & ~y;
}
// return index of lowest 1-bit in x, x < 2^31
function lbit(x) {
  if (x == 0) {
    return -1;
  }
  var r = 0;
  if ((x & 0xffff) == 0) {
    x >>= 16;
    r += 16;
  }
  if ((x & 0xff) == 0) {
    x >>= 8;
    r += 8;
  }
  if ((x & 0xf) == 0) {
    x >>= 4;
    r += 4;
  }
  if ((x & 3) == 0) {
    x >>= 2;
    r += 2;
  }
  if ((x & 1) == 0) {
    ++r;
  }
  return r;
}
// return number of 1 bits in x
function cbit(x) {
  var r = 0;
  while (x != 0) {
    x &= x - 1;
    ++r;
  }
  return r;
}
//#endregion BIT_OPERATIONS

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js":
/*!*****************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.KJUR = void 0;
var _jsbn = __webpack_require__(/*! ../jsbn/jsbn */ "./src/Common/libs/jsencrypt/lib/lib/jsbn/jsbn.js");
var _yahoo = __webpack_require__(/*! ./yahoo */ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js");
/* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license
 */
/*
 * asn1.js - ASN.1 DER encoder classes
 *
 * Copyright (c) 2013-2017 Kenji Urushima (kenji.urushima@gmail.com)
 *
 * This software is licensed under the terms of the MIT License.
 * https://kjur.github.io/jsrsasign/license
 *
 * The above copyright and license notice shall be
 * included in all copies or substantial portions of the Software.
 */

/**
 * @fileOverview
 * @name asn1-1.0.js
 * @author Kenji Urushima kenji.urushima@gmail.com
 * @version asn1 1.0.13 (2017-Jun-02)
 * @since jsrsasign 2.1
 * @license <a href="https://kjur.github.io/jsrsasign/license/">MIT License</a>
 */
/**
 * kjur's class library name space
 * <p>
 * This name space provides following name spaces:
 * <ul>
 * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>
 * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>
 * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature
 * class and utilities</li>
 * </ul>
 * </p>
 * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.
 * @name KJUR
 * @namespace kjur's class library name space
 */
var KJUR = exports.KJUR = {};
/**
 * kjur's ASN.1 class library name space
 * <p>
 * This is ITU-T X.690 ASN.1 DER encoder class library and
 * class structure and methods is very similar to
 * org.bouncycastle.asn1 package of
 * well known BouncyCaslte Cryptography Library.
 * <h4>PROVIDING ASN.1 PRIMITIVES</h4>
 * Here are ASN.1 DER primitive classes.
 * <ul>
 * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>
 * <li>0x02 {@link KJUR.asn1.DERInteger}</li>
 * <li>0x03 {@link KJUR.asn1.DERBitString}</li>
 * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>
 * <li>0x05 {@link KJUR.asn1.DERNull}</li>
 * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>
 * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>
 * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>
 * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>
 * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>
 * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>
 * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>
 * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>
 * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>
 * <li>0x30 {@link KJUR.asn1.DERSequence}</li>
 * <li>0x31 {@link KJUR.asn1.DERSet}</li>
 * </ul>
 * <h4>OTHER ASN.1 CLASSES</h4>
 * <ul>
 * <li>{@link KJUR.asn1.ASN1Object}</li>
 * <li>{@link KJUR.asn1.DERAbstractString}</li>
 * <li>{@link KJUR.asn1.DERAbstractTime}</li>
 * <li>{@link KJUR.asn1.DERAbstractStructured}</li>
 * <li>{@link KJUR.asn1.DERTaggedObject}</li>
 * </ul>
 * <h4>SUB NAME SPACES</h4>
 * <ul>
 * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>
 * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>
 * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>
 * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>
 * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>
 * </ul>
 * </p>
 * NOTE: Please ignore method summary and document of this namespace.
 * This caused by a bug of jsdoc2.
 * @name KJUR.asn1
 * @namespace
 */
if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1) KJUR.asn1 = {};
/**
 * ASN1 utilities class
 * @name KJUR.asn1.ASN1Util
 * @class ASN1 utilities class
 * @since asn1 1.0.2
 */
KJUR.asn1.ASN1Util = new function () {
  this.integerToByteHex = function (i) {
    var h = i.toString(16);
    if (h.length % 2 == 1) h = '0' + h;
    return h;
  };
  this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {
    var h = bigIntegerValue.toString(16);
    if (h.substr(0, 1) != '-') {
      if (h.length % 2 == 1) {
        h = '0' + h;
      } else {
        if (!h.match(/^[0-7]/)) {
          h = '00' + h;
        }
      }
    } else {
      var hPos = h.substr(1);
      var xorLen = hPos.length;
      if (xorLen % 2 == 1) {
        xorLen += 1;
      } else {
        if (!h.match(/^[0-7]/)) {
          xorLen += 2;
        }
      }
      var hMask = '';
      for (var i = 0; i < xorLen; i++) {
        hMask += 'f';
      }
      var biMask = new _jsbn.BigInteger(hMask, 16);
      var biNeg = biMask.xor(bigIntegerValue).add(_jsbn.BigInteger.ONE);
      h = biNeg.toString(16).replace(/^-/, '');
    }
    return h;
  };
  /**
   * get PEM string from hexadecimal data and header string
   * @name getPEMStringFromHex
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {String} dataHex hexadecimal string of PEM body
   * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')
   * @return {String} PEM formatted string of input data
   * @description
   * This method converts a hexadecimal string to a PEM string with
   * a specified header. Its line break will be CRLF("\r\n").
   * @example
   * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');
   * // value of pem will be:
   * -----BEGIN PRIVATE KEY-----
   * YWFh
   * -----END PRIVATE KEY-----
   */
  this.getPEMStringFromHex = function (dataHex, pemHeader) {
    return hextopem(dataHex, pemHeader);
  };
  /**
   * generate ASN1Object specifed by JSON parameters
   * @name newObject
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {Array} param JSON parameter to generate ASN1Object
   * @return {KJUR.asn1.ASN1Object} generated object
   * @since asn1 1.0.3
   * @description
   * generate any ASN1Object specified by JSON param
   * including ASN.1 primitive or structured.
   * Generally 'param' can be described as follows:
   * <blockquote>
   * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}
   * </blockquote>
   * 'TYPE-OF-ASN1OBJ' can be one of following symbols:
   * <ul>
   * <li>'bool' - DERBoolean</li>
   * <li>'int' - DERInteger</li>
   * <li>'bitstr' - DERBitString</li>
   * <li>'octstr' - DEROctetString</li>
   * <li>'null' - DERNull</li>
   * <li>'oid' - DERObjectIdentifier</li>
   * <li>'enum' - DEREnumerated</li>
   * <li>'utf8str' - DERUTF8String</li>
   * <li>'numstr' - DERNumericString</li>
   * <li>'prnstr' - DERPrintableString</li>
   * <li>'telstr' - DERTeletexString</li>
   * <li>'ia5str' - DERIA5String</li>
   * <li>'utctime' - DERUTCTime</li>
   * <li>'gentime' - DERGeneralizedTime</li>
   * <li>'seq' - DERSequence</li>
   * <li>'set' - DERSet</li>
   * <li>'tag' - DERTaggedObject</li>
   * </ul>
   * @example
   * newObject({'prnstr': 'aaa'});
   * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})
   * // ASN.1 Tagged Object
   * newObject({'tag': {'tag': 'a1',
   *                    'explicit': true,
   *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});
   * // more simple representation of ASN.1 Tagged Object
   * newObject({'tag': ['a1',
   *                    true,
   *                    {'seq': [
   *                      {'int': 3},
   *                      {'prnstr': 'aaa'}]}
   *                   ]});
   */
  this.newObject = function (param) {
    var _KJUR = KJUR,
      _KJUR_asn1 = _KJUR.asn1,
      _DERBoolean = _KJUR_asn1.DERBoolean,
      _DERInteger = _KJUR_asn1.DERInteger,
      _DERBitString = _KJUR_asn1.DERBitString,
      _DEROctetString = _KJUR_asn1.DEROctetString,
      _DERNull = _KJUR_asn1.DERNull,
      _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier,
      _DEREnumerated = _KJUR_asn1.DEREnumerated,
      _DERUTF8String = _KJUR_asn1.DERUTF8String,
      _DERNumericString = _KJUR_asn1.DERNumericString,
      _DERPrintableString = _KJUR_asn1.DERPrintableString,
      _DERTeletexString = _KJUR_asn1.DERTeletexString,
      _DERIA5String = _KJUR_asn1.DERIA5String,
      _DERUTCTime = _KJUR_asn1.DERUTCTime,
      _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime,
      _DERSequence = _KJUR_asn1.DERSequence,
      _DERSet = _KJUR_asn1.DERSet,
      _DERTaggedObject = _KJUR_asn1.DERTaggedObject,
      _newObject = _KJUR_asn1.ASN1Util.newObject;
    var keys = Object.keys(param);
    if (keys.length != 1) throw "key of param shall be only one.";
    var key = keys[0];
    if (":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":" + key + ":") == -1) throw "undefined key: " + key;
    if (key == "bool") return new _DERBoolean(param[key]);
    if (key == "int") return new _DERInteger(param[key]);
    if (key == "bitstr") return new _DERBitString(param[key]);
    if (key == "octstr") return new _DEROctetString(param[key]);
    if (key == "null") return new _DERNull(param[key]);
    if (key == "oid") return new _DERObjectIdentifier(param[key]);
    if (key == "enum") return new _DEREnumerated(param[key]);
    if (key == "utf8str") return new _DERUTF8String(param[key]);
    if (key == "numstr") return new _DERNumericString(param[key]);
    if (key == "prnstr") return new _DERPrintableString(param[key]);
    if (key == "telstr") return new _DERTeletexString(param[key]);
    if (key == "ia5str") return new _DERIA5String(param[key]);
    if (key == "utctime") return new _DERUTCTime(param[key]);
    if (key == "gentime") return new _DERGeneralizedTime(param[key]);
    if (key == "seq") {
      var paramList = param[key];
      var a = [];
      for (var i = 0; i < paramList.length; i++) {
        var asn1Obj = _newObject(paramList[i]);
        a.push(asn1Obj);
      }
      return new _DERSequence({
        'array': a
      });
    }
    if (key == "set") {
      var paramList = param[key];
      var a = [];
      for (var i = 0; i < paramList.length; i++) {
        var asn1Obj = _newObject(paramList[i]);
        a.push(asn1Obj);
      }
      return new _DERSet({
        'array': a
      });
    }
    if (key == "tag") {
      var tagParam = param[key];
      if (Object.prototype.toString.call(tagParam) === '[object Array]' && tagParam.length == 3) {
        var obj = _newObject(tagParam[2]);
        return new _DERTaggedObject({
          tag: tagParam[0],
          explicit: tagParam[1],
          obj: obj
        });
      } else {
        var newParam = {};
        if (tagParam.explicit !== undefined) newParam.explicit = tagParam.explicit;
        if (tagParam.tag !== undefined) newParam.tag = tagParam.tag;
        if (tagParam.obj === undefined) throw "obj shall be specified for 'tag'.";
        newParam.obj = _newObject(tagParam.obj);
        return new _DERTaggedObject(newParam);
      }
    }
  };
  /**
   * get encoded hexadecimal string of ASN1Object specifed by JSON parameters
   * @name jsonToASN1HEX
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {Array} param JSON parameter to generate ASN1Object
   * @return hexadecimal string of ASN1Object
   * @since asn1 1.0.4
   * @description
   * As for ASN.1 object representation of JSON object,
   * please see {@link newObject}.
   * @example
   * jsonToASN1HEX({'prnstr': 'aaa'});
   */
  this.jsonToASN1HEX = function (param) {
    var asn1Obj = this.newObject(param);
    return asn1Obj.getEncodedHex();
  };
}();
/**
 * get dot noted oid number string from hexadecimal value of OID
 * @name oidHexToInt
 * @memberOf KJUR.asn1.ASN1Util
 * @function
 * @param {String} hex hexadecimal value of object identifier
 * @return {String} dot noted string of object identifier
 * @since jsrsasign 4.8.3 asn1 1.0.7
 * @description
 * This static method converts from hexadecimal string representation of
 * ASN.1 value of object identifier to oid number string.
 * @example
 * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; "2.5.4.6"
 */
KJUR.asn1.ASN1Util.oidHexToInt = function (hex) {
  var s = "";
  var i01 = parseInt(hex.substr(0, 2), 16);
  var i0 = Math.floor(i01 / 40);
  var i1 = i01 % 40;
  var s = i0 + "." + i1;
  var binbuf = "";
  for (var i = 2; i < hex.length; i += 2) {
    var value = parseInt(hex.substr(i, 2), 16);
    var bin = ("00000000" + value.toString(2)).slice(-8);
    binbuf = binbuf + bin.substr(1, 7);
    if (bin.substr(0, 1) == "0") {
      var bi = new _jsbn.BigInteger(binbuf, 2);
      s = s + "." + bi.toString(10);
      binbuf = "";
    }
  }
  ;
  return s;
};
/**
 * get hexadecimal value of object identifier from dot noted oid value
 * @name oidIntToHex
 * @memberOf KJUR.asn1.ASN1Util
 * @function
 * @param {String} oidString dot noted string of object identifier
 * @return {String} hexadecimal value of object identifier
 * @since jsrsasign 4.8.3 asn1 1.0.7
 * @description
 * This static method converts from object identifier value string.
 * to hexadecimal string representation of it.
 * @example
 * KJUR.asn1.ASN1Util.oidIntToHex("2.5.4.6") &rarr; "550406"
 */
KJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {
  var itox = function (i) {
    var h = i.toString(16);
    if (h.length == 1) h = '0' + h;
    return h;
  };
  var roidtox = function (roid) {
    var h = '';
    var bi = new _jsbn.BigInteger(roid, 10);
    var b = bi.toString(2);
    var padLen = 7 - b.length % 7;
    if (padLen == 7) padLen = 0;
    var bPad = '';
    for (var i = 0; i < padLen; i++) bPad += '0';
    b = bPad + b;
    for (var i = 0; i < b.length - 1; i += 7) {
      var b8 = b.substr(i, 7);
      if (i != b.length - 7) b8 = '1' + b8;
      h += itox(parseInt(b8, 2));
    }
    return h;
  };
  if (!oidString.match(/^[0-9.]+$/)) {
    throw "malformed oid string: " + oidString;
  }
  var h = '';
  var a = oidString.split('.');
  var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
  h += itox(i0);
  a.splice(0, 2);
  for (var i = 0; i < a.length; i++) {
    h += roidtox(a[i]);
  }
  return h;
};
// ********************************************************************
//  Abstract ASN.1 Classes
// ********************************************************************
// ********************************************************************
/**
 * base class for ASN.1 DER encoder object
 * @name KJUR.asn1.ASN1Object
 * @class base class for ASN.1 DER encoder object
 * @property {Boolean} isModified flag whether internal data was changed
 * @property {String} hTLV hexadecimal string of ASN.1 TLV
 * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)
 * @property {String} hL hexadecimal string of ASN.1 TLV length(L)
 * @property {String} hV hexadecimal string of ASN.1 TLV value(V)
 * @description
 */
KJUR.asn1.ASN1Object = function () {
  var isModified = true;
  var hTLV = null;
  var hT = '00';
  var hL = '00';
  var hV = '';
  /**
   * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)
   * @name getLengthHexFromValue
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV length(L)
   */
  this.getLengthHexFromValue = function () {
    if (typeof this.hV == "undefined" || this.hV == null) {
      throw "this.hV is null or undefined.";
    }
    if (this.hV.length % 2 == 1) {
      throw "value hex must be even length: n=" + hV.length + ",v=" + this.hV;
    }
    var n = this.hV.length / 2;
    var hN = n.toString(16);
    if (hN.length % 2 == 1) {
      hN = "0" + hN;
    }
    if (n < 128) {
      return hN;
    } else {
      var hNlen = hN.length / 2;
      if (hNlen > 15) {
        throw "ASN.1 length too long to represent by 8x: n = " + n.toString(16);
      }
      var head = 128 + hNlen;
      return head.toString(16) + hN;
    }
  };
  /**
   * get hexadecimal string of ASN.1 TLV bytes
   * @name getEncodedHex
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV
   */
  this.getEncodedHex = function () {
    if (this.hTLV == null || this.isModified) {
      this.hV = this.getFreshValueHex();
      this.hL = this.getLengthHexFromValue();
      this.hTLV = this.hT + this.hL + this.hV;
      this.isModified = false;
      //alert("first time: " + this.hTLV);
    }
    return this.hTLV;
  };
  /**
   * get hexadecimal string of ASN.1 TLV value(V) bytes
   * @name getValueHex
   * @memberOf KJUR.asn1.ASN1Object#
   * @function
   * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes
   */
  this.getValueHex = function () {
    this.getEncodedHex();
    return this.hV;
  };
  this.getFreshValueHex = function () {
    return '';
  };
};
// == BEGIN DERAbstractString ================================================
/**
 * base class for ASN.1 DER string classes
 * @name KJUR.asn1.DERAbstractString
 * @class base class for ASN.1 DER string classes
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @property {String} s internal string of value
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERAbstractString = function (params) {
  KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
  var s = null;
  var hV = null;
  /**
   * get string value of this string object
   * @name getString
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @return {String} string value of this string object
   */
  this.getString = function () {
    return this.s;
  };
  /**
   * set value by a string
   * @name setString
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @param {String} newS value by a string to set
   */
  this.setString = function (newS) {
    this.hTLV = null;
    this.isModified = true;
    this.s = newS;
    this.hV = stohex(this.s);
  };
  /**
   * set value by a hexadecimal string
   * @name setStringHex
   * @memberOf KJUR.asn1.DERAbstractString#
   * @function
   * @param {String} newHexString value by a hexadecimal string to set
   */
  this.setStringHex = function (newHexString) {
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params == "string") {
      this.setString(params);
    } else if (typeof params['str'] != "undefined") {
      this.setString(params['str']);
    } else if (typeof params['hex'] != "undefined") {
      this.setStringHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);
// == END   DERAbstractString ================================================
// == BEGIN DERAbstractTime ==================================================
/**
 * base class for ASN.1 DER Generalized/UTCTime class
 * @name KJUR.asn1.DERAbstractTime
 * @class base class for ASN.1 DER Generalized/UTCTime class
 * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERAbstractTime = function (params) {
  KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);
  var s = null;
  var date = null;
  // --- PRIVATE METHODS --------------------
  this.localDateToUTC = function (d) {
    utc = d.getTime() + d.getTimezoneOffset() * 60000;
    var utcDate = new Date(utc);
    return utcDate;
  };
  /*
   * format date string by Data object
   * @name formatDate
   * @memberOf KJUR.asn1.AbstractTime;
   * @param {Date} dateObject
   * @param {string} type 'utc' or 'gen'
   * @param {boolean} withMillis flag for with millisections or not
   * @description
   * 'withMillis' flag is supported from asn1 1.0.6.
   */
  this.formatDate = function (dateObject, type, withMillis) {
    var pad = this.zeroPadding;
    var d = this.localDateToUTC(dateObject);
    var year = String(d.getFullYear());
    if (type == 'utc') year = year.substr(2, 2);
    var month = pad(String(d.getMonth() + 1), 2);
    var day = pad(String(d.getDate()), 2);
    var hour = pad(String(d.getHours()), 2);
    var min = pad(String(d.getMinutes()), 2);
    var sec = pad(String(d.getSeconds()), 2);
    var s = year + month + day + hour + min + sec;
    if (withMillis === true) {
      var millis = d.getMilliseconds();
      if (millis != 0) {
        var sMillis = pad(String(millis), 3);
        sMillis = sMillis.replace(/[0]+$/, "");
        s = s + "." + sMillis;
      }
    }
    return s + "Z";
  };
  this.zeroPadding = function (s, len) {
    if (s.length >= len) return s;
    return new Array(len - s.length + 1).join('0') + s;
  };
  // --- PUBLIC METHODS --------------------
  /**
   * get string value of this string object
   * @name getString
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @return {String} string value of this time object
   */
  this.getString = function () {
    return this.s;
  };
  /**
   * set value by a string
   * @name setString
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @param {String} newS value by a string to set such like "130430235959Z"
   */
  this.setString = function (newS) {
    this.hTLV = null;
    this.isModified = true;
    this.s = newS;
    this.hV = stohex(newS);
  };
  /**
   * set value by a Date object
   * @name setByDateValue
   * @memberOf KJUR.asn1.DERAbstractTime#
   * @function
   * @param {Integer} year year of date (ex. 2013)
   * @param {Integer} month month of date between 1 and 12 (ex. 12)
   * @param {Integer} day day of month
   * @param {Integer} hour hours of date
   * @param {Integer} min minutes of date
   * @param {Integer} sec seconds of date
   */
  this.setByDateValue = function (year, month, day, hour, min, sec) {
    var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));
    this.setByDate(dateObject);
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);
// == END   DERAbstractTime ==================================================
// == BEGIN DERAbstractStructured ============================================
/**
 * base class for ASN.1 DER structured class
 * @name KJUR.asn1.DERAbstractStructured
 * @class base class for ASN.1 DER structured class
 * @property {Array} asn1Array internal array of ASN1Object
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERAbstractStructured = function (params) {
  KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
  var asn1Array = null;
  /**
   * set value by array of ASN1Object
   * @name setByASN1ObjectArray
   * @memberOf KJUR.asn1.DERAbstractStructured#
   * @function
   * @param {array} asn1ObjectArray array of ASN1Object to set
   */
  this.setByASN1ObjectArray = function (asn1ObjectArray) {
    this.hTLV = null;
    this.isModified = true;
    this.asn1Array = asn1ObjectArray;
  };
  /**
   * append an ASN1Object to internal array
   * @name appendASN1Object
   * @memberOf KJUR.asn1.DERAbstractStructured#
   * @function
   * @param {ASN1Object} asn1Object to add
   */
  this.appendASN1Object = function (asn1Object) {
    this.hTLV = null;
    this.isModified = true;
    this.asn1Array.push(asn1Object);
  };
  this.asn1Array = new Array();
  if (typeof params != "undefined") {
    if (typeof params['array'] != "undefined") {
      this.asn1Array = params['array'];
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);
// ********************************************************************
//  ASN.1 Object Classes
// ********************************************************************
// ********************************************************************
/**
 * class for ASN.1 DER Boolean
 * @name KJUR.asn1.DERBoolean
 * @class class for ASN.1 DER Boolean
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERBoolean = function () {
  KJUR.asn1.DERBoolean.superclass.constructor.call(this);
  this.hT = "01";
  this.hTLV = "0101ff";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER Integer
 * @name KJUR.asn1.DERInteger
 * @class class for ASN.1 DER Integer
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>int - specify initial ASN.1 value(V) by integer value</li>
 * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERInteger = function (params) {
  KJUR.asn1.DERInteger.superclass.constructor.call(this);
  this.hT = "02";
  /**
   * set value by Tom Wu's BigInteger object
   * @name setByBigInteger
   * @memberOf KJUR.asn1.DERInteger#
   * @function
   * @param {BigInteger} bigIntegerValue to set
   */
  this.setByBigInteger = function (bigIntegerValue) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
  };
  /**
   * set value by integer value
   * @name setByInteger
   * @memberOf KJUR.asn1.DERInteger
   * @function
   * @param {Integer} integer value to set
   */
  this.setByInteger = function (intValue) {
    var bi = new _jsbn.BigInteger(String(intValue), 10);
    this.setByBigInteger(bi);
  };
  /**
   * set value by integer value
   * @name setValueHex
   * @memberOf KJUR.asn1.DERInteger#
   * @function
   * @param {String} hexadecimal string of integer value
   * @description
   * <br/>
   * NOTE: Value shall be represented by minimum octet length of
   * two's complement representation.
   * @example
   * new KJUR.asn1.DERInteger(123);
   * new KJUR.asn1.DERInteger({'int': 123});
   * new KJUR.asn1.DERInteger({'hex': '1fad'});
   */
  this.setValueHex = function (newHexString) {
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['bigint'] != "undefined") {
      this.setByBigInteger(params['bigint']);
    } else if (typeof params['int'] != "undefined") {
      this.setByInteger(params['int']);
    } else if (typeof params == "number") {
      this.setByInteger(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setValueHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER encoded BitString primitive
 * @name KJUR.asn1.DERBitString
 * @class class for ASN.1 DER encoded BitString primitive
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>bin - specify binary string (ex. '10111')</li>
 * <li>array - specify array of boolean (ex. [true,false,true,true])</li>
 * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>
 * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}
 * argument for "BitString encapsulates" structure.</li>
 * </ul>
 * NOTE1: 'params' can be omitted.<br/>
 * NOTE2: 'obj' parameter have been supported since
 * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>
 * @example
 * // default constructor
 * o = new KJUR.asn1.DERBitString();
 * // initialize with binary string
 * o = new KJUR.asn1.DERBitString({bin: "1011"});
 * // initialize with boolean array
 * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});
 * // initialize with hexadecimal string (04 is unused bits)
 * o = new KJUR.asn1.DEROctetString({hex: "04bac0"});
 * // initialize with ASN1Util.newObject argument for encapsulated
 * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
 * // above generates a ASN.1 data like this:
 * // BIT STRING, encapsulates {
 * //   SEQUENCE {
 * //     INTEGER 3
 * //     PrintableString 'aaa'
 * //     }
 * //   }
 */
KJUR.asn1.DERBitString = function (params) {
  if (params !== undefined && typeof params.obj !== "undefined") {
    var o = KJUR.asn1.ASN1Util.newObject(params.obj);
    params.hex = "00" + o.getEncodedHex();
  }
  KJUR.asn1.DERBitString.superclass.constructor.call(this);
  this.hT = "03";
  /**
   * set ASN.1 value(V) by a hexadecimal string including unused bits
   * @name setHexValueIncludingUnusedBits
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {String} newHexStringIncludingUnusedBits
   */
  this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = newHexStringIncludingUnusedBits;
  };
  /**
   * set ASN.1 value(V) by unused bit and hexadecimal string of value
   * @name setUnusedBitsAndHexValue
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {Integer} unusedBits
   * @param {String} hValue
   */
  this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {
    if (unusedBits < 0 || 7 < unusedBits) {
      throw "unused bits shall be from 0 to 7: u = " + unusedBits;
    }
    var hUnusedBits = "0" + unusedBits;
    this.hTLV = null;
    this.isModified = true;
    this.hV = hUnusedBits + hValue;
  };
  /**
   * set ASN.1 DER BitString by binary string<br/>
   * @name setByBinaryString
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {String} binaryString binary value string (i.e. '10111')
   * @description
   * Its unused bits will be calculated automatically by length of
   * 'binaryValue'. <br/>
   * NOTE: Trailing zeros '0' will be ignored.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.setByBooleanArray("01011");
   */
  this.setByBinaryString = function (binaryString) {
    binaryString = binaryString.replace(/0+$/, '');
    var unusedBits = 8 - binaryString.length % 8;
    if (unusedBits == 8) unusedBits = 0;
    for (var i = 0; i <= unusedBits; i++) {
      binaryString += '0';
    }
    var h = '';
    for (var i = 0; i < binaryString.length - 1; i += 8) {
      var b = binaryString.substr(i, 8);
      var x = parseInt(b, 2).toString(16);
      if (x.length == 1) x = '0' + x;
      h += x;
    }
    this.hTLV = null;
    this.isModified = true;
    this.hV = '0' + unusedBits + h;
  };
  /**
   * set ASN.1 TLV value(V) by an array of boolean<br/>
   * @name setByBooleanArray
   * @memberOf KJUR.asn1.DERBitString#
   * @function
   * @param {array} booleanArray array of boolean (ex. [true, false, true])
   * @description
   * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.setByBooleanArray([false, true, false, true, true]);
   */
  this.setByBooleanArray = function (booleanArray) {
    var s = '';
    for (var i = 0; i < booleanArray.length; i++) {
      if (booleanArray[i] == true) {
        s += '1';
      } else {
        s += '0';
      }
    }
    this.setByBinaryString(s);
  };
  /**
   * generate an array of falses with specified length<br/>
   * @name newFalseArray
   * @memberOf KJUR.asn1.DERBitString
   * @function
   * @param {Integer} nLength length of array to generate
   * @return {array} array of boolean falses
   * @description
   * This static method may be useful to initialize boolean array.
   * @example
   * o = new KJUR.asn1.DERBitString();
   * o.newFalseArray(3) &rarr; [false, false, false]
   */
  this.newFalseArray = function (nLength) {
    var a = new Array(nLength);
    for (var i = 0; i < nLength; i++) {
      a[i] = false;
    }
    return a;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params == "string" && params.toLowerCase().match(/^[0-9a-f]+$/)) {
      this.setHexValueIncludingUnusedBits(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setHexValueIncludingUnusedBits(params['hex']);
    } else if (typeof params['bin'] != "undefined") {
      this.setByBinaryString(params['bin']);
    } else if (typeof params['array'] != "undefined") {
      this.setByBooleanArray(params['array']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER OctetString<br/>
 * @name KJUR.asn1.DEROctetString
 * @class class for ASN.1 DER OctetString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * This class provides ASN.1 OctetString simple type.<br/>
 * Supported "params" attributes are:
 * <ul>
 * <li>str - to set a string as a value</li>
 * <li>hex - to set a hexadecimal string as a value</li>
 * <li>obj - to set a encapsulated ASN.1 value by JSON object
 * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>
 * </ul>
 * NOTE: A parameter 'obj' have been supported
 * for "OCTET STRING, encapsulates" structure.
 * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).
 * @see KJUR.asn1.DERAbstractString - superclass
 * @example
 * // default constructor
 * o = new KJUR.asn1.DEROctetString();
 * // initialize with string
 * o = new KJUR.asn1.DEROctetString({str: "aaa"});
 * // initialize with hexadecimal string
 * o = new KJUR.asn1.DEROctetString({hex: "616161"});
 * // initialize with ASN1Util.newObject argument
 * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
 * // above generates a ASN.1 data like this:
 * // OCTET STRING, encapsulates {
 * //   SEQUENCE {
 * //     INTEGER 3
 * //     PrintableString 'aaa'
 * //     }
 * //   }
 */
KJUR.asn1.DEROctetString = function (params) {
  if (params !== undefined && typeof params.obj !== "undefined") {
    var o = KJUR.asn1.ASN1Util.newObject(params.obj);
    params.hex = o.getEncodedHex();
  }
  KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);
  this.hT = "04";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER Null
 * @name KJUR.asn1.DERNull
 * @class class for ASN.1 DER Null
 * @extends KJUR.asn1.ASN1Object
 * @description
 * @see KJUR.asn1.ASN1Object - superclass
 */
KJUR.asn1.DERNull = function () {
  KJUR.asn1.DERNull.superclass.constructor.call(this);
  this.hT = "05";
  this.hTLV = "0500";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER ObjectIdentifier
 * @name KJUR.asn1.DERObjectIdentifier
 * @class class for ASN.1 DER ObjectIdentifier
 * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERObjectIdentifier = function (params) {
  var itox = function (i) {
    var h = i.toString(16);
    if (h.length == 1) h = '0' + h;
    return h;
  };
  var roidtox = function (roid) {
    var h = '';
    var bi = new _jsbn.BigInteger(roid, 10);
    var b = bi.toString(2);
    var padLen = 7 - b.length % 7;
    if (padLen == 7) padLen = 0;
    var bPad = '';
    for (var i = 0; i < padLen; i++) bPad += '0';
    b = bPad + b;
    for (var i = 0; i < b.length - 1; i += 7) {
      var b8 = b.substr(i, 7);
      if (i != b.length - 7) b8 = '1' + b8;
      h += itox(parseInt(b8, 2));
    }
    return h;
  };
  KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);
  this.hT = "06";
  /**
   * set value by a hexadecimal string
   * @name setValueHex
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} newHexString hexadecimal value of OID bytes
   */
  this.setValueHex = function (newHexString) {
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = newHexString;
  };
  /**
   * set value by a OID string<br/>
   * @name setValueOidString
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} oidString OID string (ex. 2.5.4.13)
   * @example
   * o = new KJUR.asn1.DERObjectIdentifier();
   * o.setValueOidString("2.5.4.13");
   */
  this.setValueOidString = function (oidString) {
    if (!oidString.match(/^[0-9.]+$/)) {
      throw "malformed oid string: " + oidString;
    }
    var h = '';
    var a = oidString.split('.');
    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
    h += itox(i0);
    a.splice(0, 2);
    for (var i = 0; i < a.length; i++) {
      h += roidtox(a[i]);
    }
    this.hTLV = null;
    this.isModified = true;
    this.s = null;
    this.hV = h;
  };
  /**
   * set value by a OID name
   * @name setValueName
   * @memberOf KJUR.asn1.DERObjectIdentifier#
   * @function
   * @param {String} oidName OID name (ex. 'serverAuth')
   * @since 1.0.1
   * @description
   * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.
   * Otherwise raise error.
   * @example
   * o = new KJUR.asn1.DERObjectIdentifier();
   * o.setValueName("serverAuth");
   */
  this.setValueName = function (oidName) {
    var oid = KJUR.asn1.x509.OID.name2oid(oidName);
    if (oid !== '') {
      this.setValueOidString(oid);
    } else {
      throw "DERObjectIdentifier oidName undefined: " + oidName;
    }
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (params !== undefined) {
    if (typeof params === "string") {
      if (params.match(/^[0-2].[0-9.]+$/)) {
        this.setValueOidString(params);
      } else {
        this.setValueName(params);
      }
    } else if (params.oid !== undefined) {
      this.setValueOidString(params.oid);
    } else if (params.hex !== undefined) {
      this.setValueHex(params.hex);
    } else if (params.name !== undefined) {
      this.setValueName(params.name);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER Enumerated
 * @name KJUR.asn1.DEREnumerated
 * @class class for ASN.1 DER Enumerated
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>int - specify initial ASN.1 value(V) by integer value</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 * @example
 * new KJUR.asn1.DEREnumerated(123);
 * new KJUR.asn1.DEREnumerated({int: 123});
 * new KJUR.asn1.DEREnumerated({hex: '1fad'});
 */
KJUR.asn1.DEREnumerated = function (params) {
  KJUR.asn1.DEREnumerated.superclass.constructor.call(this);
  this.hT = "0a";
  /**
   * set value by Tom Wu's BigInteger object
   * @name setByBigInteger
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {BigInteger} bigIntegerValue to set
   */
  this.setByBigInteger = function (bigIntegerValue) {
    this.hTLV = null;
    this.isModified = true;
    this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
  };
  /**
   * set value by integer value
   * @name setByInteger
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {Integer} integer value to set
   */
  this.setByInteger = function (intValue) {
    var bi = new _jsbn.BigInteger(String(intValue), 10);
    this.setByBigInteger(bi);
  };
  /**
   * set value by integer value
   * @name setValueHex
   * @memberOf KJUR.asn1.DEREnumerated#
   * @function
   * @param {String} hexadecimal string of integer value
   * @description
   * <br/>
   * NOTE: Value shall be represented by minimum octet length of
   * two's complement representation.
   */
  this.setValueHex = function (newHexString) {
    this.hV = newHexString;
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['int'] != "undefined") {
      this.setByInteger(params['int']);
    } else if (typeof params == "number") {
      this.setByInteger(params);
    } else if (typeof params['hex'] != "undefined") {
      this.setValueHex(params['hex']);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);
// ********************************************************************
/**
 * class for ASN.1 DER UTF8String
 * @name KJUR.asn1.DERUTF8String
 * @class class for ASN.1 DER UTF8String
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERUTF8String = function (params) {
  KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);
  this.hT = "0c";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER NumericString
 * @name KJUR.asn1.DERNumericString
 * @class class for ASN.1 DER NumericString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERNumericString = function (params) {
  KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);
  this.hT = "12";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER PrintableString
 * @name KJUR.asn1.DERPrintableString
 * @class class for ASN.1 DER PrintableString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERPrintableString = function (params) {
  KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);
  this.hT = "13";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER TeletexString
 * @name KJUR.asn1.DERTeletexString
 * @class class for ASN.1 DER TeletexString
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERTeletexString = function (params) {
  KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);
  this.hT = "14";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER IA5String
 * @name KJUR.asn1.DERIA5String
 * @class class for ASN.1 DER IA5String
 * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
 * @extends KJUR.asn1.DERAbstractString
 * @description
 * @see KJUR.asn1.DERAbstractString - superclass
 */
KJUR.asn1.DERIA5String = function (params) {
  KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);
  this.hT = "16";
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);
// ********************************************************************
/**
 * class for ASN.1 DER UTCTime
 * @name KJUR.asn1.DERUTCTime
 * @class class for ASN.1 DER UTCTime
 * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
 * @extends KJUR.asn1.DERAbstractTime
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * <li>date - specify Date object.</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 * <h4>EXAMPLES</h4>
 * @example
 * d1 = new KJUR.asn1.DERUTCTime();
 * d1.setString('130430125959Z');
 *
 * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});
 * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});
 * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');
 */
KJUR.asn1.DERUTCTime = function (params) {
  KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);
  this.hT = "17";
  /**
   * set value by a Date object<br/>
   * @name setByDate
   * @memberOf KJUR.asn1.DERUTCTime#
   * @function
   * @param {Date} dateObject Date object to set ASN.1 value(V)
   * @example
   * o = new KJUR.asn1.DERUTCTime();
   * o.setByDate(new Date("2016/12/31"));
   */
  this.setByDate = function (dateObject) {
    this.hTLV = null;
    this.isModified = true;
    this.date = dateObject;
    this.s = this.formatDate(this.date, 'utc');
    this.hV = stohex(this.s);
  };
  this.getFreshValueHex = function () {
    if (typeof this.date == "undefined" && typeof this.s == "undefined") {
      this.date = new Date();
      this.s = this.formatDate(this.date, 'utc');
      this.hV = stohex(this.s);
    }
    return this.hV;
  };
  if (params !== undefined) {
    if (params.str !== undefined) {
      this.setString(params.str);
    } else if (typeof params == "string" && params.match(/^[0-9]{12}Z$/)) {
      this.setString(params);
    } else if (params.hex !== undefined) {
      this.setStringHex(params.hex);
    } else if (params.date !== undefined) {
      this.setByDate(params.date);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);
// ********************************************************************
/**
 * class for ASN.1 DER GeneralizedTime
 * @name KJUR.asn1.DERGeneralizedTime
 * @class class for ASN.1 DER GeneralizedTime
 * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})
 * @property {Boolean} withMillis flag to show milliseconds or not
 * @extends KJUR.asn1.DERAbstractTime
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>
 * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
 * <li>date - specify Date object.</li>
 * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>
 * </ul>
 * NOTE1: 'params' can be omitted.
 * NOTE2: 'withMillis' property is supported from asn1 1.0.6.
 */
KJUR.asn1.DERGeneralizedTime = function (params) {
  KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);
  this.hT = "18";
  this.withMillis = false;
  /**
   * set value by a Date object
   * @name setByDate
   * @memberOf KJUR.asn1.DERGeneralizedTime#
   * @function
   * @param {Date} dateObject Date object to set ASN.1 value(V)
   * @example
   * When you specify UTC time, use 'Date.UTC' method like this:<br/>
   * o1 = new DERUTCTime();
   * o1.setByDate(date);
   *
   * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59
   */
  this.setByDate = function (dateObject) {
    this.hTLV = null;
    this.isModified = true;
    this.date = dateObject;
    this.s = this.formatDate(this.date, 'gen', this.withMillis);
    this.hV = stohex(this.s);
  };
  this.getFreshValueHex = function () {
    if (this.date === undefined && this.s === undefined) {
      this.date = new Date();
      this.s = this.formatDate(this.date, 'gen', this.withMillis);
      this.hV = stohex(this.s);
    }
    return this.hV;
  };
  if (params !== undefined) {
    if (params.str !== undefined) {
      this.setString(params.str);
    } else if (typeof params == "string" && params.match(/^[0-9]{14}Z$/)) {
      this.setString(params);
    } else if (params.hex !== undefined) {
      this.setStringHex(params.hex);
    } else if (params.date !== undefined) {
      this.setByDate(params.date);
    }
    if (params.millis === true) {
      this.withMillis = true;
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);
// ********************************************************************
/**
 * class for ASN.1 DER Sequence
 * @name KJUR.asn1.DERSequence
 * @class class for ASN.1 DER Sequence
 * @extends KJUR.asn1.DERAbstractStructured
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>array - specify array of ASN1Object to set elements of content</li>
 * </ul>
 * NOTE: 'params' can be omitted.
 */
KJUR.asn1.DERSequence = function (params) {
  KJUR.asn1.DERSequence.superclass.constructor.call(this, params);
  this.hT = "30";
  this.getFreshValueHex = function () {
    var h = '';
    for (var i = 0; i < this.asn1Array.length; i++) {
      var asn1Obj = this.asn1Array[i];
      h += asn1Obj.getEncodedHex();
    }
    this.hV = h;
    return this.hV;
  };
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);
// ********************************************************************
/**
 * class for ASN.1 DER Set
 * @name KJUR.asn1.DERSet
 * @class class for ASN.1 DER Set
 * @extends KJUR.asn1.DERAbstractStructured
 * @description
 * <br/>
 * As for argument 'params' for constructor, you can specify one of
 * following properties:
 * <ul>
 * <li>array - specify array of ASN1Object to set elements of content</li>
 * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>
 * </ul>
 * NOTE1: 'params' can be omitted.<br/>
 * NOTE2: sortflag is supported since 1.0.5.
 */
KJUR.asn1.DERSet = function (params) {
  KJUR.asn1.DERSet.superclass.constructor.call(this, params);
  this.hT = "31";
  this.sortFlag = true; // item shall be sorted only in ASN.1 DER
  this.getFreshValueHex = function () {
    var a = new Array();
    for (var i = 0; i < this.asn1Array.length; i++) {
      var asn1Obj = this.asn1Array[i];
      a.push(asn1Obj.getEncodedHex());
    }
    if (this.sortFlag == true) a.sort();
    this.hV = a.join('');
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params.sortflag != "undefined" && params.sortflag == false) this.sortFlag = false;
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);
// ********************************************************************
/**
 * class for ASN.1 DER TaggedObject
 * @name KJUR.asn1.DERTaggedObject
 * @class class for ASN.1 DER TaggedObject
 * @extends KJUR.asn1.ASN1Object
 * @description
 * <br/>
 * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.
 * For example, if you find '[1]' tag in a ASN.1 dump,
 * 'tagNoHex' will be 'a1'.
 * <br/>
 * As for optional argument 'params' for constructor, you can specify *ANY* of
 * following properties:
 * <ul>
 * <li>explicit - specify true if this is explicit tag otherwise false
 *     (default is 'true').</li>
 * <li>tag - specify tag (default is 'a0' which means [0])</li>
 * <li>obj - specify ASN1Object which is tagged</li>
 * </ul>
 * @example
 * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});
 * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});
 * hex = d2.getEncodedHex();
 */
KJUR.asn1.DERTaggedObject = function (params) {
  KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);
  this.hT = "a0";
  this.hV = '';
  this.isExplicit = true;
  this.asn1Object = null;
  /**
   * set value by an ASN1Object
   * @name setString
   * @memberOf KJUR.asn1.DERTaggedObject#
   * @function
   * @param {Boolean} isExplicitFlag flag for explicit/implicit tag
   * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag
   * @param {ASN1Object} asn1Object ASN.1 to encapsulate
   */
  this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {
    this.hT = tagNoHex;
    this.isExplicit = isExplicitFlag;
    this.asn1Object = asn1Object;
    if (this.isExplicit) {
      this.hV = this.asn1Object.getEncodedHex();
      this.hTLV = null;
      this.isModified = true;
    } else {
      this.hV = null;
      this.hTLV = asn1Object.getEncodedHex();
      this.hTLV = this.hTLV.replace(/^../, tagNoHex);
      this.isModified = false;
    }
  };
  this.getFreshValueHex = function () {
    return this.hV;
  };
  if (typeof params != "undefined") {
    if (typeof params['tag'] != "undefined") {
      this.hT = params['tag'];
    }
    if (typeof params['explicit'] != "undefined") {
      this.isExplicit = params['explicit'];
    }
    if (typeof params['obj'] != "undefined") {
      this.asn1Object = params['obj'];
      this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);
    }
  }
};
_yahoo.YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);

/***/ }),

/***/ "./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js":
/*!**************************************************************!*\
  !*** ./src/Common/libs/jsencrypt/lib/lib/jsrsasign/yahoo.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.YAHOO = void 0;
/*!
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
var YAHOO = exports.YAHOO = {};
YAHOO.lang = {
  /**
   * Utility to set up the prototype, constructor and superclass properties to
   * support an inheritance strategy that can chain constructors and methods.
   * Static members will not be inherited.
   *
   * @method extend
   * @static
   * @param {Function} subc   the object to modify
   * @param {Function} superc the object to inherit
   * @param {Object} overrides  additional properties/methods to add to the
   *                              subclass prototype.  These will override the
   *                              matching items obtained from the superclass
   *                              if present.
   */
  extend: function (subc, superc, overrides) {
    if (!superc || !subc) {
      throw new Error("YAHOO.lang.extend failed, please check that " + "all dependencies are included.");
    }
    var F = function () {};
    F.prototype = superc.prototype;
    subc.prototype = new F();
    subc.prototype.constructor = subc;
    subc.superclass = superc.prototype;
    if (superc.prototype.constructor == Object.prototype.constructor) {
      superc.prototype.constructor = superc;
    }
    if (overrides) {
      var i;
      for (i in overrides) {
        subc.prototype[i] = overrides[i];
      }
      /*
       * IE will not enumerate native functions in a derived object even if the
       * function was overridden.  This is a workaround for specific functions
       * we care about on the Object prototype.
       * @property _IEEnumFix
       * @param {Function} r  the object to receive the augmentation
       * @param {Function} s  the object that supplies the properties to augment
       * @static
       * @private
       */
      var _IEEnumFix = function () {},
        ADD = ["toString", "valueOf"];
      try {
        if (/MSIE/.test(navigator.userAgent)) {
          _IEEnumFix = function (r, s) {
            for (i = 0; i < ADD.length; i = i + 1) {
              var fname = ADD[i],
                f = s[fname];
              if (typeof f === 'function' && f != Object.prototype[fname]) {
                r[fname] = f;
              }
            }
          };
        }
      } catch (ex) {}
      ;
      _IEEnumFix(subc.prototype, overrides);
    }
  }
};

/***/ }),

/***/ "./src/Common/libs/umeng/umenganalysis.es.min.js":
/*!*******************************************************!*\
  !*** ./src/Common/libs/umeng/umenganalysis.es.min.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _system = _interopRequireDefault($app_require$("@app-module/system.storage"));
var _system2 = _interopRequireDefault($app_require$("@app-module/system.device"));
var _system3 = _interopRequireDefault($app_require$("@app-module/system.network"));
var _system4 = _interopRequireDefault($app_require$("@app-module/system.router"));
var _system5 = _interopRequireDefault($app_require$("@app-module/system.app"));
var _system6 = _interopRequireDefault($app_require$("@app-module/system.fetch"));
var _system7 = _interopRequireDefault($app_require$("@app-module/system.file"));
var _system8 = _interopRequireDefault($app_require$("@app-module/system.request"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function buildUniqueId(t) {
  const e = [];
  e.push(DeviceUtil.getAdvertisingId()), e.push(DeviceUtil.getAndroidId()), e.push(DeviceUtil.getOAID()), Promise.all(e).then(e => {
    const n = e[0];
    const o = e[1];
    const i = e[2];
    StorageUtil.putData(constants.MOBILE_ADVERTISING_ID, n);
    StorageUtil.putData(constants.MOBILE_ANDROID_ID, o);
    StorageUtil.putData(constants.MOBILE_OAID, i);
    uniqueidCache = o || n || i;
    StorageUtil.putData("umeng_uniqueid", uniqueidCache);
    t(uniqueidCache);
  });
}
function createCommonjsModule(t, e) {
  return e = {
    exports: {}
  }, t(e, e.exports), e.exports;
}
function MD5$1(t) {
  return MD5(t);
}
function encode(t) {
  return Base64_2.encode(t, !1);
}
function decode(t) {
  return Base64_2.decode(t);
}
function checkEmptyArgument(t) {
  return t.length && this.checkId(t[0]);
}
function checkId(t) {
  return t && "string" == typeof t;
}
function toStr(t) {
  let e = "";
  if (t) try {
    e = JSON.stringify(t);
  } catch (t) {}
  return e;
}
function stringToArray(t) {
  if (t) try {
    return JSON.parse(t);
  } catch (t) {}
  return [];
}
function toObject(t) {
  if (t) try {
    return JSON.parse(t);
  } catch (t) {}
  return null;
}
function checkAttrOrString(t) {
  return !(!t || "string" != typeof t && ("object" != typeof t || isArray(t)));
}
function isArray(t) {
  return "[object Array]" === {}.toString.call(t);
}
function isNotANumber(t) {
  return !isNaN(parseInt(t, 10));
}
function checkMD5(t, e) {
  try {
    return t === MD5(e);
  } catch (t) {
    return !1;
  }
}
function Looper() {}
function send(t) {
  _system3.default.getType({
    success(e) {
      "none" !== e.type && hasEnvelope(t, (e, n) => {
        if (e) {
          if (n) {
            const e = {
              md5Key: n,
              type: "second"
            };
            RequestHelper.getInstance().send(e, () => {
              StoreQueue.getInstance().handleMessage(null);
              realSend(t);
            });
          }
        } else realSend(t);
      });
    },
    fail() {}
  });
}
function hasEnvelope(t, e) {
  StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, n => {
    if (!n) return void e(!1, null);
    const o = UmengUtils.stringToArray(n);
    if (!o || 0 === o.length) return void e(!1, null);
    for (const n in o) if ({}.hasOwnProperty.call(o, n)) {
      const i = o[n];
      if (i) {
        const n = i.indexOf(constants.KEY_EVENT_PREFIX);
        if (0 === n && t === constants.REQUEST_TYPE_EVENT) return void e(!0, i);
        const o = i.indexOf(constants.KEY_HALF_SESSION_PREFIX);
        if (0 === o && t === constants.REQUEST_TYPE_SESSION_HALF) return void e(!0, i);
        const r = i.indexOf(constants.KEY_CLOSE_SESSION_PREFIX);
        if (0 === r && t === constants.REQUEST_TYPE_SESSION_CLOSE) return void e(!0, i);
      }
    }
    e(!1, null);
  });
}
function realSend(t) {
  if (RequestHelper.getInstance().paramsIsValid(t)) if (t === constants.REQUEST_TYPE_SESSION_HALF) {
    const e = RequestHelper.getInstance().buildSendContent(t, null),
      n = e.data;
    n.analytics && RequestHelper.getInstance().send(e, t => {
      t && -1 !== t.indexOf(constants.KEY_HALF_SESSION_PREFIX) && (Header.getInstance().setFirstSendFlag(), StorageUtil.putData(constants.APP_FIRST_OPEN_FLAG, "false"));
    });
  } else if (t === constants.REQUEST_TYPE_SESSION_CLOSE) {
    const e = RequestHelper.getInstance().buildSendContent(t, null);
    if (e && e.data) {
      const t = e.data;
      t.analytics && RequestHelper.getInstance().send(e);
    }
  } else t === constants.REQUEST_TYPE_EVENT && EventStoreQueue.getInstance().readEkvDatas(e => {
    if (!e || 0 === e.length) return;
    const n = RequestHelper.getInstance().buildSendContent(t, e);
    if (n) {
      const t = n.data;
      t.analytics && (RequestHelper.getInstance().send(n), EventController.getInstance().setSendTime());
    }
  });
}
function sendAll() {
  if (0 === time) {
    time = 10;
    const t = setInterval(() => {
      time -= 1;
      0 === time && clearInterval(t);
    }, 100);
    Header.getInstance().getHeader() ? (send(constants.REQUEST_TYPE_SESSION_HALF), send(constants.REQUEST_TYPE_SESSION_CLOSE), send(constants.REQUEST_TYPE_EVENT)) : setTimeout(sendAll, 100);
  }
}
function PageController() {
  this._pagelist = [], this._currentPage = {}, this.pageObject = {};
}
function UmengAnalysisLib() {
  this.pageController = new PageController();
}
function isInit() {
  return !!inited || (console.error("[app.ux] ==> onCreate not invoked init() method"), !1);
}
function sendDatas() {
  Header.getInstance().getHeader() ? (Request.send(constants.REQUEST_TYPE_SESSION_HALF), Request.send(constants.REQUEST_TYPE_SESSION_CLOSE), StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
    t === constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE && Request.send(constants.REQUEST_TYPE_EVENT);
  })) : setTimeout(sendDatas, 100);
}
function SdkUpdater() {
  this.url = constants.SDK_UPDATE_SERVER_ADDRESS;
}
function Page(t) {
  if (t) {
    const e = t.onShow;
    t.onShow = function (...t) {
      try {
        UmengAnalysis.resume(this);
      } catch (t) {}
      if (e) return e.apply(this, t);
    };
    const n = t.onHide;
    t.onHide = function (...t) {
      try {
        UmengAnalysis.pause(this);
      } catch (t) {}
      if (n) return n.apply(this, t);
    };
  }
  return t;
}
const StorageUtil = {
    putData(t, e, n, o) {
      _system.default.set({
        key: t,
        value: e,
        success(t) {
          n && n(t);
        },
        fail(t, e) {
          o && o(t, e);
        }
      });
    },
    getData(t, e, n) {
      _system.default.get({
        key: t,
        success(t) {
          e && e(t);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    },
    deleteData(t, e) {
      _system.default.delete({
        key: t,
        success() {
          e && e(!0);
        },
        fail() {
          e && e(!1);
        }
      });
    }
  },
  constants = {
    KEY_NO_SEND_REQUEST_KEYS: "umeng_key_no_send_request",
    SESSION_INTERVAL: 3e4,
    TEST_URL: "https://preulogs.umeng.com/unify_logs",
    RELEASE_URL: "https://ulogs.umeng.com/unify_logs",
    KEY_SESSION_PREFIX: "umeng_session_prefix_",
    KEY_EVENT_PREFIX: "umeng_event_prefix_",
    KEY_HALF_SESSION_PREFIX: "umeng_half_session_prefix_",
    KEY_CLOSE_SESSION_PREFIX: "umeng_close_session_prefix_",
    REQUEST_TYPE_SESSION_HALF: 1,
    REQUEST_TYPE_SESSION_CLOSE: 2,
    REQUEST_TYPE_EVENT: 3,
    IS_DEBUG: !1,
    SDK_VERSION: "2.0.3",
    APP_FIRST_OPEN_FLAG: "umeng_key_first_open_flag",
    MOBILE_ADVERTISING_ID: "umeng_mobile_advertising_id",
    MOBILE_ANDROID_ID: "umeng_android__id",
    MOBILE_OAID: "umeng_oaid",
    EVENT_SEND_MIN_INTERVAL: 90,
    EVENT_SEND_MAX_INTERVAL: 86400,
    EVENT_LAST_SEND_TIME: "umeng_ekv_last_send_time",
    EVENT_SEND_REPORT_POLICY: "event_send_report_policy",
    EVENT_SEND_REPORT_INTERVAL_TIME: "event_send_report_interval_time",
    EVENT_SEND_REPORT_POLICY_START_SEND_VALUE: "1",
    EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE: "6",
    DOWNLOAD_FILE_FIRST_CACHE: "umeng_sdk_update_firstCacheLevel",
    DOWNLOAD_FILE_SECOND_CACHE: "umeng_sdk_update_secondCacheLevel",
    SDK_UPDATE_SERVER_ADDRESS: "http://s.cnzz.com/sdk/quickapp",
    SDK_UPDATE_LOCAL_STORAGE_PATH: "internal://files/umengsdk/"
  };
let oaidCache = null,
  androididCache = null,
  idfaCache = null,
  uniqueidCache = null,
  deviceInfoCache = null;
const DeviceUtil = {
    getBaseInfo() {
      return new Promise(t => {
        if (deviceInfoCache) return void t(deviceInfoCache);
        _system2.default.getInfo({
          success(e) {
            deviceInfoCache = e, t(e);
          },
          fail() {
            t(null);
          }
        });
      });
    },
    getNetworkInfo(t) {
      _system3.default.getType({
        success(e) {
          t(e);
        }
      });
    },
    getAndroidId() {
      return new Promise(t => {
        if (androididCache) return void t(androididCache.userId);
        _system2.default.getUserId({
          success(e) {
            androididCache = e, t(e.userId);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getAdvertisingId() {
      return new Promise(t => {
        if (idfaCache) return void t(idfaCache.advertisingId);
        _system2.default.getAdvertisingId({
          success(e) {
            idfaCache = e, t(e.advertisingId);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getOAID() {
      return console.log("call getOAID"), new Promise(t => {
        if (null !== oaidCache) return void t(oaidCache.oaid);
        "function" != typeof _system2.default.getOAID || !1 === _system2.default.allowTrackOAID ? t("") : _system2.default.getOAID({
          success(e) {
            oaidCache = e, t(e.oaid);
          },
          fail() {
            t("");
          }
        });
      });
    },
    getUniqueId() {
      return new Promise(t => {
        uniqueidCache ? t(uniqueidCache) : buildUniqueId(t);
      });
    },
    getPageName() {
      try {
        const t = _system4.default.getState();
        return t.name;
      } catch (t) {}
    },
    getSystemBaseInfo(t, e) {
      if (deviceInfoCache) return void (t && t(deviceInfoCache));
      _system2.default.getInfo({
        success(e) {
          deviceInfoCache = e, t && t(e);
        },
        fail(t, n) {
          e && e(t, n);
        }
      });
    }
  },
  Log = {
    d(t) {},
    i(t) {
      try {
        userDebug && console.info(t);
      } catch (t) {}
    },
    e(t) {},
    w(t) {},
    v(t) {}
  };
var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
  MD5 = createCommonjsModule(function (t) {
    !function (e) {
      function n(t, e) {
        var n = (65535 & t) + (65535 & e);
        return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n;
      }
      function o(t, e) {
        return t << e | t >>> 32 - e;
      }
      function i(t, e, i, r, s, c) {
        return n(o(n(n(e, t), n(r, c)), s), i);
      }
      function r(t, e, n, o, r, s, c) {
        return i(e & n | ~e & o, t, e, r, s, c);
      }
      function s(t, e, n, o, r, s, c) {
        return i(e & o | n & ~o, t, e, r, s, c);
      }
      function c(t, e, n, o, r, s, c) {
        return i(e ^ n ^ o, t, e, r, s, c);
      }
      function a(t, e, n, o, r, s, c) {
        return i(n ^ (e | ~o), t, e, r, s, c);
      }
      function u(t, e) {
        t[e >> 5] |= 128 << e % 32, t[14 + (e + 64 >>> 9 << 4)] = e;
        var o,
          i,
          u,
          f,
          l,
          _ = 1732584193,
          E = -271733879,
          g = -1732584194,
          d = 271733878;
        for (o = 0; o < t.length; o += 16) i = _, u = E, f = g, l = d, E = a(E = a(E = a(E = a(E = c(E = c(E = c(E = c(E = s(E = s(E = s(E = s(E = r(E = r(E = r(E = r(E, g = r(g, d = r(d, _ = r(_, E, g, d, t[o], 7, -680876936), E, g, t[o + 1], 12, -389564586), _, E, t[o + 2], 17, 606105819), d, _, t[o + 3], 22, -1044525330), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 4], 7, -176418897), E, g, t[o + 5], 12, 1200080426), _, E, t[o + 6], 17, -1473231341), d, _, t[o + 7], 22, -45705983), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 8], 7, 1770035416), E, g, t[o + 9], 12, -1958414417), _, E, t[o + 10], 17, -42063), d, _, t[o + 11], 22, -1990404162), g = r(g, d = r(d, _ = r(_, E, g, d, t[o + 12], 7, 1804603682), E, g, t[o + 13], 12, -40341101), _, E, t[o + 14], 17, -1502002290), d, _, t[o + 15], 22, 1236535329), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 1], 5, -165796510), E, g, t[o + 6], 9, -1069501632), _, E, t[o + 11], 14, 643717713), d, _, t[o], 20, -373897302), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 5], 5, -701558691), E, g, t[o + 10], 9, 38016083), _, E, t[o + 15], 14, -660478335), d, _, t[o + 4], 20, -405537848), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 9], 5, 568446438), E, g, t[o + 14], 9, -1019803690), _, E, t[o + 3], 14, -187363961), d, _, t[o + 8], 20, 1163531501), g = s(g, d = s(d, _ = s(_, E, g, d, t[o + 13], 5, -1444681467), E, g, t[o + 2], 9, -51403784), _, E, t[o + 7], 14, 1735328473), d, _, t[o + 12], 20, -1926607734), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 5], 4, -378558), E, g, t[o + 8], 11, -2022574463), _, E, t[o + 11], 16, 1839030562), d, _, t[o + 14], 23, -35309556), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 1], 4, -1530992060), E, g, t[o + 4], 11, 1272893353), _, E, t[o + 7], 16, -155497632), d, _, t[o + 10], 23, -1094730640), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 13], 4, 681279174), E, g, t[o], 11, -358537222), _, E, t[o + 3], 16, -722521979), d, _, t[o + 6], 23, 76029189), g = c(g, d = c(d, _ = c(_, E, g, d, t[o + 9], 4, -640364487), E, g, t[o + 12], 11, -421815835), _, E, t[o + 15], 16, 530742520), d, _, t[o + 2], 23, -995338651), g = a(g, d = a(d, _ = a(_, E, g, d, t[o], 6, -198630844), E, g, t[o + 7], 10, 1126891415), _, E, t[o + 14], 15, -1416354905), d, _, t[o + 5], 21, -57434055), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 12], 6, 1700485571), E, g, t[o + 3], 10, -1894986606), _, E, t[o + 10], 15, -1051523), d, _, t[o + 1], 21, -2054922799), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 8], 6, 1873313359), E, g, t[o + 15], 10, -30611744), _, E, t[o + 6], 15, -1560198380), d, _, t[o + 13], 21, 1309151649), g = a(g, d = a(d, _ = a(_, E, g, d, t[o + 4], 6, -145523070), E, g, t[o + 11], 10, -1120210379), _, E, t[o + 2], 15, 718787259), d, _, t[o + 9], 21, -343485551), _ = n(_, i), E = n(E, u), g = n(g, f), d = n(d, l);
        return [_, E, g, d];
      }
      function f(t) {
        var e,
          n = "",
          o = 32 * t.length;
        for (e = 0; e < o; e += 8) n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
        return n;
      }
      function l(t) {
        var e,
          n = [];
        for (n[(t.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1) n[e] = 0;
        var o = 8 * t.length;
        for (e = 0; e < o; e += 8) n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
        return n;
      }
      function _(t) {
        return f(u(l(t), 8 * t.length));
      }
      function E(t, e) {
        var n,
          o,
          i = l(t),
          r = [],
          s = [];
        for (r[15] = s[15] = void 0, i.length > 16 && (i = u(i, 8 * t.length)), n = 0; n < 16; n += 1) r[n] = 909522486 ^ i[n], s[n] = 1549556828 ^ i[n];
        return o = u(r.concat(l(e)), 512 + 8 * e.length), f(u(s.concat(o), 640));
      }
      function g(t) {
        var e,
          n,
          o = "";
        for (n = 0; n < t.length; n += 1) e = t.charCodeAt(n), o += "0123456789abcdef".charAt(e >>> 4 & 15) + "0123456789abcdef".charAt(15 & e);
        return o;
      }
      function d(t) {
        return unescape(encodeURIComponent(t));
      }
      function S(t) {
        return _(d(t));
      }
      function h(t) {
        return g(S(t));
      }
      function p(t, e) {
        return E(d(t), d(e));
      }
      function U(t, e) {
        return g(p(t, e));
      }
      function N(t, e, n) {
        return e ? n ? p(e, t) : U(e, t) : n ? S(t) : h(t);
      }
      t.exports ? t.exports = N : e.md5 = N;
    }(commonjsGlobal);
  }),
  Base64_1 = createCommonjsModule(function (module, exports) {
    !function (global, factory) {
      module.exports = function (global) {
        var _Base64 = global.Base64,
          version = "2.4.8",
          buffer;
        if (module.exports) try {
          buffer = eval("require('buffer').Buffer");
        } catch (t) {
          buffer = void 0;
        }
        var b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          b64tab = function (t) {
            for (var e = {}, n = 0, o = t.length; n < o; n++) e[t.charAt(n)] = n;
            return e;
          }(b64chars),
          fromCharCode = String.fromCharCode,
          cb_utob = function (t) {
            if (t.length < 2) return (e = t.charCodeAt(0)) < 128 ? t : e < 2048 ? fromCharCode(192 | e >>> 6) + fromCharCode(128 | 63 & e) : fromCharCode(224 | e >>> 12 & 15) + fromCharCode(128 | e >>> 6 & 63) + fromCharCode(128 | 63 & e);
            var e = 65536 + 1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320);
            return fromCharCode(240 | e >>> 18 & 7) + fromCharCode(128 | e >>> 12 & 63) + fromCharCode(128 | e >>> 6 & 63) + fromCharCode(128 | 63 & e);
          },
          re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,
          utob = function (t) {
            return t.replace(/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g, cb_utob);
          },
          cb_encode = function (t) {
            var e = [0, 2, 1][t.length % 3],
              n = t.charCodeAt(0) << 16 | (t.length > 1 ? t.charCodeAt(1) : 0) << 8 | (t.length > 2 ? t.charCodeAt(2) : 0);
            return [b64chars.charAt(n >>> 18), b64chars.charAt(n >>> 12 & 63), e >= 2 ? "=" : b64chars.charAt(n >>> 6 & 63), e >= 1 ? "=" : b64chars.charAt(63 & n)].join("");
          },
          btoa = global.btoa ? function (t) {
            return global.btoa(t);
          } : function (t) {
            return t.replace(/[\s\S]{1,3}/g, cb_encode);
          },
          _encode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (t) {
            return (t.constructor === buffer.constructor ? t : buffer.from(t)).toString("base64");
          } : function (t) {
            return (t.constructor === buffer.constructor ? t : new buffer(t)).toString("base64");
          } : function (t) {
            return btoa(utob(t));
          },
          encode = function (t, e) {
            return e ? _encode(String(t)).replace(/[+\/]/g, function (t) {
              return "+" == t ? "-" : "_";
            }).replace(/=/g, "") : _encode(String(t));
          },
          encodeURI = function (t) {
            return encode(t, !0);
          },
          re_btou = new RegExp(["[À-ß][-¿]", "[à-ï][-¿]{2}", "[ð-÷][-¿]{3}"].join("|"), "g"),
          cb_btou = function (t) {
            switch (t.length) {
              case 4:
                var e = ((7 & t.charCodeAt(0)) << 18 | (63 & t.charCodeAt(1)) << 12 | (63 & t.charCodeAt(2)) << 6 | 63 & t.charCodeAt(3)) - 65536;
                return fromCharCode(55296 + (e >>> 10)) + fromCharCode(56320 + (1023 & e));
              case 3:
                return fromCharCode((15 & t.charCodeAt(0)) << 12 | (63 & t.charCodeAt(1)) << 6 | 63 & t.charCodeAt(2));
              default:
                return fromCharCode((31 & t.charCodeAt(0)) << 6 | 63 & t.charCodeAt(1));
            }
          },
          btou = function (t) {
            return t.replace(re_btou, cb_btou);
          },
          cb_decode = function (t) {
            var e = t.length,
              n = e % 4,
              o = (e > 0 ? b64tab[t.charAt(0)] << 18 : 0) | (e > 1 ? b64tab[t.charAt(1)] << 12 : 0) | (e > 2 ? b64tab[t.charAt(2)] << 6 : 0) | (e > 3 ? b64tab[t.charAt(3)] : 0),
              i = [fromCharCode(o >>> 16), fromCharCode(o >>> 8 & 255), fromCharCode(255 & o)];
            return i.length -= [0, 0, 2, 1][n], i.join("");
          },
          atob = global.atob ? function (t) {
            return global.atob(t);
          } : function (t) {
            return t.replace(/[\s\S]{1,4}/g, cb_decode);
          },
          _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function (t) {
            return (t.constructor === buffer.constructor ? t : buffer.from(t, "base64")).toString();
          } : function (t) {
            return (t.constructor === buffer.constructor ? t : new buffer(t, "base64")).toString();
          } : function (t) {
            return btou(atob(t));
          },
          decode = function (t) {
            return _decode(String(t).replace(/[-_]/g, function (t) {
              return "-" == t ? "+" : "/";
            }).replace(/[^A-Za-z0-9\+\/]/g, ""));
          },
          noConflict = function () {
            var t = global.Base64;
            return global.Base64 = _Base64, t;
          };
        if (global.Base64 = {
          VERSION: "2.4.8",
          atob: atob,
          btoa: btoa,
          fromBase64: decode,
          toBase64: encode,
          utob: utob,
          encode: encode,
          encodeURI: encodeURI,
          btou: btou,
          decode: decode,
          noConflict: noConflict,
          __buffer__: buffer
        }, "function" == typeof Object.defineProperty) {
          var noEnum = function (t) {
            return {
              value: t,
              enumerable: !1,
              writable: !0,
              configurable: !0
            };
          };
          global.Base64.extendString = function () {
            Object.defineProperty(String.prototype, "fromBase64", noEnum(function () {
              return decode(this);
            })), Object.defineProperty(String.prototype, "toBase64", noEnum(function (t) {
              return encode(this, t);
            })), Object.defineProperty(String.prototype, "toBase64URI", noEnum(function () {
              return encode(this, !0);
            }));
          };
        }
        return global.Meteor && (Base64 = global.Base64), module.exports && (module.exports.Base64 = global.Base64), {
          Base64: global.Base64
        };
      }(global);
    }("undefined" != typeof self ? self : "undefined" != typeof window ? window : commonjsGlobal);
  }),
  Base64_2 = Base64_1.Base64,
  UmengUtils = {
    MD5: MD5$1,
    encode: encode,
    decode: decode,
    checkEmptyArgument: checkEmptyArgument,
    checkId: checkId,
    stringToArray: stringToArray,
    toStr: toStr,
    toObject: toObject,
    checkAttrOrString: checkAttrOrString,
    isNotANumber: isNotANumber,
    checkMD5: checkMD5
  };
const $JSON_UMENG_SESSIONS$ = "json_umeng_sessions",
  $JSON_UMENG_HALF_SESSIONS$ = "json_umeng_half_session",
  $JSON_UMENG_CURRENT_SESSION$ = "json_umeng_current_session",
  $JSON_UMENG_PAGE_END_TIME$ = "json_umeng_page_end_time",
  Session = function () {
    function t() {
      return {
        getCurrentSessionId() {
          return f;
        },
        getCurrentSession() {
          return a;
        },
        getSessions() {
          return l;
        },
        init(t) {
          this.appkey = t, o();
        },
        endSession() {
          a && (c = Date.now(), a.end_time = c, StorageUtil.putData($JSON_UMENG_CURRENT_SESSION$, UmengUtils.toStr(a)), StorageUtil.putData($JSON_UMENG_PAGE_END_TIME$, c));
        },
        clearSessions() {
          StorageUtil.deleteData($JSON_UMENG_SESSIONS$), l.splice(0, l.length), l = [];
        },
        setOnSessionListener(t) {
          this.sessionListener = t;
        },
        getHalfSessions() {
          return _;
        },
        clearHalfSession() {
          StorageUtil.deleteData($JSON_UMENG_HALF_SESSIONS$), _.splice(0, _.length), _ = [];
        }
      };
    }
    function e(t, e) {
      const n = Date.now();
      DeviceUtil.getUniqueId().then(t => {
        const o = UmengUtils.MD5(`${n}:::${Session.getInstance().appkey}:::${t}`);
        e(o);
      });
    }
    function n(t) {
      const e = {};
      return e.id = t, e.start_time = Date.now(), e;
    }
    function o() {
      const t = Date.now();
      a ? c && t - c > constants.SESSION_INTERVAL && (i(c), r(a)) : StorageUtil.getData($JSON_UMENG_CURRENT_SESSION$, e => {
        e && (a = UmengUtils.toObject(e)) ? StorageUtil.getData($JSON_UMENG_PAGE_END_TIME$, e => {
          e && t - e > constants.SESSION_INTERVAL ? (i(e), r(a)) : f = a.id;
        }) : r(null);
      });
    }
    function i(t) {
      try {
        a.end_time = parseInt(t, 10);
      } catch (e) {
        a.end_time = t;
      }
      const e = t - a.start_time;
      a.duration = e;
    }
    function r(t) {
      const o = t ? t.id : "",
        i = Session.getInstance().sessionListener(o);
      e(o, e => {
        a = n(e);
        StorageUtil.getData($JSON_UMENG_SESSIONS$, n => {
          l = UmengUtils.stringToArray(n);
          t ? i.pages(n => {
            n && n.length > 0 && (t.pages = n, t.$page_num = n.length);
            l.push(t);
            StorageUtil.putData($JSON_UMENG_SESSIONS$, UmengUtils.toStr(l));
            s(i, e);
          }) : s(i, e);
        });
        StorageUtil.putData($JSON_UMENG_CURRENT_SESSION$, UmengUtils.toStr(a));
        f = e;
      });
    }
    function s(t, e) {
      StorageUtil.getData($JSON_UMENG_HALF_SESSIONS$, n => {
        _ = UmengUtils.stringToArray(n);
        a && (_.push(JSON.parse(JSON.stringify(a))), StorageUtil.putData($JSON_UMENG_HALF_SESSIONS$, UmengUtils.toStr(_)), t.generateSessionAfterHandler(e));
      });
    }
    let c,
      a,
      u = null,
      f = "",
      l = [],
      _ = [];
    return {
      getInstance() {
        return u || (u = t()), u;
      }
    };
  }(),
  $JSON_UMENG_HEADER$ = "json_umeng_header",
  $UMENG_KEY_IMPRINT$ = "umeng_key_imprint",
  MOBILE_NETWORK_2G = "2g",
  MOBILE_NETWORK_3G = "3g",
  MOBILE_NETWORK_4G = "4g",
  MOBILE_NETWORK_NONE = "none",
  BLANK_SPACE = " ",
  UMENG_ADVERTISTING_ID = "idfa",
  UMENG_ANDROID_ID = "android_id",
  UMENG_OAID = "oaid",
  Header = function () {
    function t() {
      return {
        init(t) {
          this.appkey = t, this.appInfo = _system5.default.getInfo(), e(t => {
            this.header = t;
            StorageUtil.putData($JSON_UMENG_HEADER$, UmengUtils.toStr(t));
          });
        },
        getHeader(t) {
          switch (t) {
            case constants.REQUEST_TYPE_SESSION_HALF:
              this.header.st = "1", !0 === s && delete this.header.atm;
              break;
            case constants.REQUEST_TYPE_SESSION_CLOSE:
            case constants.REQUEST_TYPE_EVENT:
              delete this.header.st, delete this.header.atm;
          }
          return this.header;
        },
        addHeaderAttr(t, e) {
          this.header && (this.header[t] = e);
        },
        getHeaderAttr(t) {
          return this.header && {}.hasOwnProperty.call(this.header, t) ? this.header[t] : null;
        },
        getPackageName() {
          try {
            return this.appInfo.packageName;
          } catch (t) {}
          return "";
        },
        setFirstSendFlag() {
          s = !0;
        }
      };
    }
    function e(t) {
      DeviceUtil.getBaseInfo().then(e => {
        DeviceUtil.getUniqueId().then(r => {
          DeviceUtil.getNetworkInfo(s => {
            let {
              type: type
            } = s;
            type === MOBILE_NETWORK_NONE && (type = "unknown");
            const c = i(e, r, type);
            StorageUtil.getData($UMENG_KEY_IMPRINT$, e => {
              0 !== e.length && (c.imprint = e);
              StorageUtil.getData(constants.APP_FIRST_OPEN_FLAG, e => {
                const i = "true" === e;
                let r = new Date();
                i && (r = new Date(), c.atm = "1");
                console.log(r);
                StorageUtil.getData(constants.MOBILE_ADVERTISING_ID, e => {
                  if (e) {
                    const t = n(e);
                    if (t) {
                      const e = o(UMENG_ADVERTISTING_ID, t);
                      c.id_tracking = e;
                    }
                  }
                  StorageUtil.getData(constants.MOBILE_ANDROID_ID, e => {
                    if (e) {
                      const t = n(e);
                      if (t) if (c.id_tracking && c.id_tracking.snapshots) c.id_tracking.snapshots[UMENG_ANDROID_ID] = t;else {
                        const e = o(UMENG_ANDROID_ID, t);
                        c.id_tracking = e;
                      }
                    }
                    StorageUtil.getData(constants.MOBILE_OAID, e => {
                      if (e) {
                        const t = n(e);
                        if (t) if (c.id_tracking && c.id_tracking.snapshots) c.id_tracking.snapshots[UMENG_OAID] = t;else {
                          const e = o(UMENG_OAID, t);
                          c.id_tracking = e;
                        }
                      }
                      t(c);
                    });
                  });
                });
              });
            });
          });
        });
      });
    }
    function n(t) {
      if (t) {
        const e = {
          identity: t,
          version: 1,
          ts: Date.now()
        };
        return e;
      }
    }
    function o(t, e) {
      const n = {
        snapshots: {}
      };
      return n.snapshots[t] = e, n;
    }
    function i(t, e, n) {
      let o = null;
      if (t) {
        const n = t.screenWidth,
          i = t.screenHeight,
          s = n > i ? `${n}*${i}` : `${i}*${n}`,
          {
            appInfo: appInfo
          } = r,
          {
            model: model,
            brand: brand
          } = t,
          c = brand.toLowerCase();
        o = {
          app_version: appInfo.versionName,
          version_code: appInfo.versionCode,
          app_source_extra: appInfo.source.extra,
          device_type: "Phone",
          package_name: appInfo.packageName,
          sdk_type: "Android",
          os: "Android",
          sdk_version: constants.SDK_VERSION,
          appkey: r.appkey,
          device_model: model.toLowerCase().indexOf(c) > -1 ? model : c + BLANK_SPACE + model,
          device_brand: brand,
          channel: c,
          device_manufacturer: t.manufacturer,
          device_manuid: model.toLowerCase().indexOf(c) > -1 ? model : c + BLANK_SPACE + model,
          device_name: t.product.toLowerCase().indexOf(c) > -1 ? t.product : c + BLANK_SPACE + t.product,
          os_version: t.osVersionName,
          resolution: s,
          language: t.language,
          display_name: t.name,
          idmd5: UmengUtils.MD5(e),
          platform: "quickapp",
          pro_ver: "1"
        };
      } else o = {
        app_version: r.appInfo.versionName,
        version_code: r.appInfo.versionCode,
        device_type: "Phone",
        package_name: r.appInfo.packageName,
        sdk_type: "Android",
        os: "Android",
        sdk_version: constants.SDK_VERSION,
        appkey: r.appkey,
        idmd5: UmengUtils.MD5(e),
        platform: "quickapp",
        pro_ver: "1"
      };
      switch (n) {
        case MOBILE_NETWORK_4G:
          o.access_subtype = "LTE", o.access = "2G/3G";
          break;
        case MOBILE_NETWORK_3G:
          o.access_subtype = "CDMA", o.access = "2G/3G";
          break;
        case MOBILE_NETWORK_2G:
          o.access_subtype = "GRPS", o.access = "2G/3G";
          break;
        default:
          o.access = n, delete o.access_subtype;
      }
      return o;
    }
    let r = null,
      s = !1;
    return {
      getInstance() {
        return r || (r = t()), r;
      }
    };
  }();
Looper.prototype = {
  prepare(t) {
    this.queueObject = t, this.isRunning = !1, this.isForceStop = !1;
  },
  loop() {
    if (!this.isForceStop && this.queueObject && !this.isRunning) for (this.isRunning = !0; this.isRunning;) {
      if (!this.queueObject.isCanPop()) {
        this.isRunning = !1;
        break;
      }
      try {
        this.queueObject.dispatchMessage();
      } catch (t) {}
    }
  },
  wait() {
    this.isRunning = !1;
  },
  forceStop() {
    this.isForceStop = !0;
  },
  cancelForceStop() {
    this.isForceStop = !1, this.loop();
  }
};
const RequestQueue = function () {
    function t(t) {
      return !!t && (f.unshift(t), u.loop(), !0);
    }
    function e() {
      if (f.length > 0) return f.pop();
      const t = l.length;
      return t > 0 ? (1 === t && RequestHelper.getInstance().clearNoSendDatas(), l.pop()) : null;
    }
    function n(t, e) {
      const n = setTimeout(() => {
          o(t);
        }, 3e4),
        i = {
          key: t,
          timeOutFun: n,
          isExe: !1
        };
      g.push(i), e(t => {
        o(t);
      });
    }
    function o(t) {
      for (let e = g.length - 1; e >= 0; e--) {
        const n = g[e];
        if (n.key === t) {
          if (!n.isExe) {
            n.isExe = !0;
            const t = n.timeOutFun;
            t && clearTimeout(t), i(), g.splice(e, 1);
          }
          break;
        }
      }
    }
    function i() {
      (E -= 1) <= _ && u.loop();
    }
    function r(t) {
      const e = g.length,
        n = t.md5Key;
      for (let t = e - 1; t >= 0; t--) {
        const e = g[t];
        if (e.key === n) return i(), !0;
      }
      return !1;
    }
    function s() {
      RequestHelper.getInstance().onNoSendDatasListener(t => {
        if (!t || 0 === t.length) return;
        for (const e in t) if ({}.hasOwnProperty.call(t, e)) {
          const n = {
            md5Key: t[e],
            type: "second"
          };
          l.push(n);
        }
        u.loop();
      });
    }
    function c() {
      return s(), {
        handleMessage(e, n) {
          e && "second" === e.type && i(), e && e.data && (e.executeFunction = n, t(e));
        },
        dispatchMessage() {
          if (E > _) return void u.wait();
          E += 1;
          const t = e();
          r(t) || (t.data ? n(t.md5Key, t.executeFunction) : RequestHelper.getInstance().send(t), this.isCanPop() || u.wait());
        },
        isCanPop() {
          return f.length > 0 || l.length > 0;
        }
      };
    }
    let a, u;
    const f = [],
      l = [],
      _ = 3;
    let E = 1;
    const g = [];
    return {
      getInstance() {
        return a || (a = c(), (u = new Looper()).prepare(a)), a;
      }
    };
  }(),
  StoreQueue = function () {
    function t(t) {
      if (!t) return !1;
      const e = {
        key: t,
        type: _
      };
      return u.unshift(e), a.loop(), !0;
    }
    function e() {
      if (u.length > 0) return u.pop();
      const t = f.length;
      if (t > 0) {
        const e = f.pop();
        return 0 === t && n(), e;
      }
      return n(), null;
    }
    function n() {
      g || (g = !0, StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, t => {
        g = !1;
        if (!t) return;
        const e = UmengUtils.stringToArray(t);
        const n = t => e => {
          e && '""' !== e || (e = {
            key: t,
            type: E
          }, f.push(e));
          f.length > 0 && a.loop();
        };
        for (const t in e) if ({}.hasOwnProperty.call(e, t)) {
          const o = e[t];
          StorageUtil.getData(o, n(o));
        }
      }, () => {
        g = !1;
      }));
    }
    function o(t) {
      StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, e => {
        e = e ? UmengUtils.toObject(e) : [];
        e.push(t);
        StorageUtil.putData(constants.KEY_NO_SEND_REQUEST_KEYS, UmengUtils.toStr(e), () => {
          r(t);
        }, () => {
          r(t);
        });
      }, () => {
        r(t);
      });
    }
    function i(t) {
      StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, e => {
        if (!e) return void r(t);
        e = UmengUtils.stringToArray(e);
        for (const n in e) if ({}.hasOwnProperty.call(e, n)) {
          const o = e[n];
          if (o === t) {
            e.splice(n, 1);
            break;
          }
        }
        StorageUtil.putData(constants.KEY_NO_SEND_REQUEST_KEYS, UmengUtils.toStr(e), () => {
          r(t);
        }, () => {
          r(t);
        });
      }, () => {
        r(t);
      });
    }
    function r() {
      (d -= 1) <= l && a.loop();
    }
    function s() {
      return n(), {
        handleMessage(e) {
          e ? t(e) : n();
        },
        dispatchMessage() {
          if (d > l) return void a.wait();
          d += 1;
          const t = e();
          if (!t || null === t) return void r();
          const {
            key: key
          } = t;
          t.type === _ ? o(key) : i(key), this.isCanPop() || a.wait();
        },
        isCanPop() {
          return u.length > 0 || f.length > 0;
        }
      };
    }
    let c, a;
    const u = [],
      f = [],
      l = 1,
      _ = "write",
      E = "delete";
    let g = !1,
      d = 1;
    return {
      getInstance() {
        return c || (c = s(), (a = new Looper()).prepare(c)), c;
      }
    };
  }(),
  $UMENG_KEY_IMPRINT$$1 = "umeng_key_imprint";
let noSendRequestKeys = [];
const RequestHelper = function () {
    function t() {
      const t = [].concat(Session.getInstance().getSessions());
      if (t && 0 !== t.length) return Session.getInstance().clearSessions(), t;
    }
    function e() {
      const t = [].concat(Session.getInstance().getHalfSessions());
      if (t && 0 !== t.length) return Session.getInstance().clearHalfSession(), t;
    }
    function n(t) {
      StorageUtil.deleteData(t, t => {
        t && StoreQueue.getInstance().handleMessage(null);
      });
    }
    function o(t, e, o, r) {
      if (!t || '""' === t) return void (o && o(e));
      const s = constants.RELEASE_URL;
      _system6.default.fetch({
        url: s,
        method: "POST",
        data: UmengUtils.encode(t),
        header: {
          "Content-Type": "quickapp/json",
          "Msg-Type": "quickapp/json"
        },
        success(t) {
          if (200 === t.code) {
            Log.i("*** umeng_sdk *** request send success"), n(e), r && r(e);
            try {
              const e = UmengUtils.toObject(t.data);
              i(e.imprint);
            } catch (t) {}
          } else 413 === t.code && (Log.i("*** umeng_sdk *** request is to large!"), n(e), r && r(e));
        },
        fail: function (t, e) {
          Log.i("*** umeng_sdk *** request error, please check your permission! ");
        },
        complete() {
          o && o(e);
        }
      });
    }
    function i(t) {
      try {
        if (t) {
          StorageUtil.putData($UMENG_KEY_IMPRINT$$1, t), Header.getInstance().addHeaderAttr("imprint", t);
          const e = UmengUtils.toObject(UmengUtils.decode(t)),
            n = e.report_policy;
          if (n && UmengUtils.isNotANumber(n)) {
            if (StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, n), n === constants.EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE) {
              let t = e.report_interval;
              t && UmengUtils.isNotANumber(t) ? (t <= constants.EVENT_SEND_MIN_INTERVAL ? t = constants.EVENT_SEND_MIN_INTERVAL : t > constants.EVENT_SEND_MAX_INTERVAL && (t = constants.EVENT_SEND_MAX_INTERVAL), StorageUtil.putData(constants.EVENT_SEND_REPORT_INTERVAL_TIME, t)) : StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
            }
          } else StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
        }
      } catch (t) {}
    }
    function r(t, e) {
      const n = UmengUtils.toStr(e);
      let o = null;
      switch (t) {
        case constants.REQUEST_TYPE_SESSION_HALF:
          o = constants.KEY_HALF_SESSION_PREFIX;
          break;
        case constants.REQUEST_TYPE_SESSION_CLOSE:
          o = constants.KEY_CLOSE_SESSION_PREFIX;
          break;
        case constants.REQUEST_TYPE_EVENT:
          o = constants.KEY_EVENT_PREFIX;
      }
      const i = o + UmengUtils.MD5(n);
      return StorageUtil.putData(i, n), StoreQueue.getInstance().handleMessage(i), 0 === noSendRequestKeys.length && StorageUtil.getData(constants.KEY_NO_SEND_REQUEST_KEYS, t => {
        if (!t) return;
        const e = UmengUtils.stringToArray(t);
        0 === noSendRequestKeys.length && (noSendRequestKeys = e, a && a(noSendRequestKeys));
      }), i;
    }
    function s() {
      return {
        paramsIsValid(t) {
          return -1 !== [constants.REQUEST_TYPE_SESSION_HALF, constants.REQUEST_TYPE_SESSION_CLOSE, constants.REQUEST_TYPE_EVENT].indexOf(t);
        },
        buildSendContent(n, o) {
          if (Header.getInstance().getHeader(n)) {
            const i = {
              header: Header.getInstance().getHeader(n),
              analytics: null
            };
            switch (n) {
              case constants.REQUEST_TYPE_SESSION_HALF:
                {
                  const t = e();
                  if (!t) break;
                  i.analytics = {
                    sessions: t
                  };
                  break;
                }
              case constants.REQUEST_TYPE_SESSION_CLOSE:
                {
                  const e = t();
                  if (!e) break;
                  i.analytics = {
                    sessions: e
                  };
                  break;
                }
              case constants.REQUEST_TYPE_EVENT:
                o && o.length > 0 && (i.analytics = {
                  ekv: o
                });
            }
            let s = "";
            return i.analytics && (s = r(n, i)), {
              data: i,
              md5Key: s
            };
          }
        },
        send(t, e) {
          const n = t.md5Key;
          n && ("second" === t.type ? StorageUtil.getData(n, n => {
            t.data = UmengUtils.toObject(n);
            t.data || e && e();
            RequestQueue.getInstance().handleMessage(t, n => {
              o(UmengUtils.toStr(t.data), t.md5Key, n, e);
            });
          }) : RequestQueue.getInstance().handleMessage(t, n => {
            o(UmengUtils.toStr(t.data), t.md5Key, n, e);
          }));
        },
        getNoSendRequestKeys() {
          return noSendRequestKeys;
        },
        onNoSendDatasListener(t) {
          a = t;
        },
        clearNoSendDatas() {
          noSendRequestKeys.splice(0, noSendRequestKeys.length), noSendRequestKeys = [];
        }
      };
    }
    let c, a;
    return {
      getInstance() {
        return c || (c = s()), c;
      }
    };
  }(),
  EventStoreQueue = function () {
    function t(t) {
      if (t) {
        if (!Session.getInstance().getCurrentSessionId()) return void U.unshift(t);
        p.unshift(t), p.length >= _ && g.loop();
      }
    }
    function e() {
      return p.length < _ ? null : p.splice(0, _);
    }
    function n() {
      h && h.length > 0 && s(t => {
        for (const e in h) if ({}.hasOwnProperty.call(h, e)) try {
          h[e](t);
        } catch (t) {}
      }), (d -= 1) < 1 && (d = 1), d <= E && g.loop();
    }
    function o(t, e) {
      StorageUtil.putData(u, e, () => {
        StorageUtil.putData(f, UmengUtils.toStr(t), () => {
          n();
        }, () => {
          n();
        });
      }, () => {
        n();
      });
    }
    function i(t, e) {
      t && (h[t] = e);
    }
    function r(t) {
      t && delete h[t];
    }
    function s(t) {
      StorageUtil.getData(f, e => {
        StorageUtil.deleteData(f, () => {
          const n = c(UmengUtils.stringToArray(e), p);
          p.splice(0, p.length);
          t(n);
          g.cancelForceStop();
        });
      }, () => {
        t([]);
        g.cancelForceStop();
      });
    }
    function c(t, e) {
      const n = Session.getInstance().getCurrentSessionId();
      let o,
        i = -1;
      for (const e in t) if ({}.hasOwnProperty.call(t, e)) {
        const r = t[e];
        if (o = r[n]) {
          i = e;
          break;
        }
      }
      return -1 === i && (o = []), (o = o.concat(e)) && 0 !== o.length ? (-1 === i ? t.push({
        [n]: o
      }) : t[i][n] = o, t) : t;
    }
    function a() {
      return {
        saveEkvData(e) {
          t(e), Log.d(`[saveEkvData] data is ${UmengUtils.toStr(e)}`);
        },
        readEkvDatas(t) {
          t && (g.forceStop(), d <= E ? s(e => {
            t(e);
            g.cancelForceStop();
          }) : i("readEkvDatas", e => {
            t(e);
            r("readEkvDatas");
            g.cancelForceStop();
          }));
        },
        handlerNoSessionEkvDatas() {
          if (U && U.length > 0) {
            Log.d(`no sessionId event is ${JSON.stringify(U)}`);
            for (const t in U) ({}).hasOwnProperty.call(U, t) && this.saveEkvData(U[t]);
            U.splice(0, U.length);
          }
        },
        quitHandler() {
          0 !== p.length && (g.forceStop(), d <= E ? StorageUtil.getData(f, t => {
            const e = c(UmengUtils.stringToArray(t), p);
            StorageUtil.putData(f, UmengUtils.toStr(e));
            p.splice(0, p.length);
            g.cancelForceStop();
          }, () => {
            g.cancelForceStop();
          }) : i("quitHandler", t => {
            const e = UmengUtils.toStr(c(t, p));
            StorageUtil.putData(f, e);
            p.splice(0, p.length);
            r("quitHandler");
            g.cancelForceStop();
          }));
        },
        dispatchMessage() {
          if (d > E) return void g.wait();
          d += 1;
          const t = e();
          if (!t || 0 === t.length) return void n();
          StorageUtil.getData(u, e => {
            e || (e = 0);
            e >= l + t.length ? n() : StorageUtil.getData(f, n => {
              const i = c(UmengUtils.stringToArray(n), t);
              o(i, Number(e) + Number(t.length));
            }, () => {
              n();
            });
          }, () => {
            n();
          });
        },
        isCanPop() {
          return p.length >= _;
        }
      };
    }
    const u = "umeng_ekv_count_key",
      f = "umeng_key_ekvs",
      l = 1e4,
      _ = 5,
      E = 1;
    let g,
      d = 1,
      S = null;
    const h = {},
      p = [],
      U = [];
    return {
      getInstance() {
        return S || (S = new a(), (g = new Looper()).prepare(S)), S;
      }
    };
  }(),
  EventController = function () {
    function t(t, e) {
      const n = {
        id: t,
        ts: Date.now()
      };
      switch (typeof e) {
        case "string":
          n[t] = e;
          break;
        case "object":
          for (const t in e) ({}).hasOwnProperty.call(e, t) && (n[t] = e[t]);
      }
      return n;
    }
    function e() {
      StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
        t === constants.EVENT_SEND_REPORT_POLICY_INTERVAL_VALUE && StorageUtil.getData(constants.EVENT_SEND_REPORT_INTERVAL_TIME, t => {
          StorageUtil.getData(constants.EVENT_LAST_SEND_TIME, e => {
            if (t) {
              const n = Date.now();
              e && n - e > 1e3 * t && Request.sendAll();
            } else StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
          });
        });
      });
    }
    function n() {
      return {
        addEvent(n, o) {
          const i = t(n, o);
          EventStoreQueue.getInstance().saveEkvData(i), e();
        },
        handlerNoSessionEkvDatas() {
          EventStoreQueue.getInstance().handlerNoSessionEkvDatas();
        },
        quitHandler() {
          EventStoreQueue.getInstance().quitHandler();
        },
        setSendTime() {
          StorageUtil.putData(constants.EVENT_LAST_SEND_TIME, Date.now());
        }
      };
    }
    let o;
    return {
      getInstance() {
        return o || (o = n()), o;
      }
    };
  }();
let time = 0;
var Request = {
  send: send,
  sendAll: sendAll
};
const KEY_PRE_PAGE = "umeng_page_";
PageController.prototype = {
  addCurrentPage(t) {
    this._currentPage = {
      ts: Date.now(),
      page_name: DeviceUtil.getPageName()
    }, this.pageObject = t;
  },
  savePage(t, e) {
    if (t && e && this._currentPage.page_name && e === this.pageObject) {
      const e = Date.now() - this._currentPage.ts;
      this._currentPage.duration = Math.abs(e), this._pagelist = this._pagelist.concat(this._currentPage), this._currentPage = {}, this.pageObject = {}, this.saveStroragePages(t);
    }
  },
  saveStroragePages(t) {
    t && this._pagelist.length > 0 && this.updateStorage(KEY_PRE_PAGE + t, this._pagelist);
  },
  getPages(t, e) {
    StorageUtil.getData(KEY_PRE_PAGE + t, n => {
      const o = UmengUtils.stringToArray(n).concat(this._pagelist);
      this.clear(t);
      e && e(o);
    }, () => {
      e && e(null);
    });
  },
  updateStorage(t, e) {
    e && 0 !== e.length && StorageUtil.getData(t, n => {
      const o = UmengUtils.stringToArray(n).concat(e);
      StorageUtil.putData(t, UmengUtils.toStr(o), () => {
        this._pagelist = [];
      });
    });
  },
  clear(t) {
    StorageUtil.deleteData(KEY_PRE_PAGE + t), this._pagelist = [];
  }
};
let inited = !1;
UmengAnalysisLib.prototype = {
  init(t) {
    if (Log.i(`*** umeng_sdk *** sdk version is: ${constants.SDK_VERSION}`), !inited) {
      try {
        this.appkey = t.$data.umeng_appkey;
      } catch (t) {}
      if (!this.appkey) return inited = !1, void console.error("please set umeng_appkey : [manifest.json --\x3e config:{data:{umeng_appkey: xxx}}]");
      inited = !0, Header.getInstance().init(this.appkey);
      const e = this;
      if (Session.getInstance().setOnSessionListener(t => ({
        pages(n) {
          e.pageController.getPages(t, n);
        },
        generateSessionAfterHandler(t) {
          EventController.getInstance().handlerNoSessionEkvDatas(), sendDatas();
        }
      })), StorageUtil.getData(constants.APP_FIRST_OPEN_FLAG, t => {
        0 === t.length && StorageUtil.putData(constants.APP_FIRST_OPEN_FLAG, "true");
      }), StorageUtil.getData(constants.EVENT_SEND_REPORT_POLICY, t => {
        t || StorageUtil.putData(constants.EVENT_SEND_REPORT_POLICY, constants.EVENT_SEND_REPORT_POLICY_START_SEND_VALUE);
      }), StorageUtil.getData(constants.EVENT_LAST_SEND_TIME, t => {
        t || EventController.getInstance().setSendTime();
      }), t) try {
        Object.defineProperty(t, "_status", {
          set(t) {
            "destroy" === t && Request.sendAll();
          }
        });
      } catch (t) {}
    }
  },
  resume(t) {
    isInit() && t && (Log.i(`*** umeng_sdk *** page name: ${DeviceUtil.getPageName()}`), this.pageController.addCurrentPage(t), Session.getInstance().init(this.appkey));
  },
  pause(t) {
    isInit() && t && (this.pageController.savePage(Session.getInstance().getCurrentSessionId(), t), Session.getInstance().endSession(), EventController.getInstance().quitHandler());
  },
  trackEvent(t, e) {
    if (isInit()) return UmengUtils.checkId(t) ? e && !UmengUtils.checkAttrOrString(e) ? (console.error("error-----please check trackEvent attr. attr should be 'String' or 'Object'(not include 'Array')"), !1) : (Log.i(`*** umeng_sdk *** event id: ${UmengUtils.toStr(t)}${e ? ` || event attr: ${UmengUtils.toStr(e)}` : ""}`), EventController.getInstance().addEvent(t, e), !0) : (console.error("error-----please check trackEvent id. id should be 'String' and not null"), !1);
  }
};
const FileUtils = {
    getFile(t, e, n) {
      _system7.default.readText({
        uri: t,
        success(t) {
          e && e(t.text);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    },
    moveFile(t, e, n, o) {
      _system7.default.move({
        srcUri: t,
        dstUri: e,
        success(t) {
          n && n(t);
        },
        fail(t, e) {
          o && o(t, e);
        }
      });
    },
    deleteFile(t, e, n) {
      _system7.default.delete({
        uri: t,
        success(t) {
          e && e(t);
        },
        fail(t, e) {
          n && n(t, e);
        }
      });
    }
  },
  modules = {
    "@system.app": $app_require$("@app-module/system.app"),
    "@system.storage": $app_require$("@app-module/system.storage"),
    "@system.fetch": $app_require$("@app-module/system.fetch"),
    "@system.network": $app_require$("@app-module/system.network"),
    "@system.device": $app_require$("@app-module/system.device"),
    "@system.router": $app_require$("@app-module/system.router"),
    "@system.file": $app_require$("@app-module/system.file")
  },
  callQueue = [],
  umeng_stat_global = Object.getPrototypeOf(global) || global;
SdkUpdater.prototype = {
  init(t, e) {
    this.installApi(t, null);
    try {
      DeviceUtil.getSystemBaseInfo(t => {
        1e3 === t.platformVersionCode ? e(0) : StorageUtil.getData(constants.DOWNLOAD_FILE_FIRST_CACHE, t => {
          t ? this.getSdkFileContent(t, (t, n, o) => {
            t ? e(1, n, o) : this.getSecondCacheFile(e);
          }) : this.getSecondCacheFile(e);
        });
      });
    } catch (t) {
      e(0);
    }
  },
  getSecondCacheFile(t) {
    StorageUtil.getData(constants.DOWNLOAD_FILE_SECOND_CACHE, e => {
      e ? this.getSdkFileContent(e, t) : t(0);
    });
  },
  getSdkFileContent(t, e) {
    try {
      const n = UmengUtils.toObject(t);
      Log.d(`current sdk:${n.version}${n.md5}${n.filePath}`), FileUtils.getFile(n.filePath, t => {
        UmengUtils.checkMD5(n.md5, t) ? e(1, t, n.version) : e(0);
      }, () => {
        e(0);
      });
    } catch (t) {
      e(0);
    }
    return !1;
  },
  downloadFile(t, e, n, o, i) {
    try {
      _system8.default.download({
        url: t,
        success(t) {
          Log.d(`handling success ${t.token}`), _system8.default.onDownloadComplete({
            token: t.token,
            success(t) {
              try {
                const r = t.uri,
                  s = r.split("/"),
                  c = s[s.length - 1];
                let a = constants.SDK_UPDATE_LOCAL_STORAGE_PATH;
                a = `${a + Date.now()}/${c}`, FileUtils.moveFile(t.uri, a, t => {
                  const r = {
                    version: e,
                    md5: n,
                    filePath: t,
                    stable: o
                  };
                  i(r);
                });
              } catch (t) {}
            },
            fail(t, e) {}
          });
        },
        fail() {}
      });
    } catch (t) {}
  },
  storageFileInfo(t) {
    try {
      FileUtils.getFile(t.filePath, e => {
        Log.d(`---------${JSON.stringify(t)}-----------${UmengUtils.MD5(e)}`);
        e && t.md5 && t.md5 === UmengUtils.MD5(e) ? (StorageUtil.getData(constants.DOWNLOAD_FILE_FIRST_CACHE, e => {
          StorageUtil.putData(constants.DOWNLOAD_FILE_FIRST_CACHE, t, () => {
            if (e) {
              const t = UmengUtils.toObject(e);
              !t.stable && t.filePath && FileUtils.deleteFile(t.filePath);
            }
          });
        }), t.stable ? StorageUtil.getData(constants.DOWNLOAD_FILE_SECOND_CACHE, e => {
          StorageUtil.putData(constants.DOWNLOAD_FILE_SECOND_CACHE, t, () => {
            if (e) {
              const t = UmengUtils.toObject(e);
              t.filePath && FileUtils.deleteFile(t.filePath);
            }
          });
        }) : StorageUtil.putData(constants.DOWNLOAD_FILE_FIRST_CACHE, t)) : FileUtils.deleteFile(t.filePath, () => {});
      });
    } catch (t) {
      Log.d(`error message: ${t.toString()}`);
    }
  },
  checkVersionNew(t, e, n, o, i, r) {
    const s = {
      version: t,
      platform: "quickapp",
      appVersion: n,
      appKey: e,
      seedVersion: o,
      systemBaseInfo: i
    };
    _system6.default.fetch({
      url: this.url,
      method: "POST",
      data: s,
      success(t) {
        if (200 === t.code) try {
          const e = UmengUtils.toObject(t.data);
          if (200 === e.code && e.data.update) {
            const t = e.data.info;
            t && r(t);
          }
        } catch (t) {}
      },
      fail(t, e) {},
      complete() {}
    });
  },
  createMethod(t, e, n) {
    try {
      t[e] = n ? function (...t) {
        return n[e](...t);
      } : function (...t) {
        callQueue.push([e, t]);
      };
    } catch (t) {}
  },
  installApi(t, e) {
    try {
      const n = ["resume", "pause", "trackEvent"];
      for (let o = 0, i = n.length; o < i; o++) this.createMethod(t, n[o], e);
      if (e) for (let t = 0, n = callQueue.length; t < n; t++) {
        const n = callQueue[t];
        e[n[0]](...n[1]);
      }
    } catch (t) {}
  },
  compileModule(t, e) {
    try {
      const t = new Function("module", "exports", "require", e),
        n = {
          exports: {}
        },
        o = function (t) {
          return t in modules ? modules[t] : __webpack_require__("./src/Common/libs/umeng sync recursive")(t);
        };
      return t(n, n.exports, o), n.exports;
    } catch (t) {}
  },
  loadModule(t, e) {
    try {
      let n;
      if (0 === t) n = UmengAnalysisLib;else try {
        n = this.compileModule(t, e);
      } catch (t) {
        n = UmengAnalysisLib;
      }
      return n;
    } catch (t) {}
    return null;
  }
};
const UmengAnalysis = {
  seed_version: "0.0.1",
  version: constants.SDK_VERSION,
  appKey: "",
  _impl: null,
  _inited: !1,
  init(t) {
    if (!this._inited) {
      this._inited = !0, umeng_stat_global.userDubug = !!t.$data.umeng_debug, this.appKey = t.$data.umeng_appkey;
      const e = new SdkUpdater();
      e.init(this, (n, o, i) => {
        const r = e.loadModule(n, o);
        if (r) {
          const n = new r();
          this._impl = n, n.init(t), e.installApi(this, n);
        }
        i || (i = this.version);
        DeviceUtil.getSystemBaseInfo(t => {
          if (1e3 === t.platformVersionCode) return;
          e.checkVersionNew(i, this.appKey, _system5.default.getInfo().versionName, this.seed_version, t, t => {
            t && e.downloadFile(t.fileUrl, t.version, t.fileMD5, t.stable, t => {
              e.storageFileInfo(t);
            });
          });
        });
      });
    }
  }
};
!function () {
  umeng_stat_global && (umeng_stat_global.$umeng_stat = UmengAnalysis, umeng_stat_global.Page = Page);
}();
var _default = exports["default"] = UmengAnalysis;

/***/ }),

/***/ "./node_modules/js-base64/base64.js":
/*!******************************************!*\
  !*** ./node_modules/js-base64/base64.js ***!
  \******************************************/
/***/ (function(module) {

//
// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!
//
;
(function (global, factory) {
     true
        ? module.exports = factory()
        : 0;
}((typeof self !== 'undefined' ? self
    : typeof window !== 'undefined' ? window
        : typeof global !== 'undefined' ? global
            : this), function () {
    'use strict';
    /**
     *  base64.ts
     *
     *  Licensed under the BSD 3-Clause License.
     *    http://opensource.org/licenses/BSD-3-Clause
     *
     *  References:
     *    http://en.wikipedia.org/wiki/Base64
     *
     * @author Dan Kogai (https://github.com/dankogai)
     */
    var version = '3.7.2';
    /**
     * @deprecated use lowercase `version`.
     */
    var VERSION = version;
    var _hasatob = typeof atob === 'function';
    var _hasbtoa = typeof btoa === 'function';
    var _hasBuffer = typeof Buffer === 'function';
    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;
    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;
    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    var b64chs = Array.prototype.slice.call(b64ch);
    var b64tab = (function (a) {
        var tab = {};
        a.forEach(function (c, i) { return tab[c] = i; });
        return tab;
    })(b64chs);
    var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
    var _fromCC = String.fromCharCode.bind(String);
    var _U8Afrom = typeof Uint8Array.from === 'function'
        ? Uint8Array.from.bind(Uint8Array)
        : function (it, fn) {
            if (fn === void 0) { fn = function (x) { return x; }; }
            return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));
        };
    var _mkUriSafe = function (src) { return src
        .replace(/=/g, '').replace(/[+\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };
    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\+\/]/g, ''); };
    /**
     * polyfill version of `btoa`
     */
    var btoaPolyfill = function (bin) {
        // console.log('polyfilled');
        var u32, c0, c1, c2, asc = '';
        var pad = bin.length % 3;
        for (var i = 0; i < bin.length;) {
            if ((c0 = bin.charCodeAt(i++)) > 255 ||
                (c1 = bin.charCodeAt(i++)) > 255 ||
                (c2 = bin.charCodeAt(i++)) > 255)
                throw new TypeError('invalid character found');
            u32 = (c0 << 16) | (c1 << 8) | c2;
            asc += b64chs[u32 >> 18 & 63]
                + b64chs[u32 >> 12 & 63]
                + b64chs[u32 >> 6 & 63]
                + b64chs[u32 & 63];
        }
        return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
    };
    /**
     * does what `window.btoa` of web browsers do.
     * @param {String} bin binary string
     * @returns {string} Base64-encoded string
     */
    var _btoa = _hasbtoa ? function (bin) { return btoa(bin); }
        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }
            : btoaPolyfill;
    var _fromUint8Array = _hasBuffer
        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }
        : function (u8a) {
            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326
            var maxargs = 0x1000;
            var strs = [];
            for (var i = 0, l = u8a.length; i < l; i += maxargs) {
                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));
            }
            return _btoa(strs.join(''));
        };
    /**
     * converts a Uint8Array to a Base64 string.
     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5
     * @returns {string} Base64 string
     */
    var fromUint8Array = function (u8a, urlsafe) {
        if (urlsafe === void 0) { urlsafe = false; }
        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);
    };
    // This trick is found broken https://github.com/dankogai/js-base64/issues/130
    // const utob = (src: string) => unescape(encodeURIComponent(src));
    // reverting good old fationed regexp
    var cb_utob = function (c) {
        if (c.length < 2) {
            var cc = c.charCodeAt(0);
            return cc < 0x80 ? c
                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))
                    + _fromCC(0x80 | (cc & 0x3f)))
                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))
                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
                        + _fromCC(0x80 | (cc & 0x3f)));
        }
        else {
            var cc = 0x10000
                + (c.charCodeAt(0) - 0xD800) * 0x400
                + (c.charCodeAt(1) - 0xDC00);
            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))
                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))
                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))
                + _fromCC(0x80 | (cc & 0x3f)));
        }
    };
    var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
    /**
     * @deprecated should have been internal use only.
     * @param {string} src UTF-8 string
     * @returns {string} UTF-16 string
     */
    var utob = function (u) { return u.replace(re_utob, cb_utob); };
    //
    var _encode = _hasBuffer
        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }
        : _TE
            ? function (s) { return _fromUint8Array(_TE.encode(s)); }
            : function (s) { return _btoa(utob(s)); };
    /**
     * converts a UTF-8-encoded string to a Base64 string.
     * @param {boolean} [urlsafe] if `true` make the result URL-safe
     * @returns {string} Base64 string
     */
    var encode = function (src, urlsafe) {
        if (urlsafe === void 0) { urlsafe = false; }
        return urlsafe
            ? _mkUriSafe(_encode(src))
            : _encode(src);
    };
    /**
     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.
     * @returns {string} Base64 string
     */
    var encodeURI = function (src) { return encode(src, true); };
    // This trick is found broken https://github.com/dankogai/js-base64/issues/130
    // const btou = (src: string) => decodeURIComponent(escape(src));
    // reverting good old fationed regexp
    var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
    var cb_btou = function (cccc) {
        switch (cccc.length) {
            case 4:
                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)
                    | ((0x3f & cccc.charCodeAt(1)) << 12)
                    | ((0x3f & cccc.charCodeAt(2)) << 6)
                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;
                return (_fromCC((offset >>> 10) + 0xD800)
                    + _fromCC((offset & 0x3FF) + 0xDC00));
            case 3:
                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)
                    | ((0x3f & cccc.charCodeAt(1)) << 6)
                    | (0x3f & cccc.charCodeAt(2)));
            default:
                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)
                    | (0x3f & cccc.charCodeAt(1)));
        }
    };
    /**
     * @deprecated should have been internal use only.
     * @param {string} src UTF-16 string
     * @returns {string} UTF-8 string
     */
    var btou = function (b) { return b.replace(re_btou, cb_btou); };
    /**
     * polyfill version of `atob`
     */
    var atobPolyfill = function (asc) {
        // console.log('polyfilled');
        asc = asc.replace(/\s+/g, '');
        if (!b64re.test(asc))
            throw new TypeError('malformed base64.');
        asc += '=='.slice(2 - (asc.length & 3));
        var u24, bin = '', r1, r2;
        for (var i = 0; i < asc.length;) {
            u24 = b64tab[asc.charAt(i++)] << 18
                | b64tab[asc.charAt(i++)] << 12
                | (r1 = b64tab[asc.charAt(i++)]) << 6
                | (r2 = b64tab[asc.charAt(i++)]);
            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)
                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)
                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
        }
        return bin;
    };
    /**
     * does what `window.atob` of web browsers do.
     * @param {String} asc Base64-encoded string
     * @returns {string} binary string
     */
    var _atob = _hasatob ? function (asc) { return atob(_tidyB64(asc)); }
        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }
            : atobPolyfill;
    //
    var _toUint8Array = _hasBuffer
        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }
        : function (a) { return _U8Afrom(_atob(a), function (c) { return c.charCodeAt(0); }); };
    /**
     * converts a Base64 string to a Uint8Array.
     */
    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };
    //
    var _decode = _hasBuffer
        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }
        : _TD
            ? function (a) { return _TD.decode(_toUint8Array(a)); }
            : function (a) { return btou(_atob(a)); };
    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };
    /**
     * converts a Base64 string to a UTF-8 string.
     * @param {String} src Base64 string.  Both normal and URL-safe are supported
     * @returns {string} UTF-8 string
     */
    var decode = function (src) { return _decode(_unURI(src)); };
    /**
     * check if a value is a valid Base64 string
     * @param {String} src a value to check
      */
    var isValid = function (src) {
        if (typeof src !== 'string')
            return false;
        var s = src.replace(/\s+/g, '').replace(/={0,2}$/, '');
        return !/[^\s0-9a-zA-Z\+/]/.test(s) || !/[^\s0-9a-zA-Z\-_]/.test(s);
    };
    //
    var _noEnum = function (v) {
        return {
            value: v, enumerable: false, writable: true, configurable: true
        };
    };
    /**
     * extend String.prototype with relevant methods
     */
    var extendString = function () {
        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };
        _add('fromBase64', function () { return decode(this); });
        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });
        _add('toBase64URI', function () { return encode(this, true); });
        _add('toBase64URL', function () { return encode(this, true); });
        _add('toUint8Array', function () { return toUint8Array(this); });
    };
    /**
     * extend Uint8Array.prototype with relevant methods
     */
    var extendUint8Array = function () {
        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };
        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });
        _add('toBase64URI', function () { return fromUint8Array(this, true); });
        _add('toBase64URL', function () { return fromUint8Array(this, true); });
    };
    /**
     * extend Builtin prototypes with relevant methods
     */
    var extendBuiltins = function () {
        extendString();
        extendUint8Array();
    };
    var gBase64 = {
        version: version,
        VERSION: VERSION,
        atob: _atob,
        atobPolyfill: atobPolyfill,
        btoa: _btoa,
        btoaPolyfill: btoaPolyfill,
        fromBase64: decode,
        toBase64: encode,
        encode: encode,
        encodeURI: encodeURI,
        encodeURL: encodeURI,
        utob: utob,
        btou: btou,
        decode: decode,
        isValid: isValid,
        fromUint8Array: fromUint8Array,
        toUint8Array: toUint8Array,
        extendString: extendString,
        extendUint8Array: extendUint8Array,
        extendBuiltins: extendBuiltins
    };
    //
    // export Base64 to the namespace
    //
    // ES5 is yet to have Object.assign() that may make transpilers unhappy.
    // gBase64.Base64 = Object.assign({}, gBase64);
    gBase64.Base64 = {};
    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });
    return gBase64;
}));


/***/ }),

/***/ "./node_modules/js-md5/src/md5.js":
/*!****************************************!*\
  !*** ./node_modules/js-md5/src/md5.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-md5]{@link https://github.com/emn178/js-md5}
 *
 * @namespace md5
 * @version 0.7.3
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
(function () {
  'use strict';

  var ERROR = 'input is invalid type';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_MD5_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = global;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && "object" === 'object' && module.exports;
  var AMD =  true && __webpack_require__.amdO;
  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var EXTRA = [128, 32768, 8388608, -2147483648];
  var SHIFT = [0, 8, 16, 24];
  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];
  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

  var blocks = [], buffer8;
  if (ARRAY_BUFFER) {
    var buffer = new ArrayBuffer(68);
    buffer8 = new Uint8Array(buffer);
    blocks = new Uint32Array(buffer);
  }

  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  /**
   * @method hex
   * @memberof md5
   * @description Output hash as hex string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} Hex string
   * @example
   * md5.hex('The quick brown fox jumps over the lazy dog');
   * // equal to
   * md5('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method digest
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.digest('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method array
   * @memberof md5
   * @description Output hash as bytes array
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Array} Bytes array
   * @example
   * md5.array('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method arrayBuffer
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof md5
   * @description Output hash as ArrayBuffer
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {ArrayBuffer} ArrayBuffer
   * @example
   * md5.buffer('The quick brown fox jumps over the lazy dog');
   */
  /**
   * @method base64
   * @memberof md5
   * @description Output hash as base64 string
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {String} base64 string
   * @example
   * md5.base64('The quick brown fox jumps over the lazy dog');
   */
  var createOutputMethod = function (outputType) {
    return function (message) {
      return new Md5(true).update(message)[outputType]();
    };
  };

  /**
   * @method create
   * @memberof md5
   * @description Create Md5 object
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.create();
   */
  /**
   * @method update
   * @memberof md5
   * @description Create and update Md5 object
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @example
   * var hash = md5.update('The quick brown fox jumps over the lazy dog');
   * // equal to
   * var hash = md5.create();
   * hash.update('The quick brown fox jumps over the lazy dog');
   */
  var createMethod = function () {
    var method = createOutputMethod('hex');
    if (NODE_JS) {
      method = nodeWrap(method);
    }
    method.create = function () {
      return new Md5();
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(type);
    }
    return method;
  };

  var nodeWrap = function (method) {
    var crypto = eval("require('crypto')");
    var Buffer = eval("require('buffer').Buffer");
    var nodeMethod = function (message) {
      if (typeof message === 'string') {
        return crypto.createHash('md5').update(message, 'utf8').digest('hex');
      } else {
        if (message === null || message === undefined) {
          throw ERROR;
        } else if (message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        }
      }
      if (Array.isArray(message) || ArrayBuffer.isView(message) ||
        message.constructor === Buffer) {
        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');
      } else {
        return method(message);
      }
    };
    return nodeMethod;
  };

  /**
   * Md5 class
   * @class Md5
   * @description This is internal class.
   * @see {@link md5.create}
   */
  function Md5(sharedMemory) {
    if (sharedMemory) {
      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      this.blocks = blocks;
      this.buffer8 = buffer8;
    } else {
      if (ARRAY_BUFFER) {
        var buffer = new ArrayBuffer(68);
        this.buffer8 = new Uint8Array(buffer);
        this.blocks = new Uint32Array(buffer);
      } else {
        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      }
    }
    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;
    this.finalized = this.hashed = false;
    this.first = true;
  }

  /**
   * @method update
   * @memberof Md5
   * @instance
   * @description Update hash
   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
   * @returns {Md5} Md5 object.
   * @see {@link md5.update}
   */
  Md5.prototype.update = function (message) {
    if (this.finalized) {
      return;
    }

    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw ERROR;
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw ERROR;
          }
        }
      } else {
        throw ERROR;
      }
      notString = true;
    }
    var code, index = 0, i, length = message.length, blocks = this.blocks;
    var buffer8 = this.buffer8;

    while (index < length) {
      if (this.hashed) {
        this.hashed = false;
        blocks[0] = blocks[16];
        blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      }

      if (notString) {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            buffer8[i++] = message[index];
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
          }
        }
      } else {
        if (ARRAY_BUFFER) {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              buffer8[i++] = code;
            } else if (code < 0x800) {
              buffer8[i++] = 0xc0 | (code >> 6);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else if (code < 0xd800 || code >= 0xe000) {
              buffer8[i++] = 0xe0 | (code >> 12);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              buffer8[i++] = 0xf0 | (code >> 18);
              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);
              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);
              buffer8[i++] = 0x80 | (code & 0x3f);
            }
          }
        } else {
          for (i = this.start; index < length && i < 64; ++index) {
            code = message.charCodeAt(index);
            if (code < 0x80) {
              blocks[i >> 2] |= code << SHIFT[i++ & 3];
            } else if (code < 0x800) {
              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else if (code < 0xd800 || code >= 0xe000) {
              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            } else {
              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
            }
          }
        }
      }
      this.lastByteIndex = i;
      this.bytes += i - this.start;
      if (i >= 64) {
        this.start = i - 64;
        this.hash();
        this.hashed = true;
      } else {
        this.start = i;
      }
    }
    if (this.bytes > 4294967295) {
      this.hBytes += this.bytes / 4294967296 << 0;
      this.bytes = this.bytes % 4294967296;
    }
    return this;
  };

  Md5.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex;
    blocks[i >> 2] |= EXTRA[i & 3];
    if (i >= 56) {
      if (!this.hashed) {
        this.hash();
      }
      blocks[0] = blocks[16];
      blocks[16] = blocks[1] = blocks[2] = blocks[3] =
      blocks[4] = blocks[5] = blocks[6] = blocks[7] =
      blocks[8] = blocks[9] = blocks[10] = blocks[11] =
      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }
    blocks[14] = this.bytes << 3;
    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;
    this.hash();
  };

  Md5.prototype.hash = function () {
    var a, b, c, d, bc, da, blocks = this.blocks;

    if (this.first) {
      a = blocks[0] - 680876937;
      a = (a << 7 | a >>> 25) - 271733879 << 0;
      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;
      d = (d << 12 | d >>> 20) + a << 0;
      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;
      c = (c << 17 | c >>> 15) + d << 0;
      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;
      b = (b << 22 | b >>> 10) + c << 0;
    } else {
      a = this.h0;
      b = this.h1;
      c = this.h2;
      d = this.h3;
      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;
      a = (a << 7 | a >>> 25) + b << 0;
      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;
      d = (d << 12 | d >>> 20) + a << 0;
      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;
      c = (c << 17 | c >>> 15) + d << 0;
      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;
      b = (b << 22 | b >>> 10) + c << 0;
    }

    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;
    a = (a << 7 | a >>> 25) + b << 0;
    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;
    d = (d << 12 | d >>> 20) + a << 0;
    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;
    c = (c << 17 | c >>> 15) + d << 0;
    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;
    b = (b << 22 | b >>> 10) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;
    b = (b << 20 | b >>> 12) + c << 0;
    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;
    a = (a << 5 | a >>> 27) + b << 0;
    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;
    d = (d << 9 | d >>> 23) + a << 0;
    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;
    c = (c << 14 | c >>> 18) + d << 0;
    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;
    b = (b << 20 | b >>> 12) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[5] - 378558;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[8] - 2022574463;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[11] + 1839030562;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[14] - 35309556;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[1] - 1530992060;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[4] + 1272893353;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[7] - 155497632;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[10] - 1094730640;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[13] + 681279174;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[0] - 358537222;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[3] - 722521979;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[6] + 76029189;
    b = (b << 23 | b >>> 9) + c << 0;
    bc = b ^ c;
    a += (bc ^ d) + blocks[9] - 640364487;
    a = (a << 4 | a >>> 28) + b << 0;
    d += (bc ^ a) + blocks[12] - 421815835;
    d = (d << 11 | d >>> 21) + a << 0;
    da = d ^ a;
    c += (da ^ b) + blocks[15] + 530742520;
    c = (c << 16 | c >>> 16) + d << 0;
    b += (da ^ c) + blocks[2] - 995338651;
    b = (b << 23 | b >>> 9) + c << 0;
    a += (c ^ (b | ~d)) + blocks[0] - 198630844;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[5] - 57434055;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[10] - 1051523;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[15] - 30611744;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;
    b = (b << 21 | b >>> 11) + c << 0;
    a += (c ^ (b | ~d)) + blocks[4] - 145523070;
    a = (a << 6 | a >>> 26) + b << 0;
    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;
    d = (d << 10 | d >>> 22) + a << 0;
    c += (a ^ (d | ~b)) + blocks[2] + 718787259;
    c = (c << 15 | c >>> 17) + d << 0;
    b += (d ^ (c | ~a)) + blocks[9] - 343485551;
    b = (b << 21 | b >>> 11) + c << 0;

    if (this.first) {
      this.h0 = a + 1732584193 << 0;
      this.h1 = b - 271733879 << 0;
      this.h2 = c - 1732584194 << 0;
      this.h3 = d + 271733878 << 0;
      this.first = false;
    } else {
      this.h0 = this.h0 + a << 0;
      this.h1 = this.h1 + b << 0;
      this.h2 = this.h2 + c << 0;
      this.h3 = this.h3 + d << 0;
    }
  };

  /**
   * @method hex
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.hex();
   */
  Md5.prototype.hex = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;

    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +
      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +
      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +
      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +
      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +
      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +
      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +
      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +
      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +
      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +
      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +
      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +
      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +
      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +
      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +
      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];
  };

  /**
   * @method toString
   * @memberof Md5
   * @instance
   * @description Output hash as hex string
   * @returns {String} Hex string
   * @see {@link md5.hex}
   * @example
   * hash.toString();
   */
  Md5.prototype.toString = Md5.prototype.hex;

  /**
   * @method digest
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.digest}
   * @example
   * hash.digest();
   */
  Md5.prototype.digest = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;
    return [
      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,
      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,
      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,
      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF
    ];
  };

  /**
   * @method array
   * @memberof Md5
   * @instance
   * @description Output hash as bytes array
   * @returns {Array} Bytes array
   * @see {@link md5.array}
   * @example
   * hash.array();
   */
  Md5.prototype.array = Md5.prototype.digest;

  /**
   * @method arrayBuffer
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.arrayBuffer}
   * @example
   * hash.arrayBuffer();
   */
  Md5.prototype.arrayBuffer = function () {
    this.finalize();

    var buffer = new ArrayBuffer(16);
    var blocks = new Uint32Array(buffer);
    blocks[0] = this.h0;
    blocks[1] = this.h1;
    blocks[2] = this.h2;
    blocks[3] = this.h3;
    return buffer;
  };

  /**
   * @method buffer
   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.
   * @memberof Md5
   * @instance
   * @description Output hash as ArrayBuffer
   * @returns {ArrayBuffer} ArrayBuffer
   * @see {@link md5.buffer}
   * @example
   * hash.buffer();
   */
  Md5.prototype.buffer = Md5.prototype.arrayBuffer;

  /**
   * @method base64
   * @memberof Md5
   * @instance
   * @description Output hash as base64 string
   * @returns {String} base64 string
   * @see {@link md5.base64}
   * @example
   * hash.base64();
   */
  Md5.prototype.base64 = function () {
    var v1, v2, v3, base64Str = '', bytes = this.array();
    for (var i = 0; i < 15;) {
      v1 = bytes[i++];
      v2 = bytes[i++];
      v3 = bytes[i++];
      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +
        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +
        BASE64_ENCODE_CHAR[v3 & 63];
    }
    v1 = bytes[i];
    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +
      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +
      '==';
    return base64Str;
  };

  var exports = createMethod();

  if (COMMON_JS) {
    module.exports = exports;
  } else {
    /**
     * @method md5
     * @description Md5 hash function, export to global in browsers.
     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash
     * @returns {String} md5 hashes
     * @example
     * md5(''); // d41d8cd98f00b204e9800998ecf8427e
     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6
     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0
     *
     * // It also supports UTF-8 encoding
     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07
     *
     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`
     * md5([]); // d41d8cd98f00b204e9800998ecf8427e
     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e
     */
    root.md5 = exports;
    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return exports;
      }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();


/***/ }),

/***/ "./node_modules/union-quick-app-ad/app.js":
/*!************************************************!*\
  !*** ./node_modules/union-quick-app-ad/app.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(exports, "__esModule", ({value:!0})),exports["default"]=void 0;var _system=_interopRequireDefault($app_require$("@app-module/system.device")),_system2=_interopRequireDefault($app_require$("@app-module/system.app")),_system3=_interopRequireDefault($app_require$("@app-module/system.network")),_system4=_interopRequireDefault($app_require$("@app-module/system.fetch")),_system5=_interopRequireDefault($app_require$("@app-module/system.package")),_system6=_interopRequireDefault($app_require$("@app-module/system.webview")),_system7=_interopRequireDefault($app_require$("@app-module/system.prompt")),_system8=_interopRequireDefault($app_require$("@app-module/system.router")),_system9=_interopRequireDefault($app_require$("@app-module/system.request")),_system10=_interopRequireDefault($app_require$("@app-module/system.storage")),_service=_interopRequireDefault($app_require$("@app-module/service.account")),_system11=_interopRequireDefault($app_require$("@app-module/system.sensor")),_system12=_interopRequireDefault($app_require$("@app-module/system.vibrator")),_system13=_interopRequireDefault($app_require$("@app-module/system.file")),_system14=_interopRequireDefault($app_require$("@app-module/system.image")),_package=__webpack_require__(/*! ./package.json */ "./node_modules/union-quick-app-ad/package.json");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var m_global=Object.getPrototypeOf(global)||global,fileUrl="internal://files/unionad/".concat(_package.version,"/ad-render-quick.min.js");function execRemoteJs(e,t){var r=this;try{new Function(e)()}catch(e){t&&fetchRemoteJs.call(this).then(function(e){execRemoteJs(e,!1),initAdSdk.call(r)})}}function initAdSdk(e){try{m_global.$union_quick_app_sdk&&(m_global.$union_quick_app_sdk.api={device:_system.default,app:_system2.default,network:_system3.default,fetch:_system4.default,pkg:_system5.default,webview:_system6.default,prompt:_system7.default,router:_system8.default,request:_system9.default,storage:_system10.default,account:_service.default,file:_system13.default,sensor:_system11.default,image:_system14.default,vibrator:_system12.default},m_global.$union_quick_app_sdk.sdkVersion=_package.version,m_global.$union_quick_app_sdk.fileUrl=fileUrl,new m_global.$union_quick_app_sdk(this,e))}catch(e){}}function fetchRemoteJs(){return new Promise(function(t,r){_system4.default.fetch({url:"https://cpro.baidustatic.com/cpro/xcx/js/ad-render-quick.min.js",responseType:"text",method:"GET",success:function(e){_system13.default.writeText({uri:fileUrl,text:e.data,success:function(){},fail:function(e,t){}}),t(e.data)},fail:function(e,t){r()}})})}var UNION_AD_SDK=_createClass(function e(r,i){_classCallCheck(this,e),m_global&&m_global.$union_quick_app_sdk?initAdSdk.call(r,i):_system13.default.readText({uri:fileUrl,success:function(e){execRemoteJs.call(r,e.text,!0),initAdSdk.call(r,i)},fail:function(e,t){fetchRemoteJs.call(r).then(function(e){execRemoteJs.call(r,e,!1),initAdSdk.call(r,i)})}})}),_default=UNION_AD_SDK;exports["default"]=_default;

/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/index.js":
/*!****************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ YLH_UNION_AD_SDK),
/* harmony export */   "isPlatformVersionCodeGreaterThen1100": () => (/* binding */ isPlatformVersionCodeGreaterThen1100)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./node_modules/ylh-quick-app-ad-sdk/utils/index.js");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package.json */ "./node_modules/ylh-quick-app-ad-sdk/package.json");
/* eslint-disable import/no-unresolved */
var app = $app_require$( '@app-module/system.app');;
var fetch = $app_require$( '@app-module/system.fetch');;
var file = $app_require$( '@app-module/system.file');;
var device = $app_require$( '@app-module/system.device');;
var network = $app_require$( '@app-module/system.network');;
var shortcut = $app_require$( '@app-module/system.shortcut');;
var battery = $app_require$( '@app-module/system.battery');;
var brightness = $app_require$( '@app-module/system.brightness');;
var webview = $app_require$( '@app-module/system.webview');;
var storage = $app_require$( '@app-module/system.storage');;
var pkg = $app_require$( '@app-module/system.package');;
var router = $app_require$( '@app-module/system.router');;
var prompt = $app_require$( '@app-module/system.prompt');;
var cipher = $app_require$( '@app-module/system.cipher');;
var volume = $app_require$( '@app-module/system.volume');;
var sensor = $app_require$( '@app-module/system.sensor');;
var vibrator = $app_require$( '@app-module/system.vibrator');;



const qaGlobal = Object.getPrototypeOf(global) || global;

const { version } = _package_json__WEBPACK_IMPORTED_MODULE_1__;

const REMOTE_JS_TYPE = {
  CORE: 'core',
  LIBS: 'libs',
};

const FIRST_CORE_VERSION = 1050;

const LIBS_VERSION = '1.0.0';
const FIRST_LIBS_VERSION = 1000;

const isSomeStubVersionScope = ({ entryVersion, localVersion }) => {
  const { length: localLen } = localVersion;
  const { length: entryLen } = entryVersion;
  return localVersion.slice(0, localLen - 2) === entryVersion.slice(0, entryLen - 2);
};

const getRemoteJSConfigInfo = ({
  type,
  firstPublishUrl,
  stubVersion,
  firstPublishPluginVersion,
  isUseRemoteJS,
  validateFn = (localJsUrl) => {
    if (isUseRemoteJS) {
      return !isUseRemoteJS;
    }
    if (!localJsUrl) {
      return false;
    }
    const [localStubVersion, localPluginVersion] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getCoreVersionByUrl)(localJsUrl);
    const isSameSdkVersion = isSomeStubVersionScope({
      entryVersion: stubVersion,
      localVersion: localStubVersion,
    });
    return isSameSdkVersion && localPluginVersion >= firstPublishPluginVersion;
  },
}) => {
  const coreInfo = {
    // 存放本地 JS 文件的 uri 地址
    cacheUri: `internal://files/ylh-sdk-${type}/${stubVersion}`,
    // 本地 JS 不可用（没有或不符合 validateFn 条件）时，重新请求 JS 的远程地址
    remoteUrl: firstPublishUrl,
    validateFn,
  };
  return coreInfo;
};

const coreInfo = getRemoteJSConfigInfo({
  type: REMOTE_JS_TYPE.CORE,
  firstPublishUrl: `https://qzs.gdtimg.com/union/res/ylh-sdk-core-v1.5.1050.min.js?d=${Date.now()}`, // 线上
  stubVersion: version,
  firstPublishPluginVersion: FIRST_CORE_VERSION,
  isUseRemoteJS: false,
});

const libsInfo = getRemoteJSConfigInfo({
  type: REMOTE_JS_TYPE.LIBS,
  firstPublishUrl: `https://qzs.gdtimg.com/union/res/ylh-sdk-libs-v1.0.1000.min.js?d=${Date.now()}`, // 线上
  stubVersion: LIBS_VERSION,
  firstPublishPluginVersion: FIRST_LIBS_VERSION,
  isUseRemoteJS: false,
});

const system = {
  fetch,
  file,
  device,
  network,
  shortcut,
  battery,
  brightness,
  webview,
  storage,
  pkg,
  router,
  prompt,
  cipher,
  volume,
  sensor,
  vibrator,
  app,
  sdkVersion: version,
  BroadcastChannel,
};

// 为加快运行速度，缓存promise
const userPromiseCache = {};

const YLH_SDK_SUPPORT_MINI_PLATFORM_VER = 1100;

const isPlatformVersionCodeGreaterThen1100 = async () => {
  if (!userPromiseCache.platformPromise) {
    userPromiseCache.platformPromise = new Promise((resolve, reject) => {
      device.getInfo({
        success: (deviceInfoInfo) => {
          const { platformVersionCode } = deviceInfoInfo;
          if (platformVersionCode < YLH_SDK_SUPPORT_MINI_PLATFORM_VER) {
            reject(new Error(JSON.stringify({ platform: platformVersionCode })));
          } else {
            resolve(true);
          }
        },
        fail: () => {
          reject(new Error(JSON.stringify({ platform: '未知' })));
        },
      });
    });
  }
  return userPromiseCache.platformPromise;
};

/**
 * 加载远程 CDN JS 广告处理逻辑文件
 * @returns Promise
 */
const fetchRemoteJS = ({ cacheUri, remoteUrl }) => new Promise((resolve, reject) => {
  let pollCount = 0;
  const errMessage = `${remoteUrl} 获取失败`;
  const pollFetch = () => {
    fetch.fetch({
      url: remoteUrl,
      responseType: 'text',
      method: 'get',
      success: (res) => {
        const { code, data: jsCode } = res;
        if (code !== 200) {
          if (pollCount < 3) {
            pollCount += 1;
            // 重试之前等待1s钟
            setTimeout(() => {
              pollFetch();
            }, 1000);
          } else {
            reject(errMessage);
          }
        } else {
          resolve(jsCode);
          // 缓存最新 JS
          if (cacheUri) {
            file.writeText({
              uri: cacheUri,
              text: { jsCode, jsUrl: remoteUrl },
            });
          }
        }
      },
      fail: () => {
        // 当出现网络异常或者其他情况时，进行重试
        if (pollCount < 3) {
          pollCount += 1;
          // 重试之前等待1s钟
          setTimeout(() => {
            pollFetch();
          }, 1000);
        } else {
          reject(errMessage);
        }
      },
    });
  };
  pollFetch();
});

// 获取local JS，如果local JS不可用（没有或不符合validateFn条件）时，重新请求remoteUrl JS
const getLocalJS = async ({ cacheUri, remoteUrl, validateFn }) => {
  try {
    const res = await file.readText({
      uri: cacheUri,
    });
    const { data = {} } = res || {};
    const { jsCode, jsUrl } = JSON.parse(data.text || '{}');
    if (validateFn(jsUrl)) {
      return jsCode;
    }
  } catch (err) {
    console.log('getLocalJS-err', err);
  }

  return fetchRemoteJS({ cacheUri, remoteUrl });
};

// 执行local JS, 如果没有，则从remoteUrl处获取后再执行
const executeLocalJS = async (params) => {
  getLocalJS(params).then((localJS) => {
    // eslint-disable-next-line no-new, no-new-func
    const func = new Function('$YLHSDK', localJS);
    func(qaGlobal.$YLHSDK);
  }).catch((err) => {
    console.log('executeLocalJS出错', err, params);
  });
};

/**
 * 快应用SDK入口函数
 * @param {Object} $app 快应用 App 实例。注意$app和app的区别：$app-快应用实例，app-快应用文档提供的@system.app api。
 */
function YLH_UNION_AD_SDK($app, config = {}) {
  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.classCallCheck)(this, YLH_UNION_AD_SDK);

  if (!config.appId) {
    console.error('必须传递appId，ylh_sdk才会正常运行');
    return;
  }
  (0,_utils__WEBPACK_IMPORTED_MODULE_0__.initYLHSDK)($app);

  isPlatformVersionCodeGreaterThen1100().then(() => {
    qaGlobal.$YLHSDK = {
      $app,
      config,
      system: {
        ...system,
        telecom: $app_require$('@app-module/system.telecom'), // telecom 必须 大于 1080 版本
        keyguard: $app_require$('@app-module/system.keyguard'), // keyguard 必须 大于 1090 版本
        downloadTask: $app_require$('@app-module/system.downloadtask'), // downloadTask 必须 大于 1100 版本
      },
      fetchRemoteJS,
      localCore: {
        localCoreUri: coreInfo.cacheUri,
        getCoreVersionByUrl: _utils__WEBPACK_IMPORTED_MODULE_0__.getCoreVersionByUrl,
      },
      localLibs: {
        localLibsUri: libsInfo.cacheUri,
      },
    };

    executeLocalJS(coreInfo);
    executeLocalJS(libsInfo);
  }).catch((err) => {
    const errObj = err?.message ? JSON.parse(err.message) : {};
    console.warn(`该机型的 minPlatformVersion 为${errObj.platform}, 小于${YLH_SDK_SUPPORT_MINI_PLATFORM_VER}, 
    ylh_sdk 不会运行也不会导致快应用异常`);
  });
}


/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/utils/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/utils/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "classCallCheck": () => (/* binding */ classCallCheck),
/* harmony export */   "defineAdComponent": () => (/* binding */ defineAdComponent),
/* harmony export */   "defineAdScene": () => (/* binding */ defineAdScene),
/* harmony export */   "dispatchAdEvent": () => (/* binding */ dispatchAdEvent),
/* harmony export */   "getCoreVersionByUrl": () => (/* binding */ getCoreVersionByUrl),
/* harmony export */   "initYLHSDK": () => (/* binding */ initYLHSDK)
/* harmony export */ });
function dispatchAdEvent(eventName, params) {
  try {
    if (this.isAdDestroyed) return;
    if (this.lifetimes && this.lifetimes?.[eventName]) {
      this.lifetimes[eventName].call(this, params);
    } else if (this.events && this.events?.[eventName]) {
      this.events[eventName].call(this, params);
    }
  } catch (error) {
    console.warn('dispatchAdEvent error: ', eventName, error.message, params);
  }
}

function registerProps(componentName, adTimer) {
  if (this.$app) {
    const component = this.$app.$def?.ylh_sdk?.components?.[componentName];
    if (component) {
      Object.keys(component).forEach((prop) => {
        this[prop] = component[prop];
      });
      dispatchAdEvent.call(this, 'onInit', componentName);
      if (adTimer) {
        clearInterval(adTimer);
      }
    }
  }
}

function defineAdComponent(componentName) {
  try {
    if (this.adTimer) {
      clearInterval(this.adTimer);
    }
    if (this.$app?.$def?.ylh_sdk?.components) {
      registerProps.call(this, componentName, undefined);
    } else {
      let time = 0;
      const adTimer = setInterval(() => {
        if (time > 1000 * 5) {
          clearInterval(adTimer);
        }
        registerProps.call(this, componentName, adTimer);
        time += 10;
      }, 10);
    }
  } catch (error) {
    console.error(error.message);
    if (this.onYLHSDKError) {
      this.onYLHSDKError(error.message);
    }
  }
}

function defineAdScene(scene) {
  defineAdComponent.call(this, scene);
}

/**
 * 检查类函数是否通过 new 关键字正确调用
 * @param {Object} sdkInstance 实例对象
 * @param {function} sdkConstructor 构造函数
 */
function classCallCheck(sdkInstance, sdkConstructor) {
  if (!(sdkInstance instanceof sdkConstructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

// https://qzs.gdtimg.com/union/res/ylh-sdk-core-v1.3.1030.min.js?d=13333' 从url解析出['1.3', 1030]信息
function getCoreVersionByUrl(jsUrl = '') {
  const res = jsUrl.match(/ylh-sdk-(?:[a-z]+)-v(\d+\.\d+\.\d+)(?:@debug)?\.min\.js/);
  const str = res && res[1] ? res[1] : ''; // '1.3.1030.min/1.3.1030@debug.min'
  const [a, b, c] = str.split('.');
  return [`${a}.${b}.0`, Number(c.substr(0, 4))];
}

// 初始化时, 为onYlhReady添加链式调用方法
function initYLHSDK($app) {
  if ($app.$def?.ylh_sdk) {
    return;
  }
  // eslint-disable-next-line  no-param-reassign
  $app.$def.ylh_sdk = {
    // eslint-disable-next-line  consistent-return
    onYlhReady(callback) {
      const { onYlhReadyCallback = [] } = $app.$def.ylh_sdk;
      // console.log('app.$def.ylh_sdk', app.$def.ylh_sdk, onYlhReadyCallback);
      if (typeof callback !== 'function') {
        console.warn('onYlhReady: then回调必须传递一个方法');
      } else if ($app.$def.ylh_sdk.SDK_CORE_READY) {
        return callback();
      } else {
        // eslint-disable-next-line  no-param-reassign
        $app.$def.ylh_sdk.onYlhReadyCallback = [...onYlhReadyCallback, callback];
      }
    },
  };
}


/***/ }),

/***/ "./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\preset-env,targets=node 8&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-transform-modules-commonjs&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-class-properties&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux":

  !*** ./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\preset-env,targets=node 8&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-transform-modules-commonjs&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-class-properties&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux ***!

/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = function(module, exports, $app_require$){"use strict";

__webpack_require__(/*! ./Common/libs/umeng/umenganalysis.es.min */ "./src/Common/libs/umeng/umenganalysis.es.min.js");
var _app = _interopRequireDefault(__webpack_require__(/*! @topon/quick-app-sdk-hw/app.js */ "./node_modules/@topon/quick-app-sdk-hw/app.js"));
var _api = _interopRequireDefault(__webpack_require__(/*! @hw-agconnect/api */ "./node_modules/@hw-agconnect/api/dist/index.esm.js"));
__webpack_require__(/*! @hw-agconnect/instance */ "./node_modules/@hw-agconnect/instance/dist/index.esm.js");
__webpack_require__(/*! @hw-hmscore/analytics-sdk-quickapp */ "./node_modules/@hw-hmscore/analytics-sdk-quickapp/index.quickapp.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
module.exports = {
  onCreate() {
    console.info('Application onCreate');
    const hook2global = global.__proto__ || global;
    const $router = $app_require$('@app-module/system.router');
    const $utils = (__webpack_require__(/*! ./Common/helper/utils */ "./src/Common/helper/utils.js")["default"]);
    const $storage = $app_require$("@app-module/system.storage");
    const $cipher = $app_require$("@app-module/system.cipher");
    const $prompt = $app_require$("@app-module/system.prompt");
    const $webview = $app_require$("@app-module/system.webview");
    const $apis = (__webpack_require__(/*! ./Common/helper/apis */ "./src/Common/helper/apis/index.js")["default"]);
    const $ad = $app_require$("@app-module/service.ad");
    const $app = $app_require$("@app-module/system.app");
    const $device = $app_require$("@app-module/system.device");
    const $processData = (__webpack_require__(/*! ./Common/helper/processData */ "./src/Common/helper/processData.js")["default"]);
    hook2global.$router = $router;
    hook2global.$utils = $utils;
    hook2global.$storage = $storage;
    hook2global.$prompt = $prompt;
    hook2global.$apis = $apis;
    hook2global.$webview = $webview;
    hook2global.$ad = $ad;
    hook2global.$cipher = $cipher;
    hook2global.$app = $app;
    hook2global.$device = $device;
    hook2global.$processData = $processData;
    console.log("[app.ux] onCreate...");
    $umeng_stat.init(this);
    try {
      const instance = new _app.default({
        app: this,
        appId: 'a669f1dd02c4c4',
        appKey: 'a25e2743eecc2d23f66176b150a593e21'
      });
      this.$def.topon_sdk_instance = instance;
    } catch (error) {
      console.log('error', error);
    }
    this.initAnalytics();
  },
  initAnalytics() {
    const agConnectConfig = {
      "agcgw": {
        "backurl": "connect-drcn.hispace.hicloud.com",
        "url": "connect-drcn.dbankcloud.cn",
        "websocketbackurl": "connect-ws-drcn.hispace.dbankcloud.com",
        "websocketurl": "connect-ws-drcn.hispace.dbankcloud.cn"
      },
      "agcgw_all": {
        "CN": "connect-drcn.dbankcloud.cn",
        "CN_back": "connect-drcn.hispace.hicloud.com",
        "DE": "connect-dre.dbankcloud.cn",
        "DE_back": "connect-dre.hispace.hicloud.com",
        "RU": "connect-drru.hispace.dbankcloud.ru",
        "RU_back": "connect-drru.hispace.dbankcloud.cn",
        "SG": "connect-dra.dbankcloud.cn",
        "SG_back": "connect-dra.hispace.hicloud.com"
      },
      "websocketgw_all": {
        "CN": "connect-ws-drcn.hispace.dbankcloud.cn",
        "CN_back": "connect-ws-drcn.hispace.dbankcloud.com",
        "DE": "connect-ws-dre.hispace.dbankcloud.cn",
        "DE_back": "connect-ws-dre.hispace.dbankcloud.com",
        "RU": "connect-ws-drru.hispace.dbankcloud.ru",
        "RU_back": "connect-ws-drru.hispace.dbankcloud.cn",
        "SG": "connect-ws-dra.hispace.dbankcloud.cn",
        "SG_back": "connect-ws-dra.hispace.dbankcloud.com"
      },
      "client": {
        "cp_id": "30086000786232707",
        "product_id": "388421841222225217",
        "client_id": "1442725538346046400",
        "client_secret": "10917CC5B08733C2510790F6C9B8B3AC2BCE2D83460E5B1C5E0D6B416A0D699D",
        "project_id": "388421841222225217",
        "app_id": "111248051",
        "api_key": "DQEDACwAFzjum1pokg3KvijxBtp7WbqFpw5yeRBpk1kQVe0t4XiKNLGztYbT00secux1bTqvgI6Q30pkXOlqKz6jzUaic2Gmr6r0Mg==",
        "package_name": "com.haituo.setpplanet"
      },
      "oauth_client": {
        "client_id": "111248051",
        "client_type": 19
      },
      "app_info": {
        "app_id": "111248051",
        "package_name": "com.haituo.setpplanet"
      },
      "service": {
        "analytics": {
          "collector_url": "datacollector-drcn.dt.hicloud.com,datacollector-drcn.dt.dbankcloud.cn",
          "collector_url_ru": "datacollector-drru.dt.dbankcloud.ru,datacollector-drru.dt.hicloud.com",
          "collector_url_sg": "datacollector-dra.dt.hicloud.com,datacollector-dra.dt.dbankcloud.cn",
          "collector_url_de": "datacollector-dre.dt.hicloud.com,datacollector-dre.dt.dbankcloud.cn",
          "collector_url_cn": "datacollector-drcn.dt.hicloud.com,datacollector-drcn.dt.dbankcloud.cn",
          "resource_id": "p1",
          "channel_id": ""
        },
        "edukit": {
          "edu_url": "edukit.cloud.huawei.com.cn",
          "dh_url": "edukit.cloud.huawei.com.cn"
        },
        "search": {
          "url": "https://search-drcn.cloud.huawei.com"
        },
        "cloudstorage": {
          "storage_url_sg_back": "https://agc-storage-dra.cloud.huawei.asia",
          "storage_url_ru_back": "https://agc-storage-drru.cloud.huawei.ru",
          "storage_url_ru": "https://agc-storage-drru.cloud.huawei.ru",
          "storage_url_de_back": "https://agc-storage-dre.cloud.huawei.eu",
          "storage_url_de": "https://ops-dre.agcstorage.link",
          "storage_url": "https://agc-storage-drcn.platform.dbankcloud.cn",
          "storage_url_sg": "https://ops-dra.agcstorage.link",
          "storage_url_cn_back": "https://agc-storage-drcn.cloud.huawei.com.cn",
          "storage_url_cn": "https://agc-storage-drcn.platform.dbankcloud.cn"
        },
        "ml": {
          "mlservice_url": "ml-api-drcn.ai.dbankcloud.com,ml-api-drcn.ai.dbankcloud.cn"
        }
      },
      "region": "CN",
      "configuration_version": "3.0"
    };
    _api.default.instance().configInstance(agConnectConfig);
    let analytics = _api.default.analytics();
  },
  onHide() {
    this.instance.onHide();
  },
  onDestroy() {
    console.info('Application onDestroy');
    this.instance.onDestroy();
  },
  dataApp: {
    url1: "http://www.ihaituo.cn/xy/jb/bzzx.html",
    url2: "http://www.ihaituo.cn/xy/jb/yhxy.html",
    url3: "http://www.ihaituo.cn/xy/jb/yszc.html",
    countMax: 8,
    brand: 'HUAWEI',
    channel: 'jh',
    bannerAdUnitId: "z1v6jykvy9",
    nAbannerAdUnitId: "i8zsc3gcbg",
    nativeAdUnitId: "v5h5xsklp2",
    interstitialAdUnitId: "a7nvl7fm00",
    userData: {
      loginPhone: '',
      userId: '',
      balance: 0
    },
    actiParam: {
      channelValue: "",
      oaid: "",
      type: ""
    },
    transparentLayerHits: 0,
    conversionlicks: 0,
    clicksOnAdsNow: 0
  }
};
(exports.default || module.exports).manifest = __webpack_require__(/*! !!../node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./manifest.json */ "./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json")
}

/***/ }),

/***/ "./src/Common/helper/apis sync recursive \\.js":
/*!*******************************************!*\
  !*** ./src/Common/helper/apis/ sync \.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./example.js": "./src/Common/helper/apis/example.js",
	"./index.js": "./src/Common/helper/apis/index.js",
	"./task.js": "./src/Common/helper/apis/task.js",
	"./user.js": "./src/Common/helper/apis/user.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src/Common/helper/apis sync recursive \\.js";

/***/ }),

/***/ "./src/Common/libs/umeng sync recursive":
/*!*************************************!*\
  !*** ./src/Common/libs/umeng/ sync ***!
  \*************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./src/Common/libs/umeng sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json":
/*!*******************************************************************************************!*\
  !*** ./node_modules/fa-toolkit/lib/fa-compiler/fa-manifest-loader.js!./src/manifest.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"package":"com.haituo.setpplanet","name":"计步星球","versionName":"1.1.1","versionCode":101,"icon":"/Common/img/logo.png","minPlatformVersion":1100,"features":[{"name":"system.storage"},{"name":"system.fetch"},{"name":"system.network"},{"name":"system.device"},{"name":"system.file"},{"name":"system.sensor"},{"name":"system.webview"},{"name":"system.request"},{"name":"system.package"},{"name":"service.account"},{"name":"service.ad"}],"config":{"data":{"umeng_appkey":"667b68fccac2a664de54f5ac"}},"router":{"entry":"Page_MainTab","pages":{"Page_MainTab":{"launchMode":"singleTask","component":"index"},"Page_Tixian":{"component":"index"},"Page_login":{"component":"index"},"Page_about":{"component":"index"},"feedback":{"component":"index"},"logOut":{"component":"index"},"permissions":{"component":"index"},"Page_setPay":{"component":"index"},"Page_cfd":{"component":"index"},"Page_cfd-taku":{"component":"index"},"ad/nativeAD":{"component":"index"},"TopOn/AdLanding":{"component":"index"},"pages/advertisingCampaigns":{"component":"index"},"pages/readAd":{"component":"index"}}},"display":{"pages":{"Page_MainTab":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0},"Page_cfd":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0,"titleBarBackgroundOpacity":0},"Page_cfd-taku":{"titleBar":false,"menu":false,"statusBarImmersive":true,"statusBarBackgroundOpacity":0,"titleBarBackgroundOpacity":0},"Page_Tixian":{"titleBar":true,"menu":true,"titleBarText":"收益"},"Page_login":{"titleBar":true,"menu":false,"titleBarText":"用户登录"},"TopOn/AdLanding":{"fullScreen":true,"titleBar":false,"statusBarImmersive":true,"menuBarData":{"menuBar":false}},"pages/advertisingCampaigns":{"titleBar":false},"pages/readAd":{"titleBar":false}}},"versionType":"debug"}');

/***/ }),

/***/ "./node_modules/union-quick-app-ad/package.json":
/*!******************************************************!*\
  !*** ./node_modules/union-quick-app-ad/package.json ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"union-quick-app-ad","version":"1.0.49","description":"百度联盟快应用广告sdk","main":"app.js","files":["components/*","app.js"],"keywords":["快应用","广告"],"author":"cm-fe","license":"ISC","dependencies":{},"devDependencies":{}}');

/***/ }),

/***/ "./node_modules/ylh-quick-app-ad-sdk/package.json":
/*!********************************************************!*\
  !*** ./node_modules/ylh-quick-app-ad-sdk/package.json ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"ylh-quick-app-ad-sdk","version":"1.5.0","description":"","main":"index.js","scripts":{"test":"eslint ./","cz":"git cz","prepare":"husky install"},"keywords":["快应用","广告","SDK"],"author":"zuoxingli4534@gmail.com","license":"ISC","devDependencies":{"@babel/cli":"^7.21.0","@babel/core":"^7.21.0","@babel/plugin-proposal-object-rest-spread":"^7.20.7","@babel/plugin-proposal-optional-chaining":"^7.21.0","@commitlint/cli":"^17.4.4","@commitlint/config-conventional":"^17.4.4","babel-loader":"^9.1.2","eslint":"^7.32.0 || ^8.2.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.2","husky":"^8.0.3","less":"^4.1.3","less-loader":"^11.1.0"},"husky":{"hooks":{"pre-commit":"lint-staged"}}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!********************!*\
  !*** ./src/app.ux ***!
  \********************/
var $app_script$ = __webpack_require__(/*! !!./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader?presets[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\preset-env,targets=node 8&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-transform-modules-commonjs&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-class-properties&plugins[]=d:\quickappWorkspace\com.haituo.setpplanet\node_modules\@babel\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux */ "./node_modules/fa-toolkit/lib/fa-compiler/fa-script-loader.js!./node_modules/fa-toolkit/lib/fa-compiler/fa-app-script-loader.js!./node_modules/babel-loader/lib/index.js?presets[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\preset-env,targets=node 8&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-transform-modules-commonjs&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-class-properties&plugins[]=d:\\quickappWorkspace\\com.haituo.setpplanet\\node_modules\\@babel\\plugin-proposal-object-rest-spread&comments=false!./node_modules/fa-toolkit/lib/fa-compiler/fa-fragment-loader.js?index=0&type=scripts!./src/app.ux")

$app_define$('@app-application/app', [], function($app_require$, $app_exports$, $app_module$){

        $app_script$($app_module$, $app_exports$, $app_require$)
        if ($app_exports$.__esModule && $app_exports$.default) {
            $app_module$.exports = $app_exports$.default;
        }
})
$app_bootstrap$('@app-application/app',{packagerName:'fa-toolkit', packagerVersion: '14.0.1-Stable.300'})
})();

/******/ })()
;   };
                        if (typeof window === "undefined") {
                            return createAppHandler();
                        }
                        else {
                            window.createAppHandler = createAppHandler
                        }
                    })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,