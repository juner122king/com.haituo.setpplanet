<script>
const device = require('@system.device')
const { adCodeData } = require('../../config.js').default
export default {
  data: {
    title: 'World',
    chapterContent: '',
    readObj: {},
    nowTheChapter: 0,
    langIndex: 0,
    clickNum: 0,
    showAd: false,
    adList: {},
    hasAdList: false,
    showVackTisp: false,
    showBanner: true,
    showReminder: false,
    defaultAd: {
      desc: '华为广告',
      title: '华为联盟',
      icon: '广告',
      clickBtnTxt: '点击安装',
      img: 'https://cdn.ihaituo.cn/pro/sy/admin/advertising/3639bdbde8e84397a297ad54f89ac4c3.jpg',
    },
    textContent: [
      {
        title: '旅游攻略',
        list: [
          "北京，这座古老而又现代交融的城市，不仅是中国的首都，更是无数游客梦寐以求的旅游胜地。'' 这里有着悠久的历史文化、壮丽的皇家建筑、丰富的美食小吃以及日新月异的现代都市风貌。'' 以下是一份精心策划的北京旅游攻略，希望能为您的旅行增添一份精彩。'' ",
          "一、必游景点'' 1. 故宫（紫禁城）'' 作为明清两代的皇家宫殿，故宫是世界上现存规模最大、保存最为完整的木质结构古建筑群。'' 漫步在红墙黄瓦之间，仿佛穿越时空，感受帝王家的辉煌与沧桑。''",
          "2. 天安门广场'' 世界上最大的城市中心广场，不仅是中国的象征，也是游客到北京的必打卡之地。'' 清晨观看升旗仪式，感受那份庄严与自豪。''",
          "3. 长城（推荐八达岭或慕田峪段）'' “不到长城非好汉”，长城蜿蜒起伏，气势磅礴，是中华民族的骄傲。'' 选择一段较为完整且游客体验较好的段落攀登，体验“一夫当关，万夫莫开”的豪情。''",
          "4. 颐和园'' 中国保存最完整的一座皇家园林，以昆明湖、万寿山为基址，汲取江南园林设计手法而建成，被誉为“皇家园林博物馆”。''",
          "5. 北海公园'' 位于故宫西北侧，是中国古代皇家园林之一。'' 园内白塔高耸，湖面碧波荡漾，是体验皇家园林精致与宁静的好去处。'' ",
          "二、美食探索'' 北京烤鸭：不可错过的美食之首，以全聚德、便宜坊等老字号最为著名，皮脆肉嫩，味道鲜美。'' 老北京炸酱面：一碗地道的炸酱面，面条筋道，酱香浓郁，是老北京人的日常美食。'' ",
          "豆汁儿配焦圈：虽然味道独特，但对初次尝试的游客来说可能是个挑战，却也是体验老北京风味的必选项。''",
          "王府井小吃街：汇集了各种北京及全国各地的小吃，是品尝地道美食的好去处。'' ",
          "三、购物与休闲''  三里屯太古里：时尚与潮流的聚集地，国际品牌与本土设计师品牌林立，是购物与休闲的好去处。''",
          "南锣鼓巷：保留了老北京胡同的风貌，同时融入了许多创意小店、咖啡馆和特色酒吧，是感受文艺气息的好地方。'' 798艺术区：前身为废弃的工业厂房，如今变身成为现代艺术的聚集地，是摄影、看展、购物的绝佳场所。",
          "'' 住宿推荐：根据个人预算和需求，可选择住在市中心如东单、王府井附近，便于游览；或选择靠近景点的特色民宿，体验不一样的住宿体验。'' ",
          "四、小贴士''  最佳旅行时间：春秋两季，气候宜人，适合户外活动。''  交通方式：北京地铁网络发达，是游览城市的主要交通工具。'' 同时，共享单车和出租车也很方便。'' 北京，这座充满魅力的城市，等待着每一位旅者的探索与发现。'' 希望这份攻略能让您的北京之旅更加难忘。'' ",
        ],
      },
    ],
    adId: '',
    provider: '',
    displayAdType: 0,
    timer: null,
    showTransparency: false,
    ecpm: 0,
    isShowTableScreen: false,
  },
  props: [],
  onInit() {
    this.initReadPage()
    const branch = $ad.getProvider().toLowerCase()
    this.branch = branch
    this.adObj = adCodeData[branch]
    this.adUnitId = adCodeData[branch].fiction4
    console.log(this.branch, '这是什么参数')
    if (adCodeData[branch]) {
      this.adId = adCodeData[branch].fiction1
      this.preloadAd()
      this.getTransparentLayerL()
    }
    this.latencyShowReminder() //定时器展开广告
  },
  onShow() {
    let actiParam = this.$app.$def.dataApp.actiParam
    this.$app.$sensors.pageShow({
      channel: actiParam.channelValue,
      formId: this.adId,
      ...actiParam,
    })
  },
  latencyShowReminder: function () {
    try {
      this.timer = null
      if (this.isShowTableScreen) {
        return
      }
      this.timer = setTimeout(() => {
        this.showReminder = true
        this.isShowTableScreen = true
      }, 3000)
    } catch (error) {
      console.log(error, '这里出的什么错')
    }
  },

  /**
   * 广告正常曝光
   */
  adSuccShow(e) {
    this.sensorsTrack(e, 'show')
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adUnitId,
      isclick: false,
      ecpm: this.adList.ecpm,
    })
  },
  initReadPage() {
    console.log('重置小说页面', this.$page.windowHeight)
    this.readObj = this.textContent[0]
  },
  getTransparentLayerL: function () {
    console.log('是否进来了透明层判断')
    try {
      const branch = $ad.getProvider().toLowerCase()
      let payam = {
        brand: branch.toUpperCase(),
      }
      if (!this.isfristReqCoun) {
        //如果不是初次进来的说明可以添加选项
        payam.count = this.$app.$def.dataApp.transparentLayerHits
      }
      $apis.task
        .getTransparentLayer({ ...payam })
        .then((res) => {
          console.log(res, '查看返回的透明层参数')
          // 是否初次请求
          if (this.isfristReqCoun) {
            this.isfristReqCoun = false
            if (res.data) {
              this.getTransparentLayerL()
            }
            return
          }
          this.showTransparency = res.data
        })
        .catch((err) => {
          console.log(err, '查看返回报错')
        })
    } catch (e) {
      console.log(e, '获取失效')
    }
  },
  latencyShowReminder: function () {
    try {
      this.timer = null
      if (this.isShowTableScreen) {
        return
      }
      this.timer = setTimeout(() => {
        this.showReminder = true
        this.isShowTableScreen = true
      }, 3000)
    } catch (error) {
      console.log(error, '这里出的什么错')
    }
  },
  addClickNum() {
    this.$app.$def.dataApp.transparentLayerHits =
      this.$app.$def.dataApp.transparentLayerHits + 1
    this.getTransparentLayerL()
  },
  // 埋点上报
  sensorsTrack(e = {}, type = 'show') {
    try {
      const { formId = '', subTitle = '', errData = {} } = e
      let apid = formId || this.adUnitId
      $adFun.newBurialSite(this, {
        eventName: type, // 事件名
        formId: apid, // 广告id
        subTitle: subTitle, //页面名
        errData: errData,
        ...this.$app.$def.dataApp.actiParam,
      })
    } catch (error) {
      console.log(error, '埋点报错')
    }
  },
  hideTransparency() {
    console.log('点击了关闭广告')
    this.showTransparency = false
    this.addClickNum()
  },
  error(errCode, errMsg) {
    console.log('失败加载广告', errCode, errMsg)
    // prompt.showToast({
    //   message: `error : errCode = ${errCode}, errMsg = ${errMsg}`
    // })
    console.log(`error : errCode = ${errCode}, errMsg = ${errMsg}`)
  },
  adClick(e) {
    console.log('被点击了')
    this.sensorsTrack(e, 'click')
    this.showTransparency = false
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adUnitId,
      isclick: true,
      ecpm: this.adList.ecpm,
    })
    $utils.buriedPointReport(this, { event: 'click', adId: this.adUnitId })
  },
  close(type = '') {
    if (type) {
      let str = `x${type}`
      this.sensorsTrack({ subTitle: `${str}` }, 'click')
    }
    this.addClickNum()
    this.hasAdList = false
    // prompt.showToast({
    //   message: "关闭"
    // })
  },
  changeSwiper(e) {
    // this.latencyShowReminder()
    this.langIndex = e.index
    console.log(e.index, '查看这个index9999999999999999')
    this.displayAdType = Math.floor(Math.random() * 11)
    this.clickNum += 1
    this.latencyShowReminder() //定时器展开广告
    if (this.clickNum == 3) {
      this.showAd = true
      this.clickNum = 0
    } else if (this.clickNum == 2) {
      this.preloadAd()
      this.showAd = false
    } else {
      this.showAd = false
    }
    if (e.index <= 3) {
      this.textContent[0].title = '旅游攻略'
    } else {
      this.textContent[0].title = '旅游攻略'
    }
  },
  clickSwiper(e) {
    console.log('点击了页面', e.clientX)
    console.log(this.langIndex)
    this.langIndex = this.$element('swiper').swipeTo({
      index:
        e.clientX >= 375
          ? this.langIndex < 8
            ? this.langIndex + 1
            : 0
          : this.langIndex === 0
            ? 8
            : this.langIndex - 1,
    })
  },
  convertAppSize(appSizeBytes) {
    // 首先将字节转换为KB
    let kb = appSizeBytes / 1024

    // 检查是否超过1MB（即1024KB）
    if (kb >= 1024) {
      // 转换为MB并保留两位小数
      let mb = kb / 1024
      return mb.toFixed(2) + 'MB'
    } else {
      // 保留两位小数并返回KB
      return kb.toFixed(2) + 'KB'
    }
  },
  preloadAd() {
    const that = this
    $ad.preloadAd({
      adUnitId: this.adUnitId, // 原生信息流广告广告位id
      type: 'native', // 原生信息流广告
      adCount: 1,
      ecpm: true,
      success: (data) => {
        this.adList = data.adList[0]
        this.lastAdId = this.adList.adId
        console.log(this.adList, '成功加载广告小说页')
        if (this.adList.appInfo) {
          this.adList.appInfo.appSize = this.convertAppSize(
            this.adList.appInfo.appSize
          )
        }
        this.hasAdList = true
      },
      fail: (data, code) => {
        console.log(data, code)
        this.sensorsTrack({ errData: data }, 'error')
        if (code === 205) {
          this.adList = data.adList[0]
        } else {
          // prompt.showToast({
          //   message: `fail!data= ${JSON.stringify(data)},code= ${code}`
          // })
        }
      },
    })
  },
  openVackTisp() {
    this.showVackTisp = true
  },
  // 关闭
  heideReminder(e) {
    // this.showReminder = false;
    console.log(e, '关闭了广告')
    const { detail = '' } = e
    if (!detail) {
    } else {
      console.log('这是什么', detail.data)
      if (detail.data === 'showVackTisp') {
        this.showVackTisp = false
        if (detail.closeType === 'close') {
          this.addClickNum()
        }
      } else if (detail.data === 'showReminder') {
        this.showReminder = false
        if (detail.closeType === 'close') {
          this.addClickNum()
        }
      }
    }
  },
  adError(errCode, errMsg) {
    console.log(e, '广告返回失败')
    this.sensorsTrack({      errData: {
        errCode: errCode.errCode,
        errMsg: errCode.errMsg,
      }    }, 'error')
  },
}
</script>

<import name="my-navbar" src="apex-ui/components/navbar/index"></import>
<import
  name="back-to-ads"
  src="../advertisingCampaigns/components/back-to-ads.ux"
></import>
<import
  name="bottom-native"
  src="../advertisingCampaigns/components/bottom-native.ux"
></import>
<import
  name="reminder-ads"
  src="../advertisingCampaigns/components/reminder-ads.ux"
></import>
<import name="icon" src="../../components/icon/index.ux"></import>

<template>
  <div class="ad-page">
    <my-navbar></my-navbar>
    <div class="read-box">
      <div class="container">
        <swiper
          class="swiper"
          indicator="{{false}}"
          @change="changeSwiper"
          id="swiper"
        >
          <div class="swiper-item" for="{{readObj.list}}" @click="clickSwiper">
            <div class="contnet" if="{{!showAd && langIndex ===$idx}}">
              <text class="font-title">{{ readObj.title }}</text>
              <text class="font">{{ $item }}</text>
            </div>
            <div class="ad-page" show="{{showAd && langIndex ===$idx}}">
              <!-- 广告样式改变 -->
              <!-- 广告组件 -->
              <div class="ad-compon" if="{{hasAdList}}">
                <ad
                  adId="{{adList.adId}}"
                  class="ad-native"
                  show="{!!adList.adId}}"
                  onerror="adError"
                  onadclick="adClick"
                  onadclose="close"
                  type="native"
                  closeBtnPosition="left-top"
                  onadshow="adSuccShow"
                >
                  <div class="container">
                    <div class="agreement">
                      <ad-clickable-area
                        class="agreement-item agreement-item-info"
                        type="click"
                      >
                        <text class="txt" if="{{adList.hasAppMiitInfo}}">
                          {{
                            adList.appInfo.appName +
                              adList.appInfo.appSize +
                              adList.appInfo.appVersion
                          }}</text
                        >
                        <text class="txt" if="{{adList.appInfo}}"
                          >{{ adList.appInfo.developer }}
                        </text>
                      </ad-clickable-area>
                      <ad-clickable-area class="agreement-item" type="privacy">
                      </ad-clickable-area>
                      <ad-clickable-area
                        type="click"
                        class="hide-close"
                        if="{{showTransparency}}"
                      >
                        <icon
                          type="close"
                          size="50"
                          color="#FFFFFF"
                          @click="close"
                        ></icon>
                      </ad-clickable-area>
                      <div class="hide-close" else>
                        <icon
                          type="close"
                          size="50"
                          color="#FFFFFF"
                          @click="close(1)"
                        ></icon>
                      </div>
                    </div>
                    <ad-clickable-area type="click" class="ad-title">
                      <text class="ad-title-txt">{{
                        adList.desc || defaultAd.desc
                      }}</text>
                    </ad-clickable-area>
                    <!-- 图片 -->
                    <div class="vertical-content big-img">
                      <ad-clickable-area type="click" class="ad-image">
                        <image
                          src="{{adList.imgUrlList? adList.imgUrlList[0]: defaultAd.img }}"
                        ></image>
                      </ad-clickable-area>
                      <div class="vertical-content logo">
                        <ad-clickable-area
                          type="click"
                          class="close-item"
                          if="{{showTransparency}}"
                        >
                          <icon
                            type="close"
                            size="45"
                            color="#FFFFFF"
                            @click="close"
                          ></icon>
                        </ad-clickable-area>
                        <div class="close-item" else>
                          <icon
                            type="close"
                            size="45"
                            color="#FFFFFF"
                            @click="close(2)"
                          ></icon>
                        </div>
                        <ad-clickable-area type="logo"> </ad-clickable-area>
                      </div>
                    </div>

                    <div class="icon" if="{{adList.icon}}">
                      <ad-clickable-area type="clikc" class="icon-image">
                        <image src="{{adList.icon}}"></image>
                      </ad-clickable-area>
                      <text class="icon-txt">{{ adList.title }}</text>
                    </div>

                    <div class="footer">
                      <ad-clickable-area
                        class="click-item"
                        type="button"
                        value=" {{
                  btnTxt || adList.clickBtnTxt || defaultAd.clickBtnTxt
                }}"
                      >
                      </ad-clickable-area>
                    </div>

                    <ad-clickable-area
                      class="swipe-left-btn"
                      type="click"
                      if="{{showTransparency}}"
                    >
                      <div style="left: 20px">
                        <icon
                          type="arrow-back"
                          size="45"
                          color="#FFFFFF"
                        ></icon>
                      </div>
                      <icon type="arrow-back" size="45" color="#FFFFFF"></icon>
                      <text>左滑继续阅读</text>
                    </ad-clickable-area>

                    <div
                      class="swipe-left-btn"
                      @swipe-left="appearSwipe(1)"
                      @click="appearSwipe(1)"
                      if="{{!showTransparency}}"
                    >
                      <div style="left: 20px">
                        <icon
                          type="arrow-back"
                          size="45"
                          color="#FFFFFF"
                        ></icon>
                      </div>
                      <icon type="arrow-back" size="45" color="#FFFFFF"></icon>
                      <text>左滑继续阅读</text>
                    </div>
                  </div>
                </ad>
              </div>
            </div>
          </div>
        </swiper>
      </div>
    </div>

    <!-- 底部仿banne框 -->
    <bottom-native
      ad-unitId="{{adId}}"
      ad-list="{{adList}}"
      if="{{showBanner}}"
      show-transparency="{{ showTransparency}}"
      onemit-hide-transparency="hideTransparency"
      onemit-close="heideReminder"
    ></bottom-native>

    <!--延迟提示 -->
    <reminder-ads
      if="{{showReminder}}"
      show-transparency="{{ showTransparency}}"
      onemit-hide-transparency="hideTransparency"
      onemit-close="heideReminder"
    ></reminder-ads>

    <!-- 返回时弹出框 -->
    <back-to-ads
      if="{{showVackTisp}}"
      show-transparency="{{ showTransparency}}"
      onemit-hide-transparency="hideTransparency"
      onemit-close="heideReminder"
    ></back-to-ads>
  </div>
</template>

<style lang="less">
.ad-page {
  flex-direction: column;
  width: 100%;
  height: 100%;
  justify-content: center;
}

.read-box {
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: #f8f8fa;

  .container {
    width: 100%;
    height: 100%;
  }

  .swiper {
    width: 100%;
    height: 100%;

    .swiper-item {
      width: 750px;
      height: 100%;
      flex-direction: column;
      padding: 0 30px;

      .contnet {
        width: 750px;
        height: 100%;
        flex-direction: column;
        padding: 0 30px;

        .font {
          font-weight: 400;
          font-size: 48px;
          line-height: 100px;
        }
      }
    }
  }
}

.ad-compon {
  flex-direction: column;
  height: 100%;
  padding: 0 32px;
}

//   广告组件
.ad-native {
  width: 100%;
  flex-direction: column;
  height: 100%;

  .container {
    width: 100%;
    flex-direction: column;
    padding: 20px 0;
    height: 100%;
    .agreement {
      width: 100%;
      align-items: center;
      justify-content: space-between;
      .agreement-item {
        width: 55%;
        align-items: center;
        height: 80px;
        .txt {
          lines: 1;
          font-size: 28px;
          text-overflow: ellipsis;
        }
      }

      .agreement-item-info {
        flex-direction: column;
      }

      .hide-close {
        background-color: #c7c6c9;
        border-radius: 5px;
      }
    }

    .ad-title {
      margin-top: 10px;
      .ad-title-txt {
        font-weight: 500;
        font-size: 32px;
        color: #000000;
      }
    }

    .vertical-content {
      width: 100%;
      .ad-close {
        width: 50px;
        height: 50px;
      }
    }
    .big-img {
      flex-direction: column;
      align-items: center;
      margin-top: 30px;
      .ad-image {
        height: 500px;
        width: 100%;
        flex-shrink: 0;
        image {
          width: 100%;
          height: 100%;
          border-radius: 15px;
          object-fit: contain;
        }
      }
      .logo {
        width: 100%;
        padding: 0 20px;
        justify-content: space-between;
        position: absolute;
        top: 70px;
        left: 0;
        .close-item {
          background-color: rgba(205, 205, 207, 0.5);
        }
      }
    }

    .icon {
      width: 100%;
      align-items: center;
      height: 80px;
      .icon-image {
        width: 80px;
        height: 80px;
        image {
          width: 80px;
          height: 80px;
          object-fit: contain;
        }
      }

      .icon-txt {
        font-weight: 500;
        margin-left: 12px;
        font-size: 32px;
      }
    }

    .footer {
      height: 96px;
      width: 100%;
      margin-top: 50px;
      align-items: center;
      justify-content: center;
      .click-item {
        width: 620px;
        min-width: 250px;
        align-items: center;
        justify-content: center;
        background-color: #ff0f39;
        border-radius: 65px;
        // align-self: flex-end;
        text-align: center;
        color: aliceblue;
        height: 120px;
        .title {
          color: #999999;
        }
        .click-txt {
          font-size: 34px;
          padding: 10px 20px;
          text-align: center;
          color: aliceblue;
        }
        .ad-close {
          align-self: center;
          margin-left: 10px;
          width: 50px;
          height: 50px;
        }
      }
    }
    .swipe-left-btn {
      width: 100%;
      height: 75px;
      background-color: #999999;
      width: 300px;
      border-radius: 45px;
      margin: 0 auto;
      margin-top: 52px;
      text {
        color: #ffffff;
      }
    }
  }
}
</style>
