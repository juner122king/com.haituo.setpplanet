<import name="icon" src="apex-ui/components/icon/index"></import>
<import
  name="transparency-mask"
  src="../../../components/transparency-mask/index.ux"
></import>
<!-- 停留3秒显示弹窗 -->
<template>
  <div>
    <div class="back-to-ads" if="{{hasAdList}}">
      <ad
        class="ad-native"
        show="{!!adList.adId}}"
        adId="{{adList.adId}}"
        type="native"
        closeBtnPosition="right-top"
        onerror="adError"
        onadclick="adClick"
        onadclose="close"
        onadshow="adSuccShow"
      >
        <div class="container">
          <div class="tisp-title">
            <text class="tisp-title-txt">退出前看个广告？</text>
            <ad-clickable-area
              class="close-item"
              if="{{showTransparency}}"
              type="click"
            >
              <icon
                type="close"
                size="40"
                color="#000000"
                onclick="close"
              ></icon>
            </ad-clickable-area>
            <div class="close-item" else>
              <icon
                type="close"
                size="40"
                color="#000000"
                onclick="close(1)"
              ></icon>
            </div>
          </div>
          <!-- 头部图片 -->
          <ad-clickable-area type="click" class="vertical-content top-big-img">
            <div class="ad-image">
              <image
                src="{{ adList.imgUrlList? adList.imgUrlList[0]: defaultAd.img }}"
              ></image>
            </div>

            <div class="float">
              <ad-clickable-area type="privacy" class=""></ad-clickable-area>
              <ad-clickable-area type="logo" class=""></ad-clickable-area>
            </div>
          </ad-clickable-area>

          <!-- 底下内容 -->
          <div class="vertical-content horizontal-content">
            <!-- 标题 -->
            <div class="ad-s-title">
              <ad-clickable-area type="click" class="ad-s-title-ad">
                <text class="ad-s-title-txt">
                  {{ adList.desc || defaultAd.desc }}</text
                >
              </ad-clickable-area>
            </div>
            <div class="foot-btn vertical-content">
              <ad-clickable-area
                type="button"
                class="click-item"
                value="{{
                  btnTxt || adList.clickBtnTxt || defaultAd.clickBtnTxt
                }}"
              >
              </ad-clickable-area>
              <ad-clickable-area type="click" class="click-item" else>
                <text class="ad-s-title-txt">
                  {{
                    btnTxt || adList.clickBtnTxt || defaultAd.clickBtnTxt
                  }}</text
                >
              </ad-clickable-area>

              <text style="margin-top: 10px; font-size: 22px" @click="backHome"
                >立即退出</text
              >
            </div>
          </div>
        </div>
      </ad>
      <transparency-mask
        sportTitle="退出前看个广告弹窗"
        onemit-hide-transparency="hideTransparency"
        if="{{showTransparency}}"
      ></transparency-mask>
    </div>
  </div>
</template>

<script>
import prompt from '@system.prompt'
const { adCodeData } = require('../../../config.js').default

export default {
  data() {
    return {
      adList: {},
      hasAdList: false,
      defaultAd: {
        desc: '广告流量联盟，为用户提供最优质的商业化解决方案。',
        title: '广告流量联盟',
        icon: '广告',
        clickBtnTxt: '点击安装',
        img: 'https://cdn.ihaituo.cn/pro/sy/admin/advertising/3639bdbde8e84397a297ad54f89ac4c3.jpg',
      },
      btnTxt: '',
      adId: '',
      adObj: '',
      showClik: false,
      ecpm: 0,
      branch: '',
    }
  },
  props: {
    showTransparency: {
      default: false,
    },
    sportTitle: {
      default: '挽留弹窗-原生',
    },
  },
  onInit() {
    const branch = $ad.getProvider().toLowerCase()
    this.branch = branch
    this.adObj = adCodeData[branch]
    this.adId = adCodeData[branch].fiction3
    this.preloadAd()
  },
  preloadAd() {
    try {
      const that = this
      require('@service.ad').preloadAd({
        adUnitId: this.adId, // 原生信息流广告广告位id
        type: 'native', // 原生信息流广告
        adCount: 1,
        ecpm: true,
        success: (data) => {
          console.log(data, '返回广告退出弹窗')
          this.adList = data.adList[0]
          this.hasAdList = true
          if (this.debug) {
            prompt.showToast({
              message: `ad load success`,
            })
          }
        },
        fail: (data, code) => {
          this.$emit('emitClose', {
            data: 'showVackTisp',
          })

          this.sensorsTrack({ errData: data }, 'error')
          if (code === 205) {
            this.hasAdList = true
            this.adList = data.adList[0]
          } else {
            if (this.debug) {
              prompt.showToast({
                message: `ad load fail!data= ${JSON.stringify(
                  data
                )},code= ${code}`,
              })
            }
          }
        },
      })
    } catch (e) {
      console.log(e, e.message)
    }
  },
  adError(errCode, errMsg) {
    this.$emit('emitClose', {
      data: 'showVackTisp',
    })
    this.sensorsTrack({ errData: {
          errCode: errCode.errCode,
          errMsg: errCode.errMsg,
        } }, 'error')
  },
  // 埋点上报
  sensorsTrack(e = {}, type = 'show') {
    try {
      const { formId = '', subTitle = '', errData = {} } = e
      let apid = formId || this.adId
      $adFun.newBurialSite(this, {
        eventName: type, // 事件名
        formId: apid, // 广告id
        subTitle: subTitle || `退出前看个广告弹窗`, //页面名
        errData: errData,
        ...this.$app.$def.dataApp.actiParam,
      })
    } catch (error) {
      console.log(error, '埋点报错')
    }
  },
  adSuccShow(e) {
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: false,
      ecpm: this.adList.ecpm,
    })
    this.sensorsTrack(e, 'show')
  },
  adClick(e) {
    console.log('没有点击回调吗')
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: true,
      ecpm: this.adList.ecpm,
    })
    $utils.buriedPointReport(this, { event: 'click', adId: this.adId })
    this.sensorsTrack(e, 'click')
    this.$emit('emitHideTransparency')
    this.hasAdList = false
    this.preloadAd()
  },
  close(type = '') {
    if (type) {
      let str = `x${type}`
      this.sensorsTrack(
        {
          subTitle: `退出前看个广告弹窗-${str}`,
        },
        'click'
      )
    }
    console.log('没有关闭回调吗')
    this.hasAdList = false
    this.$emit('emitClose', {
      data: 'showVackTisp',
      closeType: 'close',
    })
  },
  adError(errCode, errMsg) {
    this.sensorsTrack({ errData: {
          errCode: errCode.errCode,
          errMsg: errCode.errMsg,
        } }, 'error')
  },
  backHome() {
    this.sensorsTrack(
      {
        subTitle: `退出前看个广告弹窗-立即退出`,
      },
      'click'
    )
    $router.replace({
      uri: 'pages/displayDesktop',
    })
  },
  hideTransparency() {
    this.$emit('emitHideTransparency')
  },
}
</script>

<style lang="less">
.back-to-ads {
  align-self: center;
  flex-direction: column;
  width: 750px;
  height: 100%;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.8);
  position: fixed;
  top: 0;
  left: 0;
  align-items: center;
  justify-content: center;
  .ad-native {
    width: 100%;
    height: 750px;
    margin-top: 80px;
    background-color: #ffffff;
    width: 690px;
    border-radius: 35px;
    transform: translateY(-100px);
    .container {
      width: 100%;
      height: 750px;
      flex-direction: column;
      align-items: center;

      .tisp-title {
        width: 100%;
        height: 150px;
        justify-content: center;
        align-items: center;
        .tisp-title-txt {
          font-size: 28px;
          font-weight: 600;
          color: #000000;
        }
        .close-item {
          /* background-color: #f5f5f5; */
          width: 50px;
          height: 50px;
          position: absolute;
          justify-content: center;
          align-items: center;
          top: 20px;
          right: 50px;
          /* border-radius: 50%; */
        }
      }

      .top-big-img {
        flex-direction: column;
        height: 300px;
        align-items: center;
        width: 100%;
        margin-bottom: 50px;
        padding: 0 25px;
        .ad-image {
          height: 300px;
          width: 100%;
          justify-content: center;
          align-items: center;
          image {
            width: 100%;
            height: 100%;
            border-radius: 15px;
            object-fit: fill;
          }
        }

        .float {
          position: absolute;
          bottom: 0;
          width: 100%;
          justify-content: space-between;
        }
      }

      /* 内容区域 */
      .horizontal-content {
        flex-direction: column;
        align-items: center;
        .ad-title {
          width: 100%;
          justify-content: center;
          align-items: center;
          margin-bottom: 20px;
          height: 100px;
          .ad-title-txt {
            font-size: 32px;
            font-weight: 500;
            color: #000000;
          }
        }

        .ad-s-title {
          width: 80%;
          height: 100px;
          justify-content: flex-start;
          align-content: center;
          margin-bottom: 20px;
          .ad-s-title-ad {
            .ad-s-title-txt {
              text-align: center;
              lines: 2;
              text-overflow: ellipsis;
              font-size: 32px;
              color: #000000;
            }
          }
        }

        .star-list {
          height: 80px;
          justify-content: center;
          margin-bottom: 30px;
        }

        .foot-btn {
          width: 100%;
          align-items: center;
          justify-content: center;
          height: 200px;
          flex-direction: column;
          .click-item {
            width: 400px;
            height: 90px;
            border-radius: 60px;
            font-size: 34px;
            padding: 10px 20px;
            color: #fff;
            text-align: center;
            background-color: #ff1039;
            animation-name: scaleDraw;
            animation-delay: 0;
            animation-duration: 1200ms;
            animation-timing-function: ease-out;
            animation-iteration-count: infinite;
            justify-content: center;
            align-items: center;
            text {
              color: #ffffff;
            }
          }
          @keyframes scaleDraw {
            0% {
              transform: scale(1);
            }
            25% {
              transform: scale(1.1);
            }
            50% {
              transform: scale(1);
            }
            75% {
              transform: scale(1.1);
            }
          }
        }
      }
    }

    .vertical-content {
      width: 100%;

      .ad-close {
        width: 50px;
        height: 50px;
      }
    }
  }
}
</style>
