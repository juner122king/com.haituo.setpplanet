<template>
  <div class="bottomNative">
    <block if="{{hasAdList && adId}}">
      <ad
        adId="{{adList.adId}}"
        class="box"
        show="{{!!adList.adId}}"
        onerror="adError"
        onadclick="adClick"
        onadclose="close"
        type="native"
        closeBtnPosition="left-top"
        onadshow="adSuccShow"
      >
        <ad-clickable-area class="ad-title" style="width: 100%; height: 100%">
          <text class="page-title" style="font-size: 1px">{{
            adList.title
          }}</text>
        </ad-clickable-area>
        <ad-clickable-area
          class="ad-image"
          style="width: 100%; height: 100%"
          if="{{adList.imgUrlList}}"
        >
          <image src="{{adList.imgUrlList[0]}}" style="height: 1px"></image>
        </ad-clickable-area>
        <ad-clickable-area
          class="ad-image"
          type="video"
          style="width: 1px; height: 1px"
        >
        </ad-clickable-area>
      </ad>
    </block>
  </div>
</template>

<script>
export default {
  data: {
    hasAdList: false,
    adList: {},
  },
  props: {
    adId: {
      default: '',
    },
  },
  onInit() {
    this.preloadAd(this.adId)
  },
  preloadAd(id) {
    try {
      const that = this

      let adId = id
      this.adId = id
      require('@service.ad').preloadAd({
        type: 'native', // 原生信息流广告
        adCount: 1,
        adUnitId: adId, // 原生信息流广告广告位id,
        ecpm: true,
        adid: adId, // 原生信息流广告广告位id,
        success: (data) => {
          this.adList = data.adList[0]

          this.hasAdList = true
          if (this.debug) {
            prompt.showToast({
              message: `ad load success`,
            })
          }
        },
        fail: (data, code) => {
          this.sensorsTrack(
            {
              errData: data,
            },
            'error'
          )
          this.hasAdList = true
          if (code === 205) {
            this.hasAdList = true
            this.adList = data.adList[0]
          } else {
            if (this.debug) {
              prompt.showToast({
                message: `ad load fail!data= ${JSON.stringify(
                  data
                )},code= ${code}`,
              })
            }
          }
        },
      })
    } catch (e) {}
  },
  adSuccShow() {
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: false,
      ecpm: this.adList.ecpm,
    })
    this.sensorsTrack({}, 'show')
  },
  adError(errCode, errMsg) {
    this.sensorsTrack(
      {
        errData: {
          errCode: errCode.errCode,
          errMsg: errCode.errMsg,
        },
      },
      'error'
    )
  },
  adClick() {
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: true,
      ecpm: this.adList.ecpm,
    })
    this.hasAdList = false
    $utils.buriedPointReport(this, { event: 'click', adId: this.adId })
    this.sensorsTrack({}, 'click')
    this.$app.openApp({ type: 'ad', formId: this.adId })
    this.$emit('emitClose')
  },
  close() {},
  // 埋点上报  曝光埋点事件 $WebShow
  sensorsTrack(e = {}, type = 'show') {
    try {
      const { formId = '', subTitle = '', errData = {} } = e
      let apid = formId || this.adId
      $adFun.newBurialSite(this, {
        eventName: type, // 事件名
        formId: apid, // 广告id
        subTitle: subTitle, //页面名
        ...this.$app.$def.dataApp.actiParam,
        errData: errData,
      })
    } catch (error) {}
  },
}
</script>

<style>
.box {
  width: 100%;
  height: 250px;
  /* background-color: #fcf; */
}
</style>
