<template>
  <div class="warp" show="{{showPop}}">
    <div if="{{showPop}}" class="popup_width">
      <div class="header">
        <text class="title">{{ title.trim() }}</text>
      </div>
      <div class="body">
        <slot>
          <text style="font-size: 25px; color: rgba(0, 0, 0, 0.9)">
            申请
            <span style="font-weight: 700">健身运动</span>
            权限用于获取步数与记录步数,请您在使用（或继续使用）我们的产品服务前仔细阅读
            <a href="{{url1}}" style="color: #007dff; font-weight: 700"
              >《用户协议》</a
            >
            和
            <a href="{{url2}}" style="color: #007dff; font-weight: 700"
              >《隐私政策》</a
            >
            。我们将全力保障您的合法权益与信息安全，并将持续为您提供优质服务。
          </text>
        </slot>
      </div>
      <div class="footer">
        <div>
          <input
            type="button"
            value="取消"
            class="cancel"
            onclick="cancel"
            disabled="{{btndisabled}}"
          />
        </div>
        <div>
          <input type="button" value="同意" class="sure" onclick="sure" />
        </div>
      </div>
    </div>
  </div>
</template>
<style lang="less">
.warp {
  flex-direction: column;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);

  .popup_width {
    border-radius: 66px;
    margin: auto;
    width: 656px;
    flex-direction: column;
    justify-content: space-between;
    background-color: #fff;
    animation-duration: 200ms;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
    .header {
      height: 132px;
      padding: 0px 54px;
      .title {
        lines: 1;
        text-overflow: ellipsis;
        font-size: 45px;
        font-weight: 600;
        color: rgba(0, 0, 0, 0.9);
      }
    }
    .body {
      width: 100%;
      padding: 0px 44px;
    }
    .footer {
      justify-content: center;
      height: 126px;
      padding: 0px 36px;
      margin-top: 18px;
      .cancel {
        width: 274px;
        height: 90px;
        font-size: 36px;
        font-weight: 600;
        color: #007dff;
        background-color: #fff;
        border-radius: 66px;
        margin-right: 36px;
      }
      .cancel:disabled {
        background-color: rgba(0, 0, 0, 0.1);
      }
      .sure {
        width: 274px;
        height: 90px;
        font-size: 36px;
        font-weight: 600;
        background-color: #007dff;
        color: #ffffff;
        border-radius: 66px;
      }
    }
  }
}
</style>
<script>
import device from "@system.device";
export default {
  data: {
    url1: '',
    url2: '',
    // 设备dp值
    deviceDp: 0,
    // 设备
    deviceWidth: 0,
    reserveDialogStyle: false,
    btndisabled: false,
    screenWidth: 0,
  },
  props: {
    backImg: {
      type: String,
      default: "",
    },
    zIndex: {
      default: 10000
    },
    title: {
      type: String,
      default: "用户协议隐私政策提示",
    },
    showPop: {
      type: Boolean,
      default: false,
      required: true,
    },
    showFooter: { //是否显示底部两个按钮
      type: Boolean,
      default: false,
      required: false,
    }
  },
  onInit: function () {
    this.url1 = this.$app.$def.dataApp.url2;
    this.url2 = this.$app.$def.dataApp.url3;

    this.$watch('showPop', 'changeCancel')
    if (device.getInfoSync) {
      const res = device.getInfoSync();
      this.deviceDp = res.windowWidth / res.screenDensity;
      this.deviceWidth = res.windowLogicWidth;
      this.btndisabled = false
      this.screenWidth = res.screenWidth
      if (res.screenWidth > 1200 && res.screenHeight > 1200) {
        this.reserveDialogStyle = true;
      } else {
        this.reserveDialogStyle = false;
      }
      this.$watch('screenWidth', 'changeScreen')
    }
  },
  changeCancel() {
    if (this.showPop) {
      this.btndisabled = false;
    }
  },
  changeScreen() {
    if (this.screenWidth > 1200) {
      this.reserveDialogStyle = true;
    } else {
      this.reserveDialogStyle = false;
    }
  },
  async cancel() {
    this.btndisabled = true;
    await $processData.setStorage("_PRIVAC", false);
    this.$emit("cancel");
  },
  async sure() {
    await $processData.setStorage("_PRIVAC", true);
    this.$emit("agree");
  }
};
</script>