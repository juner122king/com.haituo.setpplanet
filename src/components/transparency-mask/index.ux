<template>
  <div>
    <div class="transparency-mask" if="{{hasAdList}}">
      <ad
        adId="{{adList.adId}}"
        class="box"
        show="{!!adList.adId}}"
        onerror="adError"
        onadclick="adClick"
        onadclose="close"
        type="native"
        closeBtnPosition="left-top"
        onadshow="adSuccShow"
      >
        <ad-clickable-area type="click" class="click-son"> </ad-clickable-area>
      </ad>
    </div>
  </div>
</template>

<script>
const { adCodeData } = require('../../config.js').default
export default {
  data: {
    adList: '',
    branch: '',
    adObj: {},
    adId: '',
    hasAdList: true,
  },
  props: {
    isShow: {
      default: true,
    },
    sportTitle: {
      default: '全覆盖透明层',
    },
  },
  onInit() {
    let idIndex = this.$app.$def.dataApp.showTransparencyMask
    const branch = $ad.getProvider().toLowerCase()
    this.branch = branch
    this.adObj = adCodeData[branch]
    if (adCodeData[branch]) {
      this.adId = this.adObj[`fiction${idIndex}`]
      this.preloadAd()
      this.$app.$def.dataApp.showTransparencyMask++
      if (this.$app.$def.dataApp.showTransparencyMask > 5) {
        this.$app.$def.dataApp.showTransparencyMask = 1
      }
    }
  },
  preloadAd() {
    try {
      const that = this
      console.log(this.adId, '查看广告id编码')
      require('@service.ad').preloadAd({
        adUnitId: this.adId, // 原生信息流广告广告位id
        type: 'native', // 原生信息流广告
        adCount: 1,
        ecpm: true,
        success: (data) => {
          this.adList = data.adList[0]
          console.log(this.adList, '查看遮罩是否有广告返回')
          this.hasAdList = true
          if (this.debug) {
            prompt.showToast({
              message: `ad load success`,
            })
          }
        },
        fail: (data, code) => {
          console.log(data, code, '遮罩返回广告失败1')

          this.sensorsTrack(
            {
              errData: data,
            },
            'error'
          )
          this.hasAdList = false
          if (code === 205) {
            this.hasAdList = true
            this.adList = data.adList[0]
          } else {
            if (this.debug) {
              prompt.showToast({
                message: `ad load fail!data= ${JSON.stringify(
                  data
                )},code= ${code}`,
              })
            }
          }
        },
      })
    } catch (e) {
      console.log(e, e.message)
    }
  },
  // 埋点上报
  sensorsTrack(e = {}, type = 'show') {
    try {
      const { formId = '', subTitle = '', errData = {} } = e
      let apid = formId || this.adId
      $adFun.newBurialSite(this, {
        eventName: type, // 事件名
        formId: apid, // 广告id
        subTitle: `透明层`, //页面名
        ...this.$app.$def.dataApp.actiParam,
        errData: errData,
      })
    } catch (error) {
      console.log(error, '埋点报错')
    }
  },
  adError(errCode, errMsg) {
    this.sensorsTrack(
      {
        errData: {
          errCode: errCode.errCode,
          errMsg: errCode.errMsg,
        },
      },
      'error'
    )
  },
  adClick(e) {
    console.log('小说页面透明层点击,this：', this)

    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: true,
      ecpm: this.adList.ecpm,
    })
    $utils.buriedPointReport(this, {
      event: 'click',
      adId: this.adId,
    })
    this.sensorsTrack({ title: '广告位' })
    this.$emit('emitHideTransparency')
    this.hasAdList = false
    this.preloadAd()
    this.sensorsTrack(e, 'click')
  },
  close(type = '') {
    if (type) {
      let str = `x${type}`
    }
    console.log('没有关闭回调吗')
    this.hasAdList = false
    this.$emit('emitClose', {
      data: 'showReminder',
    })
  },
  adSuccShow(e) {
    console.log('小说页面透明层显示,this：', this)
    this.sensorsTrack(e, 'show')
    $utils.conversionUpload(this, {
      adType: 'NATIVE',
      adPositionId: this.adId,
      isclick: false,
      ecpm: this.adList.ecpm,
    })
  },
}
</script>

<style lang="less">
.transparency-mask {
  width: 100%;
  height: 100%;
  position: fixed;
  left: 0;
  right: 0;
  /* background-color: #fcf; */
}
.box {
  width: 100%;
  height: 100%;
  /* background-color: #fcf; */
  .click-son {
    width: 100%;
    height: 100%;
  }
}
</style>
